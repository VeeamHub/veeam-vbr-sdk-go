swagger: '2.0'
info:
  contact:
    email: support@veeam.com
  description: >
    This document lists paths (endpoints) of the Veeam Backup & Replication REST
    API and operations that you can perform by sending HTTP requests to the
    paths.<br>

    Requests can contain parameters in their path, query and header. POST and
    PUT requests can include a request body with resource payload. In response,
    you receive a conventional HTTP response code, HTTP response header and an
    optional response body schema that contains a result model.<br>

    Parameters, request bodies, and response bodies are defined inline or refer
    to schemas defined globally. Some schemas are polymorphic.
  title: Veeam Backup & Replication REST API
  version: 1.0-rev1
basePath: /
paths:
  /api/oauth2/authorization_code:
    post:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthorizationCodeModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Login
      description: >-
        The HTTP POST request to the `/api/oauth2/authorization_code` path
        allows you to get an authorization code that is used to obtain an access
        token. For more information on authorization process, see [Requesting
        Authorization](https://helpcenter.veeam.com/docs/backup/vbr_rest/requesting_authorization.html).
      operationId: CreateAuthorizationCode
      summary: Get Authorization Code
  /api/oauth2/logout:
    post:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Login
      description: >
        The HTTP POST request to the `/api/oauth2/logout` path allows you to
        perform the logout operation. After you log out, access and refresh
        tokens are expired.
      operationId: Logout
      summary: Log Out
  /api/oauth2/token:
    post:
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - default: password
          description: >
            Authorization grant type.


            Available values:

            - `password` — used to obtain an access token by providing a user
            name and password.

            - `refresh_token` — used to refresh an expired or lost access token
            by providing a refresh token.

            - `authorization_code` — used to obtain an access token by providing
            an authorization code.
          enum:
            - password
            - refresh_token
            - authorization_code
          in: formData
          name: grant_type
          required: true
          type: string
        - description: User name. Required if the `grant_type` value is `password`.
          in: formData
          name: username
          type: string
        - description: Password. Required if the `grant_type` value is `password`.
          format: password
          in: formData
          name: password
          type: string
        - description: >-
            Refresh token. Required if the `grant_type` value is
            `refresh_token`.
          in: formData
          name: refresh_token
          type: string
        - description: >-
            Authorization code. Required if the `grant_type` value is
            `authorization_code`.
          in: formData
          name: code
          type: string
        - description: >-
            If *true*, a short-term refresh token is used. Lifetime of the
            short-term refresh token is the access token lifetime plus 15
            minutes.
          in: formData
          name: use_short_term_refresh
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TokenModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      security: []
      tags:
        - Login
      description: >-
        The HTTP POST request to the `/api/oauth2/token` path allows you to get
        an access token and a refresh token.
      operationId: CreateToken
      summary: Get Access Token
  /api/v1/automation/credentials/export:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/CredentialsExportSpec'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CredentialsImportSpecCollection'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the `/api/v1/automation/credentials/export`
        path allows you to export credentials from Veeam Backup & Replication.
      operationId: ExportCredentials
      summary: Export Credentials
      x-veeam-authorize:
        claims:
          - ExportCredentials
  /api/v1/automation/credentials/import:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CredentialsImportSpecCollection'
      responses:
        '201':
          description: >-
            Automation session has been created to import the credentials. To
            check the progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the `/api/v1/automation/credentials/import`
        path allows you to import credentials to Veeam Backup & Replication.
      operationId: ImportCredentials
      summary: Import Credentials
      x-veeam-authorize:
        claims:
          - ImportCredentials
  /api/v1/automation/encryptionPasswords/export:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/EncryptionPasswordExportSpec'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EncryptionPasswordImportSpecCollection'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the
        `/api/v1/automation/encryptionPasswords/export` path allows you to
        export encryption passwords from Veeam Backup & Replication.
      operationId: ExportEncryptionPasswords
      summary: Export Encryption Passwords
      x-veeam-authorize:
        claims:
          - ExportEncryptionPasswords
  /api/v1/automation/encryptionPasswords/import:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EncryptionPasswordImportSpecCollection'
      responses:
        '201':
          description: >-
            Automation session has been created to import the passwords. To
            check the progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the
        `/api/v1/automation/encryptionPasswords/import` path allows you to
        import encryption passwords to Veeam Backup & Replication.
      operationId: ImportEncryptionPasswords
      summary: Import Encryption Passwords
      x-veeam-authorize:
        claims:
          - ImportEncryptionPasswords
  /api/v1/automation/jobs/export:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/JobExportSpec'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JobImportSpecCollection'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the `/api/v1/automation/jobs/export` path
        allows you to export jobs from Veeam Backup & Replication.
      operationId: ExportJobs
      summary: Export Jobs
      x-veeam-authorize:
        claims:
          - ExportJobs
  /api/v1/automation/jobs/import:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/JobImportSpecCollection'
      responses:
        '201':
          description: >-
            Automation session has been created to import the jobs. To check the
            progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the `/api/v1/automation/jobs/import` path
        allows you to import jobs to Veeam Backup & Replication.
      operationId: ImportJobs
      summary: Import Jobs
      x-veeam-authorize:
        claims:
          - ImportJobs
  /api/v1/automation/managedServers/export:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ManageServerExportSpec'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ManageServerImportSpecCollection'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the `/api/v1/automation/managedServers/export`
        path allows you to export managed servers from Veeam Backup &
        Replication.
      operationId: ExportManagedServers
      summary: Export Servers
      x-veeam-authorize:
        claims:
          - ExportManagedServers
  /api/v1/automation/managedServers/import:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ManageServerImportSpecCollection'
      responses:
        '201':
          description: >-
            Automation session has been created to import the servers. To check
            the progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the `/api/v1/automation/managedServers/import`
        path allows you to import managed servers to Veeam Backup & Replication.
      operationId: ImportManagedServers
      summary: Import Servers
      x-veeam-authorize:
        claims:
          - ImportManagedServers
  /api/v1/automation/proxies/export:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/ProxyExportSpec'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProxyImportSpecCollection'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the `/api/v1/automation/proxies/export` path
        allows you to export backup proxies from Veeam Backup & Replication.
      operationId: ExportProxies
      summary: Export Proxies
      x-veeam-authorize:
        claims:
          - ExportProxies
  /api/v1/automation/proxies/import:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProxyImportSpecCollection'
      responses:
        '201':
          description: >-
            Automation session has been created to import the proxies. To check
            the progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the `/api/v1/automation/proxies/import` path
        allows you to import backup proxies to Veeam Backup & Replication.
      operationId: ImportProxies
      summary: Import Proxies
      x-veeam-authorize:
        claims:
          - ImportProxies
  /api/v1/automation/repositories/export:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/RepositoryExportSpec'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RepositoryImportSpecCollection'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the `/api/v1/automation/repositories/export`
        path allows you to export backup repositories from Veeam Backup &
        Replication.
      operationId: ExportRepositories
      summary: Export Repositories
      x-veeam-authorize:
        claims:
          - ExportRepositories
  /api/v1/automation/repositories/import:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RepositoryImportSpecCollection'
      responses:
        '201':
          description: >-
            Automation session has been created to import the repositories. To
            check the progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the `/api/v1/automation/repositories/import`
        path allows you to import backup repositories to Veeam Backup &
        Replication.
      operationId: ImportRepositories
      summary: Import Repositories
      x-veeam-authorize:
        claims:
          - ImportRepositories
  /api/v1/automation/sessions:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of sessions to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Maximum number of sessions to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Sorts sessions by one of the session parameters.
          enum:
            - Name
            - SessionType
            - CreationTime
            - EndTime
            - State
            - Result
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: >-
            Sorts sessions in the ascending order by the `orderColumn`
            parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: >-
            Filters sessions by the `nameFilter` pattern. The pattern can match
            any session parameter. To substitute one or more characters, use the
            asterisk (*) character at the beginning and/or at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Returns sessions that are created after the specified date and time.
          format: date-time
          in: query
          name: createdAfterFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: >-
            Returns sessions that are created before the specified date and
            time.
          format: date-time
          in: query
          name: createdBeforeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: >-
            Returns sessions that are finished after the specified date and
            time.
          format: date-time
          in: query
          name: endedAfterFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: >-
            Returns sessions that are finished before the specified date and
            time.
          format: date-time
          in: query
          name: endedBeforeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Filters sessions by session type.
          enum:
            - Infrastructure
            - Job
            - Automation
            - ConfigurationBackup
            - RepositoryMaintenance
            - RepositoryEvacuate
            - InfrastructureItemDeletion
          in: query
          name: typeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Filters sessions by session state.
          enum:
            - Stopped
            - Starting
            - Stopping
            - Working
            - Pausing
            - Resuming
            - WaitingTape
            - Idle
            - Postprocessing
            - WaitingRepository
            - WaitingSlot
          in: query
          name: stateFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Filters sessions by session result.
          enum:
            - None
            - Success
            - Warning
            - Failed
          in: query
          name: resultFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Filters sessions by job ID.
          format: uuid
          in: query
          name: jobIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SessionsResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP GET request to the `/api/v1/automation/sessions` path allows
        you to get an array of all automation sessions performed on the backup
        server.
      operationId: GetAllAutomationSessions
      summary: Get All Automation Sessions
      x-veeam-authorize:
        claims:
          - ViewSessions
  '/api/v1/automation/sessions/{id}':
    get:
      produces:
        - application/json
      parameters:
        - description: ID of the session.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SessionModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP GET request to the `/api/v1/automation/sessions/{id}` path
        allows you to get an automation session that has the specified `id`.
      operationId: GetAutomationSession
      summary: Get Automation Session
      x-veeam-authorize:
        claims:
          - ViewSessions
  '/api/v1/automation/sessions/{id}/logs':
    get:
      produces:
        - application/json
      parameters:
        - description: ID of the session.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SessionLogResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP GET request to the `/api/v1/automation/sessions/{id}/logs` path
        allows you to get an array of log records of an automation session that
        has the specified `id`.
      operationId: GetAutomationSessionLogs
      summary: Get Automation Session Logs
      x-veeam-authorize:
        claims:
          - ViewSessions
  '/api/v1/automation/sessions/{id}/stop':
    post:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the session.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Automation
      description: >-
        The HTTP POST request to the `/api/v1/automation/sessions/{id}/stop`
        path allows you to stop an automation session that has the specified
        `id`.
      operationId: StopAutomationSession
      summary: Stop Automation Session
      x-veeam-authorize:
        claims:
          - StopSessions
  /api/v1/backupInfrastructure/managedServers:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of servers to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ManagedServersFilters'
        - description: Maximum number of servers to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ManagedServersFilters'
        - description: Sorts servers by one of the server parameters.
          enum:
            - Name
            - Type
            - Description
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ManagedServersFilters'
        - description: Sorts servers in the ascending order by the `orderColumn` parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/ManagedServersFilters'
        - description: >-
            Filters servers by the `nameFilter` pattern. The pattern can match
            any server parameter. To substitute one or more characters, use the
            asterisk (*) character at the beginning and/or at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ManagedServersFilters'
        - description: Filters servers by server type.
          enum:
            - WindowsHost
            - LinuxHost
            - ViHost
          in: query
          name: typeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ManagedServersFilters'
        - description: Filters servers by the type of VMware vSphere server.
          enum:
            - ESX
            - ESXi
            - VC
          in: query
          name: viTypeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ManagedServersFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ManagedServersResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Managed Servers
      description: >-
        The HTTP GET request to the
        `/api/v1/backupInfrastructure/managedServers` path allows you to get an
        array of all servers that are added to the backup infrastructure.
      operationId: GetAllManagedServers
      summary: Get All Servers
      x-veeam-authorize:
        claims:
          - ViewManagedServers
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ManagedServerSpec'
      responses:
        '201':
          description: >-
            Infrastructure session has been created to add the server. To check
            the progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Managed Servers
      description: >-
        The HTTP POST request to the
        `/api/v1/backupInfrastructure/managedServers` path allows you to add a
        server to the backup infrastructure.
      operationId: CreateManagedServer
      summary: Add Server
      x-veeam-authorize:
        claims:
          - CreateManagedServers
  '/api/v1/backupInfrastructure/managedServers/{id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the managed server.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '201':
          description: Managed server has been removed.
          schema:
            $ref: '#/definitions/SessionModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Managed Servers
      description: >-
        The HTTP DELETE request to the
        `/api/v1/backupInfrastructure/managedServers/{id}` path allows you to
        remove a managed server that has the specified `id` from the backup
        infrastructure.
      operationId: DeleteManagedServer
      summary: Remove Server
      x-veeam-authorize:
        claims:
          - DeleteManagedServers
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the managed server.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ManagedServerModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Managed Servers
      description: >-
        The HTTP GET request to the
        `/api/v1/backupInfrastructure/managedServers/{id}` path allows you to
        get a managed server that has the specified `id`.
      operationId: GetManagedServer
      summary: Get Server
      x-veeam-authorize:
        claims:
          - ViewManagedServers
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the managed server.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ManagedServerModel'
      responses:
        '201':
          description: >-
            Infrastructure session has been created to edit the server. To check
            the progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Managed Servers
      description: >-
        The HTTP PUT request to the
        `/api/v1/backupInfrastructure/managedServers/{id}` path allows you to
        edit a managed server that has the specified `id`.
      operationId: UpdateManagedServer
      summary: Edit Server
      x-veeam-authorize:
        claims:
          - UpdateManagedServers
  /api/v1/backupInfrastructure/proxies:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of proxies to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ProxiesFilters'
        - description: Maximum number of proxies to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ProxiesFilters'
        - description: Sorts proxies by one of the proxy parameters.
          enum:
            - Name
            - Type
            - Description
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ProxiesFilters'
        - description: Sorts proxies in the ascending order by the `orderColumn` parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/ProxiesFilters'
        - description: >-
            Filters proxies by the `nameFilter` pattern. The pattern can match
            any proxy parameter. To substitute one or more characters, use the
            asterisk (*) character at the beginning and/or at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ProxiesFilters'
        - description: Filters proxies by proxy type.
          enum:
            - ViProxy
          in: query
          name: typeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ProxiesFilters'
        - description: Filters proxies by ID of the backup server.
          format: uuid
          in: query
          name: hostIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ProxiesFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProxiesResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Proxies
      description: >-
        The HTTP GET request to the `/api/v1/backupInfrastructure/proxies` path
        allows you to get an array of all backup proxies that are added to the
        backup infrastructure.
      operationId: GetAllProxies
      summary: Get All Proxies
      x-veeam-authorize:
        claims:
          - ViewProxies
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProxySpec'
      responses:
        '201':
          description: >-
            Infrastructure session has been created to add the proxy. To check
            the progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Proxies
      description: >-
        The HTTP POST request to the `/api/v1/backupInfrastructure/proxies` path
        allows you to add a proxy to the backup infrastructure.
      operationId: CreateProxy
      summary: Add Proxy
      x-veeam-authorize:
        claims:
          - CreateProxies
  '/api/v1/backupInfrastructure/proxies/{id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the backup proxy.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Removed.
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Proxies
      description: >-
        The HTTP DELETE request to the
        `/api/v1/backupInfrastructure/proxies/{id}` path allows you to remove a
        backup proxy that has the specified `id` from the backup infrastructure.
      operationId: DeleteProxy
      summary: Remove Proxy
      x-veeam-authorize:
        claims:
          - DeleteProxies
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the backup proxy.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProxyModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Proxies
      description: >-
        The HTTP GET request to the `/api/v1/backupInfrastructure/proxies/{id}`
        path allows you to get a backup proxy that has the specified `id`.
      operationId: GetProxy
      summary: Get Proxy
      x-veeam-authorize:
        claims:
          - ViewProxies
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the backup proxy.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProxyModel'
      responses:
        '201':
          description: >-
            Infrastructure session has been created to edit the proxy. To check
            the progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Proxies
      description: >-
        The HTTP PUT request to the `/api/v1/backupInfrastructure/proxies/{id}`
        path allows you to edit a backup proxy that has the specified `id`.
      operationId: UpdateProxy
      summary: Edit Proxy
      x-veeam-authorize:
        claims:
          - UpdateProxies
  /api/v1/backupInfrastructure/repositories:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of repositories to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/RepositoriesFilters'
        - description: Maximum number of repositories to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/RepositoriesFilters'
        - description: Sorts repositories by one of the repository parameters.
          enum:
            - Name
            - Description
            - Type
            - Host
            - Path
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/RepositoriesFilters'
        - description: >-
            Sorts repositories in the ascending order by the `orderColumn`
            parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/RepositoriesFilters'
        - description: >-
            Filters repositories by the `nameFilter` pattern. The pattern can
            match any repository parameter. To substitute one or more
            characters, use the asterisk (*) character at the beginning and/or
            at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/RepositoriesFilters'
        - description: Filters repositories by repository type.
          enum:
            - WinLocal
            - LinuxLocal
            - Smb
            - Nfs
            - AzureBlob
            - AzureArchive
            - AmazonS3
            - AmazonS3Glacier
            - S3Compatible
            - GoogleCloud
            - IBMCloud
          in: query
          name: typeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/RepositoriesFilters'
        - description: Filters repositories by ID of the backup server.
          format: uuid
          in: query
          name: hostIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/RepositoriesFilters'
        - description: >-
            Filters repositories by path to the folder where backup files are
            stored.
          in: query
          name: pathFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/RepositoriesFilters'
        - description: >
            Filters repositories by VM Backup API parameters converted to the
            base64 string.<br>

            To compose the base64 string:<br>

            <ol>
              <li>Prepare VM Backup API parameters in the JSON format.</li>
              <code>{<br>
              "protocolVersion":"string",<br>
              "assemblyVersion":"string",<br>
              "productId":"string",<br>
              "versionFlags":"string"<br>
              }<br></code>
              <li>Convert the JSON object into a string.</li>
              <li>Encode the string with base64 encoding.</li>
            </ol>
          in: query
          name: vmbApiFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/RepositoriesFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RepositoriesResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Repositories
      description: >-
        The HTTP GET request to the `/api/v1/backupInfrastructure/repositories`
        path allows you to get an array of all backup repositories that are
        added to the backup infrastructure.
      operationId: GetAllRepositories
      summary: Get All Repositories
      x-veeam-authorize:
        claims:
          - ViewRepositories
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RepositorySpec'
      responses:
        '201':
          description: >-
            Infrastructure session has been created to add the repository. To
            check the progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Repositories
      description: >-
        The HTTP POST request to the `/api/v1/backupInfrastructure/repositories`
        path allows you to add a repository to the backup infrastructure.
      operationId: CreateRepository
      summary: Add Repository
      x-veeam-authorize:
        claims:
          - CreateRepositories
  /api/v1/backupInfrastructure/repositories/states:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of repository states to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/RepositoryStatesFilters'
        - description: Maximum number of repository states to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/RepositoryStatesFilters'
        - description: Sorts repository states by one of the state parameters.
          enum:
            - Name
            - Type
            - Host
            - Path
            - CapacityGB
            - FreeGB
            - UsedSpaceGB
            - Description
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/RepositoryStatesFilters'
        - description: >-
            Sorts repository states in the ascending order by the `orderColumn`
            parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/RepositoryStatesFilters'
        - description: Filters repository states by repository ID.
          format: uuid
          in: query
          name: idFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/RepositoryStatesFilters'
        - description: >-
            Filters repository states by the `nameFilter` pattern. The pattern
            can match any repository state parameter. To substitute one or more
            characters, use the asterisk (*) character at the beginning and/or
            at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/RepositoryStatesFilters'
        - description: Filters repository states by repository type.
          enum:
            - WinLocal
            - LinuxLocal
            - Smb
            - Nfs
            - AzureBlob
            - AzureArchive
            - AmazonS3
            - AmazonS3Glacier
            - S3Compatible
            - GoogleCloud
            - IBMCloud
          in: query
          name: typeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/RepositoryStatesFilters'
        - description: Filters repository states by repository capacity.
          format: double
          in: query
          name: capacityFilter
          type: number
          x-veeam-spec:
            $ref: '#/definitions/RepositoryStatesFilters'
        - description: Filters repository states by repository free space.
          format: double
          in: query
          name: freeSpaceFilter
          type: number
          x-veeam-spec:
            $ref: '#/definitions/RepositoryStatesFilters'
        - description: Filters repository states by repository used space.
          format: double
          in: query
          name: usedSpaceFilter
          type: number
          x-veeam-spec:
            $ref: '#/definitions/RepositoryStatesFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RepositoryStatesResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Repositories
      description: >-
        The HTTP GET request to the
        `/api/v1/backupInfrastructure/repositories/states` path allows you to
        get an array of all repository states. The states include repository
        location and brief statistics, such as repository capacity, free and
        used space.
      operationId: GetAllRepositoriesStates
      summary: Get All Repository States
      x-veeam-authorize:
        claims:
          - ViewRepositories
  '/api/v1/backupInfrastructure/repositories/{id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the backup repository.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - description: 'If *true*, Veeam Backup & Replication will remove backup files.'
          in: query
          name: deleteBackups
          required: false
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/DeleteRepositoryFilters'
      responses:
        '204':
          description: Removed
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Repositories
      description: >-
        The HTTP DELETE request to the
        `/api/v1/backupInfrastructure/repositories/{id}` path allows you to
        remove a backup repository that has the specified `id` from the backup
        infrastructure.
      operationId: DeleteRepository
      summary: Remove Repository
      x-veeam-authorize:
        claims:
          - DeleteRepositories
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the backup repository.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RepositoryModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Repositories
      description: >-
        The HTTP GET request to the
        `/api/v1/backupInfrastructure/repositories/{id}` path allows you to get
        a backup repository that has the specified `id`.
      operationId: GetRepository
      summary: Get Repository
      x-veeam-authorize:
        claims:
          - ViewRepositories
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the backup repository.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RepositoryModel'
      responses:
        '201':
          description: >-
            Infrastructure session has been created to edit the repository. To
            check the progress, track the session `state`.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Repositories
      description: >-
        The HTTP PUT request to the
        `/api/v1/backupInfrastructure/repositories/{id}` path allows you to edit
        a backup repository that has the specified `id`.
      operationId: UpdateRepository
      summary: Edit Repository
      x-veeam-authorize:
        claims:
          - UpdateRepositories
  /api/v1/backupInfrastructure/scaleOutRepositories:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of repositories to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ScaleOutRepositoriesFilters'
        - description: Maximum number of repositories to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ScaleOutRepositoriesFilters'
        - description: Sorts repositories by one of the repository parameters.
          enum:
            - Name
            - Description
            - Type
            - Host
            - Path
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ScaleOutRepositoriesFilters'
        - description: >-
            Sorts repositories in the ascending order by the `orderColumn`
            parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/ScaleOutRepositoriesFilters'
        - description: >-
            Filters repositories by the `nameFilter` substring. The substring
            can be part of any repository parameter.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ScaleOutRepositoriesFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ScaleOutRepositoriesResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Repositories
      description: >-
        The HTTP GET request to the
        `/api/v1/backupInfrastructure/scaleOutRepositories` path allows you to
        get an array of all scale-out backup repositories that are added to the
        backup infrastructure.
      operationId: GetAllScaleOutRepositories
      summary: Get All Scale-Out Backup Repositories
      x-veeam-authorize:
        claims:
          - ViewScaleOutRepositories
  '/api/v1/backupInfrastructure/scaleOutRepositories/{id}':
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the scale-out backup repository.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ScaleOutRepositoryModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Repositories
      description: >-
        The HTTP GET request to the
        `/api/v1/backupInfrastructure/scaleOutRepositories/{id}` path allows you
        to get a scale-out backup repository that has the specified `id`.
      operationId: GetScaleOutRepository
      summary: Get Scale-Out Backup Repository
      x-veeam-authorize:
        claims:
          - ViewScaleOutRepositories
  '/api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableMaintenanceMode':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the scale-out backup repository extent.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScaleOutExtentMaintenanceSpec'
      responses:
        '201':
          description: RepositoryMaintenance session has been created.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Repositories
      description: >-
        The HTTP POST request to the
        `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableMaintenanceMode`
        path allows you to disable maintenance mode for a scale-out backup
        repository extent that has the specified `id`.
      operationId: DisableScaleOutExtentMaintenanceMode
      summary: Disable Maintenance Mode
      x-veeam-authorize:
        claims:
          - DisableRepositoryMaintenanceMode
  '/api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableMaintenanceMode':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the scale-out backup repository extent.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScaleOutExtentMaintenanceSpec'
      responses:
        '201':
          description: RepositoryMaintenance session has been created.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Repositories
      description: >-
        The HTTP POST request to the
        `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableMaintenanceMode`
        path allows you to enable maintenance mode for a scale-out backup
        repository extent that has the specified `id`.
      operationId: EnableScaleOutExtentMaintenanceMode
      summary: Enable Maintenance Mode
      x-veeam-authorize:
        claims:
          - EnableRepositoryMaintenanceMode
  /api/v1/backupObjects:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of backup objects to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/BackupObjectsFilters'
        - description: Maximum number of backup objects to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/BackupObjectsFilters'
        - description: Sorts backup objects by one of the backup object parameters.
          enum:
            - Name
            - ObjectId
            - PlatformId
            - Type
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupObjectsFilters'
        - description: >-
            Sorts backup objects in the ascending order by the `orderColumn`
            parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/BackupObjectsFilters'
        - description: >-
            Filters backup objects by the `nameFilter` pattern. The pattern can
            match any backup object parameter. To substitute one or more
            characters, use the asterisk (*) character at the beginning and/or
            at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupObjectsFilters'
        - description: Filters backup objects by platform ID.
          enum:
            - VmWare
            - HyperV
            - Vcd
            - WindowsPhysical
            - LinuxPhysical
            - Tape
            - NasBackup
            - CustomPlatform
          in: query
          name: platformNameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupObjectsFilters'
        - description: Filters backup objects by platform ID.
          format: uuid
          in: query
          name: platformIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupObjectsFilters'
        - description: Filters backup objects by object type.
          in: query
          name: typeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupObjectsFilters'
        - description: Filters backup objects by the type of VMware vSphere server.
          in: query
          name: viTypeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupObjectsFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BackupObjectsResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Backup Objects
      description: >-
        The HTTP GET request to the `/api/v1/backupObjects` path allows you to
        get an array of virtual infrastructure objects (VMs and VM containers)
        that are inсluded in backups created by the backup server.
      operationId: GetAllBackupObjects
      summary: Get All Backup Objects
      x-veeam-authorize:
        claims:
          - ViewBackupObjects
  '/api/v1/backupObjects/{id}':
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the backup object.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BackupObjectModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Backup Objects
      description: >-
        The HTTP GET request to the `/api/v1/backupObjects/{id}` path allows you
        to get a backup object that has the specified `id`.
      operationId: GetBackupObject
      summary: Get Backup Object
      x-veeam-authorize:
        claims:
          - ViewBackupObjects
  '/api/v1/backupObjects/{id}/restorePoints':
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the backup object.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ObjectRestorePointsResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Backup Objects
      description: >-
        The HTTP GET request to the `/api/v1/backupObjects/{id}/restorePoints`
        path allows you to get an array of restore points of a backup object
        that has the specified `id`.
      operationId: GetBackupObjectRestorePoints
      summary: Get Restore Points
      x-veeam-authorize:
        claims:
          - ViewRestorePoints
  /api/v1/backups:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of backups to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/BackupsFilters'
        - description: Maximum number of backups to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/BackupsFilters'
        - description: Sorts backups by one of the backup parameters.
          enum:
            - Name
            - CreationTime
            - PlatformId
            - JobId
            - PolicyTag
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupsFilters'
        - description: Sorts backups in the ascending order by the `orderColumn` parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/BackupsFilters'
        - description: >-
            Filters backups by the `nameFilter` pattern. The pattern can match
            any backup parameter. To substitute one or more characters, use the
            asterisk (*) character at the beginning and/or at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupsFilters'
        - description: Returns backups that are created after the specified date and time.
          format: date-time
          in: query
          name: createdAfterFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupsFilters'
        - description: Returns backups that are created before the specified date and time.
          format: date-time
          in: query
          name: createdBeforeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupsFilters'
        - description: Filters backups by ID of the backup object platform.
          format: uuid
          in: query
          name: platformIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupsFilters'
        - description: Filters backups by ID of the parent job.
          format: uuid
          in: query
          name: jobIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupsFilters'
        - description: Filters backups by retention policy tag.
          in: query
          name: policyTagFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/BackupsFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BackupsResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Backups
      description: >-
        The HTTP GET request to the `/api/v1/backups` path allows you to get an
        array of all backups that are created on or imported to the backup
        server.
      operationId: GetAllBackups
      summary: Get All Backups
      x-veeam-authorize:
        claims:
          - ViewBackups
  '/api/v1/backups/{id}':
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the backup.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BackupModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Backups
      description: >-
        The HTTP GET request to the `/api/v1/backups/{id}` path allows you to
        get a backup that has the specified `id`.
      operationId: GetBackup
      summary: Get Backup
      x-veeam-authorize:
        claims:
          - ViewBackups
  '/api/v1/backups/{id}/objects':
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the backup.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BackupObjectsResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Backups
      description: >-
        The HTTP GET request to the `/api/v1/backups/{id}/objects` path allows
        you to get an array of virtual infrastructure objects (VMs and VM
        containers) that are inсluded in a backup that has the specified ID.
      operationId: GetBackupObjects
      summary: Get Backup Objects
      x-veeam-authorize:
        claims:
          - ViewBackupObjects
  /api/v1/configBackup:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConfigBackupModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Configuration Backup
      description: >-
        The HTTP GET request to the `/api/v1/configBackup` path allows you to
        get configuration backup of the backup server.
      operationId: GetConfigBackupOptions
      summary: Get Configuration Backup
      x-veeam-authorize:
        claims:
          - ViewConfigBackupOptions
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigBackupModel'
      responses:
        '200':
          description: Configuration backup settings have been updated.
          schema:
            $ref: '#/definitions/ConfigBackupModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Configuration Backup
      description: >-
        The HTTP PUT request to the `/api/v1/configBackup` path allows you to
        edit configuration backup of the backup server.
      operationId: UpdateConfigBackupOptions
      summary: Edit Configuration Backup
      x-veeam-authorize:
        claims:
          - UpdateConfigBackupOptions
  /api/v1/configBackup/backup:
    post:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: Configuration backup has been started.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Configuration Backup
      description: >-
        The HTTP POST request to the `/api/v1/configBackup` path allows you to
        start configuration backup.
      operationId: StartConfigBackup
      summary: Start Configuration Backup
      x-veeam-authorize:
        claims:
          - StartConfigBackup
  /api/v1/connectionCertificate:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/HostConnectionSpec'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/ConnectionCertificateModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Connection
      description: >-
        The HTTP POST request to the `/api/v1/connectionCertificate` path allows
        you to get a TLS certificate or SSH fingerprint of the specified host.
      operationId: GetConnectionCertificate
      summary: Request TLS Certificate or SSH Fingerprint
      x-veeam-authorize:
        claims:
          - CheckCertificate
  /api/v1/credentials:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of credentials records to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/CredentialsFilters'
        - description: Maximum number of credentials records to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/CredentialsFilters'
        - description: Sorts credentials by one of the credentials parameters.
          enum:
            - Username
            - Description
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/CredentialsFilters'
        - description: >-
            Sorts credentials in the ascending order by the `orderColumn`
            parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/CredentialsFilters'
        - description: >-
            Filters credentials by the `nameFilter` pattern. The pattern can
            match any credentials parameter. To substitute one or more
            characters, use the asterisk (*) character at the beginning and/or
            at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/CredentialsFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CredentialsResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Credentials
      description: >-
        The HTTP GET request to the `/api/v1/credentials` path allows you to get
        an array of credentials records that are added to the backup server.
      operationId: GetAllCreds
      summary: Get All Credentials
      x-veeam-authorize:
        claims:
          - ViewCredentials
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CredentialsSpec'
      responses:
        '200':
          description: Account has been added.
          schema:
            $ref: '#/definitions/CredentialsModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Credentials
      description: >-
        The HTTP POST request to the `/api/v1/credentials` path allows you to
        add a credentials record.
      operationId: CreateCreds
      summary: Add Credentials Record
      x-veeam-authorize:
        claims:
          - CreateCredentials
  '/api/v1/credentials/{id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the credentials record.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Credentials record has been removed.
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Credentials
      description: >-
        The HTTP DELETE request to the `/api/v1/credentials/{id}` path allows
        you to remove a credentials record that has the specified `id`.
      operationId: DeleteCreds
      summary: Remove Credentials Record
      x-veeam-authorize:
        claims:
          - DeleteCredentials
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the credentials record.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CredentialsModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Credentials
      description: >-
        The HTTP GET request to the `/api/v1/credentials/{id}` path allows you
        to get a credentials record that has the specified `id`.
      operationId: GetCreds
      summary: Get Credentials Record
      x-veeam-authorize:
        claims:
          - ViewCredentials
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the credentials record.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CredentialsModel'
      responses:
        '200':
          description: Credentials record has been updated.
          schema:
            $ref: '#/definitions/CredentialsModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Credentials
      description: >-
        The HTTP PUT request to the `/api/v1/credentials/{id}` path allows you
        to edit a credentials record that has the specified `id`.
      operationId: UpdateCreds
      summary: Edit Credentials Record
      x-veeam-authorize:
        claims:
          - UpdateCredentials
  '/api/v1/credentials/{id}/changepassword':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the credentials record.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CredentialsPasswordChangeSpec'
      responses:
        '200':
          description: Password has been changed.
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Credentials
      description: >-
        The HTTP POST request to the `/api/v1/credentials/{id}/changepassword`
        path allows you to change a password of the credentials record that has
        the specified `id`.
      operationId: ChangePasswordForCreds
      summary: Change Password
      x-veeam-authorize:
        claims:
          - ChangeAccountPassword
  '/api/v1/credentials/{id}/changeprivatekey':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the credentials record.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PrivateKeyChangeSpec'
      responses:
        '200':
          description: Private key has been changed.
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Credentials
      description: >-
        The HTTP POST request to the `/api/v1/credentials/{id}/changeprivatekey`
        path allows you to change a Linux private key of the credentials record
        that has the specified `id`.
      operationId: ChangePrivateKeyForCreds
      summary: Change Linux Private Key
      x-veeam-authorize:
        claims:
          - ChangeLinuxPrivateKey
  '/api/v1/credentials/{id}/changerootpassword':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the credentials record.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CredentialsPasswordChangeSpec'
      responses:
        '200':
          description: Root password has been changed.
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Credentials
      description: >-
        The HTTP POST request to the
        `/api/v1/credentials/{id}/changerootpassword` path allows you to change
        a Linux root password of the credentials record that has the specified
        `id`.
      operationId: ChangeRootPasswordForCreds
      summary: Change Linux Root Password
      x-veeam-authorize:
        claims:
          - ChangeLinuxRootPassword
  /api/v1/encryptionPasswords:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of passwords to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/EncryptionPasswordsFilters'
        - description: Maximum number of passwords to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/EncryptionPasswordsFilters'
        - description: Sorts passwords by one of the password parameters.
          enum:
            - Hint
            - ModificationTime
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/EncryptionPasswordsFilters'
        - description: >-
            Sorts passwords in the ascending order by the `orderColumn`
            parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/EncryptionPasswordsFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EncryptionPasswordsResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Encryption
      description: >-
        The HTTP GET request to the `/api/v1/encryptionPasswords` path allows
        you to get an array of all passwords that are used for data encryption.
      operationId: GetAllEncryptionPasswords
      summary: Get All Encryption Passwords
      x-veeam-authorize:
        claims:
          - ViewEncryptionPasswords
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EncryptionPasswordSpec'
      responses:
        '201':
          description: Password has been added.
          schema:
            $ref: '#/definitions/EncryptionPasswordModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Encryption
      description: >-
        The HTTP POST request to the `/api/v1/encryptionPasswords` path allows
        you to add an encryption password.
      operationId: CreateEncryptionPassword
      summary: Add Encryption Password
      x-veeam-authorize:
        claims:
          - CreateEncryptionPasswords
  '/api/v1/encryptionPasswords/{id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the encryption password.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Password has been removed.
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Encryption
      description: >-
        The HTTP DELETE request to the `/api/v1/encryptionPasswords/{id}` path
        allows you to remove an encryption password that has the specified `id`.
      operationId: DeleteEncryptionPassword
      summary: Remove Encryption Password
      x-veeam-authorize:
        claims:
          - DeleteEncryptionPasswords
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the encryption password.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EncryptionPasswordModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Encryption
      description: >-
        The HTTP GET request to the `/api/v1/encryptionPasswords/{id}` path
        allows you to get an encryption password that has the specified `id`.
      operationId: GetEncryptionPassword
      summary: Get Encryption Password
      x-veeam-authorize:
        claims:
          - ViewEncryptionPasswords
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the encryption password.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EncryptionPasswordModel'
      responses:
        '200':
          description: Password has been updated.
          schema:
            $ref: '#/definitions/EncryptionPasswordModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Encryption
      description: >-
        The HTTP PUT request to the `/api/v1/encryptionPasswords/{id}` path
        allows you to edit an encryption password that has the specified `id`.
      operationId: UpdateEncryptionPassword
      summary: Edit Encryption Password
      x-veeam-authorize:
        claims:
          - UpdateEncryptionPasswords
  /api/v1/generalOptions:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GeneralOptionsModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - General Options
      description: >-
        The HTTP GET request to the `/api/v1/generalOptions` path allows you to
        get general options of Veeam Backup & Replication.
      operationId: GetGeneralOptions
      summary: Get General Options
      x-veeam-authorize:
        claims:
          - ViewGeneralOptions
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GeneralOptionsModel'
      responses:
        '200':
          description: General options have been updated.
          schema:
            $ref: '#/definitions/GeneralOptionsModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - General Options
      description: >-
        The HTTP PUT request to the `/api/v1/generalOptions` path allows you to
        edit general options of Veeam Backup & Replication.
      operationId: UpdateGeneralOptions
      summary: Edit General Options
      x-veeam-authorize:
        claims:
          - UpdateGeneralOptions
  /api/v1/inventory/vmware/hosts:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of VMware vSphere servers to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ViRootFilters'
        - description: Maximum number of VMware vSphere servers to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ViRootFilters'
        - description: >-
            Sorts VMware vSphere servers by one of the VMware vSphere server
            parameters.
          enum:
            - Name
            - Type
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ViRootFilters'
        - description: >-
            Sorts VMware vSphere servers in the ascending order by the
            `orderColumn` parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/ViRootFilters'
        - description: >-
            Filters VMware vSphere servers by the `nameFilter` pattern. The
            pattern can match any VMware vSphere server parameter. To substitute
            one or more characters, use the asterisk (*) character at the
            beginning and/or at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ViRootFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ViRootsResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Inventory Browser
      description: >-
        The HTTP GET request to the `/api/v1/inventory/vmware/hosts` path allows
        you to get an array of all VMware vSphere servers added to the backup
        infrastructure.
      operationId: GetAllInventoryVmwareHosts
      summary: Get All VMware vSphere Servers
      x-veeam-authorize:
        claims:
          - ViewViHierarchy
  '/api/v1/inventory/vmware/hosts/{name}':
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Name of the VMware vSphere server.
          in: path
          name: name
          required: true
          type: string
        - description: Number of objects to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/VCenterInventoryFilters'
        - description: Maximum number of objects to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/VCenterInventoryFilters'
        - description: Sorts objects by one of the object parameters.
          enum:
            - Name
            - ObjectId
            - Type
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/VCenterInventoryFilters'
        - description: Sorts objects in the ascending order by the `orderColumn` parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/VCenterInventoryFilters'
        - description: Filters objects by object ID.
          in: query
          name: objectIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/VCenterInventoryFilters'
        - description: Filters objects by hierarchy type.
          enum:
            - HostsAndClusters
            - DatastoresAndVms
            - HostsAndDatastores
            - VmsAndTemplates
            - VmsAndTags
          in: query
          name: hierarchyTypeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/VCenterInventoryFilters'
        - description: >-
            Filters objects by the `nameFilter` pattern. The pattern can match
            any object parameter. To substitute one or more characters, use the
            asterisk (*) character at the beginning and/or at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/VCenterInventoryFilters'
        - description: Filters objects by virtual infrastructure type.
          enum:
            - Unknown
            - VirtualMachine
            - vCenterServer
            - Datacenter
            - Cluster
            - Host
            - ResourcePool
            - Folder
            - Datastore
            - DatastoreCluster
            - StoragePolicy
            - Template
            - ComputeResource
            - VirtualApp
            - Tag
            - Category
            - Multitag
          in: query
          name: typeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/VCenterInventoryFilters'
        - description: Filters objects by name of the parent container.
          in: query
          name: parentContainerNameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/VCenterInventoryFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VCenterInventoryResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Inventory Browser
      description: >-
        The HTTP GET request to the `/api/v1/inventory/vmware/hosts/{name}` path
        allows you to get an array of virtual infrastructure objects of the
        VMware vSphere server that has the specified `name`.
      operationId: GetVmwareHostObject
      summary: Get VMware vSphere Server Objects
      x-veeam-authorize:
        claims:
          - ViewViHierarchy
  /api/v1/jobs:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of jobs to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/JobsFilters'
        - description: Maximum number of jobs to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/JobsFilters'
        - description: Sorts jobs by one of the job parameters.
          enum:
            - Name
            - Type
            - Description
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobsFilters'
        - description: Sorts jobs in the ascending order by the `orderColumn` parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/JobsFilters'
        - description: >-
            Filters jobs by the `nameFilter` pattern. The pattern can match any
            job parameter. To substitute one or more characters, use the
            asterisk (*) character at the beginning and/or at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobsFilters'
        - description: Filters jobs by job type.
          enum:
            - Backup
          in: query
          name: typeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobsFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JobsResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Jobs
      description: >-
        The HTTP GET request to the `/api/v1/jobs` path allows you to get an
        array of all jobs coordinated by the backup server.
      operationId: GetAllJobs
      summary: Get All Jobs
      x-veeam-authorize:
        claims:
          - ViewJobs
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/JobSpec'
      responses:
        '201':
          description: Job has been created.
          schema:
            $ref: '#/definitions/JobModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Jobs
      description: >-
        The HTTP POST request to the `/api/v1/jobs` path allows you to create a
        new job that has the specified parameters.
      operationId: CreateJob
      summary: Create Job
      x-veeam-authorize:
        claims:
          - CreateJobs
  /api/v1/jobs/states:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of job states to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: Maximum number of job states to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: Sorts job states by one of the state parameters.
          enum:
            - Name
            - Type
            - Status
            - LastRun
            - LastResult
            - NextRun
            - Description
            - RepositoryId
            - ObjectsCount
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: >-
            Sorts job states in the ascending order by the `orderColumn`
            parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: Filters job states by job ID.
          format: uuid
          in: query
          name: idFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: >-
            Filters job states by the `nameFilter` pattern. The pattern can
            match any state parameter. To substitute one or more characters, use
            the asterisk (*) character at the beginning and/or at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: Filters job states by job type.
          enum:
            - Backup
          in: query
          name: typeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: Filters job states by status with which jobs must finish.
          enum:
            - None
            - Success
            - Warning
            - Failed
          in: query
          name: lastResultFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: Filters job states by current status of the job.
          enum:
            - running
            - inactive
            - disabled
          in: query
          name: statusFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: Filters job states by workloads that jobs must process.
          enum:
            - application
            - cloudVm
            - file
            - server
            - workstation
            - vm
          in: query
          name: workloadFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: >-
            Returns job states for jobs that have run after the specified date
            and time.
          format: date-time
          in: query
          name: lastRunAfterFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: >-
            Returns job states for jobs that have not run after the specified
            date and time.
          format: date-time
          in: query
          name: lastRunBeforeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: 'If *true*, Returns job states for jobs with high priority.'
          in: query
          name: isHighPriorityJobFilter
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: Filters job states by repository ID.
          format: uuid
          in: query
          name: repositoryIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
        - description: Filters job states by number of objects processed by the job.
          in: query
          name: objectsCountFilter
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/JobStatesFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JobStatesResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Jobs
      description: >-
        The HTTP GET request to the `/api/v1/jobs/states` path allows you to get
        an array of all job states. The states include brief job information
        that you can also find under the **Jobs** node in the Veeam Backup &
        Replication console.
      operationId: GetAllJobsStates
      summary: Get All Job States
      x-veeam-authorize:
        claims:
          - ViewJobs
  '/api/v1/jobs/{id}':
    delete:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Removed.
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Jobs
      description: >-
        The HTTP DELETE request to the `/api/v1/jobs/{id}` path allows you to
        delete a job that has the specified `id`.
      operationId: DeleteJob
      summary: Delete Job
      x-veeam-authorize:
        claims:
          - DeleteJobs
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JobModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Jobs
      description: >-
        The HTTP GET request to the `/api/v1/jobs/{id}` path allows you to get a
        job that has the specified `id`.
      operationId: GetJob
      summary: Get Job
      x-veeam-authorize:
        claims:
          - ViewJobs
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/JobModel'
      responses:
        '200':
          description: Job has been updated.
          schema:
            $ref: '#/definitions/JobModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Jobs
      description: >-
        The HTTP PUT request to the `/api/v1/jobs/{id}` path allows you to edit
        a job that has the specified `id`.
      operationId: UpdateJob
      summary: Edit Job
      x-veeam-authorize:
        claims:
          - UpdateJobs
  '/api/v1/jobs/{id}/disable':
    post:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Job has been disabled.
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Jobs
      description: >-
        The HTTP POST request to the `/api/v1/jobs/{id}/disable` path allows you
        to disable a job that has the specified `id`.
      operationId: DisableJob
      summary: Disable Job
      x-veeam-authorize:
        claims:
          - DisableJobs
  '/api/v1/jobs/{id}/enable':
    post:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Job has been enabled.
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Jobs
      description: >-
        The HTTP POST request to the `/api/v1/jobs/{id}/enable` path allows you
        to enable a job that has the specified `id`.
      operationId: EnableJob
      summary: Enable Job
      x-veeam-authorize:
        claims:
          - EnableJobs
  '/api/v1/jobs/{id}/start':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/JobStartSpec'
      responses:
        '201':
          description: Job session has been started.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Jobs
      description: >-
        The HTTP POST request to the `/api/v1/jobs/{id}/start` path allows you
        to start a job that has the specified `id`.
      operationId: StartJob
      summary: Start Job
      x-veeam-authorize:
        claims:
          - StartJobs
  '/api/v1/jobs/{id}/stop':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - format: uuid
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/JobStopSpec'
      responses:
        '201':
          description: Job session has been stopped.
          schema:
            $ref: '#/definitions/SessionModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Jobs
      description: >-
        The HTTP POST request to the `/api/v1/jobs/{id}/stop` path allows you to
        stop a job that has the specified `id`.
      operationId: StopJob
      summary: Stop Job
      x-veeam-authorize:
        claims:
          - StopJobs
  /api/v1/objectRestorePoints:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of restore points to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ObjectRestorePointsFilters'
        - description: Maximum number of restore points to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ObjectRestorePointsFilters'
        - description: Sorts restore points by one of the restore point parameters.
          enum:
            - CreationTime
            - PlatformId
            - BackupId
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ObjectRestorePointsFilters'
        - description: >-
            Sorts restore points in the ascending order by the `orderColumn`
            parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/ObjectRestorePointsFilters'
        - description: >-
            Returns restore points that are created after the specified date and
            time.
          format: date-time
          in: query
          name: createdAfterFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ObjectRestorePointsFilters'
        - description: >-
            Returns restore points that are created before the specified date
            and time.
          format: date-time
          in: query
          name: createdBeforeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ObjectRestorePointsFilters'
        - description: >-
            Filters restore points by the `nameFilter` pattern. The pattern can
            match any restore point parameter. To substitute one or more
            characters, use the asterisk (*) character at the beginning and/or
            at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ObjectRestorePointsFilters'
        - description: Filters restore points by name of the backup object platform.
          enum:
            - VmWare
            - HyperV
            - Vcd
            - WindowsPhysical
            - LinuxPhysical
            - Tape
            - NasBackup
            - CustomPlatform
          in: query
          name: platformNameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ObjectRestorePointsFilters'
        - description: Filters restore points by ID of the backup object platform.
          format: uuid
          in: query
          name: platformIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ObjectRestorePointsFilters'
        - description: Filters restore points by backup ID.
          format: uuid
          in: query
          name: backupIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ObjectRestorePointsFilters'
        - description: Filters restore points by backup object ID.
          format: uuid
          in: query
          name: backupObjectIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ObjectRestorePointsFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ObjectRestorePointsResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Object Restore Points
      description: >-
        The HTTP GET request to the `/api/v1/objectRestorePoints` path allows
        you to get an array of all restore points created on the backup server.
      operationId: GetAllObjectRestorePoints
      summary: Get All Restore Points
      x-veeam-authorize:
        claims:
          - ViewRestorePoints
  '/api/v1/objectRestorePoints/{id}':
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the restore point.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ObjectRestorePointModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Object Restore Points
      description: >-
        The HTTP GET request to the `/api/v1/objectRestorePoints/{id}` path
        allows you to get a restore point that has the specified `id`.
      operationId: GetObjectRestorePoint
      summary: Get Restore Point
      x-veeam-authorize:
        claims:
          - ViewRestorePoints
  '/api/v1/objectRestorePoints/{id}/disks':
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: ID of the restore point.
          format: uuid
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ObjectRestorePointDisksResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Object Restore Points
      description: >-
        The HTTP GET request to the `/api/v1/objectRestorePoints/{id}/disks`
        path allows you to get an array of disks from a restore point that has
        the specified `id`.
      operationId: GetObjectRestorePointDisks
      summary: Get Restore Point Disks
      x-veeam-authorize:
        claims:
          - ViewRestorePointDisks
  /api/v1/restore/instantRecovery/vmware/fcd/:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VmwareFcdInstantRecoverySpec'
      responses:
        '201':
          description: Instant FCD Recovery has been started.
          schema:
            $ref: '#/definitions/VmwareFcdInstantRecoveryMount'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Restore
      description: >-
        The HTTP POST request to the
        `/api/v1/restore/instantRecovery/vmware/fcd/` path allows you to start
        Instant FCD Recovery from the specified restore point to the specified
        cluster. For details on how to get a cluster model, see [Get VMware
        vSphere Server Objects](#operation/GetVmwareHostObject).
      operationId: InstantRecoveryVmwareFcdMount
      summary: Start Instant FCD Recovery
      x-veeam-authorize:
        claims:
          - StartFCDInstantRecovery
  '/api/v1/restore/instantRecovery/vmware/fcd/{mountId}':
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Mount ID.
          format: uuid
          in: path
          name: mountId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VmwareFcdInstantRecoveryMount'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Restore
      description: >-
        The HTTP GET request to the
        `/api/v1/restore/instantRecovery/vmware/fcd/{mountId}` path allows you
        to get information about the mounted vPower NFS datastore, such as
        restore session ID, mount state, instant recovery settings and disks
        that will be recovered.
      operationId: GetVmwareFcdInstantRecoveryMountModel
      summary: Get Mount Information
      x-veeam-authorize:
        claims:
          - ViewIRMountedDisks
  '/api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount':
    post:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Mount ID.
          format: uuid
          in: path
          name: mountId
          required: true
          type: string
      responses:
        '200':
          description: Disks has been unmounted.
          schema:
            $ref: '#/definitions/VmwareFcdInstantRecoveryMount'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Restore
      description: >-
        The HTTP POST request to the
        `/api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount` path
        allows you to stop publishing the recovered FCDs and remove the disks
        from the datastore.
      operationId: InstantRecoveryVmwareFcdDismount
      summary: Stop FCD Publishing
      x-veeam-authorize:
        claims:
          - DismountIRDisks
  '/api/v1/restore/instantRecovery/vmware/fcd/{mountId}/migrate':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Mount ID.
          format: uuid
          in: path
          name: mountId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VmwareFcdQuickMigrationSpec'
      responses:
        '200':
          description: FCD Migration has been started.
          schema:
            $ref: '#/definitions/VmwareFcdInstantRecoveryMount'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Restore
      description: >-
        The HTTP POST request to the
        `/api/v1/restore/instantRecovery/vmware/fcd/{mountId}/migrate` path
        allows you to start migration of FCDs from the specified mount.
      operationId: InstantRecoveryVmwareFcdMigrate
      summary: Start FCD Migration
      x-veeam-authorize:
        claims:
          - MigrateIRMountedDisks
  /api/v1/serverCertificate:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CertificateModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      security: []
      tags:
        - Service
      description: >-
        The HTTP GET request to the `/api/v1/serverCertificate` path allows you
        to get a certificate of the backup server.
      operationId: GetServerCertificate
      summary: Get Server Certificate
  /api/v1/serverTime:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ServerTimeModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      security: []
      tags:
        - Service
      description: >-
        The HTTP GET request to the `/api/v1/serverTime` path allows you to get
        current date and time on the backup server.
      operationId: GetServerTime
      summary: Get Server Time
  /api/v1/services:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of services to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ServicesFilters'
        - description: Maximum number of services to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/ServicesFilters'
        - description: Sorts services by one of the service parameters.
          enum:
            - Name
            - Port
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ServicesFilters'
        - description: >-
            Sorts services in the ascending order by the `orderColumn`
            parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/ServicesFilters'
        - description: >-
            Filters services by the `nameFilter` pattern. The pattern can match
            any service parameter. To substitute one or more characters, use the
            asterisk (*) character at the beginning and/or at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/ServicesFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ServicesResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Services
      description: >-
        The HTTP GET request to the `/api/v1/services` path allows you to get
        associated services for integration with Veeam Backup & Replication.
      operationId: GetAllServices
      summary: Get Associated Services
      x-veeam-authorize:
        claims:
          - ViewServices
  /api/v1/sessions:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - description: Number of sessions to skip.
          format: int32
          in: query
          name: skip
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Maximum number of sessions to return.
          format: int32
          in: query
          name: limit
          type: integer
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Sorts sessions by one of the session parameters.
          enum:
            - Name
            - SessionType
            - CreationTime
            - EndTime
            - State
            - Result
          in: query
          name: orderColumn
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: >-
            Sorts sessions in the ascending order by the `orderColumn`
            parameter.
          in: query
          name: orderAsc
          type: boolean
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: >-
            Filters sessions by the `nameFilter` pattern. The pattern can match
            any session parameter. To substitute one or more characters, use the
            asterisk (*) character at the beginning and/or at the end.
          in: query
          name: nameFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Returns sessions that are created after the specified date and time.
          format: date-time
          in: query
          name: createdAfterFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: >-
            Returns sessions that are created before the specified date and
            time.
          format: date-time
          in: query
          name: createdBeforeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: >-
            Returns sessions that are finished after the specified date and
            time.
          format: date-time
          in: query
          name: endedAfterFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: >-
            Returns sessions that are finished before the specified date and
            time.
          format: date-time
          in: query
          name: endedBeforeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Filters sessions by session type.
          enum:
            - Infrastructure
            - Job
            - Automation
            - ConfigurationBackup
            - RepositoryMaintenance
            - RepositoryEvacuate
            - InfrastructureItemDeletion
          in: query
          name: typeFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Filters sessions by session state.
          enum:
            - Stopped
            - Starting
            - Stopping
            - Working
            - Pausing
            - Resuming
            - WaitingTape
            - Idle
            - Postprocessing
            - WaitingRepository
            - WaitingSlot
          in: query
          name: stateFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Filters sessions by session result.
          enum:
            - None
            - Success
            - Warning
            - Failed
          in: query
          name: resultFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
        - description: Filters sessions by job ID.
          format: uuid
          in: query
          name: jobIdFilter
          type: string
          x-veeam-spec:
            $ref: '#/definitions/SessionsFilters'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SessionsResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Sessions
      description: >-
        The HTTP GET request to the `/api/v1/sessions` path allows you to get an
        array of sessions performed on the backup server.
      operationId: GetAllSessions
      summary: Get All Sessions
      x-veeam-authorize:
        claims:
          - ViewSessions
  '/api/v1/sessions/{id}':
    get:
      produces:
        - application/json
      parameters:
        - description: ID of the session.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SessionModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Sessions
      description: >-
        The HTTP GET request to the `/api/v1/sessions/{id}` path allows you to
        get a session that has the specified `id`.
      operationId: GetSession
      summary: Get Session
      x-veeam-authorize:
        claims:
          - ViewSessions
  '/api/v1/sessions/{id}/logs':
    get:
      produces:
        - application/json
      parameters:
        - description: ID of the session.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SessionLogResult'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Sessions
      description: >-
        The HTTP GET request to the `/api/v1/sessions/{id}/logs` path allows you
        to get an array of log records of a session that has the specified `id`.
      operationId: GetSessionLogs
      summary: Get Session Logs
      x-veeam-authorize:
        claims:
          - ViewSessions
  '/api/v1/sessions/{id}/stop':
    post:
      produces:
        - application/json
      parameters:
        - description: ID of the session.
          format: uuid
          in: path
          name: id
          required: true
          type: string
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: >-
            Not found. No object was found with the path parameter specified in
            the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Sessions
      description: >-
        The HTTP POST request to the `/api/v1/sessions/{id}/stop` path allows
        you to stop a session that has the specified `id`.
      operationId: StopSession
      summary: Stop Session
      x-veeam-authorize:
        claims:
          - StopSessions
  /api/v1/trafficRules:
    get:
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GlobalNetworkTrafficRulesModel'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Traffic Rules
      description: >-
        The HTTP GET request to the `/api/v1/trafficRules` path allows you to
        get network traffic rules that control traffic transferred between
        backup infrastructure components.
      operationId: GetAllTrafficRules
      summary: Get Traffic Rules
      x-veeam-authorize:
        claims:
          - ViewTrafficRules
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - default: 1.0-rev1
          description: >
            Version and revision of the client REST API. Must be in the
            following

            format: *\<version\>-\<revision\>*.
          in: header
          name: x-api-version
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GlobalNetworkTrafficRulesModel'
      responses:
        '201':
          description: >-
            Infrastructure session has been created to edit the traffic rules.
            To check the progress, track the session `state`.
          schema:
            $ref: '#/definitions/GlobalNetworkTrafficRulesModel'
        '400':
          description: >-
            Bad request. This error is related to POST/PUT requests. The request
            body is malformed, incomplete or otherwise invalid.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            Unauthorized. The authorization header has been expected but not
            found (or found but is expired).
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            Internal server error. The request has been received but could not
            be completed because of an internal error at the server side.
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Traffic Rules
      description: >-
        The HTTP PUT request to the `/api/v1/trafficRules` path allows you to
        edit network traffic rules that are configured on the backup server.
      operationId: UpdateTrafficRules
      summary: Edit Traffic Rules
      x-veeam-authorize:
        claims:
          - UpdateTrafficRules
definitions:
  ActiveFullSettingsModel:
    description: Active full backup settings.
    properties:
      isEnabled:
        description: 'If *true*, active full backups are enabled.'
        type: boolean
      monthly:
        $ref: '#/definitions/AdvancedStorageScheduleMonthlyModel'
      weekly:
        $ref: '#/definitions/AdvancedStorageScheduleWeeklyModel'
    required:
      - isEnabled
    type: object
  AdvancedSmtpOptionsModel:
    description: advanced global email notification settings.
    properties:
      SSLEnabled:
        description: 'If *true*, secure connection for email operations is used.'
        type: boolean
      authRequred:
        description: >-
          If *true*, the `credentialsId` credentials are used to connect to the
          SMTP server.
        type: boolean
      credentialsId:
        description: ID of the credentials used to connect to the server.
        format: uuid
        type: string
      port:
        description: Port number for the SMTP server.
        format: int32
        type: integer
      timeoutMs:
        description: Connection timeout for the SMTP server.
        format: int32
        type: integer
    required:
      - port
      - timeoutMs
      - SSLEnabled
      - authRequred
    type: object
  AdvancedStorageScheduleMonthlyModel:
    description: Monthly schedule settings.
    properties:
      dayNumberInMonth:
        $ref: '#/definitions/EDayNumberInMonth'
      dayOfMonths:
        description: Day of the month when the operation is performed.
        type: integer
      dayOfWeek:
        $ref: '#/definitions/EDayOfWeek'
      isEnabled:
        description: 'If *true*, the monthly schedule is enabled.'
        type: boolean
      months:
        description: Months when the operation is performed.
        items:
          $ref: '#/definitions/EMonth'
        type: array
        uniqueItems: true
    required:
      - isEnabled
    type: object
  AdvancedStorageScheduleWeeklyModel:
    description: Weekly schedule settings.
    properties:
      days:
        description: Days of the week when the operation is performed.
        items:
          $ref: '#/definitions/EDayOfWeek'
        type: array
        uniqueItems: true
      isEnabled:
        default: false
        description: 'If *true*, the weekly schedule is enabled.'
        type: boolean
    required:
      - isEnabled
    type: object
  ArchiveTierAdvancedSettingsModel:
    description: Advanced settings of the archive tier.
    properties:
      archiveDeduplicationEnabled:
        description: 'If *true*, each backup is stored as a delta to the previous one.'
        type: boolean
      costOptimizedArchiveEnabled:
        description: >-
          If *true*, backups are archived if the remaining retention time is
          above minimum storage period for the repository.
        type: boolean
    type: object
  ArchiveTierModel:
    description: Archive tier.
    properties:
      advancedSettings:
        $ref: '#/definitions/ArchiveTierAdvancedSettingsModel'
      archivePeriodDays:
        description: >-
          Number of days after which backup chains on the capacity extent are
          moved to the archive extent. Specify *0* to offload inactive backup
          chains on the same day they are created.
        type: integer
      extentId:
        description: ID of an object storage repository added as an archive extent.
        format: uuid
        type: string
      isEnabled:
        description: 'If *true*, the archive tier is enabled.'
        type: boolean
    required:
      - isEnabled
    type: object
  AuthorizationCodeModel:
    properties:
      code:
        description: >-
          String that is used to obtain an access token. Lifetime of the
          authorization code is 60 seconds.
        type: string
    required:
      - code
    type: object
  BackupApplicationAwareProcessingImportModel:
    description: Application-aware processing settings.
    properties:
      appSettings:
        description: Array of VMware objects and their application settings.
        items:
          $ref: '#/definitions/BackupApplicationSettingsImportModel'
        type: array
      isEnabled:
        description: 'If *true*, application-aware processing is enabled.'
        type: boolean
    required:
      - isEnabled
    type: object
  BackupApplicationAwareProcessingModel:
    description: Application-aware processing settings.
    properties:
      appSettings:
        description: Array of VMware objects and their application settings.
        items:
          $ref: '#/definitions/BackupApplicationSettingsModel'
        type: array
      isEnabled:
        description: 'If *true*, application-aware processing is enabled.'
        type: boolean
    required:
      - isEnabled
    type: object
  BackupApplicationSettingsImportModel:
    properties:
      exclusions:
        $ref: '#/definitions/BackupFSExclusionsModel'
      oracle:
        $ref: '#/definitions/BackupOracleSettingsImportModel'
      scripts:
        $ref: '#/definitions/BackupScriptSettingsModel'
      sql:
        $ref: '#/definitions/BackupSQLSettingsImportModel'
      transactionLogs:
        $ref: '#/definitions/ETransactionLogsSettings'
      usePersistentGuestAgent:
        description: 'If *true*, persistent guest agent is used.'
        type: boolean
      vmObject:
        $ref: '#/definitions/VmwareObjectModel'
      vss:
        $ref: '#/definitions/EApplicationSettingsVSS'
    required:
      - vmObject
      - vss
    type: object
  BackupApplicationSettingsModel:
    properties:
      exclusions:
        $ref: '#/definitions/BackupFSExclusionsModel'
      oracle:
        $ref: '#/definitions/BackupOracleSettingsModel'
      scripts:
        $ref: '#/definitions/BackupScriptSettingsModel'
      sql:
        $ref: '#/definitions/BackupSQLSettingsModel'
      transactionLogs:
        $ref: '#/definitions/ETransactionLogsSettings'
      usePersistentGuestAgent:
        description: 'If *true*, persistent guest agent is used.'
        type: boolean
      vmObject:
        $ref: '#/definitions/VmwareObjectModel'
      vss:
        $ref: '#/definitions/EApplicationSettingsVSS'
    required:
      - vmObject
      - vss
    type: object
  BackupFSExclusionsModel:
    description: VM guest OS file exclusion.
    properties:
      exclusionPolicy:
        $ref: '#/definitions/EBackupExclusionPolicy'
      itemsList:
        description: >-
          Array of files and folders. Full paths to files and folders,
          environmental variables and file masks with the asterisk (*) and
          question mark (?) characters can be used.
        items:
          type: string
        type: array
    required:
      - exclusionPolicy
    type: object
  BackupHealthCheckSettingsModels:
    description: >-
      Health check settings for the for the latest restore point in the backup
      chain.
    properties:
      isEnabled:
        description: 'If *true*, the health check is enabled.'
        type: boolean
      monthly:
        $ref: '#/definitions/AdvancedStorageScheduleMonthlyModel'
      weekly:
        $ref: '#/definitions/AdvancedStorageScheduleWeeklyModel'
    required:
      - isEnabled
    type: object
  BackupIndexingSettingsModel:
    properties:
      LinuxIndexing:
        $ref: '#/definitions/BackupObjectIndexingModel'
      WindowsIndexing:
        $ref: '#/definitions/BackupObjectIndexingModel'
      vmObject:
        $ref: '#/definitions/VmwareObjectModel'
    required:
      - vmObject
    type: object
  BackupJobAdvancedSettingsModel:
    description: Advanced settings of the backup job.
    properties:
      activeFulls:
        $ref: '#/definitions/ActiveFullSettingsModel'
      backupHealth:
        $ref: '#/definitions/BackupHealthCheckSettingsModels'
      backupModeType:
        $ref: '#/definitions/EBackupModeType'
      fullBackupMaintenance:
        $ref: '#/definitions/FullBackupMaintenanceModel'
      notifications:
        $ref: '#/definitions/NotificationSettingsModel'
      scripts:
        $ref: '#/definitions/JobScriptsSettingsModel'
      storageData:
        $ref: '#/definitions/BackupStorageSettingModel'
      storageIntegration:
        $ref: '#/definitions/PrimaryStorageIntegrationSettingsModel'
      synthenticFulls:
        $ref: '#/definitions/SyntheticFullSettingsModel'
      vSphere:
        $ref: '#/definitions/BackupJobAdvancedSettingsVSphereModel'
    required:
      - backupModeType
    type: object
  BackupJobAdvancedSettingsVSphereModel:
    description: VMware vSphere settings for the backup job.
    properties:
      changedBlockTracking:
        $ref: '#/definitions/VSphereChangedBlockTrackingSettingsModel'
      enableVMWareToolsQuiescence:
        description: >-
          If *true*, VMware Tools quiescence is enabled for freezing the VM file
          system and application data.
        type: boolean
    type: object
  BackupJobExclusions:
    properties:
      disks:
        description: Array of VM disks excluded from the backup.
        items:
          $ref: '#/definitions/VmwareObjectDiskModel'
        type: array
      templates:
        $ref: '#/definitions/BackupJobExclusionsTemplates'
        description: Array of VM templates excluded from the backup. OUTSIDE
      vms:
        description: Array of VMs excluded from the backup.
        items:
          $ref: '#/definitions/VmwareObjectSizeModel'
        type: array
    type: object
  BackupJobExclusionsSpec:
    properties:
      disks:
        items:
          $ref: '#/definitions/VmwareObjectDiskModel'
        type: array
      templates:
        $ref: '#/definitions/BackupJobExclusionsTemplates'
      vms:
        items:
          $ref: '#/definitions/VmwareObjectModel'
        type: array
    type: object
  BackupJobExclusionsTemplates:
    description: Array of VM templates excluded from the backup.
    properties:
      excludeFromIncremental:
        description: 'If *true*, the template is excluded from the incremental backup.'
        type: boolean
      isEnabled:
        description: 'If *true*, the template is included into the backup.'
        type: boolean
    type: object
  BackupJobGuestProcessingImportModel:
    description: Guest processing settings.
    properties:
      applicationAwareProcessing:
        $ref: '#/definitions/BackupApplicationAwareProcessingImportModel'
      guestCredentials:
        $ref: '#/definitions/GuestOsCredentialsImportModel'
      guestFileSystemIndexing:
        $ref: '#/definitions/GuestFileSystemIndexingModel'
      guestInteractionProxies:
        $ref: '#/definitions/GuestInteractionProxiesSettingsImportModel'
    required:
      - applicationAwareProcessing
      - guestFileSystemIndexing
    type: object
  BackupJobGuestProcessingModel:
    description: Guest processing settings.
    properties:
      appAwareProcessing:
        $ref: '#/definitions/BackupApplicationAwareProcessingModel'
      guestCredentials:
        $ref: '#/definitions/GuestOsCredentialsModel'
      guestFSIndexing:
        $ref: '#/definitions/GuestFileSystemIndexingModel'
      guestInteractionProxies:
        $ref: '#/definitions/GuestInteractionProxiesSettingsModel'
    required:
      - appAwareProcessing
      - guestFSIndexing
    type: object
  BackupJobImportProxiesModel:
    description: Backup proxies.
    properties:
      automaticSelection:
        default: true
        description: 'If *true*, backup proxies are detected and assigned automatically.'
        type: boolean
      proxies:
        description: Array of backup proxies.
        items:
          $ref: '#/definitions/BackupProxyImportModel'
        type: array
    required:
      - automaticSelection
    type: object
  BackupJobModel:
    allOf:
      - $ref: '#/definitions/JobModel'
      - properties:
          guestProcessing:
            $ref: '#/definitions/BackupJobGuestProcessingModel'
          isHighPriority:
            description: >-
              If *true*, the job has a high priority in getting backup
              infrastructure resources.
            type: boolean
          schedule:
            $ref: '#/definitions/BackupScheduleModel'
          storage:
            $ref: '#/definitions/BackupJobStorageModel'
          virtualMachines:
            $ref: '#/definitions/BackupJobVirtualMachinesModel'
        required:
          - guestProcessing
          - isHighPriority
          - schedule
          - storage
          - virtualMachines
        type: object
  BackupJobRetentionPolicySettingsModel:
    description: Retention policy settings.
    properties:
      quantity:
        description: Number of restore points or days to keep.
        type: integer
      type:
        $ref: '#/definitions/ERetentionPolicyType'
    required:
      - quantity
      - type
    type: object
  BackupJobSpec:
    allOf:
      - $ref: '#/definitions/JobSpec'
      - properties:
          guestProcessing:
            $ref: '#/definitions/BackupJobGuestProcessingModel'
          isHighPriority:
            default: false
            description: >-
              If *true*, the job has a high priority in getting backup
              infrastructure resources.
            type: boolean
          schedule:
            $ref: '#/definitions/BackupScheduleModel'
          storage:
            $ref: '#/definitions/BackupJobStorageModel'
          virtualMachines:
            $ref: '#/definitions/BackupJobVirtualMachinesSpec'
        required:
          - guestProcessing
          - isHighPriority
          - schedule
          - storage
          - virtualMachines
        type: object
  BackupJobStorageImportModel:
    description: Backup storage settings.
    properties:
      advancedSettings:
        $ref: '#/definitions/BackupJobAdvancedSettingsModel'
      backupProxies:
        $ref: '#/definitions/BackupJobImportProxiesModel'
      backupRepository:
        $ref: '#/definitions/BackupRepositoryImportModel'
      gfsPolicy:
        $ref: '#/definitions/GFSPolicySettingsModel'
      retentionPolicy:
        $ref: '#/definitions/BackupJobRetentionPolicySettingsModel'
    required:
      - backupProxies
      - backupRepository
      - retentionPolicy
    type: object
  BackupJobStorageModel:
    description: Backup storage settings.
    properties:
      advancedSettings:
        $ref: '#/definitions/BackupJobAdvancedSettingsModel'
      backupProxies:
        $ref: '#/definitions/BackupProxiesSettingsModel'
      backupRepositoryId:
        description: ID of the backup repository.
        format: uuid
        type: string
      gfsPolicy:
        $ref: '#/definitions/GFSPolicySettingsModel'
      retentionPolicy:
        $ref: '#/definitions/BackupJobRetentionPolicySettingsModel'
    required:
      - backupProxies
      - backupRepositoryId
      - retentionPolicy
    type: object
  BackupJobVirtualMachinesModel:
    properties:
      excludes:
        $ref: '#/definitions/BackupJobExclusions'
      includes:
        description: Array of VM and VM containers processed by the job.
        items:
          $ref: '#/definitions/VmwareObjectSizeModel'
        type: array
    required:
      - includes
    type: object
  BackupJobVirtualMachinesSpec:
    properties:
      excludes:
        $ref: '#/definitions/BackupJobExclusionsSpec'
      includes:
        items:
          $ref: '#/definitions/VmwareObjectModel'
        type: array
    required:
      - includes
    type: object
  BackupLinuxScriptModel:
    description: Paths to pre-freeze and post-thaw scripts for Linux VMs.
    properties:
      postThawScript:
        description: Path to a post-thaw script.
        type: string
      preFreezeScript:
        description: Path to a pre-freeze script.
        type: string
    type: object
  BackupLogShippingServersImportModel:
    description: Log shipping server used to transport logs.
    properties:
      autoSelection:
        description: >-
          If *true*, Veeam Backup & Replication chooses an optimal log shipping
          server automatically.
        type: boolean
      shippingServerNames:
        description: Array of servers that are explicitly selected for log shipping.
        items:
          type: string
        type: array
    required:
      - autoSelection
    type: object
  BackupLogShippingServersModel:
    description: Log shipping server used to transport logs.
    properties:
      autoSelection:
        description: >-
          If *true*, Veeam Backup & Replication chooses an optimal log shipping
          server automatically.
        type: boolean
      shippingServerIds:
        description: Array of servers that are explicitly selected for log shipping.
        items:
          format: uuid
          type: string
        type: array
    required:
      - autoSelection
    type: object
  BackupModel:
    properties:
      creationTime:
        description: Date and time when the backup was created.
        format: date-time
        type: string
      id:
        description: ID of the backup.
        format: uuid
        type: string
      jobId:
        description: ID of the job that created the backup.
        format: uuid
        type: string
      name:
        description: Name of the job that created the backup.
        type: string
      platformId:
        description: ID of the platform of the backup resource.
        format: uuid
        type: string
      platformName:
        $ref: '#/definitions/EPlatformType'
      policyTag:
        description: Tag that identifies retention policy.
        type: string
      repositoryId:
        description: ID of the backup repository where the backup is stored.
        format: uuid
        type: string
    required:
      - id
      - name
      - platformName
      - platformId
      - creationTime
      - repositoryId
    type: object
  BackupObjectIndexingModel:
    description: Guest OS indexing options for the VM.
    properties:
      guestFSIndexingMode:
        $ref: '#/definitions/EGuestFSIndexingMode'
      indexingList:
        description: >-
          Array of folders. Environmental variables and full paths to folders
          can be used.
        items:
          type: string
        type: array
    required:
      - guestFSIndexingMode
    type: object
  BackupObjectModel:
    properties:
      id:
        description: ID of the object.
        format: uuid
        type: string
      name:
        description: Name of the object.
        type: string
      platformId:
        description: Id of the platform where the object was created.
        format: uuid
        type: string
      platformName:
        $ref: '#/definitions/EPlatformType'
      restorePointsCount:
        description: Number of restore points.
        type: integer
      type:
        description: Type of the object.
        type: string
    required:
      - id
      - platformName
    type: object
  BackupObjectsFilters:
    properties:
      limit:
        format: int32
        type: integer
      nameFilter:
        type: string
      orderAsc:
        type: boolean
      orderColumn:
        $ref: '#/definitions/EBackupObjectsFiltersOrderColumn'
      platformIdFilter:
        format: uuid
        type: string
      platformNameFilter:
        $ref: '#/definitions/EPlatformType'
      skip:
        format: int32
        type: integer
      typeFilter:
        type: string
      viTypeFilter:
        type: string
    type: object
  BackupObjectsResult:
    properties:
      data:
        description: Array of backup objects.
        items:
          $ref: '#/definitions/BackupObjectModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  BackupOracleSettingsImportModel:
    description: Oracle archived log settings.
    properties:
      archiveLogs:
        $ref: '#/definitions/EBackupOracleLogsSettings'
      backupLogs:
        description: 'If *true*, archived logs are backed up.'
        type: boolean
      backupMinsCount:
        description: 'Frequency of archived log backup, in minutes.'
        type: integer
      credentials:
        $ref: '#/definitions/CredentialsImportModel'
      deleteGBsCount:
        description: >-
          Maximum size for archived logs in GB. This parameter should be
          specified if the `EBackupOracleLogsSettings` value is
          *deleteExpiredGBs*.
        type: integer
      deleteHoursCount:
        description: >-
          Time period in hours to keep archived logs. This parameter should be
          specified if the `EBackupOracleLogsSettings` value is
          *deleteExpiredHours*.
        type: integer
      keepDaysCount:
        description: Number of days to keep archived logs.
        type: integer
      logShippingServers:
        $ref: '#/definitions/BackupLogShippingServersImportModel'
      retainLogBackups:
        $ref: '#/definitions/ERetainLogBackupsType'
      useGuestCredentials:
        description: >-
          If *true*, Veeam Backup & Replication uses credentials specified in
          the guest processing settings.
        type: boolean
    required:
      - archiveLogs
      - useGuestCredentials
    type: object
  BackupOracleSettingsModel:
    description: Oracle archived log settings.
    properties:
      archiveLogs:
        $ref: '#/definitions/EBackupOracleLogsSettings'
      backupLogs:
        description: 'If *true*, archived logs are backed up.'
        type: boolean
      backupMinsCount:
        description: 'Frequency of archived log backup, in minutes.'
        type: integer
      credentialsId:
        description: >-
          ID of the credentials record that is used if `useGuestCredentials` is
          *false*.
        format: uuid
        type: string
      deleteGBsCount:
        description: >-
          Maximum size for archived logs in GB. This parameter should be
          specified if the `EBackupOracleLogsSettings` value is
          *deleteExpiredGBs*.
        type: integer
      deleteHoursCount:
        description: >-
          Time period in hours to keep archived logs. This parameter should be
          specified if the `EBackupOracleLogsSettings` value is
          *deleteExpiredHours*.
        type: integer
      keepDaysCount:
        description: Number of days to keep archived logs.
        type: integer
      logShippingServers:
        $ref: '#/definitions/BackupLogShippingServersModel'
      retainLogBackups:
        $ref: '#/definitions/ERetainLogBackupsType'
      useGuestCredentials:
        description: >-
          If *true*, Veeam Backup & Replication uses credentials specified in
          the guest processing settings.
        type: boolean
    required:
      - archiveLogs
      - useGuestCredentials
    type: object
  BackupPlacementSettingsModel:
    description: Settings of the performance placement policy.
    properties:
      allowedBackups:
        $ref: '#/definitions/EAllowedBackupsType'
      extentName:
        description: Name of a performance extent.
        type: string
    required:
      - extentName
      - allowedBackups
    type: object
  BackupProxiesSettingsModel:
    description: Backup proxy settings.
    properties:
      autoSelection:
        default: true
        description: 'If *true*, backup proxies are detected and assigned automatically.'
        type: boolean
      proxyIds:
        description: Array of proxy IDs.
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
    required:
      - autoSelection
    type: object
  BackupProxyImportModel:
    properties:
      name:
        description: Name of the backup proxy.
        type: string
      tag:
        description: Tag assigned to the backup proxy.
        type: string
      type:
        $ref: '#/definitions/EBackupProxyImportType'
    required:
      - name
      - type
    type: object
  BackupRepositoryImportModel:
    description: Backup repository.
    properties:
      name:
        description: Name of the backup repository.
        type: string
      tag:
        description: Tag assigned to the backup repository.
        type: string
    required:
      - name
    type: object
  BackupSQLSettingsImportModel:
    description: Microsoft SQL Server transaction log settings.
    properties:
      backupMinsCount:
        description: 'Frequency of transaction log backup, in minutes.'
        type: integer
      keepDaysCount:
        description: Number of days to keep transaction logs in the backup repository.
        type: integer
      logShippingServers:
        $ref: '#/definitions/BackupLogShippingServersImportModel'
      logsProcessing:
        $ref: '#/definitions/ESQLLogsProcessing'
      retainLogBackups:
        $ref: '#/definitions/ERetainLogBackupsType'
    required:
      - logsProcessing
    type: object
  BackupSQLSettingsModel:
    description: Microsoft SQL Server transaction log settings.
    properties:
      backupMinsCount:
        description: 'Frequency of transaction log backup, in minutes.'
        type: integer
      keepDaysCount:
        description: Number of days to keep transaction logs in the backup repository.
        type: integer
      logShippingServers:
        $ref: '#/definitions/BackupLogShippingServersModel'
      logsProcessing:
        $ref: '#/definitions/ESQLLogsProcessing'
      retainLogBackups:
        $ref: '#/definitions/ERetainLogBackupsType'
    required:
      - logsProcessing
    type: object
  BackupScheduleModel:
    description: Job scheduling options.
    properties:
      afterThisJob:
        $ref: '#/definitions/ScheduleAfterThisJobModel'
      backupWindow:
        $ref: '#/definitions/ScheduleBackupWindowModel'
      continuously:
        $ref: '#/definitions/ScheduleBackupWindowModel'
      daily:
        $ref: '#/definitions/ScheduleDailyModel'
      monthly:
        $ref: '#/definitions/ScheduleMonthlyModel'
      periodically:
        $ref: '#/definitions/SchedulePeriodicallyModel'
      retry:
        $ref: '#/definitions/ScheduleRetryModel'
      runAutomatically:
        default: false
        description: 'If *true*, job scheduling is enabled.'
        type: boolean
    required:
      - runAutomatically
    type: object
  BackupScriptSettingsModel:
    description: Pre-freeze and post-thaw scripts.
    properties:
      linuxScripts:
        $ref: '#/definitions/BackupLinuxScriptModel'
      scriptProcessingMode:
        $ref: '#/definitions/EBackupScriptProcessingMode'
      windowsScripts:
        $ref: '#/definitions/BackupWindowsScriptModel'
    required:
      - scriptProcessingMode
    type: object
  BackupStorageSettingModel:
    description: Storage settings.
    properties:
      compressionLevel:
        $ref: '#/definitions/ECompressionLevel'
      enableInlineDataDedup:
        description: >-
          If *true*, Veeam Backup & Replication deduplicates VM data before
          storing it in the backup repository.
        type: boolean
      encryption:
        $ref: '#/definitions/BackupStorageSettingsEncryptionModel'
      excludeDeletedFileBlocks:
        description: >-
          If *true*, Veeam Backup & Replication does not copy deleted file
          blocks.
        type: boolean
      excludeSwapFileBlocks:
        description: >-
          If *true*, Veeam Backup & Replication excludes swap file blocks from
          processing.
        type: boolean
      storageOptimization:
        $ref: '#/definitions/EStorageOptimization'
    type: object
  BackupStorageSettingsEncryptionModel:
    description: Encription of backup files.
    properties:
      encryptionPasswordIdOrNull:
        description: >-
          ID of the password used for encryption. The value is *null* for
          exported objects.
        format: uuid
        type: string
      encryptionPasswordTag:
        description: Tag used to identify the password.
        type: string
      isEnabled:
        description: 'If *true*, the content of backup files is encrypted.'
        type: boolean
    required:
      - isEnabled
    type: object
  BackupWindowDayHoursModel:
    description: Hourly scheme for a day.
    properties:
      day:
        $ref: '#/definitions/EDayOfWeek'
      hours:
        description: |
          String of hours in the following format:
          *1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1*
          where *1* means enabled, *0* means disabled.
        type: string
    required:
      - day
      - hours
    type: object
  BackupWindowSettingModel:
    description: Time scheme.
    properties:
      days:
        description: Array of per-day schemes.
        items:
          $ref: '#/definitions/BackupWindowDayHoursModel'
        type: array
    required:
      - days
    type: object
  BackupWindowsScriptModel:
    description: Paths to pre-freeze and post-thaw scripts for Microsoft Windows VMs.
    properties:
      postThawScript:
        description: Path to a post-thaw script.
        type: string
      preFreezeScript:
        description: Path to a pre-freeze script.
        type: string
    type: object
  BackupsFilters:
    properties:
      createdAfterFilter:
        format: date-time
        type: string
      createdBeforeFilter:
        format: date-time
        type: string
      jobIdFilter:
        format: uuid
        type: string
      limit:
        format: int32
        type: integer
      nameFilter:
        type: string
      orderAsc:
        type: boolean
      orderColumn:
        $ref: '#/definitions/EBackupsFiltersOrderColumn'
      platformIdFilter:
        format: uuid
        type: string
      policyTagFilter:
        type: string
      skip:
        format: int32
        type: integer
    type: object
  BackupsResult:
    properties:
      data:
        description: Array of backups.
        items:
          $ref: '#/definitions/BackupModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  CapacityTierModel:
    description: Capacity tier.
    properties:
      copyPolicyEnabled:
        description: >-
          If *true*, Veeam Backup & Replication copies backups from the
          performance extents to the capacity extent as soon as the backups are
          created.
        type: boolean
      enabled:
        description: 'If *true*, the capacity tier is enabled.'
        type: boolean
      encryption:
        $ref: '#/definitions/BackupStorageSettingsEncryptionModel'
      extentId:
        description: ID of an object storage repository added as a capacity extent.
        format: uuid
        type: string
      movePolicyEnabled:
        description: >-
          If *true*, Veeam Backup & Replication moves backup files that belong
          to inactive backup chains from the performance extents to the capacity
          extent.
        type: boolean
      offloadWindow:
        $ref: '#/definitions/BackupWindowSettingModel'
      operationalRestorePeriodDays:
        description: >-
          Number of days after which inactive backup chains on the performance
          extents are moved to the capacity extent. Specify *0* to offload
          inactive backup chains on the same day they are created.
        type: integer
      overridePolicy:
        $ref: '#/definitions/CapacityTierOverridePolicyModel'
    type: object
  CapacityTierOverridePolicyModel:
    description: Override policy.
    properties:
      isEnabled:
        description: >-
          If *true*, Veeam Backup & Replication moves oldest backup files sooner
          if scale-out backup repository is reaching the threshold.
        type: boolean
      overrideSpaceThresholdPercents:
        description: 'Space threshold of the scale-out backup repository, in percent.'
        type: integer
    type: object
  CertificateModel:
    properties:
      issuedBy:
        description: Issuer of the certificate.
        type: string
      issuedTo:
        description: Acquirer of the certificate.
        type: string
      keyAlgorithm:
        description: Key algorithm of the certificate.
        type: string
      keySize:
        description: Key size of the certificate.
        type: string
      serialNumber:
        description: Serial number of the certificate.
        type: string
      subject:
        description: Subject of the certificate.
        type: string
      thumbprint:
        description: Thumbprint of the certificate.
        type: string
      validBy:
        description: Expiration date and time of the certificate.
        format: date-time
        type: string
      validFrom:
        description: Date and time the certificate is valid from.
        format: date-time
        type: string
    required:
      - issuedBy
      - issuedTo
      - keyAlgorithm
      - keySize
      - serialNumber
      - subject
      - thumbprint
      - validBy
      - validFrom
    type: object
  ConfigBackupEncryptionModel:
    description: Encryption settings.
    properties:
      isEnabled:
        description: 'If *true*, backup encryption is enabled.'
        type: boolean
      passwordId:
        description: ID of the password used for encryption.
        format: uuid
        type: string
    required:
      - isEnabled
      - passwordId
    type: object
  ConfigBackupLastSuccessfulModel:
    description: Last successful backup.
    properties:
      lastSuccessfulTime:
        description: Date and time when the last successful backup was created.
        format: date-time
        type: string
      sessionId:
        description: ID of the job session.
        format: uuid
        type: string
    type: object
  ConfigBackupModel:
    properties:
      backupRepositoryId:
        description: >-
          ID of the backup repository on which the configuration backup is
          stored.
        format: uuid
        type: string
      encryption:
        $ref: '#/definitions/ConfigBackupEncryptionModel'
      isEnabled:
        description: 'If *true*, configuration backup is enabled.'
        type: boolean
      lastSuccessfulBackup:
        $ref: '#/definitions/ConfigBackupLastSuccessfulModel'
      notifications:
        $ref: '#/definitions/ConfigBackupNotificationsModel'
      restorePointsToKeep:
        description: Number of restore points to keep in the backup repository.
        format: int32
        type: integer
      schedule:
        $ref: '#/definitions/ConfigBackupScheduleModel'
    required:
      - isEnabled
      - backupRepositoryId
      - restorePointsToKeep
      - notifications
      - schedule
      - lastSuccessfulBackup
      - encryption
    type: object
  ConfigBackupNotificationsModel:
    description: Notification settings.
    properties:
      SMTPSettings:
        $ref: '#/definitions/ConfigBackupSMTPSettigsModel'
      SNMPEnabled:
        description: 'If *true*, SNMP traps are enabled for this job.'
        type: boolean
    required:
      - SNMPEnabled
    type: object
  ConfigBackupSMTPSettigsModel:
    description: Email notification settings.
    properties:
      isEnabled:
        description: 'If *true*, email notifications are enabled for this job.'
        type: boolean
      notifyOnError:
        description: 'If *true*, email notifications are sent when the job fails.'
        type: boolean
      notifyOnSuccess:
        description: >-
          If *true*, email notifications are sent when the job completes
          successfully.
        type: boolean
      notifyOnWarning:
        description: >-
          If *true*, email notifications are sent when the job completes with a
          warning.
        type: boolean
      recipients:
        description: Array of recipients' email addresses.
        items:
          type: string
        type: array
      settingsType:
        $ref: '#/definitions/EConfigBackupSMTPSettingsType'
      subject:
        description: >
          Notification subject. Use the following variables in the subject:
          *%JobResult%*, *%JobName%*, *%Time%* (completion time).
        type: string
    required:
      - isEnabled
      - recipients
      - settingsType
      - subject
      - notifyOnSuccess
      - notifyOnWarning
      - notifyOnError
    type: object
  ConfigBackupScheduleModel:
    description: Scheduling settings.
    properties:
      daily:
        $ref: '#/definitions/ScheduleDailyModel'
      isEnabled:
        description: 'If *true*, backup scheduling is enabled.'
        type: boolean
      monthly:
        $ref: '#/definitions/ScheduleMonthlyModel'
    required:
      - isEnabled
    type: object
  ConnectionCertificateModel:
    properties:
      certificate:
        $ref: '#/definitions/CertificateModel'
      fingerprint:
        description: SSH key fingerprint used to verify the server identity.
        type: string
    type: object
  CredentialsExportSpec:
    properties:
      ids:
        description: Array of credentials IDs.
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      names:
        description: Array of credentials user names. Wildcard characters are supported.
        items:
          type: string
        type: array
        uniqueItems: true
      showHiddenCreds:
        description: 'If *true*, service credentials are exported.'
        type: boolean
      types:
        description: Array of credentials types.
        items:
          $ref: '#/definitions/ECredentialsType'
        type: array
        uniqueItems: true
    type: object
  CredentialsFilters:
    properties:
      limit:
        description: Maximum number of credentials records to return.
        format: int32
        type: integer
      nameFilter:
        description: >-
          Filters credentials by the `nameFilter` pattern. The pattern can match
          any credentials parameter. To substitute one or more characters, use
          the asterisk (*) character at the beginning and/or at the end.
        type: string
      orderAsc:
        description: >-
          Sorts credentials in the ascending order by the `orderColumn`
          parameter.
        type: boolean
      orderColumn:
        $ref: '#/definitions/ECredentialsFiltersOrderColumn'
      skip:
        description: Number of credentials records to skip.
        format: int32
        type: integer
    type: object
  CredentialsImportModel:
    properties:
      credentialsName:
        description: 'User name, account name or access key.'
        type: string
      credentialsTag:
        description: Tag used to identify the credentials record.
        type: string
    required:
      - credentialsName
    type: object
  CredentialsImportSpec:
    properties:
      description:
        description: Description of the credentials record.
        type: string
      linuxAdditionalSettings:
        $ref: '#/definitions/CredentialsLinuxSettingsImportModel'
      password:
        description: Password.
        type: string
      tag:
        description: Tag used to identify the credentials record.
        type: string
      type:
        $ref: '#/definitions/ECredentialsType'
      username:
        description: User name.
        type: string
    required:
      - tag
      - type
      - username
    type: object
  CredentialsImportSpecCollection:
    properties:
      credentials:
        description: Array of credentials.
        items:
          $ref: '#/definitions/CredentialsImportSpec'
        type: array
        uniqueItems: true
    required:
      - credentials
    type: object
  CredentialsLinuxSettingsImportModel:
    properties:
      SSHPort:
        description: SSH port used to connect to a Linux server.
        type: integer
      addToSudoers:
        description: 'If *true*, the account is automatically added to the sudoers file.'
        type: boolean
      autoElevated:
        description: >-
          If *true*, the permissions of the account are automatically elevated
          to the root user.
        type: boolean
      passphrase:
        description: Passphrase that protects the private key.
        type: string
      privateKey:
        description: Private key.
        type: string
      rootPassword:
        description: Password for the root account.
        type: string
      useSu:
        description: >-
          If *true*, the `su` command is used for Linux distributions where the
          `sudo` command is not available.
        type: boolean
    type: object
  CredentialsModel:
    properties:
      creationTime:
        description: Date and time when the credentials were created.
        format: date-time
        type: string
      description:
        description: Description of the credentials record.
        type: string
      id:
        description: ID of the credentials record.
        format: uuid
        type: string
      type:
        $ref: '#/definitions/ECredentialsType'
      username:
        description: User name.
        type: string
    required:
      - id
      - username
      - description
      - type
      - creationTime
    type: object
  CredentialsPasswordChangeSpec:
    properties:
      password:
        description: New password.
        type: string
    required:
      - password
    type: object
  CredentialsResult:
    properties:
      data:
        description: Array of credentials.
        items:
          $ref: '#/definitions/CredentialsModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  CredentialsSpec:
    properties:
      description:
        description: Description of the credentials record.
        type: string
      password:
        description: Password.
        type: string
      type:
        $ref: '#/definitions/ECredentialsType'
      username:
        description: User name.
        type: string
    required:
      - username
      - type
    type: object
  DeleteRepositoryFilters:
    properties:
      deleteBackups:
        type: boolean
    type: object
  EAllowedBackupsType:
    description: Type of backup files that can be stored on the extent.
    enum:
      - All
      - FullsOnly
      - IncrementsOnly
    type: string
  EApplicationSettingsVSS:
    description: Behavior scenario for application-aware processing.
    enum:
      - requireSuccess
      - ignoreFailures
      - disabled
    type: string
  EBackupExclusionPolicy:
    description: Exclusion policy.
    enum:
      - disabled
      - excludeOnly
      - includeOnly
    type: string
  EBackupModeType:
    description: Type of the backup method used to create a restore point.
    enum:
      - Full
      - Incremental
      - ReverseIncremental
      - Transofrm
      - TransformForeverIncremental
    type: string
  EBackupObjectsFiltersOrderColumn:
    enum:
      - Name
      - ObjectId
      - PlatformId
      - Type
    type: string
  EBackupOracleLogsSettings:
    description: Type of archived logs processing.
    enum:
      - preserve
      - deleteExpiredHours
      - deleteExpiredGBs
    type: string
  EBackupProxyImportType:
    enum:
      - vmware
    type: string
  EBackupProxyTransportMode:
    description: Transport mode of the backup proxy.
    enum:
      - auto
      - directAccess
      - virtualAppliance
      - network
    type: string
  EBackupScriptProcessingMode:
    description: Scenario for scripts execution.
    enum:
      - disableExec
      - ignoreExecFailures
      - requireSuccess
    type: string
  EBackupsFiltersOrderColumn:
    enum:
      - Name
      - CreationTime
      - PlatformId
      - JobId
      - PolicyTag
    type: string
  ECompressionLevel:
    description: Compression level.
    enum:
      - Auto
      - None
      - DedupFriendly
      - Optimal
      - High
      - Extreme
    type: string
  EConfigBackupSMTPSettingsType:
    description: Type of notification settings.
    enum:
      - Global
      - Custom
    type: string
  ECredentialsFiltersOrderColumn:
    enum:
      - Username
      - Description
    type: string
  ECredentialsType:
    description: Credentials type.
    enum:
      - Standard
      - Linux
    type: string
  EDailyKinds:
    description: Kind of daily scheduling scheme.
    enum:
      - Everyday
      - WeekDays
      - SelectedDays
    type: string
  EDayNumberInMonth:
    enum:
      - First
      - Second
      - Third
      - Fourth
      - Last
      - OnDay
    type: string
  EDayOfWeek:
    enum:
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
    type: string
  EDiskInfoProcessState:
    description: Process state of the disk.
    enum:
      - NotProcessed
      - InProcessing
      - PartiallyProcessed
      - Processed
    type: string
  EDiskInfoType:
    description: Type of the disk.
    enum:
      - Unknown
      - Simple
      - Vi
      - Hv
      - HvRawDiskFile
      - EndPoint
    type: string
  EEmailNotificationType:
    description: >
      Type of email notification settings: global notification settings
      specified for the backup server, or custom notification settings specified
      for this job.
    enum:
      - UseGlobalNotificationSettings
      - UseCustomNotificationSettings
    type: string
  EEncryptionPasswordsFiltersOrderColumn:
    enum:
      - Hint
      - ModificationTime
    type: string
  EGuestFSIndexingMode:
    description: Indexing mode.
    enum:
      - disable
      - indexAll
      - indexAllExcept
      - indexOnly
    type: string
  EGuestOSType:
    description: Type of the guest OS.
    enum:
      - Windows
      - Linux
    type: string
  EHierarchyType:
    description: Hierarchy type.
    enum:
      - HostsAndClusters
      - DatastoresAndVms
      - HostsAndDatastores
      - VmsAndTemplates
      - VmsAndTags
    type: string
  EInstantRecoveryMountState:
    description: Mount state.
    enum:
      - Failed
      - Mounting
      - Mounted
      - Dismounting
    type: string
  EJobFiltersOrderColumn:
    description: Orders jobs by the specified column.
    enum:
      - Name
      - Type
      - Description
    type: string
  EJobStatesFiltersOrderColumn:
    description: Orders job states by the specified column.
    enum:
      - Name
      - Type
      - Status
      - LastRun
      - LastResult
      - NextRun
      - Description
      - RepositoryId
      - ObjectsCount
    type: string
  EJobStatus:
    description: Current status of the job.
    enum:
      - running
      - inactive
      - disabled
    type: string
  EJobType:
    description: Type of the job.
    enum:
      - Backup
    type: string
  EJobWorkload:
    description: Workload which the job must process.
    enum:
      - application
      - cloudVm
      - file
      - server
      - workstation
      - vm
    type: string
  ELoginGrantType:
    default: password
    description: >
      Authorization grant type.


      Available values:

      - `password` — used to obtain an access token by providing a user name and
      password.

      - `refresh_token` — used to refresh an expired or lost access token by
      providing a refresh token.

      - `authorization_code` — used to obtain an access token by providing an
      authorization code.
    enum:
      - password
      - refresh_token
      - authorization_code
    type: string
  EManagedServerType:
    description: Type of the server.
    enum:
      - WindowsHost
      - LinuxHost
      - ViHost
    type: string
  EManagedServersFiltersOrderColumn:
    enum:
      - Name
      - Type
      - Description
    type: string
  EMonth:
    enum:
      - January
      - February
      - March
      - April
      - May
      - June
      - July
      - August
      - September
      - October
      - November
      - December
    type: string
  EObjectRestorePointOperation:
    enum:
      - VmwareInstantRecoveryFcd
    type: string
  EObjectRestorePointsFiltersOrderColumn:
    enum:
      - CreationTime
      - PlatformId
      - BackupId
    type: string
  EPeriodicallyKinds:
    description: Time unit for periodic job scheduling.
    enum:
      - Hours
      - Minutes
      - Seconds
      - Days
    type: string
  EPlacementPolicyType:
    description: Type of placement policy.
    enum:
      - DataLocality
      - Performance
    type: string
  EPlatform:
    enum:
      - Vmware
      - HyperV
      - Test
      - Vcd
      - Tape
      - EndPoint
      - LinuxPhysical
      - CustomPlatform
      - Conf
      - NasBackup
      - EmulatedVmWare
      - Extension0
      - Extension1
      - Extension
    type: string
  EPlatformType:
    enum:
      - VmWare
      - HyperV
      - Vcd
      - WindowsPhysical
      - LinuxPhysical
      - Tape
      - NasBackup
      - CustomPlatform
    type: string
  EProxiesFiltersOrderColumn:
    enum:
      - Name
      - Type
      - Description
    type: string
  EProxyType:
    description: Type of the backup proxy.
    enum:
      - ViProxy
    type: string
  ERepositoryExtentStatusType:
    enum:
      - Normal
      - Evacuate
      - Pending
      - Sealed
      - Maintenance
    type: string
  ERepositoryFiltersOrderColumn:
    enum:
      - Name
      - Description
      - Type
      - Host
      - Path
    type: string
  ERepositoryStatesFiltersOrderColumn:
    description: Orders repositories by the specified column.
    enum:
      - Name
      - Type
      - Host
      - Path
      - CapacityGB
      - FreeGB
      - UsedSpaceGB
      - Description
    type: string
  ERepositoryType:
    description: Repository type.
    enum:
      - WinLocal
      - LinuxLocal
      - Smb
      - Nfs
      - AzureBlob
      - AzureArchive
      - AmazonS3
      - AmazonS3Glacier
      - S3Compatible
      - GoogleCloud
      - IBMCloud
    type: string
  ERetainLogBackupsType:
    description: Retention policy for the logs stored in the backup repository.
    enum:
      - untilBackupDeleted
      - KeepOnlyDays
    type: string
  ERetentionPolicyType:
    description: Type of the retention policy.
    enum:
      - RestorePoints
      - Days
    type: string
  ESQLLogsProcessing:
    description: Type of transaction logs processing.
    enum:
      - truncate
      - preserve
      - backup
      - neverTruncate
    type: string
  EScaleOutRepositoryFiltersOrderColumn:
    enum:
      - Name
      - Description
      - Type
      - Host
      - Path
    type: string
  EScriptPeriodicityType:
    description: Type of script periodicity.
    enum:
      - Days
      - BackupSessions
    type: string
  ESennightOfMonth:
    description: Sennight of the month.
    enum:
      - First
      - Second
      - Third
      - Fourth
      - Fifth
      - Last
    type: string
  EServicesFiltersOrderColumn:
    enum:
      - Name
      - Port
    type: string
  ESessionResult:
    description: Result of the session.
    enum:
      - None
      - Success
      - Warning
      - Failed
    type: string
  ESessionState:
    description: State of the session.
    enum:
      - Stopped
      - Starting
      - Stopping
      - Working
      - Pausing
      - Resuming
      - WaitingTape
      - Idle
      - Postprocessing
      - WaitingRepository
      - WaitingSlot
    type: string
  ESessionType:
    description: Type of the session.
    enum:
      - Infrastructure
      - Job
      - Automation
      - ConfigurationBackup
      - RepositoryMaintenance
      - RepositoryEvacuate
      - InfrastructureItemDeletion
    type: string
  ESessionsFiltersOrderColumn:
    enum:
      - Name
      - SessionType
      - CreationTime
      - EndTime
      - State
      - Result
    type: string
  ESpeedUnit:
    description: Traffic speed unit.
    enum:
      - KbytePerSec
      - MbitPerSpec
      - MbytePerSec
    type: string
  EStorageOptimization:
    description: Storage optimization that depends on the target type.
    enum:
      - Auto
      - LocalTargetLarge
      - LocalTarget
      - LANTarget
      - WANTarget
    type: string
  ETaskLogRecordStatus:
    enum:
      - None
      - Succeeded
      - Warning
      - Failed
    type: string
  ETransactionLogsSettings:
    description: >
      Transaction logs settings that define whether copy-only backups must be
      created or transaction logs for Microsoft Exchange, Microsoft SQL and
      Oracle VMs must be processed.</br>

      If transaction log processing is selected, specify the following
      parameters:</br>

      <ul>

      <li>[For Microsoft SQL Server VMs] Microsoft SQL Server transaction log
      settings</li>

      <li>[For Oracle VMs] Oracle archived log settings</li>

      </ul>
    enum:
      - process
      - copyOnly
    type: string
  EViHostType:
    description: Type of the VMware vSphere server.
    enum:
      - ESX
      - ESXi
      - VC
    type: string
  EViRootFiltersOrderColumn:
    description: >-
      Sorts VMware vSphere servers by one of the VMware vSphere server
      parameters.
    enum:
      - Name
      - Type
    type: string
  EVmwareDisksTypeToProcess:
    description: Type of disk selection.
    enum:
      - AllDisks
      - SystemOnly
      - SelectedDisks
    type: string
  EVmwareInventoryType:
    description: Type of the VMware vSphere object.
    enum:
      - Unknown
      - VirtualMachine
      - vCenterServer
      - Datacenter
      - Cluster
      - Host
      - ResourcePool
      - Folder
      - Datastore
      - DatastoreCluster
      - StoragePolicy
      - Template
      - ComputeResource
      - VirtualApp
      - Tag
      - Category
      - Multitag
    type: string
  EWindowsHostComponentType:
    description: Veeam Backup & Replication component.
    enum:
      - Transport
      - Nfs
      - HvIntegration
      - DeployerSvc
      - WanAccelerator
      - Tape
      - CloudGate
      - CloudServiceInvoker
      - CloudServiceRemoting
      - RestoreProxy
      - EpAgent
      - EpAgentSqlLocalDB
      - EpAgentSharedManagementObjects
      - EpAgentSqlSysClrTypes
      - AgentConfigureService
      - VawRedist
      - ValRedist
      - GuestControl
      - FileSystemVssIntegration
      - VssHwSnapshotProvider
      - Cdp
      - VamRedist
    type: string
  EmailCustomNotificationType:
    properties:
      SuppressNotificationUntilLastRetry:
        description: >-
          If *true*, email notifications are sent about the final job status
          only (not per every job retry).
        type: boolean
      notifyOnError:
        description: 'If *true*, email notifications are sent when the job fails.'
        type: boolean
      notifyOnSuccess:
        description: >-
          If *true*, email notifications are sent when the job completes
          successfully.
        type: boolean
      notifyOnWarning:
        description: >-
          If *true*, email notifications are sent when the job completes with a
          warning.
        type: boolean
      subject:
        description: >
          Notification subject. Use the following variables in the subject:
          *%Time%* (completion time), *%JobName%*, *%JobResult%*,
          *%ObjectCount%* (number of VMs in the job) and *%Issues%* (number of
          VMs in the job that have finished with the Warning or Failed status).
        type: string
    type: object
  EmailNotificationSettingsModel:
    description: Email notification settings for the backup job.
    properties:
      customNotificationSettings:
        $ref: '#/definitions/EmailCustomNotificationType'
      isEnabled:
        description: 'If *true*, email notifications are enabled for this job.'
        type: boolean
      notificationType:
        $ref: '#/definitions/EEmailNotificationType'
      recipients:
        description: Array of recipient’s email addresses.
        items:
          type: string
        type: array
        uniqueItems: true
    required:
      - isEnabled
    type: object
  EmptySuccessResponse:
    description: 'Empty success response (200, 201, 204).'
    type: object
  EncryptionPasswordExportSpec:
    properties:
      tags:
        description: Array of password tags.
        items:
          type: string
        type: array
        uniqueItems: true
      hints:
        description: Array of password hints.
        items:
          type: string
        type: array
        uniqueItems: true
      ids:
        description: Array of password IDs.
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      modificationTimeFrom:
        description: Date and time the password was last modified.
        format: date-time
        type: string
    type: object
  EncryptionPasswordImportSpec:
    properties:
      hint:
        description: Hint for the encryption password.
        type: string
      password:
        description: Password.
        type: string
      tag:
        description: Tag for the encryption password.
        type: string
    required:
      - hint
      - password
    type: object
  EncryptionPasswordImportSpecCollection:
    properties:
      encryptionPasswords:
        description: Array of encryption passwords.
        items:
          $ref: '#/definitions/EncryptionPasswordImportSpec'
        type: array
        uniqueItems: true
    type: object
  EncryptionPasswordModel:
    properties:
      hint:
        description: Hint for the encryption password.
        type: string
      id:
        description: ID of the encryption password.
        format: uuid
        type: string
      modificationTime:
        description: Date and time the password was last modified.
        format: date-time
        type: string
      tag:
        description: Tag for the encryption password.
        type: string
    required:
      - hint
      - id
    type: object
  EncryptionPasswordSpec:
    properties:
      hint:
        description: >-
          Hint for the encryption password. Provide a meaningful hint that will
          help you recall the password.
        type: string
      password:
        description: >-
          Password for data encryption. If you lose the password, you will not
          be able to restore it.
        type: string
      tag:
        description: Tag for the encryption password.
        type: string
    required:
      - hint
      - password
    type: object
  EncryptionPasswordsFilters:
    properties:
      limit:
        format: int32
        type: integer
      orderAsc:
        type: boolean
      orderColumn:
        $ref: '#/definitions/EEncryptionPasswordsFiltersOrderColumn'
      skip:
        format: int32
        type: integer
    type: object
  EncryptionPasswordsResult:
    properties:
      data:
        description: Array of encryption passwords.
        items:
          $ref: '#/definitions/EncryptionPasswordModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  Error:
    description: ''
    properties:
      errorCode:
        description: >-
          The error code is a string that uniquely identifies an error condition
          and should be understood by programs that detect and handle errors by
          type
        enum:
          - AccessDenied
          - ExpiredToken
          - InvalidToken
          - InvalidURI
          - MethodNotAllowed
          - NotFound
          - NotImplemented
          - ServiceUnavailable
          - UnexpectedContent
          - UnknownError
        type: string
      message:
        description: >-
          The error message contains a generic description of the error
          condition in English. It is intended for a human audience
        type: string
      resourceId:
        description: ID of the object that is involved in the error (or empty)
        type: string
    required:
      - errorCode
      - message
    type: object
  EvCentersInventoryFiltersOrderColumn:
    description: Sorts vCenter Servers by one of the job parameters.
    enum:
      - Name
      - ObjectId
      - Type
    type: string
  FullBackupMaintenanceDefragmentAndCompactModel:
    description: Compact operation settings.
    properties:
      isEnabled:
        description: 'If *true*, Veeam Backup & Replication compacts full backup files.'
        type: boolean
      monthly:
        $ref: '#/definitions/AdvancedStorageScheduleMonthlyModel'
      weekly:
        $ref: '#/definitions/AdvancedStorageScheduleWeeklyModel'
    required:
      - isEnabled
    type: object
  FullBackupMaintenanceModel:
    description: Maintenance settings for full backup files.
    properties:
      RemoveData:
        $ref: '#/definitions/FullBackupMaintenanceRemoveDataModel'
      defragmentAndCompact:
        $ref: '#/definitions/FullBackupMaintenanceDefragmentAndCompactModel'
    type: object
  FullBackupMaintenanceRemoveDataModel:
    description: Backup data setting for deleted VMs.
    properties:
      afterDays:
        description: Number of days.
        type: integer
      isEnabled:
        description: >-
          If *true*, Veeam Backup & Replication keeps the backup data of deleted
          VMs for the `afterDays` number of days.
        type: boolean
    required:
      - isEnabled
    type: object
  GFSPolicySettingsModel:
    description: GFS retention policy settings.
    properties:
      isEnabled:
        description: 'If *true*, the long-term (GFS) retention policy is enabled.'
        type: boolean
      monthly:
        $ref: '#/definitions/GFSPolicySettingsMonthlyModel'
      weekly:
        $ref: '#/definitions/GFSPolicySettingsWeeklyModel'
      yearly:
        $ref: '#/definitions/GFSPolicySettingsYearlyModel'
    required:
      - isEnabled
    type: object
  GFSPolicySettingsMonthlyModel:
    description: Monthly GFS retention policy.
    properties:
      desiredTime:
        $ref: '#/definitions/ESennightOfMonth'
        description: >-
          Week of the month when the full backup that will be kept for archival
          purposes is created (the first week is the first 7 days of the month).
      isEnabled:
        description: 'If *true*, the monthly GFS retention policy is enabled.'
        type: boolean
      keepForNumberOfMonths:
        description: Number of months to keep full backups for archival purposes.
        type: integer
    required:
      - isEnabled
    type: object
  GFSPolicySettingsWeeklyModel:
    description: Weekly GFS retention policy.
    properties:
      desiredTime:
        $ref: '#/definitions/EDayOfWeek'
        description: >-
          Day of the week when the full backup that will be kept for archival
          purposes is created.
      isEnabled:
        description: 'If *true*, the weekly GFS retention policy is enabled.'
        type: boolean
      keepForNumberOfWeeks:
        description: Number of weeks to keep full backups for archival purposes.
        type: integer
    required:
      - isEnabled
    type: object
  GFSPolicySettingsYearlyModel:
    description: Yearly GFS retention policy.
    properties:
      desiredTime:
        $ref: '#/definitions/EMonth'
        description: >-
          Month when the full backup that will be kept for archival purposes is
          created.
      isEnabled:
        description: 'If *true*, the yearly GFS retention policy is enabled.'
        type: boolean
      keepForNumberOfYears:
        description: Number of years to keep full backups for archival purposes.
        type: integer
    required:
      - isEnabled
    type: object
  GeneralOptionsEmailNotificationsModel:
    description: Global email notification settings.
    properties:
      advancedSmtpOptions:
        $ref: '#/definitions/AdvancedSmtpOptionsModel'
      from:
        description: Email address from which email notifications must be sent.
        type: string
      isEnabled:
        description: 'If *true*, global email notification settings are enabled.'
        type: boolean
      notifyOnFailure:
        description: 'If *true*, email notifications are sent when the job fails.'
        type: boolean
      notifyOnLastRetry:
        description: >-
          If *true*, email notifications are sent about the final job status
          only (not per every job retry).
        type: boolean
      notifyOnSuccess:
        description: >-
          If *true*, email notifications are sent when the job completes
          successfully.
        type: boolean
      notifyOnWarning:
        description: >-
          If *true*, email notifications are sent when the job completes with a
          warning.
        type: boolean
      sendDailyReportsAt:
        description: Time when Veeam Backup & Replication sends daily email reports.
        format: date-time
        type: string
      smtpServerName:
        description: Full DNS name or IP address of the SMTP server.
        type: string
      subject:
        description: >
          Notification subject. Use the following variables in the subject:<br>
          <ol>
            <li>%Time% — completion time</li>
            <li>%JobName%</li>
            <li>%JobResult%</li>
            <li>%ObjectCount% — number of VMs in the job</li>
            <li>%Issues% — number of VMs in the job that have been processed with the Warning or Failed status</li>
          </ol>
        type: string
      to:
        description: >-
          Recipient email addresses. Use a semicolon to separate multiple
          addresses.
        type: string
    required:
      - isEnabled
      - smtpServerName
      - advancedSmtpOptions
      - from
      - to
      - subject
      - sendDailyReportsAt
      - notifyOnSuccess
      - notifyOnWarning
      - notifyOnFailure
      - notifyOnLastRetry
    type: object
  GeneralOptionsModel:
    properties:
      emailSettings:
        $ref: '#/definitions/GeneralOptionsEmailNotificationsModel'
      notifications:
        $ref: '#/definitions/GeneralOptionsNotificationsModel'
    type: object
  GeneralOptionsNotificationsModel:
    properties:
      datastoreSpaceThreshold:
        description: 'Space threshold of production datastore, in percent.'
        format: int32
        type: integer
      datastoreSpaceThresholdEnabled:
        description: >-
          If *true*, notifications about critical amount of free space in
          production datastore are enabled.
        type: boolean
      notifyOnSupportExpiration:
        description: >-
          If *true*, notifications about support contract expiration are
          enabled.
        type: boolean
      notifyOnUpdates:
        description: 'If *true*, notifications about updates are enabled.'
        type: boolean
      skipVMSpaceThreshold:
        description: 'Space threshold of production datastore, in percent.'
        format: int32
        type: integer
      skipVMSpaceThresholdEnabled:
        description: >-
          If *true* and the `skipVMSpaceThreshold` threshold is reached, Veeam
          Backup & Replication terminates backup and replication jobs working
          with production datastores before VM snapshots are taken.
        type: boolean
      storageSpaceThreshold:
        description: 'Space threshold of backup storage, in percent.'
        format: int32
        type: integer
      storageSpaceThresholdEnabled:
        description: >-
          If *true*, notifications about critical amount of free space in backup
          storage are enabled.
        type: boolean
    required:
      - storageSpaceThresholdEnabled
      - storageSpaceThreshold
      - datastoreSpaceThresholdEnabled
      - datastoreSpaceThreshold
      - skipVMSpaceThresholdEnabled
      - skipVMSpaceThreshold
      - notifyOnSupportExpiration
      - notifyOnUpdates
    type: object
  GlobalNetworkTrafficRulesModel:
    properties:
      preferredNetworks:
        $ref: '#/definitions/PreferredNetworksModel'
      trafficRules:
        description: Array of traffic rules.
        items:
          $ref: '#/definitions/TrafficRuleModel'
        type: array
      uploadStreamsCount:
        description: Number of TCP/IP connections per job.
        format: integer
        type: integer
      useMultipleStreamsPerJob:
        description: >-
          If *true*, Veeam Backup & Replication uses multiple TCP/IP transfer
          connection for every job session.
        type: boolean
    required:
      - useMultipleStreamsPerJob
    type: object
  GuestFileSystemIndexingModel:
    description: VM guest OS file indexing.
    properties:
      indexingSettings:
        description: Array of VMs with guest OS file indexing options.
        items:
          $ref: '#/definitions/BackupIndexingSettingsModel'
        type: array
      isEnabled:
        type: boolean
    required:
      - isEnabled
    type: object
  GuestInteractionProxiesSettingsImportModel:
    description: >-
      Guest interaction proxy used to deploy the runtime process on the VM guest
      OS.
    properties:
      automaticSelection:
        default: true
        description: >-
          If *true*, Veeam Backup & Replication automatically selects the guest
          interaction proxy.
        type: boolean
      proxies:
        description: >-
          Array of proxies specified explicitly. The array must contain
          Microsoft Windows servers added to the backup infrastructure only.
        items:
          type: string
        type: array
        uniqueItems: true
    required:
      - automaticSelection
    type: object
  GuestInteractionProxiesSettingsModel:
    description: >-
      Guest interaction proxy used to deploy the runtime process on the VM guest
      OS.
    properties:
      autoSelection:
        default: true
        description: >-
          If *true*, Veeam Backup & Replication automatically selects the guest
          interaction proxy.
        type: boolean
      proxyIds:
        description: >-
          Array of proxies specified explicitly. The array must contain
          Microsoft Windows servers added to the backup infrastructure only.
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
    required:
      - autoSelection
    type: object
  GuestOsCredentialsImportModel:
    description: VM custom credentials.
    properties:
      credentialsPerMachine:
        description: Individual credentials for VMs.
        items:
          $ref: '#/definitions/GuestOsCredentialsPerMachineImportModel'
        type: array
        uniqueItems: true
      creds:
        $ref: '#/definitions/CredentialsImportModel'
    type: object
  GuestOsCredentialsModel:
    description: VM custom credentials.
    properties:
      credentialsPerMachine:
        description: Individual credentials for VMs.
        items:
          $ref: '#/definitions/GuestOsCredentialsPerMachineModel'
        type: array
        uniqueItems: true
      credsId:
        description: Credentials ID for Microsoft Windows VMs.
        format: uuid
        type: string
      credsType:
        $ref: '#/definitions/ECredentialsType'
    required:
      - credsId
      - credsType
    type: object
  GuestOsCredentialsPerMachineImportModel:
    properties:
      linuxCreds:
        $ref: '#/definitions/CredentialsImportModel'
      vmObject:
        $ref: '#/definitions/VmwareObjectModel'
      windowsCreds:
        $ref: '#/definitions/CredentialsImportModel'
    required:
      - vmObject
    type: object
  GuestOsCredentialsPerMachineModel:
    properties:
      linuxCredsId:
        description: Credentials ID for a Linux VM.
        format: uuid
        type: string
      vmObject:
        $ref: '#/definitions/VmwareObjectModel'
      windowsCredsId:
        description: Credentials ID for a Microsoft Windows VM.
        format: uuid
        type: string
    required:
      - vmObject
    type: object
  HostConnectionSpec:
    properties:
      credentialsId:
        description: ID of a credentials record used to connect to the server.
        format: uuid
        type: string
      port:
        description: Port used to communicate with the server.
        type: integer
      serverName:
        description: Full DNS name or IP address of the server.
        type: string
      type:
        $ref: '#/definitions/EManagedServerType'
    required:
      - serverName
      - credentialsId
      - type
    type: object
  JobExportSpec:
    properties:
      ids:
        description: Array of job IDs.
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      names:
        description: Array of job names. Wildcard characters are supported.
        items:
          type: string
        type: array
        uniqueItems: true
      types:
        description: Array of job types.
        items:
          type: string
        type: array
        uniqueItems: true
    type: object
  JobImportSpec:
    properties:
      description:
        description: Description of the job.
        type: string
      guestProcessing:
        $ref: '#/definitions/BackupJobGuestProcessingImportModel'
      isHighPriority:
        description: >-
          If *true*, the job has a high priority in getting backup
          infrastructure resources.
        type: boolean
      name:
        description: Name of the job.
        type: string
      schedule:
        $ref: '#/definitions/BackupScheduleModel'
      storage:
        $ref: '#/definitions/BackupJobStorageImportModel'
      type:
        $ref: '#/definitions/EJobType'
      virtualMachines:
        $ref: '#/definitions/BackupJobVirtualMachinesSpec'
    required:
      - description
      - guestProcessing
      - isHighPriority
      - name
      - schedule
      - storage
      - type
      - virtualMachines
    type: object
  JobImportSpecCollection:
    properties:
      jobs:
        description: Array of jobs.
        items:
          $ref: '#/definitions/JobImportSpec'
        type: array
        uniqueItems: true
    required:
      - jobs
    type: object
  JobModel:
    properties:
      description:
        description: Description of the job.
        type: string
      id:
        description: ID of the job.
        format: uuid
        type: string
      isDisabled:
        description: 'If *true*, the job is disabled.'
        type: boolean
      name:
        description: Name of the job.
        type: string
      type:
        $ref: '#/definitions/EJobType'
    required:
      - id
      - name
      - description
      - type
      - isDisabled
    type: object
  JobScriptsSettingsModel:
    description: Script settings.
    properties:
      dayOfWeek:
        description: Days of the week when the scripts must be executed.
        items:
          $ref: '#/definitions/EDayOfWeek'
        type: array
        uniqueItems: true
      periodicityType:
        $ref: '#/definitions/EScriptPeriodicityType'
      postCommand:
        $ref: '#/definitions/ScriptCommand'
        description: Script executed after the backup job.
      preCommand:
        $ref: '#/definitions/ScriptCommand'
        description: Script executed before the backup job.
      runScriptEvery:
        description: >-
          Number of the backup job session after which the scripts must be
          executed.
        type: integer
    type: object
  JobSpec:
    properties:
      description:
        description: Job description specified at the time of the job creation.
        type: string
      name:
        description: Name of the job.
        type: string
      type:
        $ref: '#/definitions/EJobType'
        description: Job type.
    required:
      - name
      - description
      - type
    type: object
  JobStartSpec:
    properties:
      performActiveFull:
        default: false
        type: boolean
      startChainedJobs:
        default: false
        type: boolean
    required:
      - performActiveFull
    type: object
  JobStateModel:
    properties:
      description:
        description: Description of the job.
        type: string
      id:
        description: ID of the job.
        format: uuid
        type: string
      lastResult:
        $ref: '#/definitions/ESessionResult'
      lastRun:
        description: Last run of the job.
        format: date-time
        type: string
      name:
        description: Name of the job.
        type: string
      nextRun:
        description: Next run of the job.
        format: date-time
        type: string
      objectsCount:
        description: Number of objects processed by the job.
        type: integer
      repositoryId:
        description: ID of the backup repository.
        format: uuid
        type: string
      repositoryName:
        description: Name of the backup repository.
        type: string
      sessionId:
        description: ID of the last job session.
        format: uuid
        type: string
      status:
        $ref: '#/definitions/EJobStatus'
      type:
        $ref: '#/definitions/EJobType'
      workload:
        $ref: '#/definitions/EJobWorkload'
    required:
      - id
      - name
      - type
      - description
      - status
      - lastResult
      - workload
      - objectsCount
    type: object
  JobStatesFilters:
    description: Filters jobs by the specified parameters.
    properties:
      idFilter:
        format: uuid
        type: string
      isHighPriorityJobFilter:
        type: boolean
      lastResultFilter:
        $ref: '#/definitions/ESessionResult'
      lastRunAfterFilter:
        format: date-time
        type: string
      lastRunBeforeFilter:
        format: date-time
        type: string
      limit:
        description: Returns the specified number of jobs.
        format: int32
        type: integer
      nameFilter:
        description: >-
          Filters jobs by the `nameFilter` pattern. The pattern can match any
          job state parameter. To substitute one or more characters, use the
          asterisk (*) character at the beginning and/or at the end.
        type: string
      objectsCountFilter:
        type: integer
      orderAsc:
        description: Sorts jobs in the ascending order by the `orderColumn` parameter.
        type: boolean
      orderColumn:
        $ref: '#/definitions/EJobStatesFiltersOrderColumn'
      repositoryIdFilter:
        format: uuid
        type: string
      skip:
        description: Skips the specified number of jobs.
        format: int32
        type: integer
      statusFilter:
        $ref: '#/definitions/EJobStatus'
      typeFilter:
        $ref: '#/definitions/EJobType'
      workloadFilter:
        $ref: '#/definitions/EJobWorkload'
    type: object
  JobStatesResult:
    properties:
      data:
        description: Array of job states.
        items:
          $ref: '#/definitions/JobStateModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  JobStopSpec:
    properties:
      gracefullStop:
        default: true
        type: boolean
    required:
      - gracefullStop
    type: object
  JobsFilters:
    description: Filters jobs by the specified parameters.
    properties:
      limit:
        description: Returns the specified number of jobs.
        format: int32
        type: integer
      nameFilter:
        description: >-
          Filters jobs by the `nameFilter` pattern. The pattern can match any
          job parameter. To substitute one or more characters, use the asterisk
          (*) character at the beginning and/or at the end.
        type: string
      orderAsc:
        description: Sorts jobs in the ascending order by the `orderColumn` parameter.
        type: boolean
      orderColumn:
        $ref: '#/definitions/EJobFiltersOrderColumn'
      skip:
        description: Skips the specified number of jobs.
        format: int32
        type: integer
      typeFilter:
        $ref: '#/definitions/EJobType'
    type: object
  JobsResult:
    properties:
      data:
        description: Array of jobs.
        items:
          $ref: '#/definitions/JobModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  LinuxCredentialsModel:
    allOf:
      - $ref: '#/definitions/CredentialsModel'
      - properties:
          SSHPort:
            description: SSH port used to connect to a Linux server.
            type: integer
          addToSudoers:
            description: 'If *true*, the account is automatically added to the sudoers file.'
            type: boolean
          autoElevated:
            description: >-
              If *true*, the permissions of the account are automatically
              elevated to the root user.
            type: boolean
          passphrase:
            description: Passphrase that protects the private key.
            type: string
          privateKey:
            description: Private key.
            type: string
          tag:
            description: Tag used to identify the credentials record.
            type: string
          useSu:
            description: >-
              If *true*, the `su` command is used for Linux distributions where
              the `sudo` command is not available.
            type: boolean
        type: object
  LinuxCredentialsSpec:
    allOf:
      - $ref: '#/definitions/CredentialsSpec'
      - properties:
          SSHPort:
            description: SSH port used to connect to a Linux server.
            type: integer
          addToSudoers:
            description: 'If *true*, the account is automatically added to the sudoers file.'
            type: boolean
          autoElevated:
            description: >-
              If *true*, the permissions of the account are automatically
              elevated to the root user.
            type: boolean
          passphrase:
            description: Passphrase that protects the private key.
            type: string
          privateKey:
            description: Private key.
            type: string
          rootPassword:
            description: Password for the root account.
            type: string
          tag:
            description: Tag used to identify the credentials record.
            type: string
          useSu:
            description: >-
              If *true*, the `su` command is used for Linux distributions where
              the `sudo` command is not available.
            type: boolean
        type: object
  LinuxHostImportSpec:
    properties:
      credentials:
        $ref: '#/definitions/CredentialsImportModel'
      description:
        description: Description of the server.
        type: string
      name:
        description: Full DNS name or IP address of the server.
        type: string
      sshFingerprint:
        description: SSH key fingerprint used to verify the server identity.
        type: string
      sshSettings:
        $ref: '#/definitions/LinuxHostSSHSettingsModel'
      type:
        $ref: '#/definitions/EManagedServerType'
    required:
      - credentials
      - description
      - name
      - type
      - sshFingerprint
    type: object
  LinuxHostModel:
    allOf:
      - $ref: '#/definitions/ManagedServerModel'
      - properties:
          sshSettings:
            $ref: '#/definitions/LinuxHostSSHSettingsModel'
        type: object
  LinuxHostSSHSettingsModel:
    description: SSH settings.
    properties:
      managementPort:
        description: >-
          Port used as a control channel from the Veeam Backup & Replication
          console to the Linux server.
        type: integer
      portRangeEnd:
        description: End port used for data transfer.
        type: integer
      portRangeStart:
        description: Start port used for data transfer.
        type: integer
      serverThisSide:
        description: 'If *true*, the server is run on this side.'
        type: boolean
      sshTimeOutMs:
        description: >-
          SSH timeout, in ms. If a task targeted at the server is inactive after
          the timeout, the task is terminated.
        type: integer
    type: object
  LinuxHostSpec:
    allOf:
      - $ref: '#/definitions/ManagedServerSpec'
    properties:
      sshFingerprint:
        description: >
          SSH key fingerprint used to verify the server identity. For details on
          how to get the fingerprint, see [Get TLS Certificate or SSH
          Fingerprint](#operation/GetConnectionCertificate).
        type: string
      sshSettings:
        $ref: '#/definitions/LinuxHostSSHSettingsModel'
    required:
      - sshFingerprint
    type: object
  LinuxLocalRepositorySettingsModel:
    description: Repository settings.
    properties:
      advancedSettings:
        $ref: '#/definitions/RepositoryAdvancedSettingsModel'
      makeRecentBackupsImmutableDays:
        description: Number of days to keep immutable backups.
        type: integer
      maxTaskCount:
        description: Maximum number of concurrent tasks.
        type: integer
      path:
        description: Path to the folder where backup files are stored.
        type: string
      readWriteRate:
        description: >-
          Maximum rate that restricts the total speed of reading and writing
          data to the backup repository disk.
        type: integer
      useFastCloningOnXFSVolumes:
        description: |
          [For Linux repository] If *true*, fast cloning on XFS volumes is used.
        type: boolean
      useImmutableBackups:
        description: 'If *true*, the Object Lock feature is used to protect recent backups.'
        type: boolean
    type: object
  LinuxLocalStorageImportSpec:
    properties:
      description:
        description: Description of the backup repository.
        type: string
      hostName:
        description: ID of the server that is used as a backup repository.
        type: string
      mountServer:
        $ref: '#/definitions/MountServerSettingsImportSpec'
      name:
        description: Name of the backup repository.
        type: string
      repository:
        $ref: '#/definitions/LinuxLocalRepositorySettingsModel'
      tag:
        description: VMware vSphere tag assigned to the backup repository.
        type: string
      type:
        $ref: '#/definitions/ERepositoryType'
    required:
      - description
      - hostName
      - mountServer
      - name
      - repository
      - tag
      - type
    type: object
  LinuxLocalStorageModel:
    allOf:
      - $ref: '#/definitions/RepositoryModel'
      - properties:
          hostId:
            description: ID of the server that is used as a backup repository.
            format: uuid
            type: string
          mountServer:
            $ref: '#/definitions/MountServerSettingsModel'
          repository:
            $ref: '#/definitions/LinuxLocalRepositorySettingsModel'
        required:
          - hostId
          - mountServer
          - repository
        type: object
    description: Direct attached storage.
  LinuxLocalStorageSpec:
    allOf:
      - $ref: '#/definitions/RepositorySpec'
      - properties:
          hostId:
            description: ID of the server that is used as a backup repository.
            format: uuid
            type: string
          mountServer:
            $ref: '#/definitions/MountServerSettingsModel'
          repository:
            $ref: '#/definitions/LinuxLocalRepositorySettingsModel'
        required:
          - hostId
          - mountServer
          - repository
        type: object
  ManageServerExportSpec:
    properties:
      ids:
        description: Array of server IDs.
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      names:
        description: Array of server names. Wildcard characters are supported.
        items:
          type: string
        type: array
        uniqueItems: true
      types:
        description: Array of server types.
        items:
          $ref: '#/definitions/EManagedServerType'
        type: array
        uniqueItems: true
    type: object
  ManageServerImportSpecCollection:
    properties:
      linuxHosts:
        description: Array of managed Linux servers.
        items:
          $ref: '#/definitions/LinuxHostImportSpec'
        type: array
        uniqueItems: true
      viHosts:
        description: Array of VMware vSphere servers.
        items:
          $ref: '#/definitions/ViHostImportSpec'
        type: array
        uniqueItems: true
      windowsHosts:
        description: Array of managed Microsoft Windows servers.
        items:
          $ref: '#/definitions/WindowsHostImportSpec'
        type: array
        uniqueItems: true
    type: object
  ManagedServerModel:
    properties:
      credentialsId:
        description: ID of a credentials record used to connect to the server.
        format: uuid
        type: string
      description:
        description: Description of the server.
        type: string
      id:
        description: ID of the server.
        format: uuid
        type: string
      name:
        description: Full DNS name or IP address of the server.
        type: string
      type:
        $ref: '#/definitions/EManagedServerType'
    required:
      - credentialsId
      - description
      - id
      - name
      - type
    type: object
  ManagedServerSpec:
    properties:
      credentialsId:
        description: ID of the credentials used to connect to the server.
        format: uuid
        type: string
      description:
        description: Description of the server.
        type: string
      name:
        description: Full DNS name or IP address of the server.
        type: string
      type:
        $ref: '#/definitions/EManagedServerType'
    required:
      - credentialsId
      - description
      - name
      - type
    type: object
  ManagedServersFilters:
    properties:
      limit:
        format: int32
        type: integer
      nameFilter:
        type: string
      orderAsc:
        type: boolean
      orderColumn:
        $ref: '#/definitions/EManagedServersFiltersOrderColumn'
      skip:
        format: int32
        type: integer
      typeFilter:
        $ref: '#/definitions/EManagedServerType'
      viTypeFilter:
        $ref: '#/definitions/EViHostType'
    type: object
  ManagedServersResult:
    properties:
      data:
        description: Array of managed servers.
        items:
          $ref: '#/definitions/ManagedServerModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  MountServerSettingsImportSpec:
    properties:
      mountServerName:
        description: Name of the mount server.
        type: string
      vPowerNFSEnabled:
        description: 'If *true*, the vPower NFS Service is enabled on the mount server.'
        type: boolean
      vPowerNFSPortSettings:
        $ref: '#/definitions/VPowerNFSPortSettingsModel'
      writeCacheFolder:
        description: Path to the folder used for writing cache during mount operations.
        type: string
    required:
      - mountServerName
      - vPowerNFSEnabled
      - writeCacheFolder
    type: object
  MountServerSettingsModel:
    description: >-
      Settings for the mount server that is used for file-level and application
      items restore.
    properties:
      mountServerId:
        description: ID of the mount server.
        format: uuid
        type: string
      vPowerNFSEnabled:
        description: 'If *true*, the vPower NFS Service is enabled on the mount server.'
        type: boolean
      vPowerNFSPortSettings:
        $ref: '#/definitions/VPowerNFSPortSettingsModel'
      writeCacheFolder:
        description: Path to the folder used for writing cache during mount operations.
        type: string
    required:
      - mountServerId
      - vPowerNFSEnabled
      - writeCacheFolder
    type: object
  NetworkRepositorySettingsModel:
    description: Repository settings.
    properties:
      advancedSettings:
        $ref: '#/definitions/RepositoryAdvancedSettingsModel'
      maxTaskCount:
        description: Maximum number of concurrent tasks.
        type: integer
      readWriteRate:
        description: >-
          Maximum rate that restricts the total speed of reading and writing
          data to the backup repository disk.
        type: integer
    type: object
  NfsRepositoryShareSettingsModel:
    description: Share settings.
    properties:
      gatewayServer:
        $ref: '#/definitions/RepositoryShareGatewayModel'
      sharePath:
        description: Path to the shared folder that that is used as a backup repository.
        type: string
    required:
      - sharePath
    type: object
  NfsRepositoryShareSettingsSpec:
    properties:
      gatewayServer:
        $ref: '#/definitions/RepositoryShareGatewayImportSpec'
      sharePath:
        description: Path to the shared folder that that is used as a backup repository.
        type: string
    required:
      - sharePath
    type: object
  NfsStorageImportSpec:
    properties:
      description:
        description: Description of the backup repository.
        type: string
      mountServer:
        $ref: '#/definitions/MountServerSettingsImportSpec'
      name:
        description: Name of the backup repository.
        type: string
      repository:
        $ref: '#/definitions/NetworkRepositorySettingsModel'
      share:
        $ref: '#/definitions/NfsRepositoryShareSettingsSpec'
      tag:
        description: VMware vSphere tag assigned to the backup repository.
        type: string
      type:
        $ref: '#/definitions/ERepositoryType'
    required:
      - description
      - mountServer
      - name
      - repository
      - share
      - tag
      - type
    type: object
  NfsStorageModel:
    allOf:
      - $ref: '#/definitions/RepositoryModel'
      - properties:
          mountServer:
            $ref: '#/definitions/MountServerSettingsModel'
          repository:
            $ref: '#/definitions/NetworkRepositorySettingsModel'
          share:
            $ref: '#/definitions/NfsRepositoryShareSettingsModel'
        required:
          - mountServer
          - repository
          - share
        type: object
    description: Network attached storage.
  NfsStorageSpec:
    allOf:
      - $ref: '#/definitions/RepositorySpec'
      - properties:
          mountServer:
            $ref: '#/definitions/MountServerSettingsModel'
          repository:
            $ref: '#/definitions/NetworkRepositorySettingsModel'
          share:
            $ref: '#/definitions/NfsRepositoryShareSettingsModel'
        required:
          - mountServer
          - repository
          - share
        type: object
  NotificationSettingsModel:
    description: Notification settings for the backup job.
    properties:
      emailNotifications:
        $ref: '#/definitions/EmailNotificationSettingsModel'
      sendSNMPNotifications:
        description: 'If *true*, SNMP notifications are enabled for this job.'
        type: boolean
      vmAttribute:
        $ref: '#/definitions/NotificationVmAttributeSettingsModel'
    type: object
  NotificationVmAttributeSettingsModel:
    description: VM attribute settings.
    properties:
      appendToExisitingValue:
        description: >-
          If *true*, information about successfully performed backup is appended
          to the existing value of the attribute added by the user.
        type: boolean
      isEnabled:
        description: >-
          If *true*, information about successfully performed backup is written
          to a VM attribute.
        type: boolean
      notes:
        description: Name of the VM attribute.
        type: string
    required:
      - isEnabled
    type: object
  ObjectRestorePointDiskModel:
    properties:
      capacity:
        description: Capacity of the disk.
        format: int64
        type: integer
      name:
        description: Name of the disk.
        type: string
      state:
        $ref: '#/definitions/EDiskInfoProcessState'
      type:
        $ref: '#/definitions/EDiskInfoType'
      uid:
        description: ID of the disk.
        type: string
    required:
      - uid
      - type
      - name
      - capacity
      - state
    type: object
  ObjectRestorePointDisksResult:
    properties:
      data:
        description: Array of disks.
        items:
          $ref: '#/definitions/ObjectRestorePointDiskModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  ObjectRestorePointModel:
    properties:
      allowedOperations:
        description: Array of operations allowed for the restore point.
        items:
          $ref: '#/definitions/EObjectRestorePointOperation'
        type: array
      backupId:
        description: ID of a backup that contains the restore point.
        format: uuid
        type: string
      creationTime:
        description: Date and time when the restore point was created.
        format: date-time
        type: string
      id:
        format: uuid
        type: string
      name:
        type: string
      platformId:
        description: ID of a platform on which the object was created.
        format: uuid
        type: string
      platformName:
        $ref: '#/definitions/EPlatformType'
    required:
      - id
      - name
      - platformName
      - platformId
      - creationTime
      - backupId
      - allowedOperations
    type: object
  ObjectRestorePointsFilters:
    properties:
      backupIdFilter:
        format: uuid
        type: string
      backupObjectIdFilter:
        format: uuid
        type: string
      createdAfterFilter:
        format: date-time
        type: string
      createdBeforeFilter:
        format: date-time
        type: string
      limit:
        format: int32
        type: integer
      nameFilter:
        type: string
      orderAsc:
        type: boolean
      orderColumn:
        $ref: '#/definitions/EObjectRestorePointsFiltersOrderColumn'
      platformIdFilter:
        format: uuid
        type: string
      platformNameFilter:
        $ref: '#/definitions/EPlatformType'
      skip:
        format: int32
        type: integer
    type: object
  ObjectRestorePointsResult:
    properties:
      data:
        description: Array of restore points.
        items:
          $ref: '#/definitions/ObjectRestorePointModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  PaginationResult:
    description: Pagination settings.
    properties:
      count:
        description: Number of returned results.
        format: int32
        type: integer
      limit:
        description: Maximum number of results to return.
        format: int32
        type: integer
      skip:
        description: Number of skipped results.
        format: int32
        type: integer
      total:
        description: Total number of results.
        format: int32
        type: integer
    required:
      - total
      - count
    type: object
  PerformanceExtentModel:
    properties:
      id:
        description: ID of the backup repository added as a performance extent.
        format: uuid
        type: string
      name:
        description: Name of the backup repository added as a performance extent.
        type: string
      status:
        $ref: '#/definitions/ERepositoryExtentStatusType'
    required:
      - id
      - name
      - status
    type: object
  PerformanceTierAdvancedSettingsModel:
    description: Advanced settings of the performance tier.
    properties:
      fullWhenExtentOffline:
        description: >-
          If *true*, Veeam Backup & Replication creates a full backup file
          instead of an incremental backup file in case the required extent is
          offline.
        type: boolean
      perVmBackup:
        description: >-
          If *true*, Veeam Backup & Replication creates a separate backup file
          for every VM in the job.
        type: boolean
    type: object
  PerformanceTierModel:
    description: Performance tier.
    properties:
      advancedSettings:
        $ref: '#/definitions/PerformanceTierAdvancedSettingsModel'
      performanceExtents:
        description: Array of performance extents.
        items:
          $ref: '#/definitions/PerformanceExtentModel'
        type: array
    type: object
  PlacementPolicyModel:
    description: Backup file placement policy.
    properties:
      settings:
        items:
          $ref: '#/definitions/BackupPlacementSettingsModel'
        type: array
      type:
        $ref: '#/definitions/EPlacementPolicyType'
    required:
      - type
      - settings
    type: object
  PreferredNetworkModel:
    properties:
      cidrNotation:
        description: CIDR notation.
        type: string
      ipAddress:
        description: IP address.
        type: string
      subnetMask:
        description: Subnet mask.
        type: string
    type: object
  PreferredNetworksModel:
    description: Preferred networks used for backup and replication traffic.
    properties:
      isEnabled:
        description: 'If *true*, prefered networks are enabled.'
        type: boolean
      networks:
        description: Array of networks.
        items:
          $ref: '#/definitions/PreferredNetworkModel'
        type: array
    required:
      - isEnabled
    type: object
  PrimaryStorageIntegrationSettingsModel:
    description: Primary storage integration settings for the backup job.
    properties:
      failoverToStandardBackup:
        description: >-
          If *true*, failover to the regular VM processing mode is enabled. In
          this case, if backup from storage snapshot fails, VM snapshots are
          used.
        type: boolean
      isEnabled:
        description: >-
          If *true*, the primary storage integration is enabled. In this case,
          storage snapshots (instead of VM snapshots) are used for VM data
          processing.
        type: boolean
      limitProcessedVm:
        description: >-
          If *true*, the number of processed VMs per storage snapshot is
          limited.
        type: boolean
      limitProcessedVmCount:
        description: Number of processed VMs per storage snapshot.
        type: integer
    required:
      - isEnabled
    type: object
  PrivateKeyChangeSpec:
    properties:
      passphrase:
        description: Passphrase that protects the private key.
        type: string
      privateKey:
        description: Private key.
        type: string
    required:
      - privateKey
    type: object
  ProxiesFilters:
    properties:
      hostIdFilter:
        format: uuid
        type: string
      limit:
        format: int32
        type: integer
      nameFilter:
        type: string
      orderAsc:
        type: boolean
      orderColumn:
        $ref: '#/definitions/EProxiesFiltersOrderColumn'
      skip:
        format: int32
        type: integer
      typeFilter:
        $ref: '#/definitions/EProxyType'
    type: object
  ProxiesResult:
    properties:
      data:
        description: Array of backup proxies.
        items:
          $ref: '#/definitions/ProxyModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  ProxyDatastoreModel:
    properties:
      datastore:
        $ref: '#/definitions/VmwareObjectModel'
      vmCount:
        description: Number of VMs.
        type: integer
    type: object
  ProxyDatastoreSettingsModel:
    description: Datastores to which the backup proxy has a direct SAN or NFS connection.
    properties:
      autoSelect:
        description: >-
          If *true*, all datastores that the backup proxy can access are
          detected automatically.
        type: boolean
      datastores:
        description: >-
          Array of datastores to which the backup proxy has a direct SAN or NFS
          connection.
        items:
          $ref: '#/definitions/ProxyDatastoreModel'
        type: array
    required:
      - autoSelect
    type: object
  ProxyExportSpec:
    properties:
      ids:
        description: Array of backup proxy IDs.
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      names:
        description: Array of backup proxy names. Wildcard characters are supported.
        items:
          type: string
        type: array
        uniqueItems: true
      types:
        description: Array of backup proxy types.
        items:
          $ref: '#/definitions/EProxyType'
        type: array
        uniqueItems: true
    type: object
  ProxyImportSpec:
    properties:
      description:
        description: Description of the backup proxy.
        type: string
      server:
        $ref: '#/definitions/ProxyServerSettingsImportSpec'
      type:
        $ref: '#/definitions/EProxyType'
    required:
      - description
      - server
      - type
    type: object
  ProxyImportSpecCollection:
    properties:
      proxies:
        description: Array of backup proxies.
        items:
          $ref: '#/definitions/ProxyImportSpec'
        type: array
        uniqueItems: true
    required:
      - proxies
    type: object
  ProxyModel:
    properties:
      description:
        description: Description of the backup proxy.
        type: string
      id:
        description: ID of the backup proxy.
        format: uuid
        type: string
      name:
        description: Name of the backup proxy.
        type: string
      type:
        $ref: '#/definitions/EProxyType'
    required:
      - id
      - description
      - name
      - type
    type: object
  ProxyServerSettingsImportSpec:
    description: Settings of the server that is used as a backup proxy.
    properties:
      connectedDatastores:
        $ref: '#/definitions/ProxyDatastoreSettingsModel'
      failoverToNetwork:
        type: boolean
      hostName:
        description: Name of the server.
        type: string
      hostTag:
        description: Tag assigned to the server.
        type: string
      hostToProxyEncryption:
        description: >
          [For the Network mode] If *true*, VM data is transferred over an
          encrypted TLS connection.
        type: boolean
      maxTaskCount:
        description: Maximum number of concurrent tasks.
        type: integer
      transportMode:
        $ref: '#/definitions/EBackupProxyTransportMode'
    required:
      - hostName
    type: object
  ProxyServerSettingsModel:
    description: Server settings for the backup proxy.
    properties:
      connectedDatastores:
        $ref: '#/definitions/ProxyDatastoreSettingsModel'
      failoverToNetwork:
        description: >
          [For the Direct storage access and Virtual appliance transport modes]
          If *true*, Veeam Backup & Replication failovers to the network
          transport mode in case the primary mode fails or is unavailable.
        type: boolean
      hostId:
        description: ID of the server.
        format: uuid
        type: string
      hostToProxyEncryption:
        description: >
          [For the Network mode] If *true*, VM data is transferred over an
          encrypted TLS connection.
        type: boolean
      maxTaskCount:
        description: Maximum number of concurrent tasks.
        type: integer
      transportMode:
        $ref: '#/definitions/EBackupProxyTransportMode'
    required:
      - hostId
    type: object
  ProxySpec:
    properties:
      description:
        description: Description of the backup proxy.
        type: string
      type:
        $ref: '#/definitions/EProxyType'
    required:
      - description
      - type
    type: object
  RepositoriesFilters:
    properties:
      hostIdFilter:
        format: uuid
        type: string
      limit:
        format: int32
        type: integer
      nameFilter:
        type: string
      orderAsc:
        type: boolean
      orderColumn:
        $ref: '#/definitions/ERepositoryFiltersOrderColumn'
      pathFilter:
        type: string
      skip:
        format: int32
        type: integer
      typeFilter:
        $ref: '#/definitions/ERepositoryType'
      vmbApiFilter:
        description: >-
          VmbApiFilterModel as json serialized in base64 format (see
          VmbApiFilterModel)
        type: string
    type: object
  RepositoriesResult:
    properties:
      data:
        description: Array of backup repositories.
        items:
          $ref: '#/definitions/RepositoryModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  RepositoryAdvancedSettingsModel:
    description: Advanced settings for the backup repository.
    properties:
      alignDataBlocks:
        description: >-
          If *true*, Veeam Backup & Replication aligns VM data saved to a backup
          file at a 4 KB block boundary.
        type: boolean
      decompressBeforeStoring:
        description: >-
          If *true*, Veeam Backup & Replication decompresses backup data blocks
          before storing to improve deduplication ratios.
        type: boolean
      perVmBackup:
        description: >-
          If *true*, Veeam Backup & Replication creates a separate backup file
          for every VM in the job.
        type: boolean
      rotatedDrives:
        description: 'If *true*, the repository drive is rotated.'
        type: boolean
    type: object
  RepositoryExportSpec:
    properties:
      ids:
        description: Array of backup repository IDs.
        items:
          format: uuid
          type: string
        type: array
        uniqueItems: true
      names:
        description: Array of repository names. Wildcard characters are supported.
        items:
          type: string
        type: array
        uniqueItems: true
      types:
        description: Array of backup repository types.
        items:
          $ref: '#/definitions/ERepositoryType'
        type: array
        uniqueItems: true
    type: object
  RepositoryImportSpecCollection:
    properties:
      LinuxLocalRepositories:
        description: Array of linux local storages.
        items:
          $ref: '#/definitions/LinuxLocalStorageImportSpec'
        type: array
        uniqueItems: true
      NfsRepositories:
        description: Array of network attached storages.
        items:
          $ref: '#/definitions/NfsStorageImportSpec'
        type: array
        uniqueItems: true
      SmbRepositories:
        description: Array of network attached storages.
        items:
          $ref: '#/definitions/SmbStorageImportSpec'
        type: array
        uniqueItems: true
      WindowsLocalRepositories:
        description: Array of windows local storages.
        items:
          $ref: '#/definitions/WindowsLocalStorageImportSpec'
        type: array
        uniqueItems: true
    type: object
  RepositoryModel:
    properties:
      description:
        description: Description of the backup repository.
        type: string
      id:
        description: ID of the backup repository.
        format: uuid
        type: string
      name:
        description: Name of the backup repository.
        type: string
      tag:
        description: VMware vSphere tag assigned to the backup repository.
        type: string
      type:
        $ref: '#/definitions/ERepositoryType'
    required:
      - description
      - id
      - name
      - type
    type: object
  RepositoryShareGatewayImportSpec:
    description: Settings for the gateway server.
    properties:
      autoSelect:
        description: >-
          If *true*, Veeam Backup & Replication automatically selects a gateway
          server.
        type: boolean
      gatewayServerName:
        description: Name of the gateway server.
        type: string
    type: object
  RepositoryShareGatewayModel:
    description: Settings for the gateway server.
    properties:
      autoSelect:
        description: >-
          If *true*, Veeam Backup & Replication automatically selects a gateway
          server.
        type: boolean
      gatewayServerId:
        description: ID of the gateway server.
        format: uuid
        type: string
    type: object
  RepositorySpec:
    properties:
      description:
        description: Description of the backup repository.
        type: string
      name:
        description: Name of the backup repository.
        type: string
      tag:
        description: VMware vSphere tag assigned to the backup repository.
        type: string
      type:
        $ref: '#/definitions/ERepositoryType'
    required:
      - description
      - name
      - type
    type: object
  RepositoryStateModel:
    properties:
      capacityGB:
        description: Repository capacity in GB.
        format: double
        type: number
      description:
        type: string
      freeGB:
        description: Repository free space in GB.
        format: double
        type: number
      hostId:
        description: ID of the server that is used as a backup repository.
        format: uuid
        type: string
      hostName:
        description: Name of the server that is used as a backup repository.
        type: string
      id:
        description: ID of the backup repository.
        format: uuid
        type: string
      name:
        description: Name of the backup repository.
        type: string
      path:
        description: Path to the folder where backup files are stored.
        type: string
      type:
        $ref: '#/definitions/ERepositoryType'
      usedSpaceGB:
        description: Repository used space in GB.
        format: double
        type: number
    required:
      - id
      - name
      - type
      - description
      - capacityGB
      - freeGB
      - usedSpaceGB
    type: object
  RepositoryStatesFilters:
    description: Filters repositories by the specified parameters.
    properties:
      capacityFilter:
        description: Filters repositories by repository capacity.
        format: double
        type: number
      freeSpaceFilter:
        description: Filters repositories by repository free space.
        format: double
        type: number
      idFilter:
        format: uuid
        type: string
      limit:
        description: Returns the specified number of repositories.
        format: int32
        type: integer
      nameFilter:
        description: >-
          Filters repositories by the `nameFilter` pattern. The pattern can
          match any repository parameter. To substitute one or more characters,
          use the asterisk (*) character at the beginning and/or at the end.
        type: string
      orderAsc:
        description: >-
          Sorts repositories in the ascending order by the `orderColumn`
          parameter.
        type: boolean
      orderColumn:
        $ref: '#/definitions/ERepositoryStatesFiltersOrderColumn'
      skip:
        description: Skips the specified number of repositories.
        format: int32
        type: integer
      typeFilter:
        $ref: '#/definitions/ERepositoryType'
      usedSpaceFilter:
        description: Filters repositories by repository used space.
        format: double
        type: number
    type: object
  RepositoryStatesResult:
    properties:
      data:
        description: Array of repository states.
        items:
          $ref: '#/definitions/RepositoryStateModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  ScaleOutExtentMaintenanceSpec:
    properties:
      repositoryIds:
        items:
          format: uuid
          type: string
        type: array
    required:
      - repositoryIds
    type: object
  ScaleOutRepositoriesFilters:
    properties:
      limit:
        description: Maximum number of repositories to return.
        format: int32
        type: integer
      nameFilter:
        description: >-
          Filters repositories by the `nameFilter` substring. The substring can
          be part of any repository parameter.
        type: string
      orderAsc:
        description: >-
          Sorts repositories in the ascending order by the `orderColumn`
          parameter.
        type: boolean
      orderColumn:
        $ref: '#/definitions/EScaleOutRepositoryFiltersOrderColumn'
      skip:
        description: Number of repositories to skip.
        format: int32
        type: integer
    type: object
  ScaleOutRepositoriesResult:
    properties:
      data:
        description: Array of scale-out backup repositories.
        items:
          $ref: '#/definitions/ScaleOutRepositoryModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  ScaleOutRepositoryModel:
    properties:
      archiveTier:
        $ref: '#/definitions/ArchiveTierModel'
      capacityTier:
        $ref: '#/definitions/CapacityTierModel'
      description:
        description: Description of the scale-out backup repository.
        type: string
      id:
        description: ID of the scale-out backup repository.
        format: uuid
        type: string
      name:
        description: Name of the scale-out backup repository.
        type: string
      performanceTier:
        $ref: '#/definitions/PerformanceTierModel'
      placementPolicy:
        $ref: '#/definitions/PlacementPolicyModel'
      tag:
        description: Tag assigned to of the scale-out backup repository.
        type: string
    required:
      - id
      - name
      - description
      - tag
      - performanceTier
    type: object
  ScheduleAfterThisJobModel:
    description: Job chaining options.
    properties:
      isEnabled:
        description: 'If *true*, job chaining is enabled.'
        type: boolean
      jobName:
        description: Name of the preceding job.
        type: string
    required:
      - isEnabled
    type: object
  ScheduleBackupWindowModel:
    properties:
      WindowSetting:
        $ref: '#/definitions/BackupWindowSettingModel'
      isEnabled:
        default: false
        description: 'If *true*, periodic schedule is enabled.'
        type: boolean
    required:
      - isEnabled
    type: object
  ScheduleDailyModel:
    description: Daily scheduling options.
    properties:
      dailyKind:
        $ref: '#/definitions/EDailyKinds'
      days:
        description: Days of the week when the job must start.
        items:
          $ref: '#/definitions/EDayOfWeek'
        type: array
        uniqueItems: true
      isEnabled:
        default: true
        description: 'If *true*, daily schedule is enabled.'
        type: boolean
      localTime:
        description: Local time when the job must start.
        format: time
        type: string
    required:
      - isEnabled
    type: object
  ScheduleMonthlyModel:
    description: Monthly scheduling options.
    properties:
      dayNumberInMonth:
        $ref: '#/definitions/EDayNumberInMonth'
      dayOfMonth:
        description: Day of the month when the job must start.
        type: integer
      dayOfWeek:
        $ref: '#/definitions/EDayOfWeek'
      isEnabled:
        default: false
        description: 'If *true*, monthly schedule is enabled.'
        type: boolean
      localTime:
        description: Local time when the job must start.
        format: time
        type: string
      months:
        description: Months when the job must start.
        items:
          $ref: '#/definitions/EMonth'
        type: array
        uniqueItems: true
    required:
      - isEnabled
    type: object
  SchedulePeriodicallyModel:
    description: Periodic scheduling options.
    properties:
      backupWindow:
        $ref: '#/definitions/BackupWindowSettingModel'
      frequency:
        description: Number of time units that defines the time interval.
        type: integer
      isEnabled:
        default: false
        description: 'If *true*, periodic schedule is enabled.'
        type: boolean
      periodicallyKind:
        $ref: '#/definitions/EPeriodicallyKinds'
    required:
      - isEnabled
    type: object
  ScheduleRetryModel:
    description: Retry options.
    properties:
      awaitMinutes:
        description: Time interval between job retries in minutes.
        type: integer
      isEnabled:
        default: false
        description: 'If *true*, retry options are enabled.'
        type: boolean
      retryCount:
        description: Number of retries set for the job.
        type: integer
    type: object
  ScriptCommand:
    description: Script settings.
    properties:
      command:
        description: Path to the script.
        type: string
      isEnabled:
        description: 'If *true*, script execution is enabled.'
        type: boolean
    required:
      - isEnabled
    type: object
  ServerTimeModel:
    properties:
      serverTime:
        description: Current date and time on the server.
        format: date-time
        type: string
      timeZone:
        type: string
    required:
      - serverTime
    type: object
  ServicesFilters:
    properties:
      limit:
        format: int32
        type: integer
      nameFilter:
        type: string
      orderAsc:
        type: boolean
      orderColumn:
        $ref: '#/definitions/EServicesFiltersOrderColumn'
      skip:
        format: int32
        type: integer
    type: object
  ServicesModel:
    properties:
      name:
        description: Name of the service.
        type: string
      port:
        description: Port used to communicate with the service.
        type: integer
    required:
      - name
      - port
    type: object
  ServicesResult:
    properties:
      data:
        description: Array of services.
        items:
          $ref: '#/definitions/ServicesModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  SessionLogRecordModel:
    description: Record of the session log.
    properties:
      description:
        description: Description of the log record.
        type: string
      id:
        description: ID of the log record.
        type: integer
      startTime:
        description: Date and time the operation was started.
        format: date-time
        type: string
      status:
        $ref: '#/definitions/ETaskLogRecordStatus'
        description: Status of the operation described by the log record.
      title:
        description: Title of the log record.
        type: string
      updateTime:
        description: Date and time the log record was updated.
        format: date-time
        type: string
    type: object
  SessionLogResult:
    description: Log of the session.
    properties:
      records:
        description: Array of log records.
        items:
          $ref: '#/definitions/SessionLogRecordModel'
        type: array
      totalRecords:
        description: Total number of records.
        type: integer
    type: object
  SessionModel:
    properties:
      activityId:
        description: ID of the activity.
        format: uuid
        type: string
      creationTime:
        description: Date and time the session was created.
        format: date-time
        type: string
      endTime:
        description: Date and time the session was ended.
        format: date-time
        type: string
      id:
        description: ID of the session.
        format: uuid
        type: string
      name:
        description: Name of the session.
        type: string
      parentSessionId:
        description: ID of the parent session.
        format: uuid
        type: string
      progressPercent:
        description: Progress percentage of the session.
        type: integer
      resourceId:
        description: ID of the resource.
        format: uuid
        type: string
      resourceReference:
        description: URI of the resource.
        type: string
      result:
        $ref: '#/definitions/SessionResultModel'
      sessionType:
        $ref: '#/definitions/ESessionType'
      state:
        $ref: '#/definitions/ESessionState'
      usn:
        description: Update sequence number.
        format: int64
        type: integer
    required:
      - activityId
      - creationTime
      - id
      - name
      - sessionType
      - state
      - usn
    type: object
  SessionResultModel:
    properties:
      isCanceled:
        description: 'If *true*, the session has been canceled.'
        type: boolean
      message:
        description: Message that explains the session result.
        type: string
      result:
        $ref: '#/definitions/ESessionResult'
    required:
      - result
    type: object
  SessionsFilters:
    properties:
      createdAfterFilter:
        format: date-time
        type: string
      createdBeforeFilter:
        format: date-time
        type: string
      endedAfterFilter:
        format: date-time
        type: string
      endedBeforeFilter:
        format: date-time
        type: string
      jobIdFilter:
        format: uuid
        type: string
      limit:
        format: int32
        type: integer
      nameFilter:
        type: string
      orderAsc:
        type: boolean
      orderColumn:
        $ref: '#/definitions/ESessionsFiltersOrderColumn'
      resultFilter:
        $ref: '#/definitions/ESessionResult'
      skip:
        format: int32
        type: integer
      stateFilter:
        $ref: '#/definitions/ESessionState'
      typeFilter:
        $ref: '#/definitions/ESessionType'
    type: object
  SessionsResult:
    properties:
      data:
        description: Array of sessions.
        items:
          $ref: '#/definitions/SessionModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  SmbRepositoryShareSettingsModel:
    description: Share settings.
    properties:
      credentialsId:
        description: ID of the credentials record used to access the shared folder.
        format: uuid
        type: string
      gatewayServer:
        $ref: '#/definitions/RepositoryShareGatewayModel'
      sharePath:
        description: Path to the shared folder that that is used as a backup repository.
        type: string
    required:
      - credentialsId
      - sharePath
    type: object
  SmbRepositoryShareSettingsSpec:
    properties:
      credentials:
        $ref: '#/definitions/CredentialsImportModel'
      gatewayServer:
        $ref: '#/definitions/RepositoryShareGatewayImportSpec'
      sharePath:
        description: Path to the shared folder that that is used as a backup repository.
        type: string
    required:
      - credentials
      - sharePath
    type: object
  SmbStorageImportSpec:
    properties:
      description:
        description: Description of the backup repository.
        type: string
      mountServer:
        $ref: '#/definitions/MountServerSettingsImportSpec'
      name:
        description: Name of the backup repository.
        type: string
      repository:
        $ref: '#/definitions/NetworkRepositorySettingsModel'
      share:
        $ref: '#/definitions/SmbRepositoryShareSettingsSpec'
      tag:
        description: VMware vSphere tag assigned to the backup repository.
        type: string
      type:
        $ref: '#/definitions/ERepositoryType'
    required:
      - description
      - mountServer
      - name
      - repository
      - share
      - tag
      - type
    type: object
  SmbStorageModel:
    allOf:
      - $ref: '#/definitions/RepositoryModel'
      - properties:
          mountServer:
            $ref: '#/definitions/MountServerSettingsModel'
          repository:
            $ref: '#/definitions/NetworkRepositorySettingsModel'
          share:
            $ref: '#/definitions/SmbRepositoryShareSettingsModel'
        required:
          - mountServer
          - repository
          - share
        type: object
    description: Network attached storage.
  SmbStorageSpec:
    allOf:
      - $ref: '#/definitions/RepositorySpec'
      - properties:
          mountServer:
            $ref: '#/definitions/MountServerSettingsModel'
          repository:
            $ref: '#/definitions/NetworkRepositorySettingsModel'
          share:
            $ref: '#/definitions/SmbRepositoryShareSettingsModel'
        required:
          - mountServer
          - repository
          - share
        type: object
  StandardCredentialsModel:
    allOf:
      - $ref: '#/definitions/CredentialsModel'
      - properties:
          tag:
            description: Tag used to identify the credentials record.
            type: string
        type: object
  StandardCredentialsSpec:
    allOf:
      - $ref: '#/definitions/CredentialsSpec'
      - properties:
          tag:
            description: Tag used to identify the credentials record.
            type: string
        type: object
  SyntheticFullSettingsModel:
    description: Synthetic full backup settings.
    properties:
      days:
        description: >-
          Days of the week when Veeam Backup & Replication creates a synthetic
          full backup.
        items:
          $ref: '#/definitions/EDayOfWeek'
        type: array
        uniqueItems: true
      isEnabled:
        description: 'If *true*, synthetic full backups are enabled.'
        type: boolean
    required:
      - isEnabled
    type: object
  TokenLoginSpec:
    properties:
      code:
        description: >-
          Authorization code. Required if the `grant_type` value is
          `authorization_code`.
        type: string
      grant_type:
        $ref: '#/definitions/ELoginGrantType'
      password:
        description: Password. Required if the `grant_type` value is `password`.
        format: password
        type: string
      refresh_token:
        description: Refresh token. Required if the `grant_type` value is `refresh_token`.
        type: string
      use_short_term_refresh:
        description: >-
          If *true*, a short-term refresh token is used. Lifetime of the
          short-term refresh token is the access token lifetime plus 15 minutes.
        type: boolean
      username:
        description: User name. Required if the `grant_type` value is `password`.
        type: string
    required:
      - grant_type
    type: object
  TokenModel:
    properties:
      .expires:
        description: Date and time the access token expires.
        format: date-time
        type: string
      .issued:
        description: Date and time the access token is issued.
        format: date-time
        type: string
      access_token:
        description: >-
          String that represents authorization issued to the client. It must be
          specified in all requests. An access token can be used multiple times,
          but its lifetime is 15 minutes.
        type: string
      expires_in:
        description: 'Lifetime of the access token, in seconds.'
        format: int32
        type: integer
      refresh_token:
        description: >-
          String that is used to obtain a new access token if the current access
          token expires or becomes lost. A refresh token can be used only once,
          and its default lifetime is 14 days.
        type: string
      token_type:
        description: Type of the access token.
        type: string
    required:
      - .expires
      - .issued
      - access_token
      - expires_in
      - refresh_token
      - token_type
    type: object
  TrafficRuleModel:
    properties:
      encryptionEnabled:
        description: 'If *true*, traffic encryption is enabled.'
        type: boolean
      id:
        description: ID of the rule.
        format: uuid
        type: string
      name:
        description: Name of the rule.
        type: string
      sourceIPEnd:
        description: >-
          End IP address of the range for the backup infrastructure components
          on the source side.
        type: string
      sourceIPStart:
        description: >-
          Start IP address of the range for the backup infrastructure components
          on the source side.
        type: string
      targetIPEnd:
        description: >-
          End IP address of the range for the backup infrastructure components
          on the target side.
        type: string
      targetIPStart:
        description: >-
          Start IP address of the range for the backup infrastructure components
          on the target side.
        type: string
      throttlingEnabled:
        description: 'If *true*, traffic throttling is enabled.'
        type: boolean
      throttlingUnit:
        $ref: '#/definitions/ESpeedUnit'
      throttlingValue:
        description: >-
          Maximum speed that must be used to transfer data from source to
          target.
        format: int32
        type: integer
      throttlingWindowEnabled:
        description: >-
          If *true*, throttling window during which the speed must be limited is
          enabled.
        type: boolean
      throttlingWindowOptions:
        $ref: '#/definitions/BackupWindowSettingModel'
    required:
      - name
      - sourceIPStart
      - sourceIPEnd
      - targetIPStart
      - targetIPEnd
    type: object
  VCenterInventoryFilters:
    properties:
      hierarchyTypeFilter:
        $ref: '#/definitions/EHierarchyType'
      limit:
        description: Maximum number of objects to return.
        format: int32
        type: integer
      nameFilter:
        description: >-
          Filters objects by the `nameFilter` pattern. The pattern can match any
          object parameter. To substitute one or more characters, use the
          asterisk (*) character at the beginning and/or at the end.
        type: string
      objectIdFilter:
        description: Filters objects by object ID.
        type: string
      orderAsc:
        description: Sorts objects in the ascending order by the `orderColumn` parameter.
        type: boolean
      orderColumn:
        $ref: '#/definitions/EvCentersInventoryFiltersOrderColumn'
      parentContainerNameFilter:
        description: Filters objects by name of the parent container.
        type: string
      skip:
        description: Number of objects to skip.
        format: int32
        type: integer
      typeFilter:
        $ref: '#/definitions/EVmwareInventoryType'
    type: object
  VCenterInventoryResult:
    properties:
      data:
        description: Array of vCenter Servers.
        items:
          $ref: '#/definitions/VmwareObjectSizeModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  VPowerNFSPortSettingsModel:
    description: Network ports used by the vPower NFS Service.
    properties:
      mountPort:
        description: Mount port.
        type: integer
      vPowerNFSPort:
        description: vPower NFS port.
        type: integer
    type: object
  VSphereChangedBlockTrackingSettingsModel:
    description: CBT settings for the backup job.
    properties:
      enableCBTautomatically:
        description: >-
          If *true*, CBT is enabled for all processed VMs even if CBT is
          disabled in VM configuration. CBT is used for VMs with virtual
          hardware version 7 or later. These VMs must not have existing
          snapshots.
        type: boolean
      isEnabled:
        description: 'If *true*, CBT data is used.'
        type: boolean
      resetCBTonActiveFull:
        description: 'If *true*, CBT is reset before creating active full backups.'
        type: boolean
    required:
      - isEnabled
    type: object
  ViBackupObjectModel:
    allOf:
      - $ref: '#/definitions/BackupObjectModel'
      - properties:
          objectId:
            description: >
              ID of the virtual infrastructure object: mo-ref or ID, depending
              on the virtualization platform.
            type: string
          path:
            description: Path to the object.
            type: string
          viType:
            $ref: '#/definitions/EVmwareInventoryType'
        required:
          - server
        type: object
  ViHostImportSpec:
    properties:
      certificateThumbprint:
        description: |
          [Optional] Certificate thumbprint used to verify the server identity.
        type: string
      credentials:
        $ref: '#/definitions/CredentialsImportModel'
      description:
        description: Description of the server.
        type: string
      name:
        description: Full DNS name or IP address of the server.
        type: string
      port:
        description: Port used to communicate with the server.
        type: integer
      type:
        $ref: '#/definitions/EManagedServerType'
      viHostType:
        $ref: '#/definitions/EViHostType'
    required:
      - credentials
      - description
      - name
      - type
      - viHostType
    type: object
  ViHostModel:
    allOf:
      - $ref: '#/definitions/ManagedServerModel'
      - properties:
          port:
            description: Port used to communicate with the server.
            type: integer
          viHostType:
            $ref: '#/definitions/EViHostType'
        required:
          - port
        type: object
  ViHostSpec:
    allOf:
      - $ref: '#/definitions/ManagedServerSpec'
      - properties:
          certificateThumbprint:
            description: >
              [Optional] Certificate thumbprint used to verify the server
              identity. For details on how to get the thumbprint, see [Get TLS
              Certificate or SSH
              Fingerprint](#operation/GetConnectionCertificate).
            type: string
          port:
            description: Port used to communicate with the server.
            type: integer
        type: object
  ViProxyModel:
    allOf:
      - $ref: '#/definitions/ProxyModel'
      - properties:
          server:
            $ref: '#/definitions/ProxyServerSettingsModel'
        required:
          - server
        type: object
  ViProxySpec:
    allOf:
      - $ref: '#/definitions/ProxySpec'
      - properties:
          server:
            $ref: '#/definitions/ProxyServerSettingsModel'
        required:
          - server
        type: object
  ViRootFilters:
    properties:
      limit:
        description: Maximum number of VMware vSphere servers to return.
        format: int32
        type: integer
      nameFilter:
        description: >-
          Filters VMware vSphere servers by the `nameFilter` pattern. The
          pattern can match any VMware vSphere server parameter. To substitute
          one or more characters, use the asterisk (*) character at the
          beginning and/or at the end.
        type: string
      orderAsc:
        description: >-
          Sorts VMware vSphere servers in the ascending order by the
          `orderColumn` parameter.
        type: boolean
      orderColumn:
        $ref: '#/definitions/EViRootFiltersOrderColumn'
      skip:
        description: Number of VMware vSphere servers to skip.
        format: int32
        type: integer
    type: object
  ViRootsResult:
    properties:
      data:
        description: Array of VMware vSphere servers.
        items:
          $ref: '#/definitions/VmwareObjectSizeModel'
        type: array
      pagination:
        $ref: '#/definitions/PaginationResult'
    required:
      - data
      - pagination
    type: object
  VmbApiFilterModel:
    properties:
      assemblyVersion:
        type: string
      productId:
        format: uuid
        type: string
      protocolVersion:
        type: integer
      versionFlags:
        type: integer
    required:
      - protocolVersion
      - assemblyVersion
      - productId
      - versionFlags
    type: object
  VmwareFcdInstantRecoveryDiskInfo:
    properties:
      mountedDiskName:
        description: Name of the VMDK file that is stored in the datastore.
        type: string
      nameInBackup:
        description: Disk name displayed in the backup.
        type: string
      objectId:
        description: FCD ID.
        type: string
      registeredFcdName:
        description: >-
          Name under which the disk is registered as an FCD in the vCenter
          Managed Object Browser.
        type: string
    required:
      - nameInBackup
      - mountedDiskName
      - registeredFcdName
      - objectId
    type: object
  VmwareFcdInstantRecoveryDiskSpec:
    properties:
      mountedDiskName:
        description: Name of the VMDK file that will be stored in the datastore.
        type: string
      nameInBackup:
        description: Disk name displayed in the backup.
        type: string
      registeredFcdName:
        description: >-
          Name under which the disk will be registered as an FCD in the vCenter
          Managed Object Browser.
        type: string
    required:
      - nameInBackup
      - mountedDiskName
      - registeredFcdName
    type: object
  VmwareFcdInstantRecoveryMount:
    properties:
      errorMessage:
        type: string
      id:
        description: Mount ID.
        format: uuid
        type: string
      mountedDisks:
        description: Array of mounted disks.
        items:
          $ref: '#/definitions/VmwareFcdInstantRecoveryDiskInfo'
        type: array
      sessionId:
        description: >-
          ID of the restore session. Use the ID to track the progress. For
          details, see [Get Session](#operation/GetSession).
        format: uuid
        type: string
      spec:
        $ref: '#/definitions/VmwareFcdInstantRecoverySpec'
      state:
        $ref: '#/definitions/EInstantRecoveryMountState'
    required:
      - id
      - sessionId
      - state
      - spec
    type: object
  VmwareFcdInstantRecoverySpec:
    properties:
      destinationCluster:
        allOf:
          - $ref: '#/definitions/VmwareObjectModel'
        description: Destination cluster.
      disksMapping:
        description: Array of disks that will be restored.
        items:
          $ref: '#/definitions/VmwareFcdInstantRecoveryDiskSpec'
        type: array
      objectRestorePointId:
        description: ID of the restore point.
        format: uuid
        type: string
      writeCache:
        $ref: '#/definitions/VmwareFcdWriteCacheSpec'
    required:
      - objectRestorePointId
      - destinationCluster
      - disksMapping
    type: object
  VmwareFcdQuickMigrationSpec:
    properties:
      mountedDiskNames:
        description: >-
          Array of disks that will be migrated to the `targetDatastore`
          associated with the `storagePolicy`.
        items:
          type: string
        type: array
      storagePolicy:
        allOf:
          - $ref: '#/definitions/VmwareObjectModel'
        description: >-
          Storage policy that will be applied to the migrated disks. For details
          on how to get a storage policy model, see [Get VMware vSphere Server
          Objects](#operation/GetVmwareHostObject).
      targetDatastore:
        allOf:
          - $ref: '#/definitions/VmwareObjectModel'
        description: >-
          Target datastore. For details on how to get a datastore model, see
          [Get VMware vSphere Server Objects](#operation/GetVmwareHostObject).
    required:
      - targetDatastore
    type: object
  VmwareFcdWriteCacheSpec:
    description: Write cache for recovered disks.
    properties:
      cacheDatastore:
        $ref: '#/definitions/VmwareObjectModel'
      redirectIsEnabled:
        description: >-
          If *true*, cache redirection is enabled. In this case, all changes
          made to the recovered disks while the Instant FCD Recovery is active
          are redirected to the specified `cacheDatastore` associated with the
          `storagePolicy`.
        type: boolean
      storagePolicy:
        $ref: '#/definitions/VmwareObjectModel'
    required:
      - redirectIsEnabled
    type: object
  VmwareObjectDiskModel:
    properties:
      disks:
        description: Array of disks.
        items:
          description: ID of the disk.
          type: string
        type: array
      disksToProcess:
        $ref: '#/definitions/EVmwareDisksTypeToProcess'
      removeFromVMConfiguration:
        description: 'If *true*, the disk is removed from VM configuration.'
        type: boolean
      vmObject:
        $ref: '#/definitions/VmwareObjectModel'
    required:
      - disks
      - disksToProcess
      - vmObject
    type: object
  VmwareObjectModel:
    description: VMware object.
    properties:
      hostName:
        description: Name of the host.
        type: string
      name:
        description: Name of the VMware vSphere object.
        type: string
      objectId:
        description: ID of the VMware vSphere object.
        type: string
      type:
        $ref: '#/definitions/EVmwareInventoryType'
    required:
      - name
      - type
      - hostName
    type: object
  VmwareObjectSizeModel:
    properties:
      inventoryObject:
        $ref: '#/definitions/VmwareObjectModel'
      size:
        description: Size used by the VMware vSphere object.
        type: string
    required:
      - inventoryObject
    type: object
  WindowsHostComponentPortModel:
    description: Ports used by Veeam Backup & Replication components.
    properties:
      componentName:
        $ref: '#/definitions/EWindowsHostComponentType'
      port:
        description: Port used by the component.
        type: integer
    required:
      - componentName
      - port
    type: object
  WindowsHostImportSpec:
    properties:
      credentials:
        $ref: '#/definitions/CredentialsImportModel'
      description:
        description: Description of the server.
        type: string
      name:
        description: Full DNS name or IP address of the server.
        type: string
      networkSettings:
        $ref: '#/definitions/WindowsHostPortsModel'
      type:
        $ref: '#/definitions/EManagedServerType'
    required:
      - description
      - name
      - type
    type: object
  WindowsHostModel:
    allOf:
      - $ref: '#/definitions/ManagedServerModel'
      - properties:
          networkSettings:
            $ref: '#/definitions/WindowsHostPortsModel'
        type: object
  WindowsHostPortsModel:
    description: Network ports.
    properties:
      components:
        items:
          $ref: '#/definitions/WindowsHostComponentPortModel'
        type: array
      portRangeEnd:
        description: End port used for data transfer.
        type: integer
      portRangeStart:
        description: Start port used for data transfer.
        type: integer
      serverThisSide:
        description: 'If *true*, the server is run on this side.'
        type: boolean
    type: object
  WindowsHostSpec:
    allOf:
      - $ref: '#/definitions/ManagedServerSpec'
      - properties:
          networkSettings:
            $ref: '#/definitions/WindowsHostPortsModel'
        type: object
  WindowsLocalRepositorySettingsModel:
    description: Repository settings.
    properties:
      advancedSettings:
        $ref: '#/definitions/RepositoryAdvancedSettingsModel'
      maxTaskCount:
        description: Maximum number of concurrent tasks.
        type: integer
      path:
        description: Path to the folder where backup files are stored.
        type: string
      readWriteRate:
        description: >-
          Maximum rate that restricts the total speed of reading and writing
          data to the backup repository disk.
        type: integer
    type: object
  WindowsLocalStorageImportSpec:
    properties:
      description:
        description: Description of the backup repository.
        type: string
      hostName:
        description: ID of the server that is used as a backup repository.
        type: string
      mountServer:
        $ref: '#/definitions/MountServerSettingsImportSpec'
      name:
        description: Name of the backup repository.
        type: string
      repository:
        $ref: '#/definitions/WindowsLocalRepositorySettingsModel'
      tag:
        description: VMware vSphere tag assigned to the backup repository.
        type: string
      type:
        $ref: '#/definitions/ERepositoryType'
    required:
      - description
      - hostName
      - mountServer
      - name
      - repository
      - tag
      - type
    type: object
  WindowsLocalStorageModel:
    allOf:
      - $ref: '#/definitions/RepositoryModel'
      - properties:
          hostId:
            description: ID of the server that is used as a backup repository.
            format: uuid
            type: string
          mountServer:
            $ref: '#/definitions/MountServerSettingsModel'
          repository:
            $ref: '#/definitions/WindowsLocalRepositorySettingsModel'
        required:
          - hostId
          - mountServer
          - repository
        type: object
    description: Direct attached storage.
  WindowsLocalStorageSpec:
    allOf:
      - $ref: '#/definitions/RepositorySpec'
      - properties:
          hostId:
            description: ID of the server that is used as a backup repository.
            format: uuid
            type: string
          mountServer:
            $ref: '#/definitions/MountServerSettingsModel'
          repository:
            $ref: '#/definitions/WindowsLocalRepositorySettingsModel'
        required:
          - hostId
          - mountServer
          - repository
        type: object
securityDefinitions:
  Bearer:
    description: Access token in the *Bearer \<access token\>* format.
    in: header
    name: Authorization
    type: apiKey
security:
  - Bearer: []
tags:
  - description: >
      The authorization process involves obtaining an access token and a refresh
      token.<br> For details on the authorization process and security settings,
      see the [Authorization and
      Security](https://helpcenter.veeam.com/docs/backup/vbr_rest/authorization_security.html)
      section of the Veeam Backup & Replication REST API Reference.
    name: Login
  - description: >
      The Service section defines paths and operations for retrieving current
      date and time and a certificate of the backup server where the REST API
      service is running.
    name: Service
  - description: >
      The Services section defines a path and operation for retrieving
      information about associated backend services. You may need to connect to
      these services for integration with Veeam Backup & Replication only.
    name: Services
  - description: >
      The Traffic Rules section defines paths and operations for retrieving and
      editing information about network traffic rules that are configured on the
      backup server.
    name: Traffic Rules
  - description: >
      The General Options section defines paths and operations for retrieving
      and editing general options of Veeam Backup & Replication.
    name: General Options
  - description: >
      The Configuration Backup section defines paths and operations for
      retrieving and editing general options of Veeam Backup & Replication.
    name: Configuration Backup
  - description: >
      The Sessions section defines paths and operations for managing sessions
      (except [automation sessions](#operation/GetAllAutomationSessions))
      performed on the backup server.
    name: Sessions
  - description: >
      The Connection section defines a path and operation for retrieving a TLS
      certificate or SSH fingerprint used to establish a secure connection
      between the backup server and the specified server.
    name: Connection
  - description: >
      The Inventory Browser section defines paths and operations for retrieving
      VMware vSphere servers and their virtual infrastructure objects
      (datacenters, clusters, hosts, resource pools, VMs).<br> <div
      class="note"><strong>NOTE</strong><br>In the current version, you can
      browse VMware vSphere objects only.</div>
    name: Inventory Browser
  - description: >
      The Managed Servers section defines paths and operations for managing
      servers that are added to the backup infrastructure.<br> <div
      class="note"><strong>NOTE</strong><br>In the current version, the REST API
      supports the following server types: VMware vSphere, Linux and
      Windows.</div>
    name: Managed Servers
  - description: >
      The Repositories section defines paths and operations for managing backup
      repositories that are added to the backup infrastructure.<br> <div
      class="note"><strong>NOTE</strong><br>In the current version, the REST API
      supports direct attached and network attached storages only.</div>
    name: Repositories
  - description: >
      The Proxies section defines paths and operations for managing backup
      proxies that are added to the backup infrastructure.<br> <div
      class="note"><strong>NOTE</strong><br>In the current version, the REST API
      supports VMware backup proxies only.</div>
    name: Proxies
  - description: >
      The Jobs section defines paths and operations for managing jobs that are
      coordinated by the backup server.<br> <div
      class="note"><strong>NOTE</strong><br>In the current version, the REST API
      supports backup jobs with VMware VMs only.</div>
    name: Jobs
  - description: >
      The Credentials section defines paths and operations for managing
      credentials records that are added to the backup server.
    name: Credentials
  - description: >-
      The Encryption section defines paths and operations for managing passwords
      that are used for data encryption.
    name: Encryption
  - description: >-
      The Backups section defines paths and operations for managing backups that
      are created on or imported to the backup server.
    name: Backups
  - description: >
      The Backup Objects section defines paths and operations for managing
      backup objects — virtual infrastructure objects (VMs and VM containers)
      that are inсluded in backups created by the backup server.
    name: Backup Objects
  - description: >-
      The Object Restore Points section defines paths and operations for
      retrieving restore points created on the backup server and backed up disks
      from the restore points.
    name: Object Restore Points
  - description: >
      The Restore section defines paths and operations for performing
      restore.<br> <div class="note"><strong>NOTE</strong><br>In the current
      version, you can restore only disks that will be registered as First Class
      Disks (FCD) — a type of virtual disks that can be managed independent of
      any VM.</div>
    name: Restore
  - description: >
      The Automation section defines paths and operations for granular import
      and export of objects available in the REST API. It can be useful, for
      example, if you set up the backup infrastructure using JSON specification
      or migrate the infrastructure to another backup server. For details, see
      [Mass
      Deployment](https://helpcenter.veeam.com/docs/backup/vbr_rest/automation.html).
    name: Automation
x-components:
  parameters:
    apiVersionParam:
      default: 1.0-rev1
      description: |
        Version and revision of the client REST API. Must be in the following
        format: *\<version\>-\<revision\>*.
      in: header
      name: x-api-version
      required: true
      type: string
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Error'
      description: >-
        Bad request. This error is related to POST/PUT requests. The request
        body is malformed, incomplete or otherwise invalid.
    Deleted:
      content:
        application/json:
          schema:
            $ref: '#/definitions/EmptySuccessResponse'
      description: Removed.
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Error'
      description: >-
        Forbidden. The user sending the request does not have adequate
        privileges to access one or more objects specified in the request.
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Error'
      description: >-
        Internal server error. The request has been received but could not be
        completed because of an internal error at the server side.
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Error'
      description: >-
        Not found. No object was found with the path parameter specified in the
        request.
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Error'
      description: >-
        Unauthorized. The authorization header has been expected but not found
        (or found but is expired).

