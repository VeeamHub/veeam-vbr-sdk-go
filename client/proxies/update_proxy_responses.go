// Code generated by go-swagger; DO NOT EDIT.

package proxies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// UpdateProxyReader is a Reader for the UpdateProxy structure.
type UpdateProxyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProxyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateProxyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateProxyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateProxyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateProxyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateProxyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateProxyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateProxyCreated creates a UpdateProxyCreated with default headers values
func NewUpdateProxyCreated() *UpdateProxyCreated {
	return &UpdateProxyCreated{}
}

/* UpdateProxyCreated describes a response with status code 201, with default header values.

Infrastructure session has been created to edit the proxy. To check the progress, track the session `state`.
*/
type UpdateProxyCreated struct {
	Payload *models.SessionModel
}

func (o *UpdateProxyCreated) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/proxies/{id}][%d] updateProxyCreated  %+v", 201, o.Payload)
}
func (o *UpdateProxyCreated) GetPayload() *models.SessionModel {
	return o.Payload
}

func (o *UpdateProxyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProxyBadRequest creates a UpdateProxyBadRequest with default headers values
func NewUpdateProxyBadRequest() *UpdateProxyBadRequest {
	return &UpdateProxyBadRequest{}
}

/* UpdateProxyBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type UpdateProxyBadRequest struct {
	Payload *models.Error
}

func (o *UpdateProxyBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/proxies/{id}][%d] updateProxyBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateProxyBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateProxyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProxyUnauthorized creates a UpdateProxyUnauthorized with default headers values
func NewUpdateProxyUnauthorized() *UpdateProxyUnauthorized {
	return &UpdateProxyUnauthorized{}
}

/* UpdateProxyUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type UpdateProxyUnauthorized struct {
	Payload *models.Error
}

func (o *UpdateProxyUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/proxies/{id}][%d] updateProxyUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateProxyUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateProxyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProxyForbidden creates a UpdateProxyForbidden with default headers values
func NewUpdateProxyForbidden() *UpdateProxyForbidden {
	return &UpdateProxyForbidden{}
}

/* UpdateProxyForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type UpdateProxyForbidden struct {
	Payload *models.Error
}

func (o *UpdateProxyForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/proxies/{id}][%d] updateProxyForbidden  %+v", 403, o.Payload)
}
func (o *UpdateProxyForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateProxyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProxyNotFound creates a UpdateProxyNotFound with default headers values
func NewUpdateProxyNotFound() *UpdateProxyNotFound {
	return &UpdateProxyNotFound{}
}

/* UpdateProxyNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type UpdateProxyNotFound struct {
	Payload *models.Error
}

func (o *UpdateProxyNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/proxies/{id}][%d] updateProxyNotFound  %+v", 404, o.Payload)
}
func (o *UpdateProxyNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateProxyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProxyInternalServerError creates a UpdateProxyInternalServerError with default headers values
func NewUpdateProxyInternalServerError() *UpdateProxyInternalServerError {
	return &UpdateProxyInternalServerError{}
}

/* UpdateProxyInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type UpdateProxyInternalServerError struct {
	Payload *models.Error
}

func (o *UpdateProxyInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/proxies/{id}][%d] updateProxyInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateProxyInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateProxyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
