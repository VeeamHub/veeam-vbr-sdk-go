// Code generated by go-swagger; DO NOT EDIT.

package proxies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// CreateProxyReader is a Reader for the CreateProxy structure.
type CreateProxyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProxyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateProxyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProxyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateProxyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateProxyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateProxyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateProxyCreated creates a CreateProxyCreated with default headers values
func NewCreateProxyCreated() *CreateProxyCreated {
	return &CreateProxyCreated{}
}

/* CreateProxyCreated describes a response with status code 201, with default header values.

Infrastructure session has been created to add the proxy. To check the progress, track the session `state`.
*/
type CreateProxyCreated struct {
	Payload *models.SessionModel
}

func (o *CreateProxyCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/backupInfrastructure/proxies][%d] createProxyCreated  %+v", 201, o.Payload)
}
func (o *CreateProxyCreated) GetPayload() *models.SessionModel {
	return o.Payload
}

func (o *CreateProxyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProxyBadRequest creates a CreateProxyBadRequest with default headers values
func NewCreateProxyBadRequest() *CreateProxyBadRequest {
	return &CreateProxyBadRequest{}
}

/* CreateProxyBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type CreateProxyBadRequest struct {
	Payload *models.Error
}

func (o *CreateProxyBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/backupInfrastructure/proxies][%d] createProxyBadRequest  %+v", 400, o.Payload)
}
func (o *CreateProxyBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateProxyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProxyUnauthorized creates a CreateProxyUnauthorized with default headers values
func NewCreateProxyUnauthorized() *CreateProxyUnauthorized {
	return &CreateProxyUnauthorized{}
}

/* CreateProxyUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type CreateProxyUnauthorized struct {
	Payload *models.Error
}

func (o *CreateProxyUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/backupInfrastructure/proxies][%d] createProxyUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateProxyUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateProxyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProxyForbidden creates a CreateProxyForbidden with default headers values
func NewCreateProxyForbidden() *CreateProxyForbidden {
	return &CreateProxyForbidden{}
}

/* CreateProxyForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type CreateProxyForbidden struct {
	Payload *models.Error
}

func (o *CreateProxyForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/backupInfrastructure/proxies][%d] createProxyForbidden  %+v", 403, o.Payload)
}
func (o *CreateProxyForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateProxyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProxyInternalServerError creates a CreateProxyInternalServerError with default headers values
func NewCreateProxyInternalServerError() *CreateProxyInternalServerError {
	return &CreateProxyInternalServerError{}
}

/* CreateProxyInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type CreateProxyInternalServerError struct {
	Payload *models.Error
}

func (o *CreateProxyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/backupInfrastructure/proxies][%d] createProxyInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateProxyInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateProxyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
