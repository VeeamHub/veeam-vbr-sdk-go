/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev1
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// EncryptionPasswordExportSpec struct for EncryptionPasswordExportSpec
type EncryptionPasswordExportSpec struct {
	// Date and time the password was last modified.
	ModificationTimeFrom *time.Time `json:"modificationTimeFrom,omitempty"`
	// Array of password IDs.
	Ids *[]string `json:"ids,omitempty"`
	// Array of password hints.
	Hints *[]string `json:"hints,omitempty"`
	// Array of password tags.
	Tags *[]string `json:"tags,omitempty"`
}

// NewEncryptionPasswordExportSpec instantiates a new EncryptionPasswordExportSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEncryptionPasswordExportSpec() *EncryptionPasswordExportSpec {
	this := EncryptionPasswordExportSpec{}
	return &this
}

// NewEncryptionPasswordExportSpecWithDefaults instantiates a new EncryptionPasswordExportSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEncryptionPasswordExportSpecWithDefaults() *EncryptionPasswordExportSpec {
	this := EncryptionPasswordExportSpec{}
	return &this
}

// GetModificationTimeFrom returns the ModificationTimeFrom field value if set, zero value otherwise.
func (o *EncryptionPasswordExportSpec) GetModificationTimeFrom() time.Time {
	if o == nil || o.ModificationTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.ModificationTimeFrom
}

// GetModificationTimeFromOk returns a tuple with the ModificationTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EncryptionPasswordExportSpec) GetModificationTimeFromOk() (*time.Time, bool) {
	if o == nil || o.ModificationTimeFrom == nil {
		return nil, false
	}
	return o.ModificationTimeFrom, true
}

// HasModificationTimeFrom returns a boolean if a field has been set.
func (o *EncryptionPasswordExportSpec) HasModificationTimeFrom() bool {
	if o != nil && o.ModificationTimeFrom != nil {
		return true
	}

	return false
}

// SetModificationTimeFrom gets a reference to the given time.Time and assigns it to the ModificationTimeFrom field.
func (o *EncryptionPasswordExportSpec) SetModificationTimeFrom(v time.Time) {
	o.ModificationTimeFrom = &v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *EncryptionPasswordExportSpec) GetIds() []string {
	if o == nil || o.Ids == nil {
		var ret []string
		return ret
	}
	return *o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EncryptionPasswordExportSpec) GetIdsOk() (*[]string, bool) {
	if o == nil || o.Ids == nil {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *EncryptionPasswordExportSpec) HasIds() bool {
	if o != nil && o.Ids != nil {
		return true
	}

	return false
}

// SetIds gets a reference to the given []string and assigns it to the Ids field.
func (o *EncryptionPasswordExportSpec) SetIds(v []string) {
	o.Ids = &v
}

// GetHints returns the Hints field value if set, zero value otherwise.
func (o *EncryptionPasswordExportSpec) GetHints() []string {
	if o == nil || o.Hints == nil {
		var ret []string
		return ret
	}
	return *o.Hints
}

// GetHintsOk returns a tuple with the Hints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EncryptionPasswordExportSpec) GetHintsOk() (*[]string, bool) {
	if o == nil || o.Hints == nil {
		return nil, false
	}
	return o.Hints, true
}

// HasHints returns a boolean if a field has been set.
func (o *EncryptionPasswordExportSpec) HasHints() bool {
	if o != nil && o.Hints != nil {
		return true
	}

	return false
}

// SetHints gets a reference to the given []string and assigns it to the Hints field.
func (o *EncryptionPasswordExportSpec) SetHints(v []string) {
	o.Hints = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *EncryptionPasswordExportSpec) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EncryptionPasswordExportSpec) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *EncryptionPasswordExportSpec) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *EncryptionPasswordExportSpec) SetTags(v []string) {
	o.Tags = &v
}

func (o EncryptionPasswordExportSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ModificationTimeFrom != nil {
		toSerialize["modificationTimeFrom"] = o.ModificationTimeFrom
	}
	if o.Ids != nil {
		toSerialize["ids"] = o.Ids
	}
	if o.Hints != nil {
		toSerialize["hints"] = o.Hints
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableEncryptionPasswordExportSpec struct {
	value *EncryptionPasswordExportSpec
	isSet bool
}

func (v NullableEncryptionPasswordExportSpec) Get() *EncryptionPasswordExportSpec {
	return v.value
}

func (v *NullableEncryptionPasswordExportSpec) Set(val *EncryptionPasswordExportSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableEncryptionPasswordExportSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableEncryptionPasswordExportSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEncryptionPasswordExportSpec(val *EncryptionPasswordExportSpec) *NullableEncryptionPasswordExportSpec {
	return &NullableEncryptionPasswordExportSpec{value: val, isSet: true}
}

func (v NullableEncryptionPasswordExportSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEncryptionPasswordExportSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


