/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev2
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// ELoginGrantType Authorization grant type.  Available values: - `password` — used to obtain an access token by providing a user name and password. - `refresh_token` — used to refresh an expired or lost access token by providing a refresh token. - `authorization_code` — used to obtain an access token by providing an authorization code. 
type ELoginGrantType string

// List of ELoginGrantType
const (
	ELOGINGRANTTYPE_PASSWORD ELoginGrantType = "password"
	ELOGINGRANTTYPE_REFRESH_TOKEN ELoginGrantType = "refresh_token"
	ELOGINGRANTTYPE_AUTHORIZATION_CODE ELoginGrantType = "authorization_code"
)

func (v *ELoginGrantType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ELoginGrantType(value)
	for _, existing := range []ELoginGrantType{ "password", "refresh_token", "authorization_code",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ELoginGrantType", value)
}

// Ptr returns reference to ELoginGrantType value
func (v ELoginGrantType) Ptr() *ELoginGrantType {
	return &v
}

type NullableELoginGrantType struct {
	value *ELoginGrantType
	isSet bool
}

func (v NullableELoginGrantType) Get() *ELoginGrantType {
	return v.value
}

func (v *NullableELoginGrantType) Set(val *ELoginGrantType) {
	v.value = val
	v.isSet = true
}

func (v NullableELoginGrantType) IsSet() bool {
	return v.isSet
}

func (v *NullableELoginGrantType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableELoginGrantType(val *ELoginGrantType) *NullableELoginGrantType {
	return &NullableELoginGrantType{value: val, isSet: true}
}

func (v NullableELoginGrantType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableELoginGrantType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

