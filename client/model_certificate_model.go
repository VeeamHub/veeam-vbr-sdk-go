/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev2
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// CertificateModel struct for CertificateModel
type CertificateModel struct {
	// Thumbprint of the certificate.
	Thumbprint string `json:"thumbprint"`
	// Serial number of the certificate.
	SerialNumber string `json:"serialNumber"`
	// Key algorithm of the certificate.
	KeyAlgorithm string `json:"keyAlgorithm"`
	// Key size of the certificate.
	KeySize string `json:"keySize"`
	// Subject of the certificate.
	Subject string `json:"subject"`
	// Acquirer of the certificate.
	IssuedTo string `json:"issuedTo"`
	// Issuer of the certificate.
	IssuedBy string `json:"issuedBy"`
	// Date and time the certificate is valid from.
	ValidFrom time.Time `json:"validFrom"`
	// Expiration date and time of the certificate.
	ValidBy time.Time `json:"validBy"`
}

// NewCertificateModel instantiates a new CertificateModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateModel(thumbprint string, serialNumber string, keyAlgorithm string, keySize string, subject string, issuedTo string, issuedBy string, validFrom time.Time, validBy time.Time, ) *CertificateModel {
	this := CertificateModel{}
	this.Thumbprint = thumbprint
	this.SerialNumber = serialNumber
	this.KeyAlgorithm = keyAlgorithm
	this.KeySize = keySize
	this.Subject = subject
	this.IssuedTo = issuedTo
	this.IssuedBy = issuedBy
	this.ValidFrom = validFrom
	this.ValidBy = validBy
	return &this
}

// NewCertificateModelWithDefaults instantiates a new CertificateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateModelWithDefaults() *CertificateModel {
	this := CertificateModel{}
	return &this
}

// GetThumbprint returns the Thumbprint field value
func (o *CertificateModel) GetThumbprint() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Thumbprint
}

// GetThumbprintOk returns a tuple with the Thumbprint field value
// and a boolean to check if the value has been set.
func (o *CertificateModel) GetThumbprintOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Thumbprint, true
}

// SetThumbprint sets field value
func (o *CertificateModel) SetThumbprint(v string) {
	o.Thumbprint = v
}

// GetSerialNumber returns the SerialNumber field value
func (o *CertificateModel) GetSerialNumber() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value
// and a boolean to check if the value has been set.
func (o *CertificateModel) GetSerialNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SerialNumber, true
}

// SetSerialNumber sets field value
func (o *CertificateModel) SetSerialNumber(v string) {
	o.SerialNumber = v
}

// GetKeyAlgorithm returns the KeyAlgorithm field value
func (o *CertificateModel) GetKeyAlgorithm() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.KeyAlgorithm
}

// GetKeyAlgorithmOk returns a tuple with the KeyAlgorithm field value
// and a boolean to check if the value has been set.
func (o *CertificateModel) GetKeyAlgorithmOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeyAlgorithm, true
}

// SetKeyAlgorithm sets field value
func (o *CertificateModel) SetKeyAlgorithm(v string) {
	o.KeyAlgorithm = v
}

// GetKeySize returns the KeySize field value
func (o *CertificateModel) GetKeySize() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.KeySize
}

// GetKeySizeOk returns a tuple with the KeySize field value
// and a boolean to check if the value has been set.
func (o *CertificateModel) GetKeySizeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeySize, true
}

// SetKeySize sets field value
func (o *CertificateModel) SetKeySize(v string) {
	o.KeySize = v
}

// GetSubject returns the Subject field value
func (o *CertificateModel) GetSubject() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *CertificateModel) GetSubjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *CertificateModel) SetSubject(v string) {
	o.Subject = v
}

// GetIssuedTo returns the IssuedTo field value
func (o *CertificateModel) GetIssuedTo() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.IssuedTo
}

// GetIssuedToOk returns a tuple with the IssuedTo field value
// and a boolean to check if the value has been set.
func (o *CertificateModel) GetIssuedToOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IssuedTo, true
}

// SetIssuedTo sets field value
func (o *CertificateModel) SetIssuedTo(v string) {
	o.IssuedTo = v
}

// GetIssuedBy returns the IssuedBy field value
func (o *CertificateModel) GetIssuedBy() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.IssuedBy
}

// GetIssuedByOk returns a tuple with the IssuedBy field value
// and a boolean to check if the value has been set.
func (o *CertificateModel) GetIssuedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IssuedBy, true
}

// SetIssuedBy sets field value
func (o *CertificateModel) SetIssuedBy(v string) {
	o.IssuedBy = v
}

// GetValidFrom returns the ValidFrom field value
func (o *CertificateModel) GetValidFrom() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value
// and a boolean to check if the value has been set.
func (o *CertificateModel) GetValidFromOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ValidFrom, true
}

// SetValidFrom sets field value
func (o *CertificateModel) SetValidFrom(v time.Time) {
	o.ValidFrom = v
}

// GetValidBy returns the ValidBy field value
func (o *CertificateModel) GetValidBy() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.ValidBy
}

// GetValidByOk returns a tuple with the ValidBy field value
// and a boolean to check if the value has been set.
func (o *CertificateModel) GetValidByOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ValidBy, true
}

// SetValidBy sets field value
func (o *CertificateModel) SetValidBy(v time.Time) {
	o.ValidBy = v
}

func (o CertificateModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["thumbprint"] = o.Thumbprint
	}
	if true {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if true {
		toSerialize["keyAlgorithm"] = o.KeyAlgorithm
	}
	if true {
		toSerialize["keySize"] = o.KeySize
	}
	if true {
		toSerialize["subject"] = o.Subject
	}
	if true {
		toSerialize["issuedTo"] = o.IssuedTo
	}
	if true {
		toSerialize["issuedBy"] = o.IssuedBy
	}
	if true {
		toSerialize["validFrom"] = o.ValidFrom
	}
	if true {
		toSerialize["validBy"] = o.ValidBy
	}
	return json.Marshal(toSerialize)
}

type NullableCertificateModel struct {
	value *CertificateModel
	isSet bool
}

func (v NullableCertificateModel) Get() *CertificateModel {
	return v.value
}

func (v *NullableCertificateModel) Set(val *CertificateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateModel(val *CertificateModel) *NullableCertificateModel {
	return &NullableCertificateModel{value: val, isSet: true}
}

func (v NullableCertificateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


