/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// GFSPolicySettingsWeeklyModel Weekly GFS retention policy.
type GFSPolicySettingsWeeklyModel struct {
	// If *true*, the weekly GFS retention policy is enabled.
	IsEnabled bool `json:"isEnabled"`
	// Number of weeks to keep full backups for archival purposes. Possible values are from 1 through 9999.
	KeepForNumberOfWeeks *int32 `json:"keepForNumberOfWeeks,omitempty"`
	DesiredTime *EDayOfWeek `json:"desiredTime,omitempty"`
}

// NewGFSPolicySettingsWeeklyModel instantiates a new GFSPolicySettingsWeeklyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGFSPolicySettingsWeeklyModel(isEnabled bool) *GFSPolicySettingsWeeklyModel {
	this := GFSPolicySettingsWeeklyModel{}
	this.IsEnabled = isEnabled
	return &this
}

// NewGFSPolicySettingsWeeklyModelWithDefaults instantiates a new GFSPolicySettingsWeeklyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGFSPolicySettingsWeeklyModelWithDefaults() *GFSPolicySettingsWeeklyModel {
	this := GFSPolicySettingsWeeklyModel{}
	return &this
}

// GetIsEnabled returns the IsEnabled field value
func (o *GFSPolicySettingsWeeklyModel) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *GFSPolicySettingsWeeklyModel) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *GFSPolicySettingsWeeklyModel) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetKeepForNumberOfWeeks returns the KeepForNumberOfWeeks field value if set, zero value otherwise.
func (o *GFSPolicySettingsWeeklyModel) GetKeepForNumberOfWeeks() int32 {
	if o == nil || isNil(o.KeepForNumberOfWeeks) {
		var ret int32
		return ret
	}
	return *o.KeepForNumberOfWeeks
}

// GetKeepForNumberOfWeeksOk returns a tuple with the KeepForNumberOfWeeks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GFSPolicySettingsWeeklyModel) GetKeepForNumberOfWeeksOk() (*int32, bool) {
	if o == nil || isNil(o.KeepForNumberOfWeeks) {
    return nil, false
	}
	return o.KeepForNumberOfWeeks, true
}

// HasKeepForNumberOfWeeks returns a boolean if a field has been set.
func (o *GFSPolicySettingsWeeklyModel) HasKeepForNumberOfWeeks() bool {
	if o != nil && !isNil(o.KeepForNumberOfWeeks) {
		return true
	}

	return false
}

// SetKeepForNumberOfWeeks gets a reference to the given int32 and assigns it to the KeepForNumberOfWeeks field.
func (o *GFSPolicySettingsWeeklyModel) SetKeepForNumberOfWeeks(v int32) {
	o.KeepForNumberOfWeeks = &v
}

// GetDesiredTime returns the DesiredTime field value if set, zero value otherwise.
func (o *GFSPolicySettingsWeeklyModel) GetDesiredTime() EDayOfWeek {
	if o == nil || isNil(o.DesiredTime) {
		var ret EDayOfWeek
		return ret
	}
	return *o.DesiredTime
}

// GetDesiredTimeOk returns a tuple with the DesiredTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GFSPolicySettingsWeeklyModel) GetDesiredTimeOk() (*EDayOfWeek, bool) {
	if o == nil || isNil(o.DesiredTime) {
    return nil, false
	}
	return o.DesiredTime, true
}

// HasDesiredTime returns a boolean if a field has been set.
func (o *GFSPolicySettingsWeeklyModel) HasDesiredTime() bool {
	if o != nil && !isNil(o.DesiredTime) {
		return true
	}

	return false
}

// SetDesiredTime gets a reference to the given EDayOfWeek and assigns it to the DesiredTime field.
func (o *GFSPolicySettingsWeeklyModel) SetDesiredTime(v EDayOfWeek) {
	o.DesiredTime = &v
}

func (o GFSPolicySettingsWeeklyModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if !isNil(o.KeepForNumberOfWeeks) {
		toSerialize["keepForNumberOfWeeks"] = o.KeepForNumberOfWeeks
	}
	if !isNil(o.DesiredTime) {
		toSerialize["desiredTime"] = o.DesiredTime
	}
	return json.Marshal(toSerialize)
}

type NullableGFSPolicySettingsWeeklyModel struct {
	value *GFSPolicySettingsWeeklyModel
	isSet bool
}

func (v NullableGFSPolicySettingsWeeklyModel) Get() *GFSPolicySettingsWeeklyModel {
	return v.value
}

func (v *NullableGFSPolicySettingsWeeklyModel) Set(val *GFSPolicySettingsWeeklyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableGFSPolicySettingsWeeklyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableGFSPolicySettingsWeeklyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGFSPolicySettingsWeeklyModel(val *GFSPolicySettingsWeeklyModel) *NullableGFSPolicySettingsWeeklyModel {
	return &NullableGFSPolicySettingsWeeklyModel{value: val, isSet: true}
}

func (v NullableGFSPolicySettingsWeeklyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGFSPolicySettingsWeeklyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


