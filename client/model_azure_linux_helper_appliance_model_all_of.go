/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AzureLinuxHelperApplianceModelAllOf Lunux-based helper appliance for Microsoft Azure account.
type AzureLinuxHelperApplianceModelAllOf struct {
	// Helper appliance ID.
	Id string `json:"id"`
	// ID that Veeam Backup & Replication assigned to the Azure subscription.
	SubscriptionId string `json:"subscriptionId"`
	// VM name of the helper appliance.
	VmName *string `json:"vmName,omitempty"`
	// Storage account location where the helper appliance is configured.
	Location *string `json:"location,omitempty"`
	// Azure storage account whose resources are used to store disks of the helper appliance.
	StorageAccount *string `json:"storageAccount,omitempty"`
	// Resource group associated with the helper appliance.
	ResourceGroup *string `json:"resourceGroup,omitempty"`
	// Network to which the helper appliance is connected.
	VirtualNetwork *string `json:"virtualNetwork,omitempty"`
	// Subnet for the helper appliance.
	Subnet *string `json:"subnet,omitempty"`
	// Port over which Veeam Backup & Replication communicates with the helper appliance.
	SSHPort *int32 `json:"SSHPort,omitempty"`
}

// NewAzureLinuxHelperApplianceModelAllOf instantiates a new AzureLinuxHelperApplianceModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureLinuxHelperApplianceModelAllOf(id string, subscriptionId string) *AzureLinuxHelperApplianceModelAllOf {
	this := AzureLinuxHelperApplianceModelAllOf{}
	this.Id = id
	this.SubscriptionId = subscriptionId
	return &this
}

// NewAzureLinuxHelperApplianceModelAllOfWithDefaults instantiates a new AzureLinuxHelperApplianceModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureLinuxHelperApplianceModelAllOfWithDefaults() *AzureLinuxHelperApplianceModelAllOf {
	this := AzureLinuxHelperApplianceModelAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *AzureLinuxHelperApplianceModelAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AzureLinuxHelperApplianceModelAllOf) SetId(v string) {
	o.Id = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *AzureLinuxHelperApplianceModelAllOf) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *AzureLinuxHelperApplianceModelAllOf) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetVmName returns the VmName field value if set, zero value otherwise.
func (o *AzureLinuxHelperApplianceModelAllOf) GetVmName() string {
	if o == nil || isNil(o.VmName) {
		var ret string
		return ret
	}
	return *o.VmName
}

// GetVmNameOk returns a tuple with the VmName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) GetVmNameOk() (*string, bool) {
	if o == nil || isNil(o.VmName) {
    return nil, false
	}
	return o.VmName, true
}

// HasVmName returns a boolean if a field has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) HasVmName() bool {
	if o != nil && !isNil(o.VmName) {
		return true
	}

	return false
}

// SetVmName gets a reference to the given string and assigns it to the VmName field.
func (o *AzureLinuxHelperApplianceModelAllOf) SetVmName(v string) {
	o.VmName = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *AzureLinuxHelperApplianceModelAllOf) GetLocation() string {
	if o == nil || isNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) GetLocationOk() (*string, bool) {
	if o == nil || isNil(o.Location) {
    return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *AzureLinuxHelperApplianceModelAllOf) SetLocation(v string) {
	o.Location = &v
}

// GetStorageAccount returns the StorageAccount field value if set, zero value otherwise.
func (o *AzureLinuxHelperApplianceModelAllOf) GetStorageAccount() string {
	if o == nil || isNil(o.StorageAccount) {
		var ret string
		return ret
	}
	return *o.StorageAccount
}

// GetStorageAccountOk returns a tuple with the StorageAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) GetStorageAccountOk() (*string, bool) {
	if o == nil || isNil(o.StorageAccount) {
    return nil, false
	}
	return o.StorageAccount, true
}

// HasStorageAccount returns a boolean if a field has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) HasStorageAccount() bool {
	if o != nil && !isNil(o.StorageAccount) {
		return true
	}

	return false
}

// SetStorageAccount gets a reference to the given string and assigns it to the StorageAccount field.
func (o *AzureLinuxHelperApplianceModelAllOf) SetStorageAccount(v string) {
	o.StorageAccount = &v
}

// GetResourceGroup returns the ResourceGroup field value if set, zero value otherwise.
func (o *AzureLinuxHelperApplianceModelAllOf) GetResourceGroup() string {
	if o == nil || isNil(o.ResourceGroup) {
		var ret string
		return ret
	}
	return *o.ResourceGroup
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) GetResourceGroupOk() (*string, bool) {
	if o == nil || isNil(o.ResourceGroup) {
    return nil, false
	}
	return o.ResourceGroup, true
}

// HasResourceGroup returns a boolean if a field has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) HasResourceGroup() bool {
	if o != nil && !isNil(o.ResourceGroup) {
		return true
	}

	return false
}

// SetResourceGroup gets a reference to the given string and assigns it to the ResourceGroup field.
func (o *AzureLinuxHelperApplianceModelAllOf) SetResourceGroup(v string) {
	o.ResourceGroup = &v
}

// GetVirtualNetwork returns the VirtualNetwork field value if set, zero value otherwise.
func (o *AzureLinuxHelperApplianceModelAllOf) GetVirtualNetwork() string {
	if o == nil || isNil(o.VirtualNetwork) {
		var ret string
		return ret
	}
	return *o.VirtualNetwork
}

// GetVirtualNetworkOk returns a tuple with the VirtualNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) GetVirtualNetworkOk() (*string, bool) {
	if o == nil || isNil(o.VirtualNetwork) {
    return nil, false
	}
	return o.VirtualNetwork, true
}

// HasVirtualNetwork returns a boolean if a field has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) HasVirtualNetwork() bool {
	if o != nil && !isNil(o.VirtualNetwork) {
		return true
	}

	return false
}

// SetVirtualNetwork gets a reference to the given string and assigns it to the VirtualNetwork field.
func (o *AzureLinuxHelperApplianceModelAllOf) SetVirtualNetwork(v string) {
	o.VirtualNetwork = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *AzureLinuxHelperApplianceModelAllOf) GetSubnet() string {
	if o == nil || isNil(o.Subnet) {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) GetSubnetOk() (*string, bool) {
	if o == nil || isNil(o.Subnet) {
    return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) HasSubnet() bool {
	if o != nil && !isNil(o.Subnet) {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *AzureLinuxHelperApplianceModelAllOf) SetSubnet(v string) {
	o.Subnet = &v
}

// GetSSHPort returns the SSHPort field value if set, zero value otherwise.
func (o *AzureLinuxHelperApplianceModelAllOf) GetSSHPort() int32 {
	if o == nil || isNil(o.SSHPort) {
		var ret int32
		return ret
	}
	return *o.SSHPort
}

// GetSSHPortOk returns a tuple with the SSHPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) GetSSHPortOk() (*int32, bool) {
	if o == nil || isNil(o.SSHPort) {
    return nil, false
	}
	return o.SSHPort, true
}

// HasSSHPort returns a boolean if a field has been set.
func (o *AzureLinuxHelperApplianceModelAllOf) HasSSHPort() bool {
	if o != nil && !isNil(o.SSHPort) {
		return true
	}

	return false
}

// SetSSHPort gets a reference to the given int32 and assigns it to the SSHPort field.
func (o *AzureLinuxHelperApplianceModelAllOf) SetSSHPort(v int32) {
	o.SSHPort = &v
}

func (o AzureLinuxHelperApplianceModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !isNil(o.VmName) {
		toSerialize["vmName"] = o.VmName
	}
	if !isNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !isNil(o.StorageAccount) {
		toSerialize["storageAccount"] = o.StorageAccount
	}
	if !isNil(o.ResourceGroup) {
		toSerialize["resourceGroup"] = o.ResourceGroup
	}
	if !isNil(o.VirtualNetwork) {
		toSerialize["virtualNetwork"] = o.VirtualNetwork
	}
	if !isNil(o.Subnet) {
		toSerialize["subnet"] = o.Subnet
	}
	if !isNil(o.SSHPort) {
		toSerialize["SSHPort"] = o.SSHPort
	}
	return json.Marshal(toSerialize)
}

type NullableAzureLinuxHelperApplianceModelAllOf struct {
	value *AzureLinuxHelperApplianceModelAllOf
	isSet bool
}

func (v NullableAzureLinuxHelperApplianceModelAllOf) Get() *AzureLinuxHelperApplianceModelAllOf {
	return v.value
}

func (v *NullableAzureLinuxHelperApplianceModelAllOf) Set(val *AzureLinuxHelperApplianceModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureLinuxHelperApplianceModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureLinuxHelperApplianceModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureLinuxHelperApplianceModelAllOf(val *AzureLinuxHelperApplianceModelAllOf) *NullableAzureLinuxHelperApplianceModelAllOf {
	return &NullableAzureLinuxHelperApplianceModelAllOf{value: val, isSet: true}
}

func (v NullableAzureLinuxHelperApplianceModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureLinuxHelperApplianceModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


