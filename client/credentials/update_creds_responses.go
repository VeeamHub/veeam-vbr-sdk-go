// Code generated by go-swagger; DO NOT EDIT.

package credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// UpdateCredsReader is a Reader for the UpdateCreds structure.
type UpdateCredsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCredsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCredsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCredsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCredsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCredsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCredsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCredsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateCredsOK creates a UpdateCredsOK with default headers values
func NewUpdateCredsOK() *UpdateCredsOK {
	return &UpdateCredsOK{}
}

/* UpdateCredsOK describes a response with status code 200, with default header values.

Credentials record has been updated.
*/
type UpdateCredsOK struct {
	Payload *models.CredentialsModel
}

func (o *UpdateCredsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/credentials/{id}][%d] updateCredsOK  %+v", 200, o.Payload)
}
func (o *UpdateCredsOK) GetPayload() *models.CredentialsModel {
	return o.Payload
}

func (o *UpdateCredsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CredentialsModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCredsBadRequest creates a UpdateCredsBadRequest with default headers values
func NewUpdateCredsBadRequest() *UpdateCredsBadRequest {
	return &UpdateCredsBadRequest{}
}

/* UpdateCredsBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type UpdateCredsBadRequest struct {
	Payload *models.Error
}

func (o *UpdateCredsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/credentials/{id}][%d] updateCredsBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateCredsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCredsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCredsUnauthorized creates a UpdateCredsUnauthorized with default headers values
func NewUpdateCredsUnauthorized() *UpdateCredsUnauthorized {
	return &UpdateCredsUnauthorized{}
}

/* UpdateCredsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type UpdateCredsUnauthorized struct {
	Payload *models.Error
}

func (o *UpdateCredsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/credentials/{id}][%d] updateCredsUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateCredsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCredsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCredsForbidden creates a UpdateCredsForbidden with default headers values
func NewUpdateCredsForbidden() *UpdateCredsForbidden {
	return &UpdateCredsForbidden{}
}

/* UpdateCredsForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type UpdateCredsForbidden struct {
	Payload *models.Error
}

func (o *UpdateCredsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/credentials/{id}][%d] updateCredsForbidden  %+v", 403, o.Payload)
}
func (o *UpdateCredsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCredsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCredsNotFound creates a UpdateCredsNotFound with default headers values
func NewUpdateCredsNotFound() *UpdateCredsNotFound {
	return &UpdateCredsNotFound{}
}

/* UpdateCredsNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type UpdateCredsNotFound struct {
	Payload *models.Error
}

func (o *UpdateCredsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/credentials/{id}][%d] updateCredsNotFound  %+v", 404, o.Payload)
}
func (o *UpdateCredsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCredsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCredsInternalServerError creates a UpdateCredsInternalServerError with default headers values
func NewUpdateCredsInternalServerError() *UpdateCredsInternalServerError {
	return &UpdateCredsInternalServerError{}
}

/* UpdateCredsInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type UpdateCredsInternalServerError struct {
	Payload *models.Error
}

func (o *UpdateCredsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1/credentials/{id}][%d] updateCredsInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateCredsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCredsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
