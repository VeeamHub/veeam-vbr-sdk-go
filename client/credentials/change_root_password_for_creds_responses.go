// Code generated by go-swagger; DO NOT EDIT.

package credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// ChangeRootPasswordForCredsReader is a Reader for the ChangeRootPasswordForCreds structure.
type ChangeRootPasswordForCredsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeRootPasswordForCredsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChangeRootPasswordForCredsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewChangeRootPasswordForCredsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewChangeRootPasswordForCredsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewChangeRootPasswordForCredsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewChangeRootPasswordForCredsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewChangeRootPasswordForCredsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewChangeRootPasswordForCredsOK creates a ChangeRootPasswordForCredsOK with default headers values
func NewChangeRootPasswordForCredsOK() *ChangeRootPasswordForCredsOK {
	return &ChangeRootPasswordForCredsOK{}
}

/* ChangeRootPasswordForCredsOK describes a response with status code 200, with default header values.

Root password has been changed.
*/
type ChangeRootPasswordForCredsOK struct {
	Payload models.EmptySuccessResponse
}

func (o *ChangeRootPasswordForCredsOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changerootpassword][%d] changeRootPasswordForCredsOK  %+v", 200, o.Payload)
}
func (o *ChangeRootPasswordForCredsOK) GetPayload() models.EmptySuccessResponse {
	return o.Payload
}

func (o *ChangeRootPasswordForCredsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeRootPasswordForCredsBadRequest creates a ChangeRootPasswordForCredsBadRequest with default headers values
func NewChangeRootPasswordForCredsBadRequest() *ChangeRootPasswordForCredsBadRequest {
	return &ChangeRootPasswordForCredsBadRequest{}
}

/* ChangeRootPasswordForCredsBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type ChangeRootPasswordForCredsBadRequest struct {
	Payload *models.Error
}

func (o *ChangeRootPasswordForCredsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changerootpassword][%d] changeRootPasswordForCredsBadRequest  %+v", 400, o.Payload)
}
func (o *ChangeRootPasswordForCredsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ChangeRootPasswordForCredsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeRootPasswordForCredsUnauthorized creates a ChangeRootPasswordForCredsUnauthorized with default headers values
func NewChangeRootPasswordForCredsUnauthorized() *ChangeRootPasswordForCredsUnauthorized {
	return &ChangeRootPasswordForCredsUnauthorized{}
}

/* ChangeRootPasswordForCredsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type ChangeRootPasswordForCredsUnauthorized struct {
	Payload *models.Error
}

func (o *ChangeRootPasswordForCredsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changerootpassword][%d] changeRootPasswordForCredsUnauthorized  %+v", 401, o.Payload)
}
func (o *ChangeRootPasswordForCredsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ChangeRootPasswordForCredsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeRootPasswordForCredsForbidden creates a ChangeRootPasswordForCredsForbidden with default headers values
func NewChangeRootPasswordForCredsForbidden() *ChangeRootPasswordForCredsForbidden {
	return &ChangeRootPasswordForCredsForbidden{}
}

/* ChangeRootPasswordForCredsForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type ChangeRootPasswordForCredsForbidden struct {
	Payload *models.Error
}

func (o *ChangeRootPasswordForCredsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changerootpassword][%d] changeRootPasswordForCredsForbidden  %+v", 403, o.Payload)
}
func (o *ChangeRootPasswordForCredsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ChangeRootPasswordForCredsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeRootPasswordForCredsNotFound creates a ChangeRootPasswordForCredsNotFound with default headers values
func NewChangeRootPasswordForCredsNotFound() *ChangeRootPasswordForCredsNotFound {
	return &ChangeRootPasswordForCredsNotFound{}
}

/* ChangeRootPasswordForCredsNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type ChangeRootPasswordForCredsNotFound struct {
	Payload *models.Error
}

func (o *ChangeRootPasswordForCredsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changerootpassword][%d] changeRootPasswordForCredsNotFound  %+v", 404, o.Payload)
}
func (o *ChangeRootPasswordForCredsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ChangeRootPasswordForCredsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeRootPasswordForCredsInternalServerError creates a ChangeRootPasswordForCredsInternalServerError with default headers values
func NewChangeRootPasswordForCredsInternalServerError() *ChangeRootPasswordForCredsInternalServerError {
	return &ChangeRootPasswordForCredsInternalServerError{}
}

/* ChangeRootPasswordForCredsInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type ChangeRootPasswordForCredsInternalServerError struct {
	Payload *models.Error
}

func (o *ChangeRootPasswordForCredsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changerootpassword][%d] changeRootPasswordForCredsInternalServerError  %+v", 500, o.Payload)
}
func (o *ChangeRootPasswordForCredsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ChangeRootPasswordForCredsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
