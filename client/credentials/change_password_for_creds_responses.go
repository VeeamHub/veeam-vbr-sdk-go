// Code generated by go-swagger; DO NOT EDIT.

package credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// ChangePasswordForCredsReader is a Reader for the ChangePasswordForCreds structure.
type ChangePasswordForCredsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangePasswordForCredsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChangePasswordForCredsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewChangePasswordForCredsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewChangePasswordForCredsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewChangePasswordForCredsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewChangePasswordForCredsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewChangePasswordForCredsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewChangePasswordForCredsOK creates a ChangePasswordForCredsOK with default headers values
func NewChangePasswordForCredsOK() *ChangePasswordForCredsOK {
	return &ChangePasswordForCredsOK{}
}

/* ChangePasswordForCredsOK describes a response with status code 200, with default header values.

Password has been changed.
*/
type ChangePasswordForCredsOK struct {
	Payload models.EmptySuccessResponse
}

func (o *ChangePasswordForCredsOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changepassword][%d] changePasswordForCredsOK  %+v", 200, o.Payload)
}
func (o *ChangePasswordForCredsOK) GetPayload() models.EmptySuccessResponse {
	return o.Payload
}

func (o *ChangePasswordForCredsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangePasswordForCredsBadRequest creates a ChangePasswordForCredsBadRequest with default headers values
func NewChangePasswordForCredsBadRequest() *ChangePasswordForCredsBadRequest {
	return &ChangePasswordForCredsBadRequest{}
}

/* ChangePasswordForCredsBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type ChangePasswordForCredsBadRequest struct {
	Payload *models.Error
}

func (o *ChangePasswordForCredsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changepassword][%d] changePasswordForCredsBadRequest  %+v", 400, o.Payload)
}
func (o *ChangePasswordForCredsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ChangePasswordForCredsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangePasswordForCredsUnauthorized creates a ChangePasswordForCredsUnauthorized with default headers values
func NewChangePasswordForCredsUnauthorized() *ChangePasswordForCredsUnauthorized {
	return &ChangePasswordForCredsUnauthorized{}
}

/* ChangePasswordForCredsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type ChangePasswordForCredsUnauthorized struct {
	Payload *models.Error
}

func (o *ChangePasswordForCredsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changepassword][%d] changePasswordForCredsUnauthorized  %+v", 401, o.Payload)
}
func (o *ChangePasswordForCredsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ChangePasswordForCredsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangePasswordForCredsForbidden creates a ChangePasswordForCredsForbidden with default headers values
func NewChangePasswordForCredsForbidden() *ChangePasswordForCredsForbidden {
	return &ChangePasswordForCredsForbidden{}
}

/* ChangePasswordForCredsForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type ChangePasswordForCredsForbidden struct {
	Payload *models.Error
}

func (o *ChangePasswordForCredsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changepassword][%d] changePasswordForCredsForbidden  %+v", 403, o.Payload)
}
func (o *ChangePasswordForCredsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ChangePasswordForCredsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangePasswordForCredsNotFound creates a ChangePasswordForCredsNotFound with default headers values
func NewChangePasswordForCredsNotFound() *ChangePasswordForCredsNotFound {
	return &ChangePasswordForCredsNotFound{}
}

/* ChangePasswordForCredsNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type ChangePasswordForCredsNotFound struct {
	Payload *models.Error
}

func (o *ChangePasswordForCredsNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changepassword][%d] changePasswordForCredsNotFound  %+v", 404, o.Payload)
}
func (o *ChangePasswordForCredsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ChangePasswordForCredsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangePasswordForCredsInternalServerError creates a ChangePasswordForCredsInternalServerError with default headers values
func NewChangePasswordForCredsInternalServerError() *ChangePasswordForCredsInternalServerError {
	return &ChangePasswordForCredsInternalServerError{}
}

/* ChangePasswordForCredsInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type ChangePasswordForCredsInternalServerError struct {
	Payload *models.Error
}

func (o *ChangePasswordForCredsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/credentials/{id}/changepassword][%d] changePasswordForCredsInternalServerError  %+v", 500, o.Payload)
}
func (o *ChangePasswordForCredsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ChangePasswordForCredsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
