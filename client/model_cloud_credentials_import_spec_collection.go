/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CloudCredentialsImportSpecCollection struct for CloudCredentialsImportSpecCollection
type CloudCredentialsImportSpecCollection struct {
	// Array of Azure storage accounts.
	AzureStorage []AzureStorageCloudCredentialsImportSpec `json:"azureStorage,omitempty"`
	// Array of Azure compute accounts.
	AzureCompute []AzureComputeCloudCredentialsImportSpec `json:"azureCompute,omitempty"`
	// Array of AWS accounts.
	Amazon []AmazonCloudCredentialsImportSpec `json:"amazon,omitempty"`
	// Array of Google accounts.
	Google []GoogleCloudCredentialsImportSpec `json:"google,omitempty"`
}

// NewCloudCredentialsImportSpecCollection instantiates a new CloudCredentialsImportSpecCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudCredentialsImportSpecCollection() *CloudCredentialsImportSpecCollection {
	this := CloudCredentialsImportSpecCollection{}
	return &this
}

// NewCloudCredentialsImportSpecCollectionWithDefaults instantiates a new CloudCredentialsImportSpecCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudCredentialsImportSpecCollectionWithDefaults() *CloudCredentialsImportSpecCollection {
	this := CloudCredentialsImportSpecCollection{}
	return &this
}

// GetAzureStorage returns the AzureStorage field value if set, zero value otherwise.
func (o *CloudCredentialsImportSpecCollection) GetAzureStorage() []AzureStorageCloudCredentialsImportSpec {
	if o == nil || isNil(o.AzureStorage) {
		var ret []AzureStorageCloudCredentialsImportSpec
		return ret
	}
	return o.AzureStorage
}

// GetAzureStorageOk returns a tuple with the AzureStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialsImportSpecCollection) GetAzureStorageOk() ([]AzureStorageCloudCredentialsImportSpec, bool) {
	if o == nil || isNil(o.AzureStorage) {
    return nil, false
	}
	return o.AzureStorage, true
}

// HasAzureStorage returns a boolean if a field has been set.
func (o *CloudCredentialsImportSpecCollection) HasAzureStorage() bool {
	if o != nil && !isNil(o.AzureStorage) {
		return true
	}

	return false
}

// SetAzureStorage gets a reference to the given []AzureStorageCloudCredentialsImportSpec and assigns it to the AzureStorage field.
func (o *CloudCredentialsImportSpecCollection) SetAzureStorage(v []AzureStorageCloudCredentialsImportSpec) {
	o.AzureStorage = v
}

// GetAzureCompute returns the AzureCompute field value if set, zero value otherwise.
func (o *CloudCredentialsImportSpecCollection) GetAzureCompute() []AzureComputeCloudCredentialsImportSpec {
	if o == nil || isNil(o.AzureCompute) {
		var ret []AzureComputeCloudCredentialsImportSpec
		return ret
	}
	return o.AzureCompute
}

// GetAzureComputeOk returns a tuple with the AzureCompute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialsImportSpecCollection) GetAzureComputeOk() ([]AzureComputeCloudCredentialsImportSpec, bool) {
	if o == nil || isNil(o.AzureCompute) {
    return nil, false
	}
	return o.AzureCompute, true
}

// HasAzureCompute returns a boolean if a field has been set.
func (o *CloudCredentialsImportSpecCollection) HasAzureCompute() bool {
	if o != nil && !isNil(o.AzureCompute) {
		return true
	}

	return false
}

// SetAzureCompute gets a reference to the given []AzureComputeCloudCredentialsImportSpec and assigns it to the AzureCompute field.
func (o *CloudCredentialsImportSpecCollection) SetAzureCompute(v []AzureComputeCloudCredentialsImportSpec) {
	o.AzureCompute = v
}

// GetAmazon returns the Amazon field value if set, zero value otherwise.
func (o *CloudCredentialsImportSpecCollection) GetAmazon() []AmazonCloudCredentialsImportSpec {
	if o == nil || isNil(o.Amazon) {
		var ret []AmazonCloudCredentialsImportSpec
		return ret
	}
	return o.Amazon
}

// GetAmazonOk returns a tuple with the Amazon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialsImportSpecCollection) GetAmazonOk() ([]AmazonCloudCredentialsImportSpec, bool) {
	if o == nil || isNil(o.Amazon) {
    return nil, false
	}
	return o.Amazon, true
}

// HasAmazon returns a boolean if a field has been set.
func (o *CloudCredentialsImportSpecCollection) HasAmazon() bool {
	if o != nil && !isNil(o.Amazon) {
		return true
	}

	return false
}

// SetAmazon gets a reference to the given []AmazonCloudCredentialsImportSpec and assigns it to the Amazon field.
func (o *CloudCredentialsImportSpecCollection) SetAmazon(v []AmazonCloudCredentialsImportSpec) {
	o.Amazon = v
}

// GetGoogle returns the Google field value if set, zero value otherwise.
func (o *CloudCredentialsImportSpecCollection) GetGoogle() []GoogleCloudCredentialsImportSpec {
	if o == nil || isNil(o.Google) {
		var ret []GoogleCloudCredentialsImportSpec
		return ret
	}
	return o.Google
}

// GetGoogleOk returns a tuple with the Google field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialsImportSpecCollection) GetGoogleOk() ([]GoogleCloudCredentialsImportSpec, bool) {
	if o == nil || isNil(o.Google) {
    return nil, false
	}
	return o.Google, true
}

// HasGoogle returns a boolean if a field has been set.
func (o *CloudCredentialsImportSpecCollection) HasGoogle() bool {
	if o != nil && !isNil(o.Google) {
		return true
	}

	return false
}

// SetGoogle gets a reference to the given []GoogleCloudCredentialsImportSpec and assigns it to the Google field.
func (o *CloudCredentialsImportSpecCollection) SetGoogle(v []GoogleCloudCredentialsImportSpec) {
	o.Google = v
}

func (o CloudCredentialsImportSpecCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AzureStorage) {
		toSerialize["azureStorage"] = o.AzureStorage
	}
	if !isNil(o.AzureCompute) {
		toSerialize["azureCompute"] = o.AzureCompute
	}
	if !isNil(o.Amazon) {
		toSerialize["amazon"] = o.Amazon
	}
	if !isNil(o.Google) {
		toSerialize["google"] = o.Google
	}
	return json.Marshal(toSerialize)
}

type NullableCloudCredentialsImportSpecCollection struct {
	value *CloudCredentialsImportSpecCollection
	isSet bool
}

func (v NullableCloudCredentialsImportSpecCollection) Get() *CloudCredentialsImportSpecCollection {
	return v.value
}

func (v *NullableCloudCredentialsImportSpecCollection) Set(val *CloudCredentialsImportSpecCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudCredentialsImportSpecCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudCredentialsImportSpecCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudCredentialsImportSpecCollection(val *CloudCredentialsImportSpecCollection) *NullableCloudCredentialsImportSpecCollection {
	return &NullableCloudCredentialsImportSpecCollection{value: val, isSet: true}
}

func (v NullableCloudCredentialsImportSpecCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudCredentialsImportSpecCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


