/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ProxyDatastoreSettingsModel Datastores to which the backup proxy has a direct SAN or NFS connection.
type ProxyDatastoreSettingsModel struct {
	// If *true*, all datastores that the backup proxy can access are detected automatically.
	AutoSelect bool `json:"autoSelect"`
	// Array of datastores to which the backup proxy has a direct SAN or NFS connection.
	Datastores []ProxyDatastoreModel `json:"datastores,omitempty"`
}

// NewProxyDatastoreSettingsModel instantiates a new ProxyDatastoreSettingsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProxyDatastoreSettingsModel(autoSelect bool) *ProxyDatastoreSettingsModel {
	this := ProxyDatastoreSettingsModel{}
	this.AutoSelect = autoSelect
	return &this
}

// NewProxyDatastoreSettingsModelWithDefaults instantiates a new ProxyDatastoreSettingsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProxyDatastoreSettingsModelWithDefaults() *ProxyDatastoreSettingsModel {
	this := ProxyDatastoreSettingsModel{}
	return &this
}

// GetAutoSelect returns the AutoSelect field value
func (o *ProxyDatastoreSettingsModel) GetAutoSelect() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoSelect
}

// GetAutoSelectOk returns a tuple with the AutoSelect field value
// and a boolean to check if the value has been set.
func (o *ProxyDatastoreSettingsModel) GetAutoSelectOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AutoSelect, true
}

// SetAutoSelect sets field value
func (o *ProxyDatastoreSettingsModel) SetAutoSelect(v bool) {
	o.AutoSelect = v
}

// GetDatastores returns the Datastores field value if set, zero value otherwise.
func (o *ProxyDatastoreSettingsModel) GetDatastores() []ProxyDatastoreModel {
	if o == nil || isNil(o.Datastores) {
		var ret []ProxyDatastoreModel
		return ret
	}
	return o.Datastores
}

// GetDatastoresOk returns a tuple with the Datastores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxyDatastoreSettingsModel) GetDatastoresOk() ([]ProxyDatastoreModel, bool) {
	if o == nil || isNil(o.Datastores) {
    return nil, false
	}
	return o.Datastores, true
}

// HasDatastores returns a boolean if a field has been set.
func (o *ProxyDatastoreSettingsModel) HasDatastores() bool {
	if o != nil && !isNil(o.Datastores) {
		return true
	}

	return false
}

// SetDatastores gets a reference to the given []ProxyDatastoreModel and assigns it to the Datastores field.
func (o *ProxyDatastoreSettingsModel) SetDatastores(v []ProxyDatastoreModel) {
	o.Datastores = v
}

func (o ProxyDatastoreSettingsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["autoSelect"] = o.AutoSelect
	}
	if !isNil(o.Datastores) {
		toSerialize["datastores"] = o.Datastores
	}
	return json.Marshal(toSerialize)
}

type NullableProxyDatastoreSettingsModel struct {
	value *ProxyDatastoreSettingsModel
	isSet bool
}

func (v NullableProxyDatastoreSettingsModel) Get() *ProxyDatastoreSettingsModel {
	return v.value
}

func (v *NullableProxyDatastoreSettingsModel) Set(val *ProxyDatastoreSettingsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableProxyDatastoreSettingsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableProxyDatastoreSettingsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProxyDatastoreSettingsModel(val *ProxyDatastoreSettingsModel) *NullableProxyDatastoreSettingsModel {
	return &NullableProxyDatastoreSettingsModel{value: val, isSet: true}
}

func (v NullableProxyDatastoreSettingsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProxyDatastoreSettingsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


