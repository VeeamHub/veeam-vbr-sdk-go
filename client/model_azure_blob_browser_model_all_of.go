/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AzureBlobBrowserModelAllOf struct for AzureBlobBrowserModelAllOf
type AzureBlobBrowserModelAllOf struct {
	// ID of a server used to connect to the object storage.
	HostId *string `json:"hostId,omitempty"`
	RegionType *EAzureRegionType `json:"regionType,omitempty"`
	// Array of containers that reside in the Azure storage account.
	Containers []AzureBlobContainerBrowserModel `json:"containers,omitempty"`
}

// NewAzureBlobBrowserModelAllOf instantiates a new AzureBlobBrowserModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureBlobBrowserModelAllOf() *AzureBlobBrowserModelAllOf {
	this := AzureBlobBrowserModelAllOf{}
	return &this
}

// NewAzureBlobBrowserModelAllOfWithDefaults instantiates a new AzureBlobBrowserModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureBlobBrowserModelAllOfWithDefaults() *AzureBlobBrowserModelAllOf {
	this := AzureBlobBrowserModelAllOf{}
	return &this
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *AzureBlobBrowserModelAllOf) GetHostId() string {
	if o == nil || isNil(o.HostId) {
		var ret string
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureBlobBrowserModelAllOf) GetHostIdOk() (*string, bool) {
	if o == nil || isNil(o.HostId) {
    return nil, false
	}
	return o.HostId, true
}

// HasHostId returns a boolean if a field has been set.
func (o *AzureBlobBrowserModelAllOf) HasHostId() bool {
	if o != nil && !isNil(o.HostId) {
		return true
	}

	return false
}

// SetHostId gets a reference to the given string and assigns it to the HostId field.
func (o *AzureBlobBrowserModelAllOf) SetHostId(v string) {
	o.HostId = &v
}

// GetRegionType returns the RegionType field value if set, zero value otherwise.
func (o *AzureBlobBrowserModelAllOf) GetRegionType() EAzureRegionType {
	if o == nil || isNil(o.RegionType) {
		var ret EAzureRegionType
		return ret
	}
	return *o.RegionType
}

// GetRegionTypeOk returns a tuple with the RegionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureBlobBrowserModelAllOf) GetRegionTypeOk() (*EAzureRegionType, bool) {
	if o == nil || isNil(o.RegionType) {
    return nil, false
	}
	return o.RegionType, true
}

// HasRegionType returns a boolean if a field has been set.
func (o *AzureBlobBrowserModelAllOf) HasRegionType() bool {
	if o != nil && !isNil(o.RegionType) {
		return true
	}

	return false
}

// SetRegionType gets a reference to the given EAzureRegionType and assigns it to the RegionType field.
func (o *AzureBlobBrowserModelAllOf) SetRegionType(v EAzureRegionType) {
	o.RegionType = &v
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *AzureBlobBrowserModelAllOf) GetContainers() []AzureBlobContainerBrowserModel {
	if o == nil || isNil(o.Containers) {
		var ret []AzureBlobContainerBrowserModel
		return ret
	}
	return o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureBlobBrowserModelAllOf) GetContainersOk() ([]AzureBlobContainerBrowserModel, bool) {
	if o == nil || isNil(o.Containers) {
    return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *AzureBlobBrowserModelAllOf) HasContainers() bool {
	if o != nil && !isNil(o.Containers) {
		return true
	}

	return false
}

// SetContainers gets a reference to the given []AzureBlobContainerBrowserModel and assigns it to the Containers field.
func (o *AzureBlobBrowserModelAllOf) SetContainers(v []AzureBlobContainerBrowserModel) {
	o.Containers = v
}

func (o AzureBlobBrowserModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.HostId) {
		toSerialize["hostId"] = o.HostId
	}
	if !isNil(o.RegionType) {
		toSerialize["regionType"] = o.RegionType
	}
	if !isNil(o.Containers) {
		toSerialize["containers"] = o.Containers
	}
	return json.Marshal(toSerialize)
}

type NullableAzureBlobBrowserModelAllOf struct {
	value *AzureBlobBrowserModelAllOf
	isSet bool
}

func (v NullableAzureBlobBrowserModelAllOf) Get() *AzureBlobBrowserModelAllOf {
	return v.value
}

func (v *NullableAzureBlobBrowserModelAllOf) Set(val *AzureBlobBrowserModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureBlobBrowserModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureBlobBrowserModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureBlobBrowserModelAllOf(val *AzureBlobBrowserModelAllOf) *NullableAzureBlobBrowserModelAllOf {
	return &NullableAzureBlobBrowserModelAllOf{value: val, isSet: true}
}

func (v NullableAzureBlobBrowserModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureBlobBrowserModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


