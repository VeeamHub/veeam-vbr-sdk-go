/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev2
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// TokenModel struct for TokenModel
type TokenModel struct {
	// String that represents authorization issued to the client. It must be specified in all requests. An access token can be used multiple times, but its lifetime is 15 minutes.
	AccessToken string `json:"access_token"`
	// Type of the access token.
	TokenType string `json:"token_type"`
	// String that is used to obtain a new access token if the current access token expires or becomes lost. A refresh token can be used only once, and its default lifetime is 14 days.
	RefreshToken string `json:"refresh_token"`
	// Lifetime of the access token, in seconds.
	ExpiresIn int32 `json:"expires_in"`
	// Date and time the access token is issued.
	Issued time.Time `json:".issued"`
	// Date and time the access token expires.
	Expires time.Time `json:".expires"`
}

// NewTokenModel instantiates a new TokenModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenModel(accessToken string, tokenType string, refreshToken string, expiresIn int32, issued time.Time, expires time.Time, ) *TokenModel {
	this := TokenModel{}
	this.AccessToken = accessToken
	this.TokenType = tokenType
	this.RefreshToken = refreshToken
	this.ExpiresIn = expiresIn
	this.Issued = issued
	this.Expires = expires
	return &this
}

// NewTokenModelWithDefaults instantiates a new TokenModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenModelWithDefaults() *TokenModel {
	this := TokenModel{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *TokenModel) GetAccessToken() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *TokenModel) GetAccessTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *TokenModel) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetTokenType returns the TokenType field value
func (o *TokenModel) GetTokenType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *TokenModel) GetTokenTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *TokenModel) SetTokenType(v string) {
	o.TokenType = v
}

// GetRefreshToken returns the RefreshToken field value
func (o *TokenModel) GetRefreshToken() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *TokenModel) GetRefreshTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *TokenModel) SetRefreshToken(v string) {
	o.RefreshToken = v
}

// GetExpiresIn returns the ExpiresIn field value
func (o *TokenModel) GetExpiresIn() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value
// and a boolean to check if the value has been set.
func (o *TokenModel) GetExpiresInOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExpiresIn, true
}

// SetExpiresIn sets field value
func (o *TokenModel) SetExpiresIn(v int32) {
	o.ExpiresIn = v
}

// GetIssued returns the Issued field value
func (o *TokenModel) GetIssued() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.Issued
}

// GetIssuedOk returns a tuple with the Issued field value
// and a boolean to check if the value has been set.
func (o *TokenModel) GetIssuedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Issued, true
}

// SetIssued sets field value
func (o *TokenModel) SetIssued(v time.Time) {
	o.Issued = v
}

// GetExpires returns the Expires field value
func (o *TokenModel) GetExpires() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value
// and a boolean to check if the value has been set.
func (o *TokenModel) GetExpiresOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Expires, true
}

// SetExpires sets field value
func (o *TokenModel) SetExpires(v time.Time) {
	o.Expires = v
}

func (o TokenModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["access_token"] = o.AccessToken
	}
	if true {
		toSerialize["token_type"] = o.TokenType
	}
	if true {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	if true {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if true {
		toSerialize[".issued"] = o.Issued
	}
	if true {
		toSerialize[".expires"] = o.Expires
	}
	return json.Marshal(toSerialize)
}

type NullableTokenModel struct {
	value *TokenModel
	isSet bool
}

func (v NullableTokenModel) Get() *TokenModel {
	return v.value
}

func (v *NullableTokenModel) Set(val *TokenModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenModel(val *TokenModel) *NullableTokenModel {
	return &NullableTokenModel{value: val, isSet: true}
}

func (v NullableTokenModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


