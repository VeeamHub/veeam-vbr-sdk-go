openapi: 3.0.1
info:
  description: "This document lists paths (endpoints) of the Veeam Backup & Replication\
    \ REST API and operations that you can perform by sending HTTP requests to the\
    \ paths.<br>Requests can contain parameters in their path, query and header. POST\
    \ and PUT requests can include a request body with resource payload. In response,\
    \ you receive a conventional HTTP response code, HTTP response header and an optional\
    \ response body schema that contains a result model.<br> Some request and response\
    \ bodies refer to reusable schema objects that are defined in the `schemas` section\
    \ of the REST API specification. Schemas, in turn, may inherit a part of their\
    \ properties by referring to other schemas, and be polymorphic by referring to\
    \ multiple alternate schemas."
  title: Veeam Backup & Replication REST API
  version: 1.1-rev0
  x-veeam-prev-version: 1.0-rev2
servers:
- url: /
security:
- Bearer: []
tags:
- description: "The authorization process involves obtaining an access token and a\
    \ refresh token.<br>For details on the authorization process and security settings,\
    \ see [Authorization and Security](https://helpcenter.veeam.com/docs/backup/vbr_rest/authorization_security.html?ver=120).<SecurityDefinitions\
    \ />"
  name: Login
- description: The Service section defines paths and operations for retrieving information
    about the backup server where the REST API service is running.
  name: Service
- description: The Associated Services section defines a path and operation for retrieving
    information about associated backend services. You may need to connect to these
    services for integration with Veeam Backup & Replication.
  name: Associated Services
- description: The Credentials section defines paths and operations for managing credentials
    records that are added to the backup server.
  name: Credentials
- description: The Encryption section defines paths and operations for managing passwords
    that are used for data encryption.
  name: Encryption
- description: The Connection section defines a path and operation for retrieving
    a TLS certificate or SSH fingerprint used to establish a secure connection between
    the backup server and the specified server.
  name: Connection
- description: The Cloud Browser section defines paths and operations for retrieving
    information about cloud resources (compute or storage). Cloud browser helps you
    map a cloud folder with an object storage repository.
  name: Cloud Browser
- description: "The Inventory Browser section defines paths and operations for retrieving\
    \ VMware vSphere servers and their virtual infrastructure objects (data centers,\
    \ clusters, hosts, resource pools, VMs).<br> <div class=\"note\"><strong>NOTE</strong><br>In\
    \ the current version, you can browse VMware vSphere objects only.</div>"
  name: Inventory Browser
- description: The Traffic Rules section defines paths and operations for retrieving
    and editing information about network traffic rules that are configured on the
    backup server.
  name: Traffic Rules
- description: "The General Options section defines paths and operations for retrieving\
    \ and editing general settings of Veeam Backup & Replication.<br> <div class=\"\
    note\"><strong>NOTE</strong><br>In the current version of the REST API, you can\
    \ configure notification settings only.</div>"
  name: General Options
- description: The Configuration Backup section defines paths and operations for managing
    backup of the configuration database that Veeam Backup & Replication uses.
  name: Configuration Backup
- description: "The Managed Servers section defines paths and operations for managing\
    \ servers.<br> <div class=\"note\"><strong>NOTE</strong><br>In the current version,\
    \ the REST API supports the following server types&#58; *VMware vSphere*, *Linux*\
    \ and *Windows*.</div>"
  name: Managed Servers
- description: "The Repositories section defines paths and operations for managing\
    \ backup repositories.<br> <div class=\"note\"><strong>NOTE</strong><br>In the\
    \ current version, the REST API supports the following storage types&#58; direct\
    \ attached storages (Microsoft Windows and Linux servers), network attached storages\
    \ (SMB and NFS shares) and object storages. For details on how to add an object\
    \ storage repository, see [Adding Object Storage Repository](https://helpcenter.veeam.com/docs/backup/vbr_rest/object_storage.html?ver=120).</div>"
  name: Repositories
- description: "The Proxies section defines paths and operations for managing backup\
    \ proxies.<br><div class=\"note\"><strong>NOTE</strong><br>In the current version,\
    \ the REST API supports VMware backup proxies only.</div>"
  name: Proxies
- description: "The Jobs section defines paths and operations for managing jobs that\
    \ are coordinated by the backup server.<br> <div class=\"note\"><strong>NOTE</strong><br>In\
    \ the current version, the REST API supports only jobs of the *Backup* type that\
    \ include only VMware vSphere objects of the following types&#58; *VirtualMachine*,\
    \ *vCenterServer*, *Datacenter*, *Cluster*, *Host*, *ResourcePool*, *Folder*,\
    \ *Template*, *Tag*, *Datastore* and *DatastoreCluster*. Objects with tags combination\
    \ (or *Multitag*) are not supported.</div>"
  name: Jobs
- description: The Backups section defines paths and operations for managing backups
    that are created on or imported to the backup server.
  name: Backups
- description: The Backup Objects section defines paths and operations for managing
    backup objects — virtual infrastructure objects (VMs and VM containers) that are
    included in backups created by the backup server.
  name: Backup Objects
- description: The Object Restore Points section defines paths and operations for
    retrieving restore points created on the backup server and backed up disks from
    the restore points.
  name: Object Restore Points
- description: "The Restore section defines paths and operations for performing restore.<br>\
    \ <div class=\"note\"><strong>NOTE</strong><br>In the current version, the REST\
    \ API supports the following recovery operations:<ul> <li>Instant Recovery of\
    \ a VMware vSphere VM to VMware vSphere</li> <li>Entire VM restore of a VMware\
    \ vSphere VM to VMware vSphere</li> <li>Restore of disks that will be registered\
    \ as First Class Disks (FCD) — a type of virtual disks that can be managed independent\
    \ of any VM.</li></ul></div>"
  name: Restore
- description: "The Sessions section defines paths and operations for managing sessions\
    \ (except [automation sessions](#tag/Automation/operation/GetAllAutomationSessions))\
    \ performed on the backup server."
  name: Sessions
- description: The Agents section defines paths and operations for managing recovery
    tokens used for bare-metal recovery.
  name: Agents
- description: "The Automation section defines paths and operations for granular import\
    \ and export of objects available in the REST API. It can be useful, for example,\
    \ if you set up the backup infrastructure using JSON specification or migrate\
    \ the infrastructure to another backup server. For details, see [Mass Deployment](https://helpcenter.veeam.com/docs/backup/vbr_rest/automation.html?ver=120)."
  name: Automation
paths:
  /api/v1/serverTime:
    get:
      description: The HTTP GET request to the `/api/v1/serverTime` path allows you
        to get current date and time on the backup server.
      operationId: GetServerTime
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                serverTime: 2022-01-25T18:31:50.7300443+01:00
                timeZone: "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana,\
                  \ Prague"
              schema:
                $ref: '#/components/schemas/ServerTimeModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      security: []
      summary: Get Backup Server Time
      tags:
      - Service
  /api/v1/serverCertificate:
    get:
      description: The HTTP GET request to the `/api/v1/serverCertificate` path allows
        you to get a certificate of the backup server.
      operationId: GetServerCertificate
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                thumbprint: 4E916B201930CD9AE44C20019F87F2A4EF227303
                serialNumber: 65FFC0E36A66B2BA40EF93AF47C2EF7D
                keyAlgorithm: RSA-PKCS1-KeyEx
                keySize: "2048"
                subject: CN=Veeam Backup Server Certificate
                issuedTo: Veeam Backup Server Certificate
                issuedBy: Veeam Backup Server Certificate
                validFrom: 2021-03-17T19:53:54+01:00
                validBy: 2031-03-17T19:53:54+01:00
              schema:
                $ref: '#/components/schemas/CertificateModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      security: []
      summary: Get Backup Server Certificate
      tags:
      - Service
  /api/v1/serverInfo:
    get:
      description: "The HTTP GET request to the `/api/v1/serverInfo` path allows you\
        \ to get Veeam Backup & Replication installation ID, backup server name (or\
        \ IP address), build number and cumulative patches installed on the backup\
        \ server."
      operationId: GetServerInfo
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfoModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Backup Server Information
      tags:
      - Service
  /api/v1/services:
    get:
      description: The HTTP GET request to the `/api/v1/services` path allows you
        to get associated services for integration with Veeam Backup & Replication.
      operationId: GetAllServices
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of services to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ServicesFilters'
      - description: Maximum number of services to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ServicesFilters'
      - description: Sorts services by one of the service parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EServicesFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ServicesFilters'
      - description: Sorts services in the ascending order by the `orderColumn` parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ServicesFilters'
      - description: "Filters services by the `nameFilter` pattern. The pattern can\
          \ match any service parameter. To substitute one or more characters, use\
          \ the asterisk (*) character at the beginning, at the end or both."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ServicesFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - name: External Infrastructure DB Provider
                  port: 6172
                - name: VM Backup API
                  port: 10006
                pagination:
                  total: 2
                  count: 2
                  skip: 0
                  limit: 200
              schema:
                $ref: '#/components/schemas/ServicesResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Associated Services
      tags:
      - Associated Services
      x-veeam-authorize:
        claims:
        - ViewServices
  /api/oauth2/token:
    post:
      description: The HTTP POST request to the `/api/oauth2/token` path allows you
        to get an access token and a refresh token.
      operationId: CreateToken
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenLoginSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                access_token: eyJhbGciOiJSUzUxMiIsImtpZCI6IjRFOTE2QjIwMTkzMENEOUFFNDRDMjAwMTlGODdGMkE0RUYyMjczMDMiLCJ0eXAiOiJKV1QifQ.eyJ1bmlxdWVfbmFtZSI6InNoZWlsYS5kLmNvcnkiLCJuYmYiOjE2NDMwMzA2NTgsImV4cCI6MTY0MzAzMTU1OCwiaWF0IjoxNjQzMDMwNjU4LCJhdWQiOiJhY2Nlc3MifQ.PYyLnd-AGcQDiMN6RibL_3D-IzngzGqM0Du0huiEbswyqB9JATF3PJvPPKQn1H27xYEiznDyhAnbs9qZNNXlK0E7yRZbifUat16C1XDCvKFXAkije_44xakcUf5aUeU5YVRyjHa-hTRTkwISj9lBCNf_WdpttkK2stgyRCafrj057ATgUyru6o5gZhTYIS4cioAXmhvLvB7Qrn4X080DHH0-KqYeSQwnQASi1HDuogfkEmxyu8380fbGJiyK4eKGLJ2hmq5DsMmL0BSSzIvUiifLPS5_Ei4-9EOFOv3RlLmk6eQNefaLrkRSsV7QSgGZDLc98zIBlD2yrUccx2cj9A
                token_type: bearer
                refresh_token: eyJhbGciOiJSUzUxMiIsImtpZCI6IjRFOTE2QjIwMTkzMENEOUFFNDRDMjAwMTlGODdGMkE0RUYyMjczMDMiLCJ0eXAiOiJKV1QifQ.eyJ1bmlxdWVfbmFtZSI6InNoZWlsYS5kLmNvcnkiLCJ0b2tlbl9pZCI6IjEwNTA4YWUyLTk0YzctNGRkNi04YzEyLWZjNGY1NDQ1MzM0YSIsInNob3J0X3Rlcm1fZXhwaXJhdGlvbiI6IkZhbHNlIiwibmJmIjoxNjQzMDMwNjU5LCJleHAiOjE2NDQyNDAyNTksImlhdCI6MTY0MzAzMDY1OSwiYXVkIjoicmVmcmVzaCJ9.RXx9xPlpoUuRwO7sTkBTXntpc3vixXc2kgfCPfRcpePdzOGbLqn64c1hCHTGgXPKgZ4ogEY58N2D3xUPd6spAdfbOkF_XwjEEDpxf03rl7LYMo-OXQ0PxVtUCJK3_o6Dfah0YV6IYu5yctvd-_1MKaac7vV5Zl87qhlF8w4e7LT0QPD_Vhp2JUoD3dSTvYw9WvNDqaRotYfaWj05yTB3PArVwSiPDg1oZXSLxROmDDtKf5FFqSgOdp4LxJmD6sYlv_2FQqG-tNwPqRyzKIaqiDDQXBR9MVmFHBl9iUcYOqvX9ZlCa7oPP_txjopks-NcpdyPkSH74hvoeOs3hujW8w
                expires_in: 900
                ".issued": 2022-04-24T14:24:18+01:00
                ".expires": 2022-04-24T14:39:18+01:00
              schema:
                $ref: '#/components/schemas/TokenModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      security: []
      summary: Get Access Token
      tags:
      - Login
  /api/oauth2/authorization_code:
    post:
      description: "The HTTP POST request to the `/api/oauth2/authorization_code`\
        \ path allows you to get an authorization code that is used to obtain an access\
        \ token. For more information on authorization process, see [Requesting Authorization](https://helpcenter.veeam.com/docs/backup/vbr_rest/requesting_authorization.html?ver=120)."
      operationId: CreateAuthorizationCode
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                code: AAEAAPcbxUSe0PNKAN+ilV5d4M5Fkv9ONjwRa4hfZYoemxIDA/IHbrjldYbfu1MemydXxGR4KYe5woGq09k+URepuiwUVsg3WbXC179ECOARXmfMH9dFI5H4aiXTotwPvuXLAC2AU4nFSUI2Kr2jlg4Vm8hTEPisaEiOolaVPA5CTzSEribGVaPYwvzyEIn7qy+lLnvGN2dm46W6Q0QJ2dpw1SCI2DZRCRIz+L8Nq804hNwDQJk9TCPJ61ztwF4FM+wO2ToNvMkL6aVay7STpeTRlkFf5i5dAm2qC0a1fcDdkkxt2lwv47t52I2tyZafpdLXs1eb+y7ZnuYQGbDI3epq5GAIAAAAK1kt2wvg2Qg=
              schema:
                $ref: '#/components/schemas/AuthorizationCodeModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Authorization Code
      tags:
      - Login
  /api/oauth2/logout:
    post:
      description: "The HTTP POST request to the `/api/oauth2/logout` path allows\
        \ you to perform the logout operation. After you log out, your access and\
        \ refresh tokens are expired."
      operationId: Logout
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Log Out
      tags:
      - Login
  /api/v1/trafficRules:
    get:
      description: The HTTP GET request to the `/api/v1/trafficRules` path allows
        you to get network traffic rules that control traffic transferred between
        backup infrastructure components.
      operationId: GetAllTrafficRules
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                useMultipleStreamsPerJob: true
                uploadStreamsCount: 5
                trafficRules:
                - throttlingUnit: MbitPerSpec
                  id: 622b0112-a972-49c2-9987-24a57ddc930a
                  name: Internet
                  sourceIPStart: Any
                  sourceIPEnd: ""
                  targetIPStart: Internet
                  targetIPEnd: ""
                  encryptionEnabled: true
                  throttlingEnabled: false
                  throttlingValue: 1
                  throttlingWindowEnabled: false
                  throttlingWindowOptions:
                    days:
                    - day: sunday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: monday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: tuesday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: wednesday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: thursday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: friday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: saturday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                preferredNetworks:
                  isEnabled: false
                  networks: []
              schema:
                $ref: '#/components/schemas/GlobalNetworkTrafficRulesModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Traffic Rules
      tags:
      - Traffic Rules
      x-veeam-authorize:
        claims:
        - ViewTrafficRules
    put:
      description: The HTTP PUT request to the `/api/v1/trafficRules` path allows
        you to edit network traffic rules that are configured on the backup server.
      operationId: UpdateTrafficRules
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              useMultipleStreamsPerJob: true
              uploadStreamsCount: 5
              trafficRules:
              - throttlingUnit: MbitPerSpec
                id: 622b0112-a972-49c2-9987-24a57ddc930a
                name: Internet
                sourceIPStart: Any
                sourceIPEnd: ""
                targetIPStart: Internet
                targetIPEnd: ""
                encryptionEnabled: true
                throttlingEnabled: false
                throttlingValue: 2
                throttlingWindowEnabled: true
                throttlingWindowOptions:
                  days:
                  - day: sunday
                    hours: "0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  - day: monday
                    hours: "0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  - day: tuesday
                    hours: "1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  - day: wednesday
                    hours: "1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  - day: thursday
                    hours: "1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  - day: friday
                    hours: "1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  - day: saturday
                    hours: "1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
              preferredNetworks:
                isEnabled: true
                networks:
                - ipAddress: 124.0.0.0
                  subnetMask: 255.0.0.0
                  cidrNotation: "8"
                - ipAddress: 123.0.0.0
                  subnetMask: 255.0.0.0
                  cidrNotation: "8"
            schema:
              $ref: '#/components/schemas/GlobalNetworkTrafficRulesModel'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                useMultipleStreamsPerJob: true
                uploadStreamsCount: 5
                trafficRules:
                - throttlingUnit: MbitPerSpec
                  id: 622b0112-a972-49c2-9987-24a57ddc930a
                  name: Internet
                  sourceIPStart: Any
                  sourceIPEnd: ""
                  targetIPStart: Internet
                  targetIPEnd: ""
                  encryptionEnabled: true
                  throttlingEnabled: false
                  throttlingValue: 2
                  throttlingWindowEnabled: true
                  throttlingWindowOptions:
                    days:
                    - day: sunday
                      hours: "0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: monday
                      hours: "0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: tuesday
                      hours: "1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: wednesday
                      hours: "1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: thursday
                      hours: "1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: friday
                      hours: "1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: saturday
                      hours: "1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                preferredNetworks:
                  isEnabled: true
                  networks:
                  - ipAddress: 124.0.0.0
                    subnetMask: 255.0.0.0
                    cidrNotation: "8"
                  - ipAddress: 123.0.0.0
                    subnetMask: 255.0.0.0
                    cidrNotation: "8"
              schema:
                $ref: '#/components/schemas/GlobalNetworkTrafficRulesModel'
          description: "Infrastructure session has been created to edit the traffic\
            \ rules. To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Traffic Rules
      tags:
      - Traffic Rules
      x-veeam-authorize:
        claims:
        - UpdateTrafficRules
  /api/v1/generalOptions:
    get:
      description: The HTTP GET request to the `/api/v1/generalOptions` path allows
        you to get notification settings of Veeam Backup & Replication.
      operationId: GetGeneralOptions
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                emailSettings:
                  isEnabled: false
                  smtpServerName: ""
                  advancedSmtpOptions:
                    port: 25
                    timeoutMs: 100000
                    SSLEnabled: false
                    authRequred: false
                    credentialsId: null
                  from: ""
                  to: ""
                  subject: "[%JobResult%] %JobName% (%ObjectCount% objects) %Issues%"
                  sendDailyReportsAt: 2019-01-01T22:00:00+01:00
                  notifyOnSuccess: true
                  notifyOnWarning: true
                  notifyOnFailure: true
                  notifyOnLastRetry: true
                notifications:
                  storageSpaceThresholdEnabled: true
                  storageSpaceThreshold: 10
                  datastoreSpaceThresholdEnabled: true
                  datastoreSpaceThreshold: 10
                  skipVMSpaceThresholdEnabled: true
                  skipVMSpaceThreshold: 5
                  notifyOnSupportExpiration: true
                  notifyOnUpdates: true
              schema:
                $ref: '#/components/schemas/GeneralOptionsModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Notification Settings
      tags:
      - General Options
      x-veeam-authorize:
        claims:
        - ViewGeneralOptions
    put:
      description: The HTTP PUT request to the `/api/v1/generalOptions` path allows
        you to edit notification settings of Veeam Backup & Replication.
      operationId: UpdateGeneralOptions
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              emailSettings:
                isEnabled: true
                smtpServerName: ""
                advancedSmtpOptions:
                  port: 2425
                  timeoutMs: 100000
                  SSLEnabled: true
                  authRequred: true
                  credentialsId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                from: ""
                to: ""
                subject: "[%JobResult%] %JobName% (%ObjectCount% objects) %Issues%"
                sendDailyReportsAt: 2022-01-01T22:00:00
                notifyOnSuccess: true
                notifyOnWarning: true
                notifyOnFailure: true
                notifyOnLastRetry: true
              notifications:
                storageSpaceThresholdEnabled: true
                storageSpaceThreshold: 15
                datastoreSpaceThresholdEnabled: true
                datastoreSpaceThreshold: 13
                skipVMSpaceTresholdEnabled: true
                skipVMSpaceTreshold: 5
                notifyOnSupportExpiration: true
                notifyOnUpdates: true
            schema:
              $ref: '#/components/schemas/GeneralOptionsModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralOptionsModel'
          description: Notification settings have been updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Notification Settings
      tags:
      - General Options
      x-veeam-authorize:
        claims:
        - UpdateGeneralOptions
  /api/v1/configBackup:
    get:
      description: The HTTP GET request to the `/api/v1/configBackup` path allows
        you to get configuration backup of the backup server.
      operationId: GetConfigBackupOptions
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                isEnabled: true
                backupRepositoryId: d4b5e196-f3ad-474c-99bc-dfef051dae07
                restorePointsToKeep: 10
                notifications:
                  SNMPEnabled: true
                  SMTPSettings:
                    settingsType: Custom
                    isEnabled: false
                    recipients: []
                    subject: "[%JobResult%] %JobName% (%Time%)"
                    notifyOnSuccess: true
                    notifyOnWarning: true
                    notifyOnError: true
                schedule:
                  isEnabled: true
                  daily:
                    dailyKind: Everyday
                    isEnabled: true
                    localTime: 10:00 AM
                    days:
                    - monday
                    - tuesday
                    - wednesday
                    - thursday
                    - friday
                    - saturday
                    - sunday
                  monthly:
                    dayOfWeek: saturday
                    dayNumberInMonth: Fourth
                    isEnabled: false
                    localTime: 10:00 PM
                    dayOfMonth: 1
                    months:
                    - January
                    - February
                    - March
                    - April
                    - May
                    - June
                    - July
                    - August
                    - September
                    - October
                    - November
                    - December
                lastSuccessfulBackup:
                  lastSuccessfulTime: 2022-01-21T10:00:35.033+01:00
                  sessionId: a8f1b5ba-a6dc-416d-9b17-95e92c0d7e76
                encryption:
                  isEnabled: true
                  passwordId: ebf6c20f-7126-4186-a1b8-24e6c541161c
              schema:
                $ref: '#/components/schemas/ConfigBackupModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Configuration Backup
      tags:
      - Configuration Backup
      x-veeam-authorize:
        claims:
        - ViewConfigBackupOptions
    put:
      description: The HTTP PUT request to the `/api/v1/configBackup` path allows
        you to edit configuration backup of the backup server.
      operationId: UpdateConfigBackupOptions
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              isEnabled: true
              backupRepositoryId: d4b5e196-f3ad-474c-99bc-dfef051dae07
              restorePointsToKeep: 10
              notifications:
                SNMPEnabled: true
                SMTPSettings:
                  settingsType: Custom
                  isEnabled: false
                  recipients: []
                  subject: "[%JobResult%] %JobName% (%Time%)"
                  notifyOnSuccess: true
                  notifyOnWarning: true
                  notifyOnError: true
              schedule:
                isEnabled: true
                daily:
                  dailyKind: Everyday
                  isEnabled: true
                  localTime: 10:00 AM
                  days:
                  - monday
                  - tuesday
                  - wednesday
                  - thursday
                  - friday
                  - saturday
                  - sunday
                monthly:
                  dayOfWeek: saturday
                  dayNumberInMonth: Fourth
                  isEnabled: false
                  localTime: 10:00 PM
                  dayOfMonth: 1
                  months:
                  - January
                  - February
                  - March
                  - April
                  - May
                  - June
                  - July
                  - August
                  - September
                  - October
                  - November
                  - December
              lastSuccessfulBackup:
                lastSuccessfulTime: 2022-01-21T10:00:35.033+01:00
                sessionId: a8f1b5ba-a6dc-416d-9b17-95e92c0d7e76
              encryption:
                isEnabled: false
                passwordId: ebf6c20f-7126-4186-a1b8-24e6c541161c
            schema:
              $ref: '#/components/schemas/ConfigBackupModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                isEnabled: true
                backupRepositoryId: d4b5e196-f3ad-474c-99bc-dfef051dae07
                restorePointsToKeep: 10
                notifications:
                  SNMPEnabled: true
                  SMTPSettings:
                    settingsType: Custom
                    isEnabled: false
                    recipients: []
                    subject: "[%JobResult%] %JobName% (%Time%)"
                    notifyOnSuccess: true
                    notifyOnWarning: true
                    notifyOnError: true
                schedule:
                  isEnabled: true
                  daily:
                    dailyKind: Everyday
                    isEnabled: true
                    localTime: 10:00 AM
                    days:
                    - monday
                    - tuesday
                    - wednesday
                    - thursday
                    - friday
                    - saturday
                    - sunday
                  monthly:
                    dayOfWeek: saturday
                    dayNumberInMonth: Fourth
                    isEnabled: false
                    localTime: 10:00 PM
                    dayOfMonth: 1
                    months:
                    - January
                    - February
                    - March
                    - April
                    - May
                    - June
                    - July
                    - August
                    - September
                    - October
                    - November
                    - December
                lastSuccessfulBackup:
                  lastSuccessfulTime: 2022-01-21T10:00:35.033+01:00
                  sessionId: a8f1b5ba-a6dc-416d-9b17-95e92c0d7e76
                encryption:
                  isEnabled: false
                  passwordId: ebf6c20f-7126-4186-a1b8-24e6c541161c
              schema:
                $ref: '#/components/schemas/ConfigBackupModel'
          description: Configuration backup settings have been updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Configuration Backup
      tags:
      - Configuration Backup
      x-veeam-authorize:
        claims:
        - UpdateConfigBackupOptions
  /api/v1/configBackup/backup:
    post:
      description: The HTTP POST request to the `/api/v1/configBackup` path allows
        you to start configuration backup.
      operationId: StartConfigBackup
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                sessionType: ConfigurationBackup
                state: Starting
                id: d20f79d1-962d-4cb1-809b-0364c5b90696
                name: Backup Configuration Job
                activityId: 99d1bf3d-e2e0-4bec-b2b3-820c0b87d212
                creationTime: 2022-01-26T17:13:29.097+01:00
                endTime: null
                progressPercent: 0
                result: null
                resourceId: null
                resourceReference: null
                parentSessionId: null
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: Configuration backup has been started.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Start Configuration Backup
      tags:
      - Configuration Backup
      x-veeam-authorize:
        claims:
        - StartConfigBackup
  /api/v1/sessions:
    get:
      description: The HTTP GET request to the `/api/v1/sessions` path allows you
        to get an array of sessions performed on the backup server.
      operationId: GetAllSessions
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of sessions to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Maximum number of sessions to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Sorts sessions by one of the session parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/ESessionsFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Sorts sessions in the ascending order by the `orderColumn` parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: "Filters sessions by the `nameFilter` pattern. The pattern can\
          \ match any session parameter. To substitute one or more characters, use\
          \ the asterisk (*) character at the beginning, at the end or both."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Returns sessions that are created after the specified date and
          time.
        explode: true
        in: query
        name: createdAfterFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Returns sessions that are created before the specified date and
          time.
        explode: true
        in: query
        name: createdBeforeFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Returns sessions that are finished after the specified date and
          time.
        explode: true
        in: query
        name: endedAfterFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Returns sessions that are finished before the specified date
          and time.
        explode: true
        in: query
        name: endedBeforeFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Filters sessions by session type.
        explode: true
        in: query
        name: typeFilter
        required: false
        schema:
          $ref: '#/components/schemas/ESessionType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Filters sessions by session state.
        explode: true
        in: query
        name: stateFilter
        required: false
        schema:
          $ref: '#/components/schemas/ESessionState'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Filters sessions by session result.
        explode: true
        in: query
        name: resultFilter
        required: false
        schema:
          $ref: '#/components/schemas/ESessionResult'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Filters sessions by job ID.
        explode: true
        in: query
        name: jobIdFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - sessionType: Job
                  state: Stopped
                  id: c924ee2f-1197-4b37-8de3-009c1977f347
                  name: Backup Job 1
                  activityId: c05dfa57-f59a-4e90-8065-b7f5d3276406
                  creationTime: 2021-12-04T06:13:34.983+01:00
                  endTime: 2021-12-04T06:15:00.617+01:00
                  progressPercent: 100
                  result:
                    result: Failed
                    message: Creating synthetic full backup (22% done)
                    isCanceled: false
                  resourceId: c7478158-7c99-4bab-93b1-c3efdd1062fa
                  resourceReference: /api/v1/backups/c7478158-7c99-4bab-93b1-c3efdd1062fa
                  parentSessionId: null
                  usn: 0
                pagination:
                  total: 307
                  count: 1
                  skip: 0
                  limit: 1
              schema:
                $ref: '#/components/schemas/SessionsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Sessions
      tags:
      - Sessions
      x-veeam-authorize:
        claims:
        - ViewSessions
  /api/v1/sessions/{id}:
    get:
      description: "The HTTP GET request to the `/api/v1/sessions/{id}` path allows\
        \ you to get a session that has the specified `id`."
      operationId: GetSession
      parameters:
      - description: ID of the session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                sessionType: ConfigurationBackup
                state: Stopped
                id: f848e90c-7f37-4ff5-9d55-04e33f8a4de3
                name: Backup Configuration Job
                activityId: 99d1bf3d-e2e0-4bec-b2b3-820c0b87d212
                creationTime: 2021-11-08T10:00:12.56+01:00
                endTime: 2021-11-08T10:00:34.017+01:00
                progressPercent: 100
                result:
                  result: Success
                  message: Success
                  isCanceled: false
                resourceId: null
                resourceReference: null
                parentSessionId: null
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Session
      tags:
      - Sessions
      x-veeam-authorize:
        claims:
        - ViewSessions
  /api/v1/sessions/{id}/logs:
    get:
      description: "The HTTP GET request to the `/api/v1/sessions/{id}/logs` path\
        \ allows you to get an array of log records of a session that has the specified\
        \ `id`."
      operationId: GetSessionLogs
      parameters:
      - description: ID of the session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                totalRecords: 11
                records:
                - status: Warning
                  id: 11
                  startTime: 2021-11-05T06:03:15.866256+01:00
                  updateTime: 2021-11-05T06:03:15.866256+01:00
                  title: 'Job finished with warning at 11/5/2021 6:03:15 AM '
                  description: ""
                - status: Succeeded
                  id: 10
                  startTime: 2021-11-05T06:03:15.756877+01:00
                  updateTime: 2021-11-05T06:03:15.756877+01:00
                  title: "Primary bottleneck: Source"
                  description: ""
                - status: Succeeded
                  id: 9
                  startTime: 2021-11-05T06:03:15.647498+01:00
                  updateTime: 2021-11-05T06:03:15.647498+01:00
                  title: "Load: Source 86% > Proxy 54% > Network 56% > Target 42%"
                  description: ""
                - status: Succeeded
                  id: 7
                  startTime: 2021-11-05T06:00:24.096249+01:00
                  updateTime: 2021-11-05T06:03:08.2098022+01:00
                  title: Processing ubuntu88
                  description: ""
                - status: Succeeded
                  id: 5
                  startTime: 2021-11-05T06:00:18.9711163+01:00
                  updateTime: 2021-11-05T06:02:18.5413692+01:00
                  title: Processing winsrv100
                  description: ""
                - status: Succeeded
                  id: 6
                  startTime: 2021-11-05T06:00:24.0650043+01:00
                  updateTime: 2021-11-05T06:01:02.6441456+01:00
                  title: Processing dbserver01
                  description: ""
                - status: Succeeded
                  id: 8
                  startTime: 2021-11-05T06:00:59.2378014+01:00
                  updateTime: 2021-11-05T06:00:59.2378014+01:00
                  title: All VMs have been queued for processing
                  description: ""
                - status: Succeeded
                  id: 4
                  startTime: 2021-11-05T06:00:12.0178073+01:00
                  updateTime: 2021-11-05T06:00:12.0178073+01:00
                  title: Changed block tracking is enabled
                  description: ""
                - status: Succeeded
                  id: 3
                  startTime: 2021-11-05T06:00:12.0021761+01:00
                  updateTime: 2021-11-05T06:00:12.0021761+01:00
                  title: "VM size: 86 GB (48 GB used)"
                  description: ""
                - status: Succeeded
                  id: 2
                  startTime: 2021-11-05T06:00:07.9864525+01:00
                  updateTime: 2021-11-05T06:00:10.377142+01:00
                  title: Building list of machines to process
                  description: ""
                - status: Succeeded
                  id: 1
                  startTime: 2021-11-05T06:00:07.7051998+01:00
                  updateTime: 2021-11-05T06:00:07.7051998+01:00
                  title: Job started at 11/5/2021 6:00:02 AM
                  description: ""
              schema:
                $ref: '#/components/schemas/SessionLogResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Session Logs
      tags:
      - Sessions
      x-veeam-authorize:
        claims:
        - ViewSessions
  /api/v1/sessions/{id}/stop:
    post:
      description: "The HTTP POST request to the `/api/v1/sessions/{id}/stop` path\
        \ allows you to stop a session that has the specified `id`."
      operationId: StopSession
      parameters:
      - description: ID of the session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Stop Session
      tags:
      - Sessions
      x-veeam-authorize:
        claims:
        - StopSessions
  /api/v1/connectionCertificate:
    post:
      description: The HTTP POST request to the `/api/v1/connectionCertificate` path
        allows you to get a TLS certificate or SSH fingerprint of the specified host.
      operationId: GetConnectionCertificate
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              serverName: vcenter01.tech.local
              credentialsId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              type: ViHost
              port: 443
            schema:
              $ref: '#/components/schemas/HostConnectionSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                fingerprint: null
                certificate:
                  thumbprint: 1FFB549DC6C6CFF4DA8923F3E640F88925D11704
                  serialNumber: 00CE2401CE350B143C
                  keyAlgorithm: RSA-PKCS1-KeyEx
                  keySize: "2048"
                  subject: "C=US, CN=vcenter01.tech.local"
                  issuedTo: vcenter01.tech.local
                  issuedBy: CA
                  validFrom: 2015-08-21T18:28:05+02:00
                  validBy: 2025-08-15T18:27:45+02:00
              schema:
                $ref: '#/components/schemas/ConnectionCertificateModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Request TLS Certificate or SSH Fingerprint
      tags:
      - Connection
      x-veeam-authorize:
        claims:
        - CheckCertificate
  /api/v1/inventory/vmware/hosts:
    get:
      description: The HTTP GET request to the `/api/v1/inventory/vmware/hosts` path
        allows you to get an array of all VMware vSphere servers added to the backup
        infrastructure.
      operationId: GetAllInventoryVmwareHosts
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of VMware vSphere servers to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ViRootFilters'
      - description: Maximum number of VMware vSphere servers to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ViRootFilters'
      - description: Sorts VMware vSphere servers by one of the VMware vSphere server
          parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EViRootFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ViRootFilters'
      - description: Sorts VMware vSphere servers in the ascending order by the `orderColumn`
          parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ViRootFilters'
      - description: "Filters VMware vSphere servers by the `nameFilter` pattern.\
          \ The pattern can match any VMware vSphere server parameter. To substitute\
          \ one or more characters, use the asterisk (*) character at the beginning\
          \ and/or at the end."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ViRootFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - inventoryObject:
                    type: vCenterServer
                    hostName: vcenter01.tech01.local
                    name: vcenter01.tech01.local
                    objectId: d766a026-a7a7-4d6e-add0-9599a291394f
                  size: N/A
                - inventoryObject:
                    type: vCenterServer
                    hostName: vcenter02.tech02.local
                    name: vcenter02.tech02.local
                    objectId: bd49ae5e-d5ec-4013-8ffa-c91beadce052
                  size: N/A
                pagination:
                  total: 2
                  count: 2
                  skip: 0
                  limit: 200
              schema:
                $ref: '#/components/schemas/ViRootsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All VMware vSphere Servers
      tags:
      - Inventory Browser
      x-veeam-authorize:
        claims:
        - ViewViHierarchy
  /api/v1/inventory/vmware/hosts/{name}:
    get:
      description: "The HTTP GET request to the `/api/v1/inventory/vmware/hosts/{name}`\
        \ path allows you to get an array of virtual infrastructure objects of the\
        \ VMware vSphere server that has the specified `name`."
      operationId: GetVmwareHostObject
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Name of the VMware vSphere server.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Number of objects to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VCenterInventoryFilters'
      - description: Maximum number of objects to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VCenterInventoryFilters'
      - description: Sorts objects by one of the object parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EvCentersInventoryFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VCenterInventoryFilters'
      - description: Sorts objects in the ascending order by the `orderColumn` parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VCenterInventoryFilters'
      - description: Filters objects by object ID.
        explode: true
        in: query
        name: objectIdFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VCenterInventoryFilters'
      - description: Filters objects by hierarchy type.
        explode: true
        in: query
        name: hierarchyTypeFilter
        required: false
        schema:
          $ref: '#/components/schemas/EHierarchyType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VCenterInventoryFilters'
      - description: "Filters objects by the `nameFilter` pattern. The pattern can\
          \ match any object parameter. To substitute one or more characters, use\
          \ the asterisk (*) character at the beginning, at the end or both."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VCenterInventoryFilters'
      - description: Filters objects by virtual infrastructure type.
        explode: true
        in: query
        name: typeFilter
        required: false
        schema:
          $ref: '#/components/schemas/EVmwareInventoryType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VCenterInventoryFilters'
      - description: Filters objects by name of the parent container.
        explode: true
        in: query
        name: parentContainerNameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VCenterInventoryFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - inventoryObject:
                    type: Datacenter
                    hostName: vcenter01.tech.local
                    name: Prague
                    objectId: datacenter-42371
                  size: N/A
                - inventoryObject:
                    type: Folder
                    hostName: vcenter01.tech.local
                    name: Templates
                    objectId: group-h42373
                  size: N/A
                - inventoryObject:
                    type: Host
                    hostName: vcenter01.tech.local
                    name: esx03.tech.local
                    objectId: host-42428
                  size: N/A
                - inventoryObject:
                    type: ResourcePool
                    hostName: vcenter01.tech.local
                    name: Services
                    objectId: resgroup-65867
                  size: N/A
                - inventoryObject:
                    type: VirtualMachine
                    hostName: vcenter01.tech.local
                    name: winsrv01
                    objectId: vm-62230
                  size: 220 GB
                pagination:
                  total: 5
                  count: 5
                  skip: 0
                  limit: 200
              schema:
                $ref: '#/components/schemas/VCenterInventoryResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get VMware vSphere Server Objects
      tags:
      - Inventory Browser
      x-veeam-authorize:
        claims:
        - ViewViHierarchy
    post:
      description: DEBUG ONLY! REMOVE BEFORE RELEASE
      operationId: TestVmwareHostObject
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Name of the VMware vSphere server.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareObjectModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get VMware vSphere Server Objects
      tags:
      - Inventory Browser
      x-veeam-authorize:
        claims:
        - ViewViHierarchy
  /api/v1/backupInfrastructure/managedServers:
    get:
      description: The HTTP GET request to the `/api/v1/backupInfrastructure/managedServers`
        path allows you to get an array of all servers that are added to the backup
        infrastructure.
      operationId: GetAllManagedServers
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of servers to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ManagedServersFilters'
      - description: Maximum number of servers to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ManagedServersFilters'
      - description: Sorts servers by one of the server parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EManagedServersFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ManagedServersFilters'
      - description: Sorts servers in the ascending order by the `orderColumn` parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ManagedServersFilters'
      - description: "Filters servers by the `nameFilter` pattern. The pattern can\
          \ match any server parameter. To substitute one or more characters, use\
          \ the asterisk (*) character at the beginning, at the end or both."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ManagedServersFilters'
      - description: Filters servers by server type.
        explode: true
        in: query
        name: typeFilter
        required: false
        schema:
          $ref: '#/components/schemas/EManagedServerType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ManagedServersFilters'
      - description: Filters servers by the type of VMware vSphere server.
        explode: true
        in: query
        name: viTypeFilter
        required: false
        schema:
          $ref: '#/components/schemas/EViHostType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ManagedServersFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - sshSettings:
                    sshTimeOutMs: 20000
                    portRangeStart: 2500
                    portRangeEnd: 3300
                    serverThisSide: false
                    managementPort: 6162
                  type: LinuxHost
                  id: 535b5414-788d-4720-a53a-ecc830d2589b
                  name: 172.17.53.67
                  description: Created by TECH\sheila.d.cory
                  credentialsId: b860489e-490d-4e43-b20a-a91c4e7d2e76
                - networkSettings:
                    components:
                    - componentName: DeployerSvc
                      port: 6160
                    - componentName: Transport
                      port: 6162
                    - componentName: Nfs
                      port: 6161
                    - componentName: RestoreProxy
                      port: 6170
                    - componentName: WanAccelerator
                      port: 6164
                    - componentName: Tape
                      port: 6166
                    - componentName: CloudGate
                      port: 6168
                    - componentName: AgentConfigureService
                      port: 9380
                    - componentName: FileSystemVssIntegration
                      port: 6210
                    - componentName: VssHwSnapshotProvider
                      port: 6211
                    portRangeStart: 2500
                    portRangeEnd: 3300
                    serverThisSide: false
                  type: WindowsHost
                  id: ee50f2fb-034f-41cd-8dc8-904aeae2d0d8
                  name: enterprise04.tech.local
                  description: Created by TECH\sheila.d.cory
                  credentialsId: fa4769b5-6722-4968-838b-866c29bd14d4
                - viHostType: VC
                  port: 443
                  type: ViHost
                  id: de28dc43-b8ee-4e17-8e63-3d38b6604033
                  name: vcenter01.tech.local
                  description: Created by TECH\administrator
                  credentialsId: fa4769b5-6722-4968-838b-866c29bd14d4
                pagination:
                  total: 3
                  count: 3
                  skip: 0
                  limit: 200
              schema:
                $ref: '#/components/schemas/ManagedServersResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Servers
      tags:
      - Managed Servers
      x-veeam-authorize:
        claims:
        - ViewManagedServers
    post:
      description: The HTTP POST request to the `/api/v1/backupInfrastructure/managedServers`
        path allows you to add a server to the backup infrastructure.
      operationId: CreateManagedServer
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              networkSettings:
                components:
                - componentName: DeployerSvc
                  port: 6160
                - componentName: Transport
                  port: 6162
                - componentName: Nfs
                  port: 6161
                - componentName: RestoreProxy
                  port: 6170
                - componentName: WanAccelerator
                  port: 6164
                - componentName: Tape
                  port: 6166
                - componentName: CloudGate
                  port: 6168
                - componentName: AgentConfigureService
                  port: 9380
                - componentName: FileSystemVssIntegration
                  port: 6210
                - componentName: VssHwSnapshotProvider
                  port: 6211
                portRangeStart: 2517
                portRangeEnd: 3313
                serverThisSide: true
              type: WindowsHost
              name: enterprise01.tech.local
              description: Backup Repository
              credentialsId: d7af15f3-8808-454e-ba79-2c2267acb05d
            schema:
              $ref: '#/components/schemas/ManagedServerSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                sessionType: Infrastructure
                state: Working
                id: 59f85a1e-2016-4d08-aea5-2676a03d548c
                name: Infrastructure Item Saving
                activityId: 59f85a1e-2016-4d08-aea5-2676a03d548c
                creationTime: 2022-01-28T19:48:43.117+01:00
                endTime: null
                progressPercent: 0
                result: null
                resourceId: null
                resourceReference: null
                parentSessionId: null
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to add the server.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Add Server
      tags:
      - Managed Servers
      x-veeam-authorize:
        claims:
        - CreateManagedServers
  /api/v1/backupInfrastructure/managedServers/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/backupInfrastructure/managedServers/{id}`\
        \ path allows you to remove a managed server that has the specified `id` from\
        \ the backup infrastructure."
      operationId: DeleteManagedServer
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the managed server.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              example:
                sessionType: InfrastructureItemDeletion
                state: Working
                id: af1a6027-3845-487e-9a16-6849f4775a1e
                name: Infrastructure Item Deletion
                activityId: fc5683a4-8c25-4f8e-97cc-0a40745a5729
                creationTime: 2022-01-28T20:21:08.81+01:00
                endTime: null
                progressPercent: 0
                result: null
                resourceId: null
                resourceReference: null
                parentSessionId: null
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "InfrastructureItemDeletion session has been created to remove\
            \ the server. To check the progress, track the session `state`."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Remove Server
      tags:
      - Managed Servers
      x-veeam-authorize:
        claims:
        - DeleteManagedServers
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/managedServers/{id}`\
        \ path allows you to get a managed server that has the specified `id`."
      operationId: GetManagedServer
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the managed server.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                networkSettings:
                  components:
                  - componentName: DeployerSvc
                    port: 6160
                  - componentName: Transport
                    port: 6162
                  - componentName: Nfs
                    port: 6161
                  - componentName: RestoreProxy
                    port: 6170
                  - componentName: WanAccelerator
                    port: 6164
                  - componentName: Tape
                    port: 6166
                  - componentName: CloudGate
                    port: 6168
                  - componentName: AgentConfigureService
                    port: 9380
                  - componentName: FileSystemVssIntegration
                    port: 6210
                  - componentName: VssHwSnapshotProvider
                    port: 6211
                  portRangeStart: 2500
                  portRangeEnd: 3300
                  serverThisSide: false
                type: WindowsHost
                id: fc5683a4-8c25-4f8e-97cc-0a40745a5729
                name: enterprise05.tech.local
                description: Backup repository
                credentialsId: 97d00492-92b7-4929-9e11-68eaa63b88e3
              schema:
                $ref: '#/components/schemas/ManagedServerModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Server
      tags:
      - Managed Servers
      x-veeam-authorize:
        claims:
        - ViewManagedServers
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/managedServers/{id}`\
        \ path allows you to edit a managed server that has the specified `id`."
      operationId: UpdateManagedServer
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the managed server.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              sshSettings:
                sshTimeOutMs: 20000
                portRangeStart: 2500
                portRangeEnd: 3300
                serverThisSide: false
                managementPort: 6162
              type: LinuxHost
              id: 71988b5d-e338-4c62-81e5-05ea944d233e
              name: linuxsrv01.tech.local
              description: Backup repository
              credentialsId: 76571109-fe6e-4638-ad37-2f1f30e3e9f1
            schema:
              $ref: '#/components/schemas/ManagedServerModel'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                sessionType: Infrastructure
                state: Working
                id: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                name: Infrastructure Item Saving
                activityId: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                creationTime: 2022-01-28T20:18:47.563+01:00
                endTime: null
                progressPercent: 0
                result: null
                resourceId: null
                resourceReference: null
                parentSessionId: null
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to edit the server.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Server
      tags:
      - Managed Servers
      x-veeam-authorize:
        claims:
        - UpdateManagedServers
  /api/v1/backupInfrastructure/managedServers/{id}/updateSingleUseCredentials:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/managedServers/{id}/updateSingleUseCredentials`\
        \ path allows you to change from persistent to single-use credentials used\
        \ to access a Linux server that has the specified `id`. Single-use type of\
        \ credentials is required if you want to use the Linux server as a hardened\
        \ repository."
      operationId: UpdateSingleUseCredentials
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the managed server.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinuxCredentialsSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                sessionType: Infrastructure
                state: Working
                id: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                name: Infrastructure Item Saving
                activityId: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                creationTime: 2022-01-28T20:18:47.563+01:00
                endTime: null
                progressPercent: 0
                result: null
                resourceId: null
                resourceReference: null
                parentSessionId: null
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to edit the server.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Change to Single-Use Credentials
      tags:
      - Managed Servers
      x-veeam-authorize:
        claims:
        - UpdateManagedServers
  /api/v1/backupInfrastructure/repositories:
    get:
      description: The HTTP GET request to the `/api/v1/backupInfrastructure/repositories`
        path allows you to get an array of all backup repositories that are added
        to the backup infrastructure.
      operationId: GetAllRepositories
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of repositories to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoriesFilters'
      - description: Maximum number of repositories to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoriesFilters'
      - description: Sorts repositories by one of the repository parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/ERepositoryFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoriesFilters'
      - description: Sorts repositories in the ascending order by the `orderColumn`
          parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoriesFilters'
      - description: "Filters repositories by the `nameFilter` pattern. The pattern\
          \ can match any repository parameter. To substitute one or more characters,\
          \ use the asterisk (*) character at the beginning and/or at the end."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoriesFilters'
      - description: Filters repositories by repository type.
        explode: true
        in: query
        name: typeFilter
        required: false
        schema:
          $ref: '#/components/schemas/ERepositoryType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoriesFilters'
      - description: Filters repositories by ID of the backup server.
        explode: true
        in: query
        name: hostIdFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoriesFilters'
      - description: Filters repositories by path to the folder where backup files
          are stored.
        explode: true
        in: query
        name: pathFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoriesFilters'
      - description: "Filters repositories by VM Backup API parameters converted to\
          \ the base64 string. To obtain the string, call the `GetApiProductInfoString`\
          \ method of VM Backup API."
        explode: true
        in: query
        name: vmbApiFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoriesFilters'
      - description: Filters repositories by ID of a platform that you use to communicate
          with VM Backup API.
        explode: true
        in: query
        name: vmbApiPlatform
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoriesFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - hostId: e22b8842-c454-4036-abd5-f468c3248aaf
                  repository:
                    path: C:\Backup Repository
                    maxTaskCount: 4
                    readWriteRate: 0
                    advancedSettings:
                      alignDataBlocks: true
                      decompressBeforeStoring: false
                      rotatedDrives: false
                      perVmBackup: false
                  mountServer:
                    mountServerId: e22b8842-c454-4036-abd5-f468c3248aaf
                    writeCacheFolder: C:\ProgramData\Veeam\Backup\IRCache\
                    vPowerNFSEnabled: true
                    vPowerNFSPortSettings:
                      mountPort: 1063
                      vPowerNFSPort: 2049
                  type: WinLocal
                  id: d4b5e196-f3ad-474c-99bc-dfef051dae07
                  name: Backup Repository 1
                  description: Created by TECH\sheila.d.cory
                  tag: D4B5E196F3AD474C99BCDFEF051DAE07
                - hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                  repository:
                    path: C:\Backup
                    maxTaskCount: 4
                    readWriteRate: 0
                    advancedSettings:
                      alignDataBlocks: true
                      decompressBeforeStoring: false
                      rotatedDrives: false
                      perVmBackup: false
                  mountServer:
                    mountServerId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                    writeCacheFolder: C:\ProgramData\Veeam\Backup\IRCache\
                    vPowerNFSEnabled: true
                    vPowerNFSPortSettings:
                      mountPort: 1063
                      vPowerNFSPort: 2049
                  type: WinLocal
                  id: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                  name: Default Backup Repository
                  description: Created by Veeam Backup
                  tag: 88788F9ED8F54EB4BC4F9B3F5403BCEC
                pagination:
                  total: 2
                  count: 2
                  skip: 0
                  limit: 200
              schema:
                $ref: '#/components/schemas/RepositoriesResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Repositories
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - ViewRepositories
    post:
      description: The HTTP POST request to the `/api/v1/backupInfrastructure/repositories`
        path allows you to add a repository to the backup infrastructure.
      operationId: CreateRepository
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - explode: true
        in: query
        name: overwriteOwner
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoryBehaviorFilters'
      requestBody:
        content:
          application/json:
            example:
              kind: Das
              type: WinLocal
              name: Main Backup Repository
              description: Created by TECH\sheila.d.cory
              tag: big-repository
              hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
              repository:
                path: D:\Backups
                maxTaskCount: 8
                readWriteRate: 0
                useFastCloningOnXFSVolumes: false
                useImmutableBackups: null
                makeRecentBackupsImmutableDays: null
                advancedSettings:
                  alignDataBlocks: false
                  decompressBeforeStoring: false
                  rotatedDrives: false
                  perVmBackup: false
              mountServer:
                mountServerId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                writeCacheFolder: D:\ProgramData\Veeam\Backup\
                vPowerNFSEnabled: true
                vPowerNFSPortSettings:
                  mountPort: 1058
                  vPowerNFSPort: 1058
            schema:
              $ref: '#/components/schemas/RepositorySpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                sessionType: Infrastructure
                state: Working
                id: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                name: Infrastructure Item Saving
                activityId: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                creationTime: 2022-01-28T20:18:47.563+01:00
                endTime: null
                progressPercent: 0
                result: null
                resourceId: null
                resourceReference: null
                parentSessionId: null
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to add the repository.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Add Repository
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - CreateRepositories
  /api/v1/backupInfrastructure/repositories/states:
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/repositories/states`\
        \ path allows you to get an array of all repository states. The states include\
        \ repository location and brief statistics, such as repository capacity, free\
        \ and used space."
      operationId: GetAllRepositoriesStates
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of repository states to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoryStatesFilters'
      - description: Maximum number of repository states to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoryStatesFilters'
      - description: Sorts repository states by one of the state parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/ERepositoryStatesFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoryStatesFilters'
      - description: Sorts repository states in the ascending order by the `orderColumn`
          parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoryStatesFilters'
      - description: Filters repository states by repository ID.
        explode: true
        in: query
        name: idFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoryStatesFilters'
      - description: "Filters repository states by the `nameFilter` pattern. The pattern\
          \ can match any repository state parameter. To substitute one or more characters,\
          \ use the asterisk (*) character at the beginning and/or at the end."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoryStatesFilters'
      - description: Filters repository states by repository type.
        explode: true
        in: query
        name: typeFilter
        required: false
        schema:
          $ref: '#/components/schemas/ERepositoryType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoryStatesFilters'
      - description: Filters repository states by repository capacity.
        explode: true
        in: query
        name: capacityFilter
        required: false
        schema:
          format: double
          type: number
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoryStatesFilters'
      - description: Filters repository states by repository free space.
        explode: true
        in: query
        name: freeSpaceFilter
        required: false
        schema:
          format: double
          type: number
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoryStatesFilters'
      - description: Filters repository states by repository used space.
        explode: true
        in: query
        name: usedSpaceFilter
        required: false
        schema:
          format: double
          type: number
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/RepositoryStatesFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - type: WinLocal
                  id: d4b5e196-f3ad-474c-99bc-dfef051dae07
                  name: Backup Repository 1
                  description: Created by TECH\sheila.d.cory
                  hostId: e22b8842-c454-4036-abd5-f468c3248aaf
                  hostName: enterprise03.tech.local
                  path: C:\Backup Repository
                  capacityGB: 299.4
                  freeGB: 217.8
                  usedSpaceGB: 173.4
                - type: WinLocal
                  id: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                  name: Default Backup Repository
                  description: Created by Veeam Backup
                  hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                  hostName: enterprise06.tech.local
                  path: C:\Backup
                  capacityGB: 99.4
                  freeGB: 16.4
                  usedSpaceGB: 30.4
                pagination:
                  total: 2
                  count: 2
                  skip: 0
                  limit: 200
              schema:
                $ref: '#/components/schemas/RepositoryStatesResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Repository States
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - ViewRepositories
  /api/v1/backupInfrastructure/repositories/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/backupInfrastructure/repositories/{id}`\
        \ path allows you to remove a backup repository that has the specified `id`\
        \ from the backup infrastructure."
      operationId: DeleteRepository
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "If *true*, Veeam Backup & Replication will remove backup files."
        explode: true
        in: query
        name: deleteBackups
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/DeleteRepositoryFilters'
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Repository has been removed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Remove Repository
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - DeleteRepositories
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/repositories/{id}`\
        \ path allows you to get a backup repository that has the specified `id`."
      operationId: GetRepository
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                hostId: e22b8842-c454-4036-abd5-f468c3248aaf
                repository:
                  path: C:\Backup Repository
                  maxTaskCount: 4
                  readWriteRate: 0
                  advancedSettings:
                    alignDataBlocks: true
                    decompressBeforeStoring: false
                    rotatedDrives: false
                    perVmBackup: false
                mountServer:
                  mountServerId: e22b8842-c454-4036-abd5-f468c3248aaf
                  writeCacheFolder: C:\ProgramData\Veeam\Backup\IRCache\
                  vPowerNFSEnabled: true
                  vPowerNFSPortSettings:
                    mountPort: 1063
                    vPowerNFSPort: 2049
                type: WinLocal
                id: d4b5e196-f3ad-474c-99bc-dfef051dae07
                name: Backup Repository 1
                description: Created by TECH\sheila.d.cory
                tag: D4B5E196F3AD474C99BCDFEF051DAE07
              schema:
                $ref: '#/components/schemas/RepositoryModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Repository
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - ViewRepositories
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/repositories/{id}`\
        \ path allows you to edit a backup repository that has the specified `id`."
      operationId: UpdateRepository
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryModel'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to edit the repository.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Repository
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - UpdateRepositories
  /api/v1/backupInfrastructure/repositories/{id}/accessPermissions:
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/repositories/{id}/accessPermissions`\
        \ path allows you to get access permissions of a repository that has the specified\
        \ `id`."
      operationId: GetRepositoryAccessPermissions
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Repository Access Permissions
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - ViewRepositoryAccessPermissions
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/repositories/{id}/accessPermissions`\
        \ path allows you to edit access permissions of a repository that has the\
        \ specified `id`."
      operationId: UpdateRepositoryAccessPermissions
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Repository Access Permissions
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - UpdateRepositoryAccessPermissions
  /api/v1/backupInfrastructure/proxies:
    get:
      description: The HTTP GET request to the `/api/v1/backupInfrastructure/proxies`
        path allows you to get an array of all backup proxies that are added to the
        backup infrastructure.
      operationId: GetAllProxies
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of proxies to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ProxiesFilters'
      - description: Maximum number of proxies to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ProxiesFilters'
      - description: Sorts proxies by one of the proxy parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EProxiesFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ProxiesFilters'
      - description: Sorts proxies in the ascending order by the `orderColumn` parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ProxiesFilters'
      - description: "Filters proxies by the `nameFilter` pattern. The pattern can\
          \ match any proxy parameter. To substitute one or more characters, use the\
          \ asterisk (*) character at the beginning, at the end or both."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ProxiesFilters'
      - description: Filters proxies by proxy type.
        explode: true
        in: query
        name: typeFilter
        required: false
        schema:
          $ref: '#/components/schemas/EProxyType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ProxiesFilters'
      - description: Filters proxies by ID of the backup server.
        explode: true
        in: query
        name: hostIdFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ProxiesFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - server:
                    transportMode: virtualAppliance
                    hostId: 535b5414-788d-4720-a53a-ecc830d2589b
                    failoverToNetwork: true
                    hostToProxyEncryption: false
                    connectedDatastores:
                      autoSelect: true
                      datastores: []
                    maxTaskCount: 2
                  type: ViProxy
                  id: 0be53088-d516-4734-a956-a8093a568876
                  name: 172.17.53.67
                  description: Created by TECH\sheila.d.cory
                - server:
                    transportMode: auto
                    hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                    failoverToNetwork: true
                    hostToProxyEncryption: false
                    connectedDatastores:
                      autoSelect: true
                      datastores: []
                    maxTaskCount: 2
                  type: ViProxy
                  id: 18b661c1-d9dc-4233-90a0-7e7b10dc2d09
                  name: VMware Backup Proxy
                  description: Created by Veeam Backup & Replication
                pagination:
                  total: 2
                  count: 2
                  skip: 0
                  limit: 200
              schema:
                $ref: '#/components/schemas/ProxiesResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Proxies
      tags:
      - Proxies
      x-veeam-authorize:
        claims:
        - ViewProxies
    post:
      description: The HTTP POST request to the `/api/v1/backupInfrastructure/proxies`
        path allows you to add a proxy to the backup infrastructure.
      operationId: CreateProxy
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              type: ViProxy
              name: proxy01.tech.local
              description: Created by TECH\sheila.d.cory
              server:
                transportMode: auto
                hostId: 080b9a63-56f3-49e2-9b06-56fc252de34c
                failoverToNetwork: true
                hostToProxyEncryption: false
                connectedDatastores:
                  autoSelect: false
                  datastores:
                  - datastore:
                      type: Datastore
                      hostName: vcenter01.tech.local
                      name: esx04-ds1
                      objectId: datastore-78098
                    vmCount: 98
                  - datastore:
                      type: Datastore
                      hostName: vcenter01.tech.local
                      name: esx04-ds2
                      objectId: datastore-94394
                    vmCount: 93
                maxTaskCount: 2
            schema:
              $ref: '#/components/schemas/ProxySpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                sessionType: Infrastructure
                state: Working
                id: 59f85a1e-2016-4d08-aea5-2676a03d548c
                name: Infrastructure Item Saving
                activityId: 59f85a1e-2016-4d08-aea5-2676a03d548c
                creationTime: 2022-01-28T19:48:43.117+01:00
                endTime: null
                progressPercent: 0
                result: null
                resourceId: null
                resourceReference: null
                parentSessionId: null
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to add the proxy.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Add Proxy
      tags:
      - Proxies
      x-veeam-authorize:
        claims:
        - CreateProxies
  /api/v1/backupInfrastructure/proxies/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/backupInfrastructure/proxies/{id}`\
        \ path allows you to remove a backup proxy that has the specified `id` from\
        \ the backup infrastructure."
      operationId: DeleteProxy
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup proxy.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Removed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Remove Proxy
      tags:
      - Proxies
      x-veeam-authorize:
        claims:
        - DeleteProxies
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/proxies/{id}`\
        \ path allows you to get a backup proxy that has the specified `id`."
      operationId: GetProxy
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup proxy.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                server:
                  transportMode: auto
                  hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                  failoverToNetwork: true
                  hostToProxyEncryption: false
                  connectedDatastores:
                    autoSelect: true
                    datastores: []
                  maxTaskCount: 2
                type: ViProxy
                id: 18b661c1-d9dc-4233-90a0-7e7b10dc2d09
                name: VMware Backup Proxy
                description: Created by Veeam Backup & Replication
              schema:
                $ref: '#/components/schemas/ProxyModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Proxy
      tags:
      - Proxies
      x-veeam-authorize:
        claims:
        - ViewProxies
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/proxies/{id}`\
        \ path allows you to edit a backup proxy that has the specified `id`."
      operationId: UpdateProxy
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup proxy.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              server:
                transportMode: network
                hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                failoverToNetwork: false
                hostToProxyEncryption: false
                connectedDatastores:
                  autoSelect: true
                  datastores: []
                maxTaskCount: 2
              trafficRules:
                rules:
                - timePeriod: Anytime
                  name: Internet
                  encryption: true
                  throttling: false
              type: ViProxy
              id: 18b661c1-d9dc-4233-90a0-7e7b10dc2d09
              name: VMware Backup Proxy
              description: Created by Veeam Backup & Replication
            schema:
              $ref: '#/components/schemas/ProxyModel'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                sessionType: Infrastructure
                state: Working
                id: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                name: Infrastructure Item Saving
                activityId: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                creationTime: 2022-01-28T20:18:47.563+01:00
                endTime: null
                progressPercent: 0
                result: null
                resourceId: null
                resourceReference: null
                parentSessionId: null
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to edit the proxy.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Proxy
      tags:
      - Proxies
      x-veeam-authorize:
        claims:
        - UpdateProxies
  /api/v1/backupInfrastructure/scaleOutRepositories:
    get:
      description: The HTTP GET request to the `/api/v1/backupInfrastructure/scaleOutRepositories`
        path allows you to get an array of all scale-out backup repositories that
        are added to the backup infrastructure.
      operationId: GetAllScaleOutRepositories
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of repositories to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ScaleOutRepositoriesFilters'
      - description: Maximum number of repositories to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ScaleOutRepositoriesFilters'
      - description: Sorts repositories by one of the repository parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EScaleOutRepositoryFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ScaleOutRepositoriesFilters'
      - description: Sorts repositories in the ascending order by the `orderColumn`
          parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ScaleOutRepositoriesFilters'
      - description: "Filters repositories by the `nameFilter` pattern. The pattern\
          \ can match any repository parameter. To substitute one or more characters,\
          \ use the asterisk (*) character at the beginning, at the end or both."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ScaleOutRepositoriesFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaleOutRepositoriesResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Scale-Out Backup Repositories
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - ViewScaleOutRepositories
    post:
      description: The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories`
        path allows you to add a scale-out backup repository to the backup infrastructure.
      operationId: CreateScaleOutRepository
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutRepositorySpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to add the repository.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Add Scale-Out Backup Repository
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - CreateScaleOutRepositories
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}`\
        \ path allows you to remove a scale-out backup repository that has the specified\
        \ `id`."
      operationId: DeleteScaleOutRepository
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the scale-out backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "If *true*, Veeam Backup & Replication will remove backup files."
        explode: true
        in: query
        name: deleteBackups
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/DeleteRepositoryFilters'
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Scale-out backup repository has been removed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Remove Scale-Out Backup Repository
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - DeleteScaleOutRepositories
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}`\
        \ path allows you to get a scale-out backup repository that has the specified\
        \ `id`."
      operationId: GetScaleOutRepository
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the scale-out backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaleOutRepositoryModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Scale-Out Backup Repository
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - ViewScaleOutRepositories
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}`\
        \ path allows you to edit a scale-out backup repository that has the specified\
        \ `id`."
      operationId: UpdateScaleOutRepository
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the scale-out backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutRepositoryModel'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to edit the scale-out\
            \ backup repository. To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Scale-Out Backup Repository
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - UpdateScaleOutRepositories
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/accessPermissions:
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/accessPermissions`\
        \ path allows you to get access permissions of a scale-out backup repository\
        \ that has the specified `id`."
      operationId: GetScaleOutRepositoryAccessPermissions
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the scale-out backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Scale-Out Backup Repository Access Permissions
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - ViewRepositoryAccessPermissions
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/accessPermissions`\
        \ path allows you to edit access permissions of a scale-out backup repository\
        \ that has the specified `id`."
      operationId: UpdateScaleOutRepositoryAccessPermissions
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the scale-out backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Scale-Out Backup Repository Access Permissions
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - UpdateRepositoryAccessPermissions
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableSealedMode:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableSealedMode`\
        \ path allows you to enable the Sealed mode for specified extents of a scale-out\
        \ backup repository that has the specified `id`."
      operationId: EnableScaleOutExtentSealedMode
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the scale-out backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutExtentMaintenanceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: RepositoryMaintenance session has been created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Enable Sealed Mode
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - EnableRepositorySealedMode
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableSealedMode:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableSealedMode`\
        \ path allows you to disable the Sealed mode for specified extents of a scale-out\
        \ backup repository that has the specified `id`."
      operationId: DisableScaleOutExtentSealedMode
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the scale-out backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutExtentMaintenanceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: RepositoryMaintenance session has been created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Disable Sealed Mode
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - DisableRepositorySealedMode
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableMaintenanceMode:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableMaintenanceMode`\
        \ path allows you to enable the Maintenance mode for specified extents of\
        \ a scale-out backup repository that has the specified `id`."
      operationId: EnableScaleOutExtentMaintenanceMode
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the scale-out backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutExtentMaintenanceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: RepositoryMaintenance session has been created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Enable Maintenance Mode
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - EnableRepositoryMaintenanceMode
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableMaintenanceMode:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableMaintenanceMode`\
        \ path allows you to disable the Maintenance mode for specified extents of\
        \ a scale-out backup repository that has the specified `id`."
      operationId: DisableScaleOutExtentMaintenanceMode
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the scale-out backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutExtentMaintenanceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: RepositoryMaintenance session has been created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Disable Maintenance Mode
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - DisableRepositoryMaintenanceMode
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/evacuateBackups:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/evacuateBackups`\
        \ path allows you to evacuate backups from specified performance extents of\
        \ a scale-out backup repository that has the specified `id`.<br>Before you\
        \ evacuate backups from performance extents, you must put them into the Maintenance\
        \ mode."
      operationId: EvacuateBackupsFromScaleOutExtent
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the scale-out backup repository.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutExtentMaintenanceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: RepositoryEvacuate session has been created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Evacuate Backups from Performance Extent
      tags:
      - Repositories
      x-veeam-authorize:
        claims:
        - EvacuateExtentBackups
  /api/v1/jobs:
    get:
      description: The HTTP GET request to the `/api/v1/jobs` path allows you to get
        an array of all jobs coordinated by the backup server.
      operationId: GetAllJobs
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of jobs to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobsFilters'
      - description: Maximum number of jobs to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobsFilters'
      - description: Sorts jobs by one of the job parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EJobFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobsFilters'
      - description: Sorts jobs in the ascending order by the `orderColumn` parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobsFilters'
      - description: "Filters jobs by the `nameFilter` pattern. The pattern can match\
          \ any job parameter. To substitute one or more characters, use the asterisk\
          \ (*) character at the beginning, at the end or both."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobsFilters'
      - description: Filters jobs by job type.
        explode: true
        in: query
        name: typeFilter
        required: false
        schema:
          $ref: '#/components/schemas/EJobType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobsFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - isHighPriority: false
                  virtualMachines:
                    includes:
                    - inventoryObject:
                        type: VirtualMachine
                        hostName: vcenter01.tech.local
                        name: filesrv02
                        objectId: vm-45006
                      size: 43.5 GB
                    excludes:
                      vms: []
                      disks:
                      - disksToProcess: AllDisks
                        vmObject:
                          type: VirtualMachine
                          hostName: vcenter01.tech.local
                          name: filesrv02
                          objectId: vm-45006
                        disks: []
                        removeFromVMConfiguration: true
                      templates:
                        isEnabled: true
                        excludeFromIncremental: true
                  storage:
                    backupRepositoryId: 88101045-8755-4117-9221-bca81fbfabc4
                    backupProxies:
                      autoSelection: true
                      proxyIds: []
                    retentionPolicy:
                      type: Days
                      quantity: 7
                    gfsPolicy:
                      isEnabled: false
                      weekly:
                        desiredTime: sunday
                        isEnabled: false
                        keepForNumberOfWeeks: 1
                      monthly:
                        desiredTime: First
                        isEnabled: false
                        keepForNumberOfMonths: 1
                      yearly:
                        desiredTime: January
                        isEnabled: false
                        keepForNumberOfYears: 1
                    advancedSettings:
                      backupModeType: Incremental
                      synthenticFulls:
                        isEnabled: true
                        days:
                        - saturday
                      activeFulls:
                        isEnabled: false
                        weekly:
                          isEnabled: true
                          days:
                          - saturday
                        monthly:
                          dayOfWeek: monday
                          dayNumberInMonth: First
                          isEnabled: false
                          dayOfMonths: 1
                          months:
                          - January
                          - February
                          - March
                          - April
                          - May
                          - June
                          - July
                          - August
                          - September
                          - October
                          - November
                          - December
                      backupHealth:
                        isEnabled: false
                        weekly:
                          isEnabled: false
                          days:
                          - friday
                        monthly:
                          dayOfWeek: friday
                          dayNumberInMonth: Last
                          isEnabled: true
                          dayOfMonths: 1
                          months:
                          - January
                          - February
                          - March
                          - April
                          - May
                          - June
                          - July
                          - August
                          - September
                          - October
                          - November
                          - December
                      fullBackupMaintenance:
                        RemoveData:
                          isEnabled: false
                          afterDays: 14
                        defragmentAndCompact:
                          isEnabled: false
                          weekly:
                            isEnabled: false
                            days:
                            - saturday
                          monthly:
                            dayOfWeek: saturday
                            dayNumberInMonth: Last
                            isEnabled: true
                            dayOfMonths: 1
                            months:
                            - January
                            - February
                            - March
                            - April
                            - May
                            - June
                            - July
                            - August
                            - September
                            - October
                            - November
                            - December
                      storageData:
                        compressionLevel: Optimal
                        storageOptimization: LocalTarget
                        enableInlineDataDedup: true
                        excludeSwapFileBlocks: true
                        excludeDeletedFileBlocks: true
                        encryption:
                          isEnabled: false
                          encryptionPasswordIdOrNull: 00000000-0000-0000-0000-000000000000
                          encryptionPasswordTag: null
                      notifications:
                        sendSNMPNotifications: false
                        emailNotifications:
                          notificationType: null
                          isEnabled: false
                          recipients: []
                          customNotificationSettings: null
                        vmAttribute:
                          isEnabled: false
                          notes: Notes
                          appendToExisitingValue: true
                      vSphere:
                        enableVMWareToolsQuiescence: false
                        changedBlockTracking:
                          isEnabled: true
                          enableCBTautomatically: true
                          resetCBTonActiveFull: true
                      storageIntegration:
                        isEnabled: true
                        limitProcessedVm: false
                        limitProcessedVmCount: 10
                        failoverToStandardBackup: false
                      scripts:
                        periodicityType: BackupSessions
                        preCommand:
                          isEnabled: false
                          command: ""
                        postCommand:
                          isEnabled: false
                          command: ""
                        runScriptEvery: 1
                        dayOfWeek:
                        - saturday
                  guestProcessing:
                    appAwareProcessing:
                      isEnabled: false
                      appSettings: []
                    guestFSIndexing:
                      isEnabled: true
                      indexingSettings:
                      - vmObject:
                          type: VirtualMachine
                          hostName: vcenter01.tech.local
                          name: filesrv02
                          objectId: vm-45006
                        WindowsIndexing:
                          guestFSIndexingMode: indexAllExcept
                          indexingList:
                          - '%windir%'
                          - '%ProgramFiles%'
                          - '%ProgramFiles(x86)%'
                          - '%ProgramW6432%'
                          - '%TEMP%'
                        LinuxIndexing:
                          guestFSIndexingMode: indexAllExcept
                          indexingList:
                          - /cdrom
                          - /dev
                          - /media
                          - /mnt
                          - /proc
                          - /tmp
                          - /lost+found
                    guestInteractionProxies:
                      autoSelection: true
                      proxyIds: []
                    guestCredentials:
                      credsType: Standard
                      credsId: 4fbeb05c-c158-4510-84f3-6744554fb350
                      credentialsPerMachine: []
                  schedule:
                    runAutomatically: true
                    daily:
                      dailyKind: Everyday
                      isEnabled: true
                      localTime: 10:00 PM
                      days:
                      - sunday
                      - monday
                      - tuesday
                      - wednesday
                      - thursday
                      - friday
                      - saturday
                    monthly:
                      dayOfWeek: saturday
                      dayNumberInMonth: Fourth
                      isEnabled: false
                      localTime: 10:00 PM
                      dayOfMonth: 1
                      months:
                      - January
                      - February
                      - March
                      - April
                      - May
                      - June
                      - July
                      - August
                      - September
                      - October
                      - November
                      - December
                    periodically:
                      periodicallyKind: Hours
                      isEnabled: false
                      frequency: 1
                      backupWindow:
                        days:
                        - day: sunday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: monday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: tuesday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: wednesday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: thursday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: friday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: saturday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      startTimeWithinAnHour: 0
                    continuously:
                      isEnabled: false
                      backupWindow:
                        days:
                        - day: sunday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: monday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: tuesday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: wednesday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: thursday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: friday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: saturday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    afterThisJob:
                      isEnabled: false
                      jobName: null
                    retry:
                      isEnabled: true
                      retryCount: 3
                      awaitMinutes: 10
                    backupWindow:
                      isEnabled: false
                      backupWindow:
                        days:
                        - day: sunday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: monday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: tuesday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: wednesday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: thursday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: friday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                        - day: saturday
                          hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  type: Backup
                  id: ef1f0227-80e1-40f8-b2a2-5119172d2c36
                  name: Backup Job 2
                  description: Created by ENTERPRISE01\Administrator
                  isDisabled: false
                pagination:
                  total: 3
                  count: 1
                  skip: 0
                  limit: 1
              schema:
                $ref: '#/components/schemas/JobsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Jobs
      tags:
      - Jobs
      x-veeam-authorize:
        claims:
        - ViewJobs
    post:
      description: The HTTP POST request to the `/api/v1/jobs` path allows you to
        create a new job that has the specified parameters.
      operationId: CreateJob
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              type: Backup
              name: Backup Job 3
              description: Created by ENTERPRISE01\Administrator
              isHighPriority: false
              virtualMachines:
                includes:
                - type: ResourcePool
                  vcName: vcenter01.tech.local
                  name: ResourcePool01
                  objectId: resgroup-32774
                excludes:
                  vms:
                  - type: VirtualMachine
                    vcName: vcenter01.tech.local
                    name: srv01
                    objectId: vm-34739
                  - type: VirtualMachine
                    vcName: vcenter01.tech.local
                    name: srv02
                    objectId: vm-32843
                  disks:
                  - disksToProcess: SelectedDisks
                    vmObject:
                      type: ResourcePool
                      vcName: vcenter01.tech.local
                      name: ResourcePool01
                      objectId: resgroup-32774
                    disks:
                    - SCSI 0:0 (2000)
                    - IDE 0:0 (3000)
                  templates:
                    isEnabled: true
                    excludeFromIncremental: false
              storage:
                backupRepositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                backupProxies:
                  autoSelection: true
                  proxyIds: []
                retentionPolicy:
                  type: RestorePoints
                  quantity: 7
                gfsPolicy:
                  isEnabled: false
                  weekly:
                    desiredTime: sunday
                    isEnabled: false
                    keepForNumberOfWeeks: 1
                  monthly:
                    desiredTime: First
                    isEnabled: false
                    keepForNumberOfMonths: 1
                  yearly:
                    desiredTime: January
                    isEnabled: false
                    keepForNumberOfYears: 1
                advancedSettings:
                  backupModeType: Incremental
                  synthenticFulls:
                    isEnabled: true
                    days:
                    - saturday
                  activeFulls:
                    isEnabled: true
                    weekly:
                      isEnabled: true
                      days:
                      - saturday
                    monthly:
                      dayOfWeek: monday
                      dayNumberInMonth: First
                      isEnabled: false
                      dayOfMonths: 1
                      months:
                      - January
                      - February
                      - March
                      - April
                      - May
                      - June
                      - July
                      - August
                      - September
                      - October
                      - November
                      - December
                  backupHealth:
                    isEnabled: true
                    weekly:
                      isEnabled: false
                      days:
                      - friday
                    monthly:
                      dayOfWeek: monday
                      dayNumberInMonth: First
                      isEnabled: true
                      dayOfMonths: 1
                      months:
                      - January
                      - February
                      - March
                      - April
                      - May
                      - June
                      - July
                      - August
                      - September
                      - October
                      - November
                      - December
                  fullBackupMaintenance:
                    RemoveData:
                      isEnabled: false
                      afterDays: 14
                    defragmentAndCompact:
                      isEnabled: false
                      weekly:
                        isEnabled: false
                        days:
                        - saturday
                      monthly:
                        dayOfWeek: saturday
                        dayNumberInMonth: Last
                        isEnabled: true
                        dayOfMonths: 1
                        months:
                        - January
                        - February
                        - March
                        - April
                        - May
                        - June
                        - July
                        - August
                        - September
                        - October
                        - November
                        - December
                  storageData:
                    compressionLevel: Optimal
                    storageOptimization: LocalTarget
                    enableInlineDataDedup: true
                    excludeSwapFileBlocks: true
                    excludeDeletedFileBlocks: true
                    encryption:
                      isEnabled: false
                      passwordId: 00000000-0000-0000-0000-000000000000
                  notifications:
                    sendSNMPNotifications: true
                    emailNotifications:
                      notificationType: null
                      isEnabled: false
                      recipients: []
                      customNotificationSettings: null
                    vmAttribute:
                      isEnabled: false
                      notes: Notes
                      appendToExisitingValue: true
                  vSphere:
                    enableVMWareToolsQuiescence: false
                    changedBlockTracking:
                      isEnabled: true
                      enableCBTautomatically: true
                      resetCBTonActiveFull: true
                  storageIntegration:
                    isEnabled: true
                    limitProcessedVm: true
                    limitProcessedVmCount: 13
                    failoverToStandardBackup: true
                  scripts:
                    preCommand:
                      periodicityType: BackupSessions
                      isEnabled: false
                      command: ""
                      runScriptEvery: 1
                      dayOfWeek:
                      - saturday
                    postCommand:
                      periodicityType: BackupSessions
                      isEnabled: false
                      command: ""
                      runScriptEvery: 1
                      dayOfWeek:
                      - saturday
              guestProcessing:
                appAwareProcessing:
                  isEnabled: true
                  appSettings:
                  - vss: requireSuccess
                    transactionLogs: process
                    vmObject:
                      type: ResourcePool
                      vcName: vcenter01.tech.local
                      name: ResourcePool01
                      objectId: resgroup-32774
                    sql:
                      logsProcessing: backup
                      retainLogBackups: untilBackupDeleted
                      backupMinsCount: 15
                      keepDaysCount: null
                      logShippingServers:
                        autoSelection: true
                        shippingServerIds: []
                    oracle:
                      archiveLogs: deleteExpiredGBs
                      retainLogBackups: untilBackupDeleted
                      useGuestCredentials: false
                      credentialsId: a1b84070-9767-4f47-99cd-e25f57cd65dc
                      deleteHoursCount: null
                      deleteGBsCount: 10240
                      backupLogs: true
                      backupMinsCount: 23
                      keepDaysCount: 15
                      logShippingServers:
                        autoSelection: true
                        shippingServerIds: []
                    exclusions:
                      exclusionPolicy: disabled
                      itemsList: []
                    scripts:
                      scriptProcessingMode: disableExec
                      windowsScripts: null
                      linuxScripts: null
                guestFSIndexing:
                  isEnabled: true
                  indexingSettings:
                  - vmObject:
                      type: ResourcePool
                      vcName: vcenter01.tech.local
                      name: ResourcePool01
                      objectId: resgroup-32774
                    WindowsIndexing:
                      guestFSIndexingMode: indexAllExcept
                      indexingList:
                      - '%windir%'
                      - '%ProgramFiles%'
                      - '%ProgramFiles(x86)%'
                      - '%ProgramW6432%'
                      - '%TEMP%'
                    LinuxIndexing:
                      guestFSIndexingMode: indexAllExcept
                      indexingList:
                      - /cdrom
                      - /dev
                      - /media
                      - /mnt
                      - /proc
                      - /tmp
                      - /lost+found
                guestInteractionProxies:
                  autoSelection: true
                  proxyIds: []
                guestCredentials:
                  windowsCredsId: a1b84070-9767-4f47-99cd-e25f57cd65dc
                  linuxCredsId: 00000000-0000-0000-0000-000000000000
                  credentialsPerMachine:
                  - windowsCredsId: a1b84070-9767-4f47-99cd-e25f57cd65dc
                    linuxCredsId: 00000000-0000-0000-0000-000000000000
                    vmObject:
                      type: ResourcePool
                      vcName: vcenter01.tech.local
                      name: ResourcePool01
                      objectId: resgroup-32774
              schedule:
                isEnabled: true
                daily:
                  dailyKind: Everyday
                  isEnabled: true
                  localTime: 10:00 PM
                  days:
                  - sunday
                  - monday
                  - tuesday
                  - wednesday
                  - thursday
                  - friday
                  - saturday
                monthly:
                  dayOfWeek: saturday
                  dayNumberInMonth: Fourth
                  isEnabled: false
                  localTime: 10:00 PM
                  dayOfMonth: 1
                  months:
                  - January
                  - February
                  - March
                  - April
                  - May
                  - June
                  - July
                  - August
                  - September
                  - October
                  - November
                  - December
                periodically:
                  periodicallyKind: Hours
                  isEnabled: false
                  frequency: 0
                  continuously:
                    BackupWindow:
                      days:
                      - day: monday
                        hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                      - day: tuesday
                        hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                      - day: wednesday
                        hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                      - day: thursday
                        hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                      - day: friday
                        hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                      - day: saturday
                        hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                      - day: sunday
                        hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                retry:
                  isEnabled: true
                  retryCount: 3
                  awaitMinutes: 10
                backupWindow:
                  isEnabled: false
                  WindowSetting:
                    days:
                    - day: monday
                      hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    - day: tuesday
                      hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    - day: wednesday
                      hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    - day: thursday
                      hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    - day: friday
                      hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    - day: saturday
                      hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    - day: sunday
                      hours: "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
            schema:
              $ref: '#/components/schemas/JobSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobModel'
          description: Job has been created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Create Job
      tags:
      - Jobs
      x-veeam-authorize:
        claims:
        - CreateJobs
  /api/v1/jobs/states:
    get:
      description: The HTTP GET request to the `/api/v1/jobs/states` path allows you
        to get an array of all job states. The states include brief job information
        that you can also find under the **Jobs** node in the Veeam Backup & Replication
        console.
      operationId: GetAllJobsStates
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of job states to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Maximum number of job states to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Sorts job states by one of the state parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EJobStatesFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Sorts job states in the ascending order by the `orderColumn`
          parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Filters job states by job ID.
        explode: true
        in: query
        name: idFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: "Filters job states by the `nameFilter` pattern. The pattern\
          \ can match any state parameter. To substitute one or more characters, use\
          \ the asterisk (*) character at the beginning, at the end or both."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Filters job states by job type.
        explode: true
        in: query
        name: typeFilter
        required: false
        schema:
          $ref: '#/components/schemas/EJobType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Filters job states by status with which jobs must finish.
        explode: true
        in: query
        name: lastResultFilter
        required: false
        schema:
          $ref: '#/components/schemas/ESessionResult'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Filters job states by current status of the job.
        explode: true
        in: query
        name: statusFilter
        required: false
        schema:
          $ref: '#/components/schemas/EJobStatus'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Filters job states by workloads that jobs must process.
        explode: true
        in: query
        name: workloadFilter
        required: false
        schema:
          $ref: '#/components/schemas/EJobWorkload'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Returns job states for jobs that have run after the specified
          date and time.
        explode: true
        in: query
        name: lastRunAfterFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Returns job states for jobs that have not run after the specified
          date and time.
        explode: true
        in: query
        name: lastRunBeforeFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: "If *true*, Returns job states for jobs with high priority."
        explode: true
        in: query
        name: isHighPriorityJobFilter
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Filters job states by repository ID.
        explode: true
        in: query
        name: repositoryIdFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      - description: Filters job states by number of objects processed by the job.
        explode: true
        in: query
        name: objectsCountFilter
        required: false
        schema:
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/JobStatesFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - type: Backup
                  status: running
                  lastResult: None
                  workload: vm
                  id: 301450bc-34cd-4d2c-bfc3-8d269bb471be
                  name: AD Backup
                  description: Created by GAMMA\Administrator
                  lastRun: 2022-02-04T21:40:34.473+03:00
                  nextRun: null
                  repositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                  repositoryName: Default Backup Repository
                  objectsCount: 1
                  sessionId: dc98d2df-e845-46c4-bba1-57c3d020bf36
                - type: Backup
                  status: inactive
                  lastResult: Warning
                  workload: vm
                  id: 53b87378-7958-477d-8def-fbe6740d4b6f
                  name: Exchange Backup
                  description: Created by GAMMA\Administrator
                  lastRun: 2021-02-20T06:53:17.747+03:00
                  nextRun: null
                  repositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                  repositoryName: Default Backup Repository
                  objectsCount: 1
                  sessionId: 4c5f14a6-b883-4b83-891a-d520809e4284
                - type: Backup
                  status: running
                  lastResult: None
                  workload: application
                  id: 75fc491a-d158-4380-a433-ebc42a28e4df
                  name: Oracle Backup
                  description: Created by GAMMA\Administrator
                  lastRun: 2022-02-04T21:40:24.96+03:00
                  nextRun: 2022-02-05T16:00:00+03:00
                  repositoryId: 49607f55-4cc4-4ea5-a2c9-e750318d0f34
                  repositoryName: Storage 3
                  objectsCount: 1
                  sessionId: 433d8b8b-bcb7-4ce3-986e-7bf2a3731d01
                pagination:
                  total: 3
                  count: 3
                  skip: 0
                  limit: 200
              schema:
                $ref: '#/components/schemas/JobStatesResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Job States
      tags:
      - Jobs
      x-veeam-authorize:
        claims:
        - ViewJobs
  /api/v1/jobs/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/jobs/{id}` path allows\
        \ you to delete a job that has the specified `id`."
      operationId: DeleteJob
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Removed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Delete Job
      tags:
      - Jobs
      x-veeam-authorize:
        claims:
        - DeleteJobs
    get:
      description: "The HTTP GET request to the `/api/v1/jobs/{id}` path allows you\
        \ to get a job that has the specified `id`."
      operationId: GetJob
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                isHighPriority: false
                virtualMachines:
                  includes:
                  - inventoryObject:
                      type: VirtualMachine
                      hostName: 172.17.52.34
                      name: srv45
                      objectId: vm-61281
                    size: 152.5 GB
                  excludes:
                    vms: []
                    disks:
                    - disksToProcess: AllDisks
                      vmObject:
                        type: VirtualMachine
                        hostName: 172.17.52.34
                        name: srv45
                        objectId: vm-61281
                      disks: []
                      removeFromVMConfiguration: true
                    templates:
                      isEnabled: true
                      excludeFromIncremental: true
                storage:
                  backupRepositoryId: 49607f55-4cc4-4ea5-a2c9-e750318d0f34
                  backupProxies:
                    autoSelection: true
                    proxyIds: []
                  retentionPolicy:
                    type: RestorePoints
                    quantity: 7
                  gfsPolicy:
                    isEnabled: false
                    weekly:
                      desiredTime: sunday
                      isEnabled: false
                      keepForNumberOfWeeks: 1
                    monthly:
                      desiredTime: First
                      isEnabled: false
                      keepForNumberOfMonths: 1
                    yearly:
                      desiredTime: January
                      isEnabled: false
                      keepForNumberOfYears: 1
                  advancedSettings:
                    backupModeType: Incremental
                    synthenticFulls:
                      isEnabled: false
                      days:
                      - saturday
                    activeFulls:
                      isEnabled: false
                      weekly:
                        isEnabled: true
                        days:
                        - saturday
                      monthly:
                        dayOfWeek: monday
                        dayNumberInMonth: First
                        isEnabled: false
                        dayOfMonths: 1
                        months:
                        - January
                        - February
                        - March
                        - April
                        - May
                        - June
                        - July
                        - August
                        - September
                        - October
                        - November
                        - December
                    backupHealth:
                      isEnabled: false
                      weekly:
                        isEnabled: false
                        days:
                        - friday
                      monthly:
                        dayOfWeek: friday
                        dayNumberInMonth: Last
                        isEnabled: true
                        dayOfMonths: 1
                        months:
                        - January
                        - February
                        - March
                        - April
                        - May
                        - June
                        - July
                        - August
                        - September
                        - October
                        - November
                        - December
                    fullBackupMaintenance:
                      RemoveData:
                        isEnabled: false
                        afterDays: 14
                      defragmentAndCompact:
                        isEnabled: false
                        weekly:
                          isEnabled: false
                          days:
                          - saturday
                        monthly:
                          dayOfWeek: saturday
                          dayNumberInMonth: Last
                          isEnabled: true
                          dayOfMonths: 1
                          months:
                          - January
                          - February
                          - March
                          - April
                          - May
                          - June
                          - July
                          - August
                          - September
                          - October
                          - November
                          - December
                    storageData:
                      compressionLevel: Optimal
                      storageOptimization: LocalTarget
                      enableInlineDataDedup: true
                      excludeSwapFileBlocks: true
                      excludeDeletedFileBlocks: true
                      encryption:
                        isEnabled: false
                        encryptionPasswordIdOrNull: 00000000-0000-0000-0000-000000000000
                        encryptionPasswordTag: null
                    notifications:
                      sendSNMPNotifications: false
                      emailNotifications:
                        notificationType: null
                        isEnabled: false
                        recipients: []
                        customNotificationSettings: null
                      vmAttribute:
                        isEnabled: false
                        notes: Notes
                        appendToExisitingValue: true
                    vSphere:
                      enableVMWareToolsQuiescence: false
                      changedBlockTracking:
                        isEnabled: true
                        enableCBTautomatically: true
                        resetCBTonActiveFull: true
                    storageIntegration:
                      isEnabled: true
                      limitProcessedVm: false
                      limitProcessedVmCount: 10
                      failoverToStandardBackup: false
                    scripts:
                      periodicityType: BackupSessions
                      preCommand:
                        isEnabled: false
                        command: ""
                      postCommand:
                        isEnabled: false
                        command: ""
                      runScriptEvery: 1
                      dayOfWeek:
                      - saturday
                guestProcessing:
                  appAwareProcessing:
                    isEnabled: true
                    appSettings:
                    - vss: requireSuccess
                      transactionLogs: process
                      vmObject:
                        type: VirtualMachine
                        hostName: 172.17.52.34
                        name: srv45
                        objectId: vm-61281
                      usePersistentGuestAgent: false
                      sql:
                        logsProcessing: truncate
                        retainLogBackups: null
                        backupMinsCount: null
                        keepDaysCount: null
                        logShippingServers: null
                      oracle:
                        archiveLogs: preserve
                        retainLogBackups: untilBackupDeleted
                        useGuestCredentials: true
                        credentialsId: null
                        deleteHoursCount: null
                        deleteGBsCount: null
                        backupLogs: true
                        backupMinsCount: 15
                        keepDaysCount: 15
                        logShippingServers:
                          autoSelection: true
                          shippingServerIds: []
                      exclusions:
                        exclusionPolicy: disabled
                        itemsList: []
                      scripts:
                        scriptProcessingMode: disableExec
                        windowsScripts: null
                        linuxScripts: null
                  guestFSIndexing:
                    isEnabled: false
                    indexingSettings: []
                  guestInteractionProxies:
                    autoSelection: true
                    proxyIds: []
                  guestCredentials:
                    credsType: Standard
                    credsId: 6454c893-d5c6-4de8-be38-d984ea30dae4
                    credentialsPerMachine: []
                schedule:
                  runAutomatically: true
                  daily:
                    dailyKind: Everyday
                    isEnabled: true
                    localTime: 4:00 PM
                    days:
                    - sunday
                    - monday
                    - tuesday
                    - wednesday
                    - thursday
                    - friday
                    - saturday
                  monthly:
                    dayOfWeek: saturday
                    dayNumberInMonth: Fourth
                    isEnabled: false
                    localTime: 9:00 AM
                    dayOfMonth: 1
                    months:
                    - January
                    - February
                    - March
                    - April
                    - May
                    - June
                    - July
                    - August
                    - September
                    - October
                    - November
                    - December
                  periodically:
                    periodicallyKind: Hours
                    isEnabled: false
                    frequency: 1
                    backupWindow:
                      days:
                      - day: sunday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: monday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: tuesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: wednesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: thursday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: friday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: saturday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    startTimeWithinAnHour: 0
                  continuously:
                    isEnabled: false
                    backupWindow:
                      days:
                      - day: sunday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: monday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: tuesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: wednesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: thursday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: friday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: saturday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  afterThisJob:
                    isEnabled: false
                    jobName: null
                  retry:
                    isEnabled: true
                    retryCount: 3
                    awaitMinutes: 10
                  backupWindow:
                    isEnabled: false
                    backupWindow:
                      days:
                      - day: sunday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: monday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: tuesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: wednesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: thursday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: friday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: saturday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                type: Backup
                id: 75fc491a-d158-4380-a433-ebc42a28e4df
                name: Oracle Backup
                description: Created by GAMMA\Administrator
                isDisabled: false
              schema:
                $ref: '#/components/schemas/JobModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Job
      tags:
      - Jobs
      x-veeam-authorize:
        claims:
        - ViewJobs
    put:
      description: "The HTTP PUT request to the `/api/v1/jobs/{id}` path allows you\
        \ to edit a job that has the specified `id`."
      operationId: UpdateJob
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              isHighPriority: true
              virtualMachines:
                includes:
                - inventoryObject:
                    type: VirtualMachine
                    hostName: 172.17.42.92
                    name: DLExch
                    objectId: "516"
                  size: 170 GB
                excludes:
                  vms: []
                  disks:
                  - disksToProcess: AllDisks
                    vmObject:
                      type: VirtualMachine
                      hostName: 172.17.42.92
                      name: DLExch
                      objectId: "516"
                    disks: []
                    removeFromVMConfiguration: true
                  templates:
                    isEnabled: true
                    excludeFromIncremental: true
              storage:
                backupRepositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                backupProxies:
                  autoSelection: true
                  proxyIds: []
                retentionPolicy:
                  type: RestorePoints
                  quantity: 3
                gfsPolicy:
                  isEnabled: false
                  weekly:
                    desiredTime: sunday
                    isEnabled: false
                    keepForNumberOfWeeks: 1
                  monthly:
                    desiredTime: First
                    isEnabled: false
                    keepForNumberOfMonths: 1
                  yearly:
                    desiredTime: January
                    isEnabled: false
                    keepForNumberOfYears: 1
                advancedSettings:
                  backupModeType: Incremental
                  synthenticFulls:
                    isEnabled: false
                    days:
                    - saturday
                  activeFulls:
                    isEnabled: false
                    weekly:
                      isEnabled: true
                      days:
                      - saturday
                    monthly:
                      dayOfWeek: monday
                      dayNumberInMonth: First
                      isEnabled: false
                      dayOfMonths: 1
                      months:
                      - January
                      - February
                      - March
                      - April
                      - May
                      - June
                      - July
                      - August
                      - September
                      - October
                      - November
                      - December
                  backupHealth:
                    isEnabled: false
                    weekly:
                      isEnabled: false
                      days:
                      - friday
                    monthly:
                      dayOfWeek: friday
                      dayNumberInMonth: Last
                      isEnabled: true
                      dayOfMonths: 1
                      months:
                      - January
                      - February
                      - March
                      - April
                      - May
                      - June
                      - July
                      - August
                      - September
                      - October
                      - November
                      - December
                  fullBackupMaintenance:
                    RemoveData:
                      isEnabled: false
                      afterDays: 14
                    defragmentAndCompact:
                      isEnabled: false
                      weekly:
                        isEnabled: false
                        days:
                        - saturday
                      monthly:
                        dayOfWeek: saturday
                        dayNumberInMonth: Last
                        isEnabled: true
                        dayOfMonths: 1
                        months:
                        - January
                        - February
                        - March
                        - April
                        - May
                        - June
                        - July
                        - August
                        - September
                        - October
                        - November
                        - December
                  storageData:
                    compressionLevel: Optimal
                    storageOptimization: LocalTarget
                    enableInlineDataDedup: true
                    excludeSwapFileBlocks: true
                    excludeDeletedFileBlocks: true
                    encryption:
                      isEnabled: false
                      encryptionPasswordIdOrNull: 00000000-0000-0000-0000-000000000000
                      encryptionPasswordTag: null
                  notifications:
                    sendSNMPNotifications: false
                    emailNotifications:
                      notificationType: null
                      isEnabled: false
                      recipients: []
                      customNotificationSettings: null
                    vmAttribute:
                      isEnabled: false
                      notes: Notes
                      appendToExisitingValue: true
                  vSphere:
                    enableVMWareToolsQuiescence: false
                    changedBlockTracking:
                      isEnabled: true
                      enableCBTautomatically: true
                      resetCBTonActiveFull: true
                  storageIntegration:
                    isEnabled: true
                    limitProcessedVm: false
                    limitProcessedVmCount: 10
                    failoverToStandardBackup: false
                  scripts:
                    periodicityType: BackupSessions
                    preCommand:
                      isEnabled: false
                      command: ""
                    postCommand:
                      isEnabled: false
                      command: ""
                    runScriptEvery: 1
                    dayOfWeek:
                    - saturday
              guestProcessing:
                appAwareProcessing:
                  isEnabled: true
                  appSettings:
                  - vss: requireSuccess
                    transactionLogs: process
                    vmObject:
                      type: VirtualMachine
                      hostName: 172.17.42.92
                      name: DLExch
                      objectId: "516"
                    usePersistentGuestAgent: false
                    sql:
                      logsProcessing: truncate
                      retainLogBackups: null
                      backupMinsCount: null
                      keepDaysCount: null
                      logShippingServers: null
                    oracle:
                      archiveLogs: preserve
                      retainLogBackups: null
                      useGuestCredentials: true
                      credentialsId: null
                      deleteHoursCount: null
                      deleteGBsCount: null
                      backupLogs: false
                      backupMinsCount: null
                      keepDaysCount: null
                      logShippingServers: null
                    exclusions:
                      exclusionPolicy: disabled
                      itemsList: []
                    scripts:
                      scriptProcessingMode: disableExec
                      windowsScripts: null
                      linuxScripts: null
                guestFSIndexing:
                  isEnabled: false
                  indexingSettings: []
                guestInteractionProxies:
                  autoSelection: true
                  proxyIds: []
                guestCredentials:
                  credsType: Standard
                  credsId: d38995da-75ec-4ada-ac31-2138d7a0351f
                  credentialsPerMachine: []
              schedule:
                runAutomatically: false
                daily:
                  dailyKind: Everyday
                  isEnabled: true
                  localTime: 10:00 PM
                  days:
                  - sunday
                  - monday
                  - tuesday
                  - wednesday
                  - thursday
                  - friday
                  - saturday
                monthly:
                  dayOfWeek: saturday
                  dayNumberInMonth: Fourth
                  isEnabled: false
                  localTime: 10:00 PM
                  dayOfMonth: 1
                  months:
                  - January
                  - February
                  - March
                  - April
                  - May
                  - June
                  - July
                  - August
                  - September
                  - October
                  - November
                  - December
                periodically:
                  periodicallyKind: Hours
                  isEnabled: false
                  frequency: 1
                  backupWindow:
                    days:
                    - day: sunday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: monday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: tuesday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: wednesday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: thursday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: friday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: saturday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  startTimeWithinAnHour: 0
                continuously:
                  isEnabled: false
                  backupWindow:
                    days:
                    - day: sunday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: monday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: tuesday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: wednesday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: thursday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: friday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: saturday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                afterThisJob:
                  isEnabled: false
                  jobName: null
                retry:
                  isEnabled: true
                  retryCount: 3
                  awaitMinutes: 10
                backupWindow:
                  isEnabled: false
                  backupWindow:
                    days:
                    - day: sunday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: monday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: tuesday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: wednesday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: thursday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: friday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    - day: saturday
                      hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
              type: Backup
              id: 53b87378-7958-477d-8def-fbe6740d4b6f
              name: Exchange Backup
              description: Created by GAMMA\Administrator
              isDisabled: false
            schema:
              $ref: '#/components/schemas/JobModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                isHighPriority: true
                virtualMachines:
                  includes:
                  - inventoryObject:
                      type: VirtualMachine
                      hostName: 172.17.42.92
                      name: DLExch
                      objectId: "516"
                    size: 178.1 GB
                  excludes:
                    vms: []
                    disks:
                    - disksToProcess: AllDisks
                      vmObject:
                        type: VirtualMachine
                        hostName: 172.17.42.92
                        name: DLExch
                        objectId: "516"
                      disks: []
                      removeFromVMConfiguration: true
                    templates:
                      isEnabled: true
                      excludeFromIncremental: true
                storage:
                  backupRepositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                  backupProxies:
                    autoSelection: true
                    proxyIds: []
                  retentionPolicy:
                    type: RestorePoints
                    quantity: 3
                  gfsPolicy:
                    isEnabled: false
                    weekly:
                      desiredTime: sunday
                      isEnabled: false
                      keepForNumberOfWeeks: 1
                    monthly:
                      desiredTime: First
                      isEnabled: false
                      keepForNumberOfMonths: 1
                    yearly:
                      desiredTime: January
                      isEnabled: false
                      keepForNumberOfYears: 1
                  advancedSettings:
                    backupModeType: Incremental
                    synthenticFulls:
                      isEnabled: false
                      days:
                      - saturday
                    activeFulls:
                      isEnabled: false
                      weekly:
                        isEnabled: true
                        days:
                        - saturday
                      monthly:
                        dayOfWeek: monday
                        dayNumberInMonth: First
                        isEnabled: false
                        dayOfMonths: 1
                        months:
                        - January
                        - February
                        - March
                        - April
                        - May
                        - June
                        - July
                        - August
                        - September
                        - October
                        - November
                        - December
                    backupHealth:
                      isEnabled: false
                      weekly:
                        isEnabled: false
                        days:
                        - friday
                      monthly:
                        dayOfWeek: friday
                        dayNumberInMonth: Last
                        isEnabled: true
                        dayOfMonths: 1
                        months:
                        - January
                        - February
                        - March
                        - April
                        - May
                        - June
                        - July
                        - August
                        - September
                        - October
                        - November
                        - December
                    fullBackupMaintenance:
                      RemoveData:
                        isEnabled: false
                        afterDays: 14
                      defragmentAndCompact:
                        isEnabled: false
                        weekly:
                          isEnabled: false
                          days:
                          - saturday
                        monthly:
                          dayOfWeek: saturday
                          dayNumberInMonth: Last
                          isEnabled: true
                          dayOfMonths: 1
                          months:
                          - January
                          - February
                          - March
                          - April
                          - May
                          - June
                          - July
                          - August
                          - September
                          - October
                          - November
                          - December
                    storageData:
                      compressionLevel: Optimal
                      storageOptimization: LocalTarget
                      enableInlineDataDedup: true
                      excludeSwapFileBlocks: true
                      excludeDeletedFileBlocks: true
                      encryption:
                        isEnabled: false
                        encryptionPasswordIdOrNull: 00000000-0000-0000-0000-000000000000
                        encryptionPasswordTag: null
                    notifications:
                      sendSNMPNotifications: false
                      emailNotifications:
                        notificationType: null
                        isEnabled: false
                        recipients: []
                        customNotificationSettings: null
                      vmAttribute:
                        isEnabled: false
                        notes: Notes
                        appendToExisitingValue: true
                    vSphere:
                      enableVMWareToolsQuiescence: false
                      changedBlockTracking:
                        isEnabled: true
                        enableCBTautomatically: true
                        resetCBTonActiveFull: true
                    storageIntegration:
                      isEnabled: true
                      limitProcessedVm: false
                      limitProcessedVmCount: 10
                      failoverToStandardBackup: false
                    scripts:
                      periodicityType: BackupSessions
                      preCommand:
                        isEnabled: false
                        command: ""
                      postCommand:
                        isEnabled: false
                        command: ""
                      runScriptEvery: 1
                      dayOfWeek:
                      - saturday
                guestProcessing:
                  appAwareProcessing:
                    isEnabled: true
                    appSettings:
                    - vss: requireSuccess
                      transactionLogs: process
                      vmObject:
                        type: VirtualMachine
                        hostName: 172.17.42.92
                        name: DLExch
                        objectId: "516"
                      usePersistentGuestAgent: false
                      sql:
                        logsProcessing: truncate
                        retainLogBackups: null
                        backupMinsCount: null
                        keepDaysCount: null
                        logShippingServers: null
                      oracle:
                        archiveLogs: preserve
                        retainLogBackups: null
                        useGuestCredentials: true
                        credentialsId: null
                        deleteHoursCount: null
                        deleteGBsCount: null
                        backupLogs: false
                        backupMinsCount: null
                        keepDaysCount: null
                        logShippingServers: null
                      exclusions:
                        exclusionPolicy: disabled
                        itemsList: []
                      scripts:
                        scriptProcessingMode: disableExec
                        windowsScripts: null
                        linuxScripts: null
                  guestFSIndexing:
                    isEnabled: false
                    indexingSettings: []
                  guestInteractionProxies:
                    autoSelection: true
                    proxyIds: []
                  guestCredentials:
                    credsType: Standard
                    credsId: d38995da-75ec-4ada-ac31-2138d7a0351f
                    credentialsPerMachine: []
                schedule:
                  runAutomatically: false
                  daily:
                    dailyKind: Everyday
                    isEnabled: true
                    localTime: 10:00 PM
                    days:
                    - sunday
                    - monday
                    - tuesday
                    - wednesday
                    - thursday
                    - friday
                    - saturday
                  monthly:
                    dayOfWeek: saturday
                    dayNumberInMonth: Fourth
                    isEnabled: false
                    localTime: 10:00 PM
                    dayOfMonth: 1
                    months:
                    - January
                    - February
                    - March
                    - April
                    - May
                    - June
                    - July
                    - August
                    - September
                    - October
                    - November
                    - December
                  periodically:
                    periodicallyKind: Hours
                    isEnabled: false
                    frequency: 1
                    backupWindow:
                      days:
                      - day: sunday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: monday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: tuesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: wednesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: thursday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: friday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: saturday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                    startTimeWithinAnHour: 0
                  continuously:
                    isEnabled: false
                    backupWindow:
                      days:
                      - day: sunday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: monday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: tuesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: wednesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: thursday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: friday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: saturday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  afterThisJob:
                    isEnabled: false
                    jobName: null
                  retry:
                    isEnabled: true
                    retryCount: 3
                    awaitMinutes: 10
                  backupWindow:
                    isEnabled: false
                    backupWindow:
                      days:
                      - day: sunday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: monday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: tuesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: wednesday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: thursday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: friday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      - day: saturday
                        hours: "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                type: Backup
                id: 53b87378-7958-477d-8def-fbe6740d4b6f
                name: Exchange Backup
                description: Created by GAMMA\Administrator
                isDisabled: false
              schema:
                $ref: '#/components/schemas/JobModel'
          description: Job has been updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Job
      tags:
      - Jobs
      x-veeam-authorize:
        claims:
        - UpdateJobs
  /api/v1/jobs/{id}/start:
    post:
      description: "The HTTP POST request to the `/api/v1/jobs/{id}/start` path allows\
        \ you to start a job that has the specified `id`."
      operationId: StartJob
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              performActiveFull: false
              startChainedJobs: false
            schema:
              $ref: '#/components/schemas/JobStartSpec'
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                sessionType: Job
                state: Starting
                id: b1380736-18a9-4fac-adfe-20abc570e8de
                name: Oracle Backup
                activityId: 75fc491a-d158-4380-a433-ebc42a28e4df
                creationTime: 2022-02-04T20:46:49.067+03:00
                endTime: null
                progressPercent: 0
                result: null
                resourceId: null
                resourceReference: null
                parentSessionId: null
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: Job session has been started.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Start Job
      tags:
      - Jobs
      x-veeam-authorize:
        claims:
        - StartJobs
  /api/v1/jobs/{id}/stop:
    post:
      description: "The HTTP POST request to the `/api/v1/jobs/{id}/stop` path allows\
        \ you to stop a job that has the specified `id`."
      operationId: StopJob
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              gracefullStop: true
            schema:
              $ref: '#/components/schemas/JobStopSpec'
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                sessionType: Job
                state: Working
                id: 3b5a044b-f38d-4ae8-85d1-38872095a537
                name: Oracle Backup
                activityId: 75fc491a-d158-4380-a433-ebc42a28e4df
                creationTime: 2022-02-04T20:52:06.387+03:00
                endTime: null
                progressPercent: 0
                result: null
                resourceId: null
                resourceReference: null
                parentSessionId: null
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: Job session has been stopped.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Stop Job
      tags:
      - Jobs
      x-veeam-authorize:
        claims:
        - StopJobs
  /api/v1/jobs/{id}/disable:
    post:
      description: "The HTTP POST request to the `/api/v1/jobs/{id}/disable` path\
        \ allows you to disable a job that has the specified `id`."
      operationId: DisableJob
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Job has been disabled.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Disable Job
      tags:
      - Jobs
      x-veeam-authorize:
        claims:
        - DisableJobs
  /api/v1/jobs/{id}/enable:
    post:
      description: "The HTTP POST request to the `/api/v1/jobs/{id}/enable` path allows\
        \ you to enable a job that has the specified `id`."
      operationId: EnableJob
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Job has been enabled.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Enable Job
      tags:
      - Jobs
      x-veeam-authorize:
        claims:
        - EnableJobs
  /api/v1/credentials:
    get:
      description: The HTTP GET request to the `/api/v1/credentials` path allows you
        to get an array of credentials records that are added to the backup server.
      operationId: GetAllCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of credentials records to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/CredentialsFilters'
      - description: Maximum number of credentials records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/CredentialsFilters'
      - description: Sorts credentials by one of the credentials parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/ECredentialsFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/CredentialsFilters'
      - description: Sorts credentials in the ascending order by the `orderColumn`
          parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/CredentialsFilters'
      - description: "Filters credentials by the `nameFilter` pattern. The pattern\
          \ can match any credentials parameter. To substitute one or more characters,\
          \ use the asterisk (*) character at the beginning and/or at the end."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/CredentialsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Credentials
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - ViewCredentials
    post:
      description: The HTTP POST request to the `/api/v1/credentials` path allows
        you to add a credentials record.
      operationId: CreateCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: Account has been added.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Add Credentials Record
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - CreateCredentials
  /api/v1/credentials/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/credentials/{id}` path\
        \ allows you to remove a credentials record that has the specified `id`."
      operationId: DeleteCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the credentials record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Credentials record has been removed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Remove Credentials Record
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - DeleteCredentials
    get:
      description: "The HTTP GET request to the `/api/v1/credentials/{id}` path allows\
        \ you to get a credentials record that has the specified `id`."
      operationId: GetCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the credentials record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Credentials Record
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - ViewCredentials
    put:
      description: "The HTTP PUT request to the `/api/v1/credentials/{id}` path allows\
        \ you to edit a credentials record that has the specified `id`."
      operationId: UpdateCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the credentials record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: Credentials record has been updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Credentials Record
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - UpdateCredentials
  /api/v1/credentials/{id}/changepassword:
    post:
      description: "The HTTP POST request to the `/api/v1/credentials/{id}/changepassword`\
        \ path allows you to change a password of the credentials record that has\
        \ the specified `id`."
      operationId: ChangePasswordForCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the credentials record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsPasswordChangeSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Password has been changed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Change Password
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - ChangeAccountPassword
  /api/v1/credentials/{id}/changeprivatekey:
    post:
      description: "The HTTP POST request to the `/api/v1/credentials/{id}/changeprivatekey`\
        \ path allows you to change a Linux private key of the credentials record\
        \ that has the specified `id`."
      operationId: ChangePrivateKeyForCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the credentials record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateKeyChangeSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Private key has been changed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Change Linux Private Key
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - ChangeLinuxPrivateKey
  /api/v1/credentials/{id}/changerootpassword:
    post:
      description: "The HTTP POST request to the `/api/v1/credentials/{id}/changerootpassword`\
        \ path allows you to change a Linux root password of the credentials record\
        \ that has the specified `id`."
      operationId: ChangeRootPasswordForCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the credentials record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsPasswordChangeSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Root password has been changed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Change Linux Root Password
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - ChangeLinuxRootPassword
  /api/v1/cloudCredentials:
    get:
      description: The HTTP GET request to the `/api/v1/cloudCredentials` path allows
        you to get an array of credentials records used to connect to cloud services.
      operationId: GetAllCloudCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of cloud credentials records to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/CloudCredentialsFilters'
      - description: Maximum number of cloud credentials records to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/CloudCredentialsFilters'
      - description: Sorts cloud credentials by one of the cloud credentials parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/ECloudCredentialsFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/CloudCredentialsFilters'
      - description: Sorts cloud credentials in the ascending order by the `orderColumn`
          parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/CloudCredentialsFilters'
      - description: "Filters cloud credentials by the `nameFilter` pattern. The pattern\
          \ can match any cloud credentials parameter. To substitute one or more characters,\
          \ use the asterisk (*) character at the beginning and/or at the end."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/CloudCredentialsFilters'
      - explode: true
        in: query
        name: typeFilter
        required: false
        schema:
          $ref: '#/components/schemas/ECloudCredentialsType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/CloudCredentialsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Cloud Credentials
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - ViewCloudCredentials
    post:
      description: The HTTP POST request to the `/api/v1/cloudCredentials` path allows
        you to add a credentials record used to connect to cloud services.
      operationId: CreateCloudCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsModel'
          description: Cloud credentials record has been created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Add Cloud Credentials Record
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - CreateCloudCredentials
  /api/v1/cloudCredentials/appRegistration:
    post:
      description: The HTTP POST request to the `/api/v1/cloudCredentials/appRegistration`
        path allows you to get a single-use verification code required to register
        a new Azure Active Directory application.
      operationId: RequestAppRegistrationByDeviceCode
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudDeviceCodeSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudDeviceCodeModel'
          description: Verification code has been received.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Verification Code
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - CreateCloudCredentials
  /api/v1/cloudCredentials/appRegistration/{verificationCode}:
    post:
      description: "The HTTP POST request to the `/api/v1/cloudCredentials/appRegistration/{verificationCode}`\
        \ path allows you to register a new Azure Active Directory application using\
        \ the specified `verificationCode`."
      operationId: FinishAppRegistrationByDeviceCode
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: "Verification code. To obtain the code, use the [Get Verification\
          \ Code](#tag/Credentials/operation/RequestAppRegistrationByDeviceCode) request."
        explode: false
        in: path
        name: verificationCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudNativeApplicationModel'
          description: Azure Active Directory application has been registered.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Register Azure AD Application
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - CreateCloudCredentials
  /api/v1/cloudCredentials/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/cloudCredentials/{id}`\
        \ path allows you to remove a cloud credentials record that has the specified\
        \ `id`."
      operationId: DeleteCloudCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the cloud credentials record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Cloud credentials record has been removed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Remove Cloud Credentials Record
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - DeleteCloudCredentials
    get:
      description: "The HTTP GET request to the `/api/v1/cloudCredentials/{id}` path\
        \ allows you to get a cloud credentials record that has the specified `id`."
      operationId: GetCloudCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the cloud credentials record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Cloud Credentials Record
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - ViewCloudCredentials
    put:
      description: "The HTTP PUT request to the `/api/v1/cloudCredentials/{id}` path\
        \ allows you to edit a cloud credentials record that has the specified `id`."
      operationId: UpdateCloudCreds
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the cloud credentials record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsModel'
          description: Cloud credentials record has been updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Cloud Credentials Record
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - UpdateCloudCredentials
  /api/v1/cloudCredentials/{id}/changeSecretKey:
    post:
      description: "The HTTP POST request to the `/api/v1/cloudCredentials/{id}/changeSecretKey`\
        \ path allows you to change a secret key of a cloud credentials record that\
        \ has the specified `id`."
      operationId: ChangeCloudCredsSecretKey
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the cloud credentials record.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsPasswordSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsModel'
          description: Secret key has been changed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Change Secret Key
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - ChangeCloudSecretKey
  /api/v1/cloudCredentials/{id}/changeCertificate:
    post:
      description: "The HTTP POST request to the `/api/v1/cloudCredentials/{id}/changeCertificate`\
        \ path allows you to change a certificate used for authentication in your\
        \ Azure Active Directory application associated with an Azure compute account\
        \ that has the specified `id`."
      operationId: ChangeCloudCertificate
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the Azure compute account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateUploadSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsModel'
          description: Certificate has been changed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Change Certificate
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - ChangeCloudCertificate
  /api/v1/cloudCredentials/{id}/helperAppliances:
    get:
      description: "The HTTP GET request to the `/api/v1/cloudCredentials/{id}/helperAppliances`\
        \ path allows you to get an array of Lunux-based helper appliances of a Microsoft\
        \ Azure compute account that has the specified `id`."
      operationId: GetAllCredsHelperAppliances
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the Microsoft Azure compute account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudHelperApplianceResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Helper Appliances
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - ViewCredentials
    post:
      description: "The HTTP POST request to the `/api/v1/cloudCredentials/{id}/helperAppliances`\
        \ path allows you to create a new Lunux-based helper appliance or edit settings\
        \ of an existing one for a Microsoft Azure compute account that has the specified\
        \ `id`."
      operationId: CreateCloudCredsHelperAppliance
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the Microsoft Azure compute account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudHelperApplianceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "AzureApplianceDeploy session has been created. To check the\
            \ progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Add or Edit Helper Appliance
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - CreateCloudCredentials
  /api/v1/cloudCredentials/{id}/helperAppliances/{applianceId}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/cloudCredentials/{id}/helperAppliances/{applianceId}`\
        \ path allows you to remove a Lunux-based helper appliance with the `applianceId`\
        \ of a Microsoft Azure compute account that has the specified `id`."
      operationId: DeleteCloudCredsHelperAppliance
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the Microsoft Azure compute account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the helper appliance.
        explode: false
        in: path
        name: applianceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Helper appliance has been removed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Remove Helper Appliance
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - DeleteCloudCredentials
    get:
      description: "The HTTP GET request to the `/api/v1/cloudCredentials/{id}/helperAppliances/{applianceId}`\
        \ path allows you to get a Lunux-based helper appliance with the `applianceId`\
        \ of a Microsoft Azure compute account that has the specified `id`."
      operationId: GetCloudCredsHelperAppliance
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the Microsoft Azure compute account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the helper appliance.
        explode: false
        in: path
        name: applianceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudHelperApplianceModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Helper Appliance
      tags:
      - Credentials
      x-veeam-authorize:
        claims:
        - UpdateCloudCredentials
  /api/v1/cloudBrowser:
    post:
      description: The HTTP POST request to the `/api/v1/cloudBrowser` path allows
        you to browse cloud resources (compute or storage) available for the specified
        storage account.
      operationId: BrowseCloudEntity
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudBrowserSpec'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudBrowserModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Cloud Hierarchy
      tags:
      - Cloud Browser
      x-veeam-authorize:
        claims:
        - ViewCloudHierarchy
  /api/v1/cloudBrowser/newFolder:
    post:
      description: "The HTTP POST request to the `/api/v1/cloudBrowser/newFolder`\
        \ path allows you to create a new folder in the cloud infrastructure.<br><div\
        \ class=\"note\"><strong>NOTE</strong><br>The REST API does not create new\
        \ containers, you can create a folder in an existing container only.</div>"
      operationId: CreateNewCloudFolder
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudBrowserNewFolderSpec'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Cloud folder has been created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: New Folder
      tags:
      - Cloud Browser
      x-veeam-authorize:
        claims:
        - CreateCloudStorageFolder
  /api/v1/encryptionPasswords:
    get:
      description: The HTTP GET request to the `/api/v1/encryptionPasswords` path
        allows you to get an array of all passwords that are used for data encryption.
      operationId: GetAllEncryptionPasswords
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of passwords to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/EncryptionPasswordsFilters'
      - description: Maximum number of passwords to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/EncryptionPasswordsFilters'
      - description: Sorts passwords by one of the password parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EEncryptionPasswordsFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/EncryptionPasswordsFilters'
      - description: Sorts passwords in the ascending order by the `orderColumn` parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/EncryptionPasswordsFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - id: 6ebbe3cc-8147-47b6-b77a-01eeb7965522
                  hint: Standard Password
                  modificationTime: 2021-10-19T12:37:58.27+03:00
                  tag: internal
                - id: 3261d360-1db7-4291-b1ed-360ef5b77175
                  hint: Created by TECH\Administrator
                  modificationTime: 2022-02-11T11:34:28.677+03:00
                  tag: external
                pagination:
                  total: 2
                  count: 2
                  skip: 0
                  limit: 200
              schema:
                $ref: '#/components/schemas/EncryptionPasswordsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Encryption Passwords
      tags:
      - Encryption
      x-veeam-authorize:
        claims:
        - ViewEncryptionPasswords
    post:
      description: The HTTP POST request to the `/api/v1/encryptionPasswords` path
        allows you to add an encryption password.
      operationId: CreateEncryptionPassword
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptionPasswordSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                password: passsw3wrsdf2d44
                hint: Pet name
                tag: vcenter01
              schema:
                $ref: '#/components/schemas/EncryptionPasswordModel'
          description: Password has been added.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Add Encryption Password
      tags:
      - Encryption
      x-veeam-authorize:
        claims:
        - CreateEncryptionPasswords
  /api/v1/encryptionPasswords/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/encryptionPasswords/{id}`\
        \ path allows you to remove an encryption password that has the specified\
        \ `id`."
      operationId: DeleteEncryptionPassword
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the encryption password.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Password has been removed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Remove Encryption Password
      tags:
      - Encryption
      x-veeam-authorize:
        claims:
        - DeleteEncryptionPasswords
    get:
      description: "The HTTP GET request to the `/api/v1/encryptionPasswords/{id}`\
        \ path allows you to get an encryption password that has the specified `id`."
      operationId: GetEncryptionPassword
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the encryption password.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: 6ebbe3cc-8147-47b6-b77a-01eeb7965522
                hint: Standard Password
                modificationTime: 2022-10-19T12:37:58.27+03:00
                tag: internal
              schema:
                $ref: '#/components/schemas/EncryptionPasswordModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Encryption Password
      tags:
      - Encryption
      x-veeam-authorize:
        claims:
        - ViewEncryptionPasswords
    put:
      description: "The HTTP PUT request to the `/api/v1/encryptionPasswords/{id}`\
        \ path allows you to edit an encryption password that has the specified `id`."
      operationId: UpdateEncryptionPassword
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the encryption password.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              id: 6ebbe3cc-8147-47b6-b77a-01eeb7965522
              hint: Poem
              modificationTime: 2022-10-19T12:37:58.27+03:00
              tag: internal
            schema:
              $ref: '#/components/schemas/EncryptionPasswordModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionPasswordModel'
          description: Password has been updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Encryption Password
      tags:
      - Encryption
      x-veeam-authorize:
        claims:
        - UpdateEncryptionPasswords
  /api/v1/backups:
    get:
      description: The HTTP GET request to the `/api/v1/backups` path allows you to
        get an array of all backups that are created on or imported to the backup
        server.
      operationId: GetAllBackups
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of backups to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupsFilters'
      - description: Maximum number of backups to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupsFilters'
      - description: Sorts backups by one of the backup parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EBackupsFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupsFilters'
      - description: Sorts backups in the ascending order by the `orderColumn` parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupsFilters'
      - description: "Filters backups by the `nameFilter` pattern. The pattern can\
          \ match any backup parameter. To substitute one or more characters, use\
          \ the asterisk (*) character at the beginning, at the end or both."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupsFilters'
      - description: Returns backups that are created after the specified date and
          time.
        explode: true
        in: query
        name: createdAfterFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupsFilters'
      - description: Returns backups that are created before the specified date and
          time.
        explode: true
        in: query
        name: createdBeforeFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupsFilters'
      - description: Filters backups by ID of the backup object platform.
        explode: true
        in: query
        name: platformIdFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupsFilters'
      - description: Filters backups by ID of the parent job.
        explode: true
        in: query
        name: jobIdFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupsFilters'
      - description: Filters backups by retention policy tag.
        explode: true
        in: query
        name: policyTagFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupsFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - platformName: VMware
                  id: f3b0fbc5-01cf-4464-976a-4881e6eda067
                  jobId: 53b87378-7958-477d-8def-fbe6740d4b6f
                  policyTag: ""
                  name: Oracle Backup
                  platformId: 00000000-0000-0000-0000-000000000000
                  creationTime: 2022-02-12T04:24:16.2+03:00
                  repositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                - platformName: CustomPlatform
                  id: b2f9f40f-7944-498f-baff-175e18558829
                  jobId: 00000000-0000-0000-0000-000000000000
                  policyTag: ""
                  name: Oracle Backup
                  platformId: c8098b32-9700-459b-b27c-4dceaf4ea932
                  creationTime: 2019-11-13T16:34:21+03:00
                  repositoryId: 49607f55-4cc4-4ea5-a2c9-e750318d0f34
                pagination:
                  total: 2
                  count: 2
                  skip: 0
                  limit: 200
              schema:
                $ref: '#/components/schemas/BackupsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Backups
      tags:
      - Backups
      x-veeam-authorize:
        claims:
        - ViewBackups
  /api/v1/backups/{id}:
    get:
      description: "The HTTP GET request to the `/api/v1/backups/{id}` path allows\
        \ you to get a backup that has the specified `id`."
      operationId: GetBackup
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                platformName: VMware
                id: 9d4c348d-284a-480d-9340-6454998fa227
                jobId: 301450bc-34cd-4d2c-bfc3-8d269bb471be
                policyTag: ""
                name: AD Backup
                platformId: 00000000-0000-0000-0000-000000000000
                creationTime: 2021-02-12T04:24:32.087+03:00
                repositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
              schema:
                $ref: '#/components/schemas/BackupModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Backup
      tags:
      - Backups
      x-veeam-authorize:
        claims:
        - ViewBackups
  /api/v1/backups/{id}/objects:
    get:
      description: "The HTTP GET request to the `/api/v1/backups/{id}/objects` path\
        \ allows you to get an array of virtual infrastructure objects (VMs and VM\
        \ containers) that are included in a backup that has the specified ID."
      operationId: GetBackupObjects
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - viType: VirtualMachine
                  objectId: "503"
                  path: 172.17.42.92\DLDC
                  platformName: VMware
                  id: 2a192b21-4d32-4b94-829e-231e8f0c0355
                  name: DLDC
                  type: VM
                  platformId: 00000000-0000-0000-0000-000000000000
                  restorePointsCount: 3
                pagination:
                  total: 1
                  count: 1
                  skip: 0
                  limit: 1
              schema:
                $ref: '#/components/schemas/BackupObjectsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Backup Objects
      tags:
      - Backups
      x-veeam-authorize:
        claims:
        - ViewBackupObjects
  /api/v1/backupObjects:
    get:
      description: The HTTP GET request to the `/api/v1/backupObjects` path allows
        you to get an array of virtual infrastructure objects (VMs and VM containers)
        that are included in backups created by the backup server.
      operationId: GetAllBackupObjects
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of backup objects to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupObjectsFilters'
      - description: Maximum number of backup objects to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupObjectsFilters'
      - description: Sorts backup objects by one of the backup object parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EBackupObjectsFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupObjectsFilters'
      - description: Sorts backup objects in the ascending order by the `orderColumn`
          parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupObjectsFilters'
      - description: "Filters backup objects by the `nameFilter` pattern. The pattern\
          \ can match any backup object parameter. To substitute one or more characters,\
          \ use the asterisk (*) character at the beginning and/or at the end."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupObjectsFilters'
      - description: Filters backup objects by platform ID.
        explode: true
        in: query
        name: platformNameFilter
        required: false
        schema:
          $ref: '#/components/schemas/EPlatformType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupObjectsFilters'
      - description: Filters backup objects by platform ID.
        explode: true
        in: query
        name: platformIdFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupObjectsFilters'
      - description: Filters backup objects by object type.
        explode: true
        in: query
        name: typeFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupObjectsFilters'
      - description: Filters backup objects by the type of VMware vSphere server.
        explode: true
        in: query
        name: viTypeFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/BackupObjectsFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - platformName: CustomPlatform
                  id: 47335ff1-a4f0-41ae-91f6-21a129fe4500
                  name: null
                  type: Directory
                  platformId: c8098b32-9700-459b-b27c-4dceaf4ea932
                  restorePointsCount: 11
                - viType: VirtualMachine
                  objectId: "503"
                  path: 172.17.42.92\DLDC
                  platformName: VMware
                  id: 2a192b21-4d32-4b94-829e-231e8f0c0355
                  name: DLDC
                  type: VM
                  platformId: 00000000-0000-0000-0000-000000000000
                  restorePointsCount: 3
                pagination:
                  total: 2
                  count: 2
                  skip: 0
                  limit: 200
              schema:
                $ref: '#/components/schemas/BackupObjectsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Backup Objects
      tags:
      - Backup Objects
      x-veeam-authorize:
        claims:
        - ViewBackupObjects
  /api/v1/backupObjects/{id}:
    get:
      description: "The HTTP GET request to the `/api/v1/backupObjects/{id}` path\
        \ allows you to get a backup object that has the specified `id`."
      operationId: GetBackupObject
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup object.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                viType: VirtualMachine
                objectId: vm-69191
                path: vcenter01.tech.local\Atlanta\esx04.tech.local\Enterprise\winsrv88
                platformName: VmWare
                id: fcea73fa-aa48-45e1-89e4-6e33411e8de2
                name: winsrv88
                type: VM
                platformId: 00000000-0000-0000-0000-000000000000
                restorePointsCount: 13
              schema:
                $ref: '#/components/schemas/BackupObjectModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Backup Object
      tags:
      - Backup Objects
      x-veeam-authorize:
        claims:
        - ViewBackupObjects
  /api/v1/backupObjects/{id}/restorePoints:
    get:
      description: "The HTTP GET request to the `/api/v1/backupObjects/{id}/restorePoints`\
        \ path allows you to get an array of restore points of a backup object that\
        \ has the specified `id`."
      operationId: GetBackupObjectRestorePoints
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the backup object.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - platformName: VmWare
                  id: cb9b2475-46d9-40ae-8d27-0f2f1dfa97cd
                  name: winsrv88
                  platformId: 00000000-0000-0000-0000-000000000000
                  creationTime: 2022-02-02T22:01:18.163+01:00
                  backupId: 3c3d7ebd-3b06-4a99-899c-fa7d5320582a
                  allowedOperations: []
                - platformName: VmWare
                  id: a97c72ed-adaf-4b27-a31e-c1ff5af9ba8f
                  name: winsrv88
                  platformId: 00000000-0000-0000-0000-000000000000
                  creationTime: 2022-02-01T22:00:39.997+01:00
                  backupId: 3c3d7ebd-3b06-4a99-899c-fa7d5320582a
                  allowedOperations: []
                pagination:
                  total: 2
                  count: 2
                  skip: 0
                  limit: 2
              schema:
                $ref: '#/components/schemas/ObjectRestorePointsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Restore Points
      tags:
      - Backup Objects
      x-veeam-authorize:
        claims:
        - ViewRestorePoints
  /api/v1/objectRestorePoints:
    get:
      description: The HTTP GET request to the `/api/v1/objectRestorePoints` path
        allows you to get an array of all restore points created on the backup server.
      operationId: GetAllObjectRestorePoints
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of restore points to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ObjectRestorePointsFilters'
      - description: Maximum number of restore points to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ObjectRestorePointsFilters'
      - description: Sorts restore points by one of the restore point parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EObjectRestorePointsFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ObjectRestorePointsFilters'
      - description: Sorts restore points in the ascending order by the `orderColumn`
          parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ObjectRestorePointsFilters'
      - description: Returns restore points that are created after the specified date
          and time.
        explode: true
        in: query
        name: createdAfterFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ObjectRestorePointsFilters'
      - description: Returns restore points that are created before the specified
          date and time.
        explode: true
        in: query
        name: createdBeforeFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ObjectRestorePointsFilters'
      - description: "Filters restore points by the `nameFilter` pattern. The pattern\
          \ can match any restore point parameter. To substitute one or more characters,\
          \ use the asterisk (*) character at the beginning and/or at the end."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ObjectRestorePointsFilters'
      - description: Filters restore points by name of the backup object platform.
        explode: true
        in: query
        name: platformNameFilter
        required: false
        schema:
          $ref: '#/components/schemas/EPlatformType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ObjectRestorePointsFilters'
      - description: Filters restore points by ID of the backup object platform.
        explode: true
        in: query
        name: platformIdFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ObjectRestorePointsFilters'
      - description: Filters restore points by backup ID.
        explode: true
        in: query
        name: backupIdFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ObjectRestorePointsFilters'
      - description: Filters restore points by backup object ID.
        explode: true
        in: query
        name: backupObjectIdFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ObjectRestorePointsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectRestorePointsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Restore Points
      tags:
      - Object Restore Points
      x-veeam-authorize:
        claims:
        - ViewRestorePoints
  /api/v1/objectRestorePoints/{id}:
    get:
      description: "The HTTP GET request to the `/api/v1/objectRestorePoints/{id}`\
        \ path allows you to get a restore point that has the specified `id`."
      operationId: GetObjectRestorePoint
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the restore point.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectRestorePointModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Restore Point
      tags:
      - Object Restore Points
      x-veeam-authorize:
        claims:
        - ViewRestorePoints
  /api/v1/objectRestorePoints/{id}/disks:
    get:
      description: "The HTTP GET request to the `/api/v1/objectRestorePoints/{id}/disks`\
        \ path allows you to get an array of disks from a restore point that has the\
        \ specified `id`."
      operationId: GetObjectRestorePointDisks
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the restore point.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectRestorePointDisksResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Restore Point Disks
      tags:
      - Object Restore Points
      x-veeam-authorize:
        claims:
        - ViewRestorePointDisks
  /api/v1/restore/instantRecovery/vmware/vm:
    get:
      description: The HTTP GET request to the `/api/v1/restore/instantRecovery/vmware/vm`
        path allows you to get an array of VM mounts.
      operationId: GetAllInstantViVMRecoveryMounts
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of mounts to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/InstantViVMRecoveryMountsFilters'
      - description: Maximum number of mounts to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/InstantViVMRecoveryMountsFilters'
      - description: Sorts mounts by one of the mount parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EInstantViVMRecoveryMountsFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/InstantViVMRecoveryMountsFilters'
      - description: Sorts mounts in the ascending order by the `orderColumn` parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/InstantViVMRecoveryMountsFilters'
      - description: Filters mounts by mount state.
        explode: true
        in: query
        name: stateFilter
        required: false
        schema:
          $ref: '#/components/schemas/EInstantRecoveryMountState'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/InstantViVMRecoveryMountsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantViVMRecoveryMountsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All VM Mounts
      tags:
      - Restore
      x-veeam-authorize:
        claims:
        - ViewIRMountedVMs
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/vm/`\
        \ path allows you to start Instant Recovery of a VMware vSphere VM to VMware\
        \ vSphere. You can recover a VM from the specified restore point to the original\
        \ location with initial VM settings, or to any location but with different\
        \ settings."
      operationId: InstantViVMRecoveryMount
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantViVMRecoverySpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: Instant Recovery to VMware vSphere has been started.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Start Instant Recovery
      tags:
      - Restore
      x-veeam-authorize:
        claims:
        - StartViVMInstantRecovery
  /api/v1/restore/instantRecovery/vmware/vm/{mountId}:
    get:
      description: "The HTTP GET request to the `/api/v1/restore/instantRecovery/vmware/vm/{mountId}`\
        \ path allows you to get a VM mount that has the specified `mountID`."
      operationId: GetInstantViVMRecoveryMount
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Mount ID.
        explode: false
        in: path
        name: mountId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantViVMRecoveryMount'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get VM Mount
      tags:
      - Restore
      x-veeam-authorize:
        claims:
        - ViewIRMountedVMs
  /api/v1/restore/instantRecovery/vmware/vm/{mountId}/unmount:
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/vm/{mountId}/unmount`\
        \ path allows you to stop publishing the recovered VM and remove it from the\
        \ destination host."
      operationId: InstantViVMRecoveryUnmount
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Mount ID.
        explode: false
        in: path
        name: mountId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: VM has been unpublished.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Stop VM Publishing
      tags:
      - Restore
      x-veeam-authorize:
        claims:
        - DismountIRVMs
  /api/v1/restore/instantRecovery/vmware/vm/{mountId}/migrate:
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/vm/{mountId}/migrate`\
        \ path allows you to start VM migration from the specified mount."
      operationId: InstantViVMRecoveryMigrate
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Mount ID.
        explode: false
        in: path
        name: mountId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViVMQuickMigrationSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "VM Migration has been started. To check the progress, track\
            \ the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Start VM Migration
      tags:
      - Restore
      x-veeam-authorize:
        claims:
        - MigrateIRMountedVMs
  /api/v1/restore/vmRestore/vmware/:
    post:
      description: "The HTTP POST request to the `/api/v1/restore/vmRestore/vmware/`\
        \ path allows you to perform entire VM restore of a VMware vSphere VM to VMware\
        \ vSphere. You can restore a VM from the specified restore point to the original\
        \ location with initial VM settings, or to any location but with different\
        \ settings."
      operationId: EntireVmRestoreVmware
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntireViVMRestoreSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Restore session has been created. To check the progress, track\
            \ the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Start Entire VM Restore
      tags:
      - Restore
      x-veeam-authorize:
        claims:
        - StartEntireVmRestore
  /api/v1/restore/instantRecovery/vmware/fcd:
    get:
      description: The HTTP GET request to the `/api/v1/restore/instantRecovery/vmware/fcd`
        path allows you to get an array of FCD mounts.
      operationId: GetAllVmwareFcdInstantRecoveryMountModels
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of mounts to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsFilters'
      - description: Maximum number of mounts to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsFilters'
      - description: Sorts mounts by one of the mount parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EVmwareFcdInstantRecoveryMountsFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsFilters'
      - description: Sorts mounts in the ascending order by the `orderColumn` parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsFilters'
      - description: Filters mounts by mount state.
        explode: true
        in: query
        name: stateFilter
        required: false
        schema:
          $ref: '#/components/schemas/EInstantRecoveryMountState'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All FCD Mounts
      tags:
      - Restore
      x-veeam-authorize:
        claims:
        - ViewIRMountedDisks
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/fcd/`\
        \ path allows you to start Instant FCD Recovery from the restore point to\
        \ the destination cluster.<br>Specify the destination cluster in the `destinationCluster`\
        \ parameter of the request body as a model of the VMware vSphere object. For\
        \ details on how to get the cluster model, see [Get VMware vSphere Server\
        \ Objects](#tag/Inventory-Browser/operation/GetVmwareHostObject)."
      operationId: InstantRecoveryVmwareFcdMountWithSession
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareFcdInstantRecoverySpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Instant FCD Recovery has been started. To check the progress,\
            \ track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Start Instant FCD Recovery
      tags:
      - Restore
      x-veeam-authorize:
        claims:
        - StartFCDInstantRecovery
  /api/v1/restore/instantRecovery/vmware/fcd/{mountId}:
    get:
      description: "The HTTP GET request to the `/api/v1/restore/instantRecovery/vmware/fcd/{mountId}`\
        \ path allows you to get information about the mounted vPower NFS datastore,\
        \ such as restore session ID, mount state, instant FCD recovery settings and\
        \ disks that will be recovered."
      operationId: GetVmwareFcdInstantRecoveryMountModel
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Mount ID.
        explode: false
        in: path
        name: mountId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareFcdInstantRecoveryMount'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get FCD Mount
      tags:
      - Restore
      x-veeam-authorize:
        claims:
        - ViewIRMountedDisks
  /api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount:
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount`\
        \ path allows you to stop publishing the recovered FCDs and remove the disks\
        \ from the datastore."
      operationId: InstantRecoveryVmwareFcdDismountWithSession
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Mount ID.
        explode: false
        in: path
        name: mountId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Disks has been unmounted. To check the progress, track the\
            \ session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Stop FCD Publishing
      tags:
      - Restore
      x-veeam-authorize:
        claims:
        - DismountIRDisks
  /api/v1/restore/instantRecovery/vmware/fcd/{mountId}/migrate:
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/fcd/{mountId}/migrate`\
        \ path allows you to start migration of FCDs from the specified mount.<br>In\
        \ the request body specify FCD migration configuration:<ul> <li>Disks for\
        \ migration</li> <li>Target datastore</li> <li>Storage policy that will be\
        \ applied to the migrated disks</li></ul> For details on how to get models\
        \ of the datastore and storage policy, see [Get VMware vSphere Server Objects](#tag/Inventory-Browser/operation/GetVmwareHostObject)."
      operationId: InstantRecoveryVmwareFcdMigrateWithSession
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Mount ID.
        explode: false
        in: path
        name: mountId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareFcdQuickMigrationSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "FCD Migration has been started. To check the progress, track\
            \ the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Start FCD Migration
      tags:
      - Restore
      x-veeam-authorize:
        claims:
        - MigrateIRMountedDisks
  /api/v1/agents/recoveryTokens:
    get:
      description: The HTTP GET request to the `/api/v1/agents/recoveryTokens` path
        allows you to get an array of all recovery tokens.
      operationId: GetAllComputerRecoveryTokens
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of recovery tokens to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ComputerRecoveryTokenFilters'
      - description: Maximum number of recovery tokens to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ComputerRecoveryTokenFilters'
      - description: Sorts recovery tokens by one of the parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/EComputerRecoveryTokenFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ComputerRecoveryTokenFilters'
      - description: Sorts recovery tokens in the ascending order by the `orderColumn`
          parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ComputerRecoveryTokenFilters'
      - description: "Filters recovery tokens by the `nameFilter` pattern. The pattern\
          \ can match any repository parameter. To substitute one or more characters,\
          \ use the asterisk (*) character at the beginning, at the end or both."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/ComputerRecoveryTokenFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerRecoveryTokenResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Recovery Tokens
      tags:
      - Agents
      x-veeam-authorize:
        claims:
        - ViewComputerRecoveryTokens
    post:
      description: The HTTP POST request to the `/api/v1/agents/recoveryTokens` path
        allows you to create a new recovery token.
      operationId: CreateComputerRecoveryToken
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputerRecoveryTokenSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerRecoveryTokenModel'
          description: Recovery token has been created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Create Recovery Token
      tags:
      - Agents
      x-veeam-authorize:
        claims:
        - CreateComputerRecoveryToken
  /api/v1/agents/recoveryTokens/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/agents/recoveryTokens/{id}`\
        \ path allows you to delete a recovery token that has the specified `id`."
      operationId: DeleteComputerRecoveryToken
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the recovery token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: Token has been deleted.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Delete Recovery Token
      tags:
      - Agents
      x-veeam-authorize:
        claims:
        - DeleteComputerRecoveryToken
    get:
      description: "The HTTP GET request to the `/api/v1/agents/recoveryTokens/{id}`\
        \ path allows you to get a recovery token that has the specified `id`."
      operationId: GetComputerRecoveryToken
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the recovery token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerRecoveryTokenModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Recovery Token
      tags:
      - Agents
      x-veeam-authorize:
        claims:
        - ViewComputerRecoveryTokens
    put:
      description: "The HTTP PUT request to the `/api/v1/agents/recoveryTokens/{id}`\
        \ path allows you to edit settings of a recovery token that has the specified\
        \ `id`."
      operationId: UpdateComputerRecoveryToken
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the recovery token.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputerRecoveryTokenModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerRecoveryTokenModel'
          description: Recovery token has been updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Edit Recovery Token
      tags:
      - Agents
      x-veeam-authorize:
        claims:
        - UpdateComputerRecoveryToken
  /api/v1/automation/jobs/import:
    post:
      description: The HTTP POST request to the `/api/v1/automation/jobs/import` path
        allows you to import jobs to Veeam Backup & Replication.
      operationId: ImportJobs
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the jobs. To\
            \ check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Import Jobs
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ImportJobs
  /api/v1/automation/jobs/export:
    post:
      description: The HTTP POST request to the `/api/v1/automation/jobs/export` path
        allows you to export jobs from Veeam Backup & Replication.
      operationId: ExportJobs
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobImportSpecCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Export Jobs
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ExportJobs
  /api/v1/automation/credentials/import:
    post:
      description: The HTTP POST request to the `/api/v1/automation/credentials/import`
        path allows you to import credentials to Veeam Backup & Replication.
      operationId: ImportCredentials
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the credentials.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Import Credentials
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ImportCredentials
  /api/v1/automation/credentials/export:
    post:
      description: The HTTP POST request to the `/api/v1/automation/credentials/export`
        path allows you to export credentials from Veeam Backup & Replication.
      operationId: ExportCredentials
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsImportSpecCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Export Credentials
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ExportCredentials
  /api/v1/automation/cloudcredentials/import:
    post:
      description: The HTTP POST request to the `/api/v1/automation/cloudcredentials/import`
        path allows you to import cloud credentials to Veeam Backup & Replication.
      operationId: ImportCloudCredentials
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the cloud credentials.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Import Cloud Credentials
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ImportCredentials
  /api/v1/automation/cloudcredentials/export:
    post:
      description: The HTTP POST request to the `/api/v1/automation/cloudcredentials/export`
        path allows you to export cloud credentials from Veeam Backup & Replication.
      operationId: ExportCloudCredentials
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsImportSpecCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Export Cloud Credentials
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ExportCredentials
  /api/v1/automation/proxies/import:
    post:
      description: The HTTP POST request to the `/api/v1/automation/proxies/import`
        path allows you to import backup proxies to Veeam Backup & Replication.
      operationId: ImportProxies
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the proxies.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Import Proxies
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ImportProxies
  /api/v1/automation/proxies/export:
    post:
      description: The HTTP POST request to the `/api/v1/automation/proxies/export`
        path allows you to export backup proxies from Veeam Backup & Replication.
      operationId: ExportProxies
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyImportSpecCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Export Proxies
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ExportProxies
  /api/v1/automation/managedServers/import:
    post:
      description: The HTTP POST request to the `/api/v1/automation/managedServers/import`
        path allows you to import managed servers to Veeam Backup & Replication.
      operationId: ImportManagedServers
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageServerImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the servers.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Import Servers
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ImportManagedServers
  /api/v1/automation/managedServers/export:
    post:
      description: The HTTP POST request to the `/api/v1/automation/managedServers/export`
        path allows you to export managed servers from Veeam Backup & Replication.
      operationId: ExportManagedServers
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageServerExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageServerImportSpecCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Export Servers
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ExportManagedServers
  /api/v1/automation/repositories/import:
    post:
      description: The HTTP POST request to the `/api/v1/automation/repositories/import`
        path allows you to import backup repositories to Veeam Backup & Replication.
      operationId: ImportRepositories
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the repositories.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Import Repositories
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ImportRepositories
  /api/v1/automation/repositories/export:
    post:
      description: The HTTP POST request to the `/api/v1/automation/repositories/export`
        path allows you to export backup repositories from Veeam Backup & Replication.
      operationId: ExportRepositories
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryImportSpecCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Export Repositories
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ExportRepositories
  /api/v1/automation/encryptionPasswords/import:
    post:
      description: The HTTP POST request to the `/api/v1/automation/encryptionPasswords/import`
        path allows you to import encryption passwords to Veeam Backup & Replication.
      operationId: ImportEncryptionPasswords
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptionPasswordImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the passwords.\
            \ To check the progress, track the session `state`."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Import Encryption Passwords
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ImportEncryptionPasswords
  /api/v1/automation/encryptionPasswords/export:
    post:
      description: The HTTP POST request to the `/api/v1/automation/encryptionPasswords/export`
        path allows you to export encryption passwords from Veeam Backup & Replication.
      operationId: ExportEncryptionPasswords
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptionPasswordExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionPasswordImportSpecCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Bad request. This error is related to POST/PUT requests. The\
            \ request body is malformed, incomplete or otherwise invalid."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Export Encryption Passwords
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ExportEncryptionPasswords
  /api/v1/automation/sessions:
    get:
      description: The HTTP GET request to the `/api/v1/automation/sessions` path
        allows you to get an array of all automation sessions performed on the backup
        server.
      operationId: GetAllAutomationSessions
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: Number of sessions to skip.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Maximum number of sessions to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Sorts sessions by one of the session parameters.
        explode: true
        in: query
        name: orderColumn
        required: false
        schema:
          $ref: '#/components/schemas/ESessionsFiltersOrderColumn'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Sorts sessions in the ascending order by the `orderColumn` parameter.
        explode: true
        in: query
        name: orderAsc
        required: false
        schema:
          type: boolean
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: "Filters sessions by the `nameFilter` pattern. The pattern can\
          \ match any session parameter. To substitute one or more characters, use\
          \ the asterisk (*) character at the beginning, at the end or both."
        explode: true
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Returns sessions that are created after the specified date and
          time.
        explode: true
        in: query
        name: createdAfterFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Returns sessions that are created before the specified date and
          time.
        explode: true
        in: query
        name: createdBeforeFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Returns sessions that are finished after the specified date and
          time.
        explode: true
        in: query
        name: endedAfterFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Returns sessions that are finished before the specified date
          and time.
        explode: true
        in: query
        name: endedBeforeFilter
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Filters sessions by session type.
        explode: true
        in: query
        name: typeFilter
        required: false
        schema:
          $ref: '#/components/schemas/ESessionType'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Filters sessions by session state.
        explode: true
        in: query
        name: stateFilter
        required: false
        schema:
          $ref: '#/components/schemas/ESessionState'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Filters sessions by session result.
        explode: true
        in: query
        name: resultFilter
        required: false
        schema:
          $ref: '#/components/schemas/ESessionResult'
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      - description: Filters sessions by job ID.
        explode: true
        in: query
        name: jobIdFilter
        required: false
        schema:
          format: uuid
          type: string
        style: form
        x-veeam-spec:
          $ref: '#/components/schemas/SessionsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get All Automation Sessions
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ViewSessions
  /api/v1/automation/sessions/{id}:
    get:
      description: "The HTTP GET request to the `/api/v1/automation/sessions/{id}`\
        \ path allows you to get an automation session that has the specified `id`."
      operationId: GetAutomationSession
      parameters:
      - description: ID of the session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Automation Session
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ViewSessions
  /api/v1/automation/sessions/{id}/logs:
    get:
      description: "The HTTP GET request to the `/api/v1/automation/sessions/{id}/logs`\
        \ path allows you to get an array of log records of an automation session\
        \ that has the specified `id`."
      operationId: GetAutomationSessionLogs
      parameters:
      - description: ID of the session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionLogResult'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Get Automation Session Logs
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - ViewSessions
  /api/v1/automation/sessions/{id}/stop:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/sessions/{id}/stop`\
        \ path allows you to stop an automation session that has the specified `id`."
      operationId: StopAutomationSession
      parameters:
      - description: Version and revision of the client REST API. Must be in the following
          format&#58; `<version>-<revision>`.
        explode: false
        in: header
        name: x-api-version
        required: true
        schema:
          default: 1.1-rev0
          type: string
        style: simple
      - description: ID of the session.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized. The authorization header has been expected but
            not found (or found but is expired).
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden. The user sending the request does not have adequate
            privileges to access one or more objects specified in the request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found. No object was found with the path parameter specified
            in the request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error. The request has been received but could
            not be completed because of an internal error at the server side.
      summary: Stop Automation Session
      tags:
      - Automation
      x-veeam-authorize:
        claims:
        - StopSessions
components:
  parameters:
    apiVersionParam:
      description: Version and revision of the client REST API. Must be in the following
        format&#58; `<version>-<revision>`.
      explode: false
      in: header
      name: x-api-version
      required: true
      schema:
        default: 1.1-rev0
        type: string
      style: simple
  responses:
    Deleted:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmptySuccessResponse'
      description: Removed.
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: "Bad request. This error is related to POST/PUT requests. The request\
        \ body is malformed, incomplete or otherwise invalid."
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized. The authorization header has been expected but not
        found (or found but is expired).
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden. The user sending the request does not have adequate
        privileges to access one or more objects specified in the request.
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Not found. No object was found with the path parameter specified
        in the request.
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error. The request has been received but could
        not be completed because of an internal error at the server side.
  schemas:
    ServerTimeModel:
      example:
        timeZone: timeZone
        serverTime: 2000-01-23T04:56:07.000+00:00
      properties:
        serverTime:
          description: Current date and time on the backup server.
          format: date-time
          type: string
        timeZone:
          description: Time zone where the backup server is located.
          type: string
      required:
      - serverTime
      type: object
    ServerInfoModel:
      example:
        buildVersion: buildVersion
        patches:
        - patches
        - patches
        name: name
        vbrId: vbrId
      properties:
        vbrId:
          description: Veeam Backup & Replication installation ID.
          type: string
        name:
          description: Full DNS name or IP address of the backup server.
          type: string
        buildVersion:
          description: Veeam Backup & Replication build number.
          type: string
        patches:
          description: Array of Veeam Backup & Replication cumulative patches installed
            on the backup server.
          items:
            type: string
          type: array
      required:
      - buildVersion
      - name
      - patches
      - vbrInstallationId
      type: object
    Error:
      description: ""
      properties:
        errorCode:
          description: The error code is a string that uniquely identifies an error
            condition and should be understood by programs that detect and handle
            errors by type
          enum:
          - AccessDenied
          - ExpiredToken
          - InvalidToken
          - InvalidURI
          - MethodNotAllowed
          - NotFound
          - NotImplemented
          - ServiceUnavailable
          - UnexpectedContent
          - UnknownError
          type: string
        message:
          description: The error message contains a generic description of the error
            condition in English. It is intended for a human audience
          type: string
        resourceId:
          description: ID of the object that is involved in the error (or empty)
          type: string
      required:
      - errorCode
      - message
      type: object
    PaginationResult:
      description: Pagination settings.
      example:
        total: 6
        count: 1
        limit: 5
        skip: 5
      properties:
        total:
          description: Total number of results.
          format: int32
          type: integer
        count:
          description: Number of returned results.
          format: int32
          type: integer
        skip:
          description: Number of skipped results.
          format: int32
          type: integer
        limit:
          description: Maximum number of results to return.
          format: int32
          type: integer
      required:
      - count
      - total
      type: object
    EmptySuccessResponse:
      description: "Empty success response (200, 201, 204)."
      type: object
    SessionsFilters:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/ESessionsFiltersOrderColumn'
        orderAsc:
          type: boolean
        nameFilter:
          type: string
        createdAfterFilter:
          format: date-time
          type: string
        createdBeforeFilter:
          format: date-time
          type: string
        endedAfterFilter:
          format: date-time
          type: string
        endedBeforeFilter:
          format: date-time
          type: string
        typeFilter:
          $ref: '#/components/schemas/ESessionType'
        stateFilter:
          $ref: '#/components/schemas/ESessionState'
        resultFilter:
          $ref: '#/components/schemas/ESessionResult'
        jobIdFilter:
          format: uuid
          type: string
      type: object
    ESessionsFiltersOrderColumn:
      enum:
      - Name
      - SessionType
      - CreationTime
      - EndTime
      - State
      - Result
      type: string
    SessionsResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - resourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creationTime: 2000-01-23T04:56:07.000+00:00
          parentSessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          result:
            result: null
            isCanceled: true
            message: message
          activityId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          usn: 6
          name: name
          sessionType: null
          progressPercent: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endTime: 2000-01-23T04:56:07.000+00:00
          state: null
          resourceReference: resourceReference
        - resourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creationTime: 2000-01-23T04:56:07.000+00:00
          parentSessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          result:
            result: null
            isCanceled: true
            message: message
          activityId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          usn: 6
          name: name
          sessionType: null
          progressPercent: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endTime: 2000-01-23T04:56:07.000+00:00
          state: null
          resourceReference: resourceReference
      properties:
        data:
          description: Array of sessions.
          items:
            $ref: '#/components/schemas/SessionModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    SessionModel:
      example:
        resourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creationTime: 2000-01-23T04:56:07.000+00:00
        parentSessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        result:
          result: null
          isCanceled: true
          message: message
        activityId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        usn: 6
        name: name
        sessionType: null
        progressPercent: 0
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        endTime: 2000-01-23T04:56:07.000+00:00
        state: null
        resourceReference: resourceReference
      properties:
        id:
          description: ID of the session.
          format: uuid
          type: string
        name:
          description: Name of the session.
          type: string
        activityId:
          description: ID of the activity.
          format: uuid
          type: string
        sessionType:
          $ref: '#/components/schemas/ESessionType'
        creationTime:
          description: Date and time when the session was created.
          format: date-time
          type: string
        endTime:
          description: Date and time when the session was ended.
          format: date-time
          type: string
        state:
          $ref: '#/components/schemas/ESessionState'
        progressPercent:
          description: Progress percentage of the session.
          type: integer
        result:
          $ref: '#/components/schemas/SessionResultModel'
        resourceId:
          description: ID of the resource.
          format: uuid
          type: string
        resourceReference:
          description: URI of the resource.
          type: string
        parentSessionId:
          description: ID of the parent session.
          format: uuid
          type: string
        usn:
          description: Update sequence number.
          format: int64
          type: integer
      required:
      - activityId
      - creationTime
      - id
      - name
      - sessionType
      - state
      - usn
      type: object
    SessionResultModel:
      description: Session result.
      example:
        result: null
        isCanceled: true
        message: message
      properties:
        result:
          $ref: '#/components/schemas/ESessionResult'
        message:
          description: Message that explains the session result.
          type: string
        isCanceled:
          description: "If *true*, the session has been canceled."
          type: boolean
      required:
      - result
      type: object
    ESessionType:
      description: Type of the session.
      enum:
      - Infrastructure
      - Job
      - Automation
      - ConfigurationBackup
      - RepositoryMaintenance
      - RepositoryEvacuate
      - InfrastructureItemDeletion
      - RestoreVm
      - InstantRecovery
      - FirstClassDiskInstantRestore
      - AzureApplianceDeploy
      - QuickMigration
      type: string
    ESessionState:
      description: State of the session.
      enum:
      - Stopped
      - Starting
      - Stopping
      - Working
      - Pausing
      - Resuming
      - WaitingTape
      - Idle
      - Postprocessing
      - WaitingRepository
      - WaitingSlot
      type: string
    ESessionResult:
      description: Result status.
      enum:
      - None
      - Success
      - Warning
      - Failed
      type: string
    SessionLogResult:
      description: Log of the session.
      example:
        totalRecords: 0
        records:
        - description: description
          startTime: 2000-01-23T04:56:07.000+00:00
          updateTime: 2000-01-23T04:56:07.000+00:00
          id: 6
          title: title
          status: null
        - description: description
          startTime: 2000-01-23T04:56:07.000+00:00
          updateTime: 2000-01-23T04:56:07.000+00:00
          id: 6
          title: title
          status: null
      properties:
        totalRecords:
          description: Total number of records.
          type: integer
        records:
          description: Array of log records.
          items:
            $ref: '#/components/schemas/SessionLogRecordModel'
          type: array
      type: object
    SessionLogRecordModel:
      description: Record of the session log.
      example:
        description: description
        startTime: 2000-01-23T04:56:07.000+00:00
        updateTime: 2000-01-23T04:56:07.000+00:00
        id: 6
        title: title
        status: null
      properties:
        id:
          description: ID of the log record.
          type: integer
        status:
          $ref: '#/components/schemas/ETaskLogRecordStatus'
        startTime:
          description: Date and time when the operation was started.
          format: date-time
          type: string
        updateTime:
          description: Date and time when the log record was updated.
          format: date-time
          type: string
        title:
          description: Title of the log record.
          type: string
        description:
          description: Description of the log record.
          type: string
      type: object
    ETaskLogRecordStatus:
      enum:
      - None
      - Succeeded
      - Warning
      - Failed
      type: string
    CertificateModel:
      description: Certificate settings.
      example:
        serialNumber: serialNumber
        keyAlgorithm: keyAlgorithm
        issuedTo: issuedTo
        keySize: keySize
        subject: subject
        issuedBy: issuedBy
        thumbprint: thumbprint
        validFrom: 2000-01-23T04:56:07.000+00:00
        validBy: 2000-01-23T04:56:07.000+00:00
      properties:
        thumbprint:
          description: Thumbprint of the certificate.
          type: string
        serialNumber:
          description: Serial number of the certificate.
          type: string
        keyAlgorithm:
          description: Key algorithm of the certificate.
          type: string
        keySize:
          description: Key size of the certificate.
          type: string
        subject:
          description: Subject of the certificate.
          type: string
        issuedTo:
          description: Acquirer of the certificate.
          type: string
        issuedBy:
          description: Issuer of the certificate.
          type: string
        validFrom:
          description: Date and time the certificate is valid from.
          format: date-time
          type: string
        validBy:
          description: Expiration date and time of the certificate.
          format: date-time
          type: string
      required:
      - issuedBy
      - issuedTo
      - keyAlgorithm
      - keySize
      - serialNumber
      - subject
      - thumbprint
      - validBy
      - validFrom
      type: object
    AuthorizationCodeModel:
      example:
        code: code
      properties:
        code:
          description: String that is used to obtain an access token. Lifetime of
            the authorization code is 60 seconds.
          type: string
      required:
      - code
      type: object
    TokenLoginSpec:
      properties:
        grant_type:
          $ref: '#/components/schemas/ELoginGrantType'
        username:
          description: User name. Required if the `grant_type` value is `password`.
          type: string
        password:
          description: Password. Required if the `grant_type` value is `password`.
          format: password
          type: string
        refresh_token:
          description: Refresh token. Required if the `grant_type` value is `refresh_token`.
          type: string
        code:
          description: Authorization code. Required if the `grant_type` value is `authorization_code`.
          type: string
        use_short_term_refresh:
          description: "If *true*, a short-term refresh token is used. Lifetime of\
            \ the short-term refresh token is the access token lifetime plus 15 minutes."
          type: boolean
        vbr_token:
          description: Veeam Backup & Replication platform service token.
          type: string
      required:
      - grant_type
      type: object
    ELoginGrantType:
      default: password
      description: Authorization grant type.<br>Available values:<ul> <li>`password`
        — used to obtain an access token by providing a user name and password.</li>
        <li>`refresh_token` — used to refresh an expired or lost access token by providing
        a refresh token.</li> <li>`authorization_code` — used to obtain an access
        token by providing an authorization code.</li> <li>`vbr_token` — used to obtain
        an access token by providing a Veeam Backup & Replication token. This grant
        type is only used in a restricted mode for integration with Veeam Backup &
        Replication.</li></ul>
      enum:
      - password
      - refresh_token
      - authorization_code
      - vbr_token
      type: string
    TokenModel:
      example:
        access_token: access_token
        refresh_token: refresh_token
        ".expires": 2000-01-23T04:56:07.000+00:00
        token_type: token_type
        expires_in: 0
        ".issued": 2000-01-23T04:56:07.000+00:00
      properties:
        access_token:
          description: "String that represents authorization issued to the client.\
            \ It must be specified in all requests. An access token can be used multiple\
            \ times, but its lifetime is 15 minutes."
          type: string
        token_type:
          description: Type of the access token.
          type: string
        refresh_token:
          description: "String that is used to obtain a new access token if the current\
            \ access token expires or becomes lost. A refresh token can be used only\
            \ once, and its default lifetime is 14 days."
          type: string
        expires_in:
          description: "Lifetime of the access token, in seconds."
          format: int32
          type: integer
        ".issued":
          description: Date and time when the access token is issued.
          format: date-time
          type: string
        ".expires":
          description: Date and time when the access token expires.
          format: date-time
          type: string
      required:
      - .expires
      - .issued
      - access_token
      - expires_in
      - refresh_token
      - token_type
      type: object
    HostConnectionSpec:
      example:
        port: 0
        serverName: serverName
        credentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
      properties:
        serverName:
          description: Full DNS name or IP address of the server.
          type: string
        credentialsId:
          description: ID of a credentials record used to connect to the server.
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/EManagedServerType'
        port:
          description: Port used to communicate with the server.
          type: integer
      required:
      - credentialsId
      - serverName
      - type
      type: object
    ERepositoryType:
      description: Repository type.
      enum:
      - WinLocal
      - LinuxLocal
      - Smb
      - Nfs
      - AzureBlob
      - AzureDataBox
      - AzureArchive
      - AmazonS3
      - AmazonSnowballEdge
      - AmazonS3Glacier
      - S3Compatible
      - GoogleCloud
      - IBMCloud
      - ExtendableRepository
      - DDBoost
      - ExaGrid
      - HPStoreOnceIntegration
      - Quantum
      - WasabiCloud
      - LinuxHardened
      - Infinidat
      - Fujitsu
      type: string
    EPlatform:
      enum:
      - VMware
      - HyperV
      - Test
      - Vcd
      - Tape
      - EndPoint
      - LinuxPhysical
      - CustomPlatform
      - Conf
      - NasBackup
      - EmulatedVMware
      - Extension0
      - Extension1
      - Extension
      type: string
    ManagedServersFilters:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EManagedServersFiltersOrderColumn'
        orderAsc:
          type: boolean
        nameFilter:
          type: string
        typeFilter:
          $ref: '#/components/schemas/EManagedServerType'
        viTypeFilter:
          $ref: '#/components/schemas/EViHostType'
      type: object
    EManagedServersFiltersOrderColumn:
      enum:
      - Name
      - Type
      - Description
      type: string
    ManagedServersResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          credentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          credentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
      properties:
        data:
          description: Array of managed servers.
          items:
            $ref: '#/components/schemas/ManagedServerModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    ManagedServerModel:
      discriminator:
        mapping:
          WindowsHost: '#/components/schemas/WindowsHostModel'
          LinuxHost: '#/components/schemas/LinuxHostModel'
          ViHost: '#/components/schemas/ViHostModel'
        propertyName: type
      example:
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        credentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
      oneOf:
      - $ref: '#/components/schemas/WindowsHostModel'
      - $ref: '#/components/schemas/LinuxHostModel'
      - $ref: '#/components/schemas/ViHostModel'
      properties:
        id:
          description: ID of the server.
          format: uuid
          type: string
        name:
          description: Full DNS name or IP address of the server.
          type: string
        description:
          description: Description of the server.
          type: string
        type:
          $ref: '#/components/schemas/EManagedServerType'
        credentialsId:
          description: ID of a credentials record used to connect to the server.
          format: uuid
          type: string
      required:
      - credentialsId
      - description
      - id
      - name
      - type
      type: object
    EManagedServerType:
      description: Type of the server.
      enum:
      - WindowsHost
      - LinuxHost
      - ViHost
      type: string
    ManagedServerSpec:
      discriminator:
        mapping:
          WindowsHost: '#/components/schemas/WindowsHostSpec'
          LinuxHost: '#/components/schemas/LinuxHostSpec'
          ViHost: '#/components/schemas/ViHostSpec'
        propertyName: type
      example:
        name: name
        description: description
        credentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
      oneOf:
      - $ref: '#/components/schemas/WindowsHostSpec'
      - $ref: '#/components/schemas/LinuxHostSpec'
      - $ref: '#/components/schemas/ViHostSpec'
      properties:
        name:
          description: Full DNS name or IP address of the server.
          type: string
        description:
          description: Description of the server.
          type: string
        type:
          $ref: '#/components/schemas/EManagedServerType'
        credentialsId:
          description: ID of the credentials used to connect to the server.
          format: uuid
          type: string
      required:
      - credentialsId
      - description
      - name
      - type
      type: object
    WindowsHostSpec:
      allOf:
      - $ref: '#/components/schemas/ManagedServerSpec'
      - $ref: '#/components/schemas/WindowsHostSpec_allOf'
    WindowsHostModel:
      allOf:
      - $ref: '#/components/schemas/ManagedServerModel'
      - $ref: '#/components/schemas/WindowsHostSpec_allOf'
    WindowsHostPortsModel:
      description: Veeam Backup & Replication components installed on the server and
        ports used by the components.
      example:
        components:
        - port: 0
          componentName: null
        - port: 0
          componentName: null
        serverThisSide: true
        portRangeStart: 6
        portRangeEnd: 1
      properties:
        components:
          description: Array of Veeam Backup & Replication components.
          items:
            $ref: '#/components/schemas/WindowsHostComponentPortModel'
          type: array
        portRangeStart:
          description: Start port used for data transfer.
          type: integer
        portRangeEnd:
          description: End port used for data transfer.
          type: integer
        serverThisSide:
          description: "If *true*, the server is run on this side."
          type: boolean
      type: object
    WindowsHostComponentPortModel:
      description: Ports used by Veeam Backup & Replication components.
      example:
        port: 0
        componentName: null
      properties:
        componentName:
          $ref: '#/components/schemas/EWindowsHostComponentType'
        port:
          description: Port used by the component.
          type: integer
      required:
      - componentName
      - port
      type: object
    EWindowsHostComponentType:
      description: Veeam Backup & Replication component.
      enum:
      - Transport
      - Nfs
      - HvIntegration
      - DeployerSvc
      - WanAccelerator
      - Tape
      - CloudGate
      - CloudServiceInvoker
      - CloudServiceRemoting
      - RestoreProxy
      - EpAgent
      - EpAgentSqlLocalDB
      - EpAgentSharedManagementObjects
      - EpAgentSqlSysClrTypes
      - AgentConfigureService
      - VawRedist
      - ValRedist
      - GuestControl
      - FileSystemVssIntegration
      - VssHwSnapshotProvider
      - Cdp
      - VamRedist
      type: string
    LinuxHostSpec:
      allOf:
      - $ref: '#/components/schemas/ManagedServerSpec'
      properties:
        sshSettings:
          $ref: '#/components/schemas/LinuxHostSSHSettingsModel'
        sshFingerprint:
          description: "SSH key fingerprint used to verify the server identity. For\
            \ details on how to get the fingerprint, see [Request TLS Certificate\
            \ or SSH Fingerprint](#tag/Connection/operation/GetConnectionCertificate)."
          type: string
      required:
      - sshFingerprint
      type: object
    LinuxHostModel:
      allOf:
      - $ref: '#/components/schemas/ManagedServerModel'
      - $ref: '#/components/schemas/LinuxHostModel_allOf'
    ECredentialsStorageType:
      description: Credentials type used to connect to the Linux server.
      enum:
      - Permanent
      - SingleUse
      type: string
    LinuxHostSSHSettingsModel:
      description: SSH settings.
      example:
        managementPort: 7
        serverThisSide: true
        portRangeStart: 5
        portRangeEnd: 2
        sshTimeOutMs: 5
      properties:
        sshTimeOutMs:
          description: "SSH timeout, in ms. If a task targeted at the server is inactive\
            \ after the timeout, the task is terminated."
          type: integer
        portRangeStart:
          description: Start port used for data transfer.
          type: integer
        portRangeEnd:
          description: End port used for data transfer.
          type: integer
        serverThisSide:
          description: "If *true*, the server is run on this side."
          type: boolean
        managementPort:
          description: Port used as a control channel from the Veeam Backup & Replication
            console to the Linux server.
          type: integer
      type: object
    ViHostModel:
      allOf:
      - $ref: '#/components/schemas/ManagedServerModel'
      - $ref: '#/components/schemas/ViHostModel_allOf'
    EViHostType:
      description: Type of the VMware vSphere server.
      enum:
      - ESX
      - ESXi
      - VC
      type: string
    ViHostSpec:
      allOf:
      - $ref: '#/components/schemas/ManagedServerSpec'
      - $ref: '#/components/schemas/ViHostSpec_allOf'
    RepositoriesFilters:
      properties:
        skip:
          description: Number of repositories to skip.
          format: int32
          type: integer
        limit:
          description: Maximum number of repositories to return.
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/ERepositoryFiltersOrderColumn'
        orderAsc:
          description: Sorts repositories in the ascending order by the `orderColumn`
            parameter.
          type: boolean
        nameFilter:
          description: "Filters repositories by the `nameFilter` pattern. The pattern\
            \ can match any repository parameter. To substitute one or more characters,\
            \ use the asterisk (*) character at the beginning and/or at the end."
          type: string
        typeFilter:
          $ref: '#/components/schemas/ERepositoryType'
        hostIdFilter:
          description: Filters repositories by ID of the backup server.
          format: uuid
          type: string
        pathFilter:
          description: Filters repositories by path to the folder where backup files
            are stored.
          type: string
        vmbApiFilter:
          description: "Filters repositories by VM Backup API parameters converted\
            \ to the base64 string. To obtain the string, call the `GetApiProductInfoString`\
            \ method of VM Backup API."
          type: string
        vmbApiPlatform:
          description: Filters repositories by ID of a platform that you use to communicate
            with VM Backup API.
          format: uuid
          type: string
      type: object
    ERepositoryFiltersOrderColumn:
      description: Sorts repositories by one of the repository parameters.
      enum:
      - Name
      - Description
      - Type
      - Host
      - Path
      type: string
    RepositoriesResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
          type: null
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
          type: null
      properties:
        data:
          description: Array of backup repositories.
          items:
            $ref: '#/components/schemas/RepositoryModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    RepositoryBehaviorFilters:
      properties:
        overwriteOwner:
          type: boolean
      type: object
    VmbApiFilterModel:
      properties:
        protocolVersion:
          type: integer
        assemblyVersion:
          type: string
        productId:
          format: uuid
          type: string
        versionFlags:
          type: integer
      required:
      - assemblyVersion
      - productId
      - protocolVersion
      - versionFlags
      type: object
    RepositorySpec:
      discriminator:
        mapping:
          WinLocal: '#/components/schemas/WindowsLocalStorageSpec'
          LinuxLocal: '#/components/schemas/LinuxLocalStorageSpec'
          Smb: '#/components/schemas/SmbStorageSpec'
          Nfs: '#/components/schemas/NfsStorageSpec'
          AzureBlob: '#/components/schemas/AzureBlobStorageSpec'
          AzureDataBox: '#/components/schemas/AzureDataBoxStorageSpec'
          AzureArchive: '#/components/schemas/AzureArchiveStorageSpec'
          AmazonS3: '#/components/schemas/AmazonS3StorageSpec'
          AmazonSnowballEdge: '#/components/schemas/AmazonSnowballEdgeStorageSpec'
          AmazonS3Glacier: '#/components/schemas/AmazonS3GlacierStorageSpec'
          S3Compatible: '#/components/schemas/S3CompatibleStorageSpec'
          GoogleCloud: '#/components/schemas/GoogleCloudStorageSpec'
          IBMCloud: '#/components/schemas/IBMCloudStorageSpec'
          WasabiCloud: '#/components/schemas/WasabiCloudStorageSpec'
          LinuxHardened: '#/components/schemas/LinuxHardenedStorageSpec'
        propertyName: type
      example:
        name: name
        description: description
        tag: tag
        type: null
      oneOf:
      - $ref: '#/components/schemas/WindowsLocalStorageSpec'
      - $ref: '#/components/schemas/LinuxLocalStorageSpec'
      - $ref: '#/components/schemas/NfsStorageSpec'
      - $ref: '#/components/schemas/SmbStorageSpec'
      - $ref: '#/components/schemas/AzureBlobStorageSpec'
      - $ref: '#/components/schemas/AzureDataBoxStorageSpec'
      - $ref: '#/components/schemas/AmazonS3StorageSpec'
      - $ref: '#/components/schemas/AmazonSnowballEdgeStorageSpec'
      - $ref: '#/components/schemas/S3CompatibleStorageSpec'
      - $ref: '#/components/schemas/GoogleCloudStorageSpec'
      - $ref: '#/components/schemas/IBMCloudStorageSpec'
      - $ref: '#/components/schemas/AmazonS3GlacierStorageSpec'
      - $ref: '#/components/schemas/AzureArchiveStorageSpec'
      - $ref: '#/components/schemas/WasabiCloudStorageSpec'
      - $ref: '#/components/schemas/LinuxHardenedStorageSpec'
      properties:
        name:
          description: Name of the backup repository.
          type: string
        description:
          description: Description of the backup repository.
          type: string
        tag:
          description: Tag that identifies the backup repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
      - description
      - name
      - type
      type: object
    RepositoryModel:
      discriminator:
        mapping:
          WinLocal: '#/components/schemas/WindowsLocalStorageModel'
          LinuxLocal: '#/components/schemas/LinuxLocalStorageModel'
          Smb: '#/components/schemas/SmbStorageModel'
          Nfs: '#/components/schemas/NfsStorageModel'
          AzureBlob: '#/components/schemas/AzureBlobStorageModel'
          AzureDataBox: '#/components/schemas/AzureDataBoxStorageModel'
          AzureArchive: '#/components/schemas/AzureArchiveStorageModel'
          AmazonS3: '#/components/schemas/AmazonS3StorageModel'
          AmazonSnowballEdge: '#/components/schemas/AmazonSnowballEdgeStorageModel'
          AmazonS3Glacier: '#/components/schemas/AmazonS3GlacierStorageModel'
          S3Compatible: '#/components/schemas/S3CompatibleStorageModel'
          GoogleCloud: '#/components/schemas/GoogleCloudStorageModel'
          IBMCloud: '#/components/schemas/IBMCloudStorageModel'
          WasabiCloud: '#/components/schemas/WasabiCloudStorageModel'
          LinuxHardened: '#/components/schemas/LinuxHardenedStorageModel'
        propertyName: type
      example:
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tag: tag
        type: null
      oneOf:
      - $ref: '#/components/schemas/WindowsLocalStorageModel'
      - $ref: '#/components/schemas/LinuxLocalStorageModel'
      - $ref: '#/components/schemas/NfsStorageModel'
      - $ref: '#/components/schemas/SmbStorageModel'
      - $ref: '#/components/schemas/AzureBlobStorageModel'
      - $ref: '#/components/schemas/AzureDataBoxStorageModel'
      - $ref: '#/components/schemas/AmazonS3StorageModel'
      - $ref: '#/components/schemas/AmazonSnowballEdgeStorageModel'
      - $ref: '#/components/schemas/S3CompatibleStorageModel'
      - $ref: '#/components/schemas/GoogleCloudStorageModel'
      - $ref: '#/components/schemas/IBMCloudStorageModel'
      - $ref: '#/components/schemas/AmazonS3GlacierStorageModel'
      - $ref: '#/components/schemas/AzureArchiveStorageModel'
      - $ref: '#/components/schemas/WasabiCloudStorageModel'
      - $ref: '#/components/schemas/LinuxHardenedStorageModel'
      properties:
        id:
          description: ID of the backup repository.
          format: uuid
          type: string
        name:
          description: Name of the backup repository.
          type: string
        description:
          description: Description of the backup repository.
          type: string
        tag:
          description: Tag that identifies the backup repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
      - description
      - id
      - kind
      - name
      - type
      type: object
    SmbRepositoryShareSettingsModel:
      description: Share settings.
      properties:
        sharePath:
          description: Path to the shared folder that is used as a backup repository.
          type: string
        credentialsId:
          description: ID of the credentials record used to access the shared folder.
          format: uuid
          type: string
        gatewayServer:
          $ref: '#/components/schemas/RepositoryShareGatewayModel'
      required:
      - credentialsId
      - sharePath
      type: object
    NfsRepositoryShareSettingsModel:
      description: Share settings.
      properties:
        sharePath:
          description: Path to the shared folder that is used as a backup repository.
          type: string
        gatewayServer:
          $ref: '#/components/schemas/RepositoryShareGatewayModel'
      required:
      - sharePath
      type: object
    RepositoryShareGatewayModel:
      description: Settings for the gateway server.
      properties:
        autoSelect:
          description: "If *true*, Veeam Backup & Replication automatically selects\
            \ a gateway server."
          type: boolean
        gatewayServerIds:
          description: Array of gateway server IDs.
          items:
            format: uuid
            type: string
          type: array
      required:
      - autoSelect
      type: object
    ObjectStorageConnectionModel:
      description: Object storage connection settings.
      properties:
        connectionType:
          $ref: '#/components/schemas/ERepositoryConnectionType'
        gatewayServerIds:
          description: Array of gateway server IDs. The value is *null* if the connection
            type is *Direct*.
          items:
            format: uuid
            type: string
          type: array
      required:
      - connectionType
      type: object
    ERepositoryConnectionType:
      description: Repository connection type (direct or through a gateway server).
      enum:
      - Direct
      - SelectedGateway
      type: string
    WindowsLocalRepositorySettingsModel:
      description: Repository settings.
      example:
        enableTaskLimit: true
        maxTaskCount: 0
        path: path
        enableReadWriteLimit: true
        advancedSettings:
          perVmBackup: true
          RotatedDriveCleanupMode: null
          decompressBeforeStoring: true
          rotatedDrives: true
          alignDataBlocks: true
        readWriteRate: 6
      properties:
        path:
          description: Path to the folder where backup files are stored.
          type: string
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        enableReadWriteLimit:
          description: "If *true*, reading and writing speed is limited."
          type: boolean
        readWriteRate:
          description: Maximum rate that restricts the total speed of reading and
            writing data to the backup repository disk.
          type: integer
        advancedSettings:
          $ref: '#/components/schemas/RepositoryAdvancedSettingsModel'
      type: object
    LinuxLocalRepositorySettingsModel:
      description: Repository settings.
      example:
        enableTaskLimit: true
        maxTaskCount: 5
        path: path
        enableReadWriteLimit: true
        useFastCloningOnXFSVolumes: true
        advancedSettings:
          perVmBackup: true
          RotatedDriveCleanupMode: null
          decompressBeforeStoring: true
          rotatedDrives: true
          alignDataBlocks: true
        readWriteRate: 2
      properties:
        path:
          description: Path to the folder where backup files are stored.
          type: string
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        enableReadWriteLimit:
          description: "If *true*, reading and writing speed is limited."
          type: boolean
        readWriteRate:
          description: Maximum rate that restricts the total speed of reading and
            writing data to the backup repository disk.
          type: integer
        useFastCloningOnXFSVolumes:
          description: "If *true*, fast cloning on XFS volumes is used."
          type: boolean
        advancedSettings:
          $ref: '#/components/schemas/RepositoryAdvancedSettingsModel'
      type: object
    LinuxHardenedRepositorySettingsModel:
      description: Repository settings.
      example:
        enableTaskLimit: true
        maxTaskCount: 9
        path: path
        makeRecentBackupsImmutableDays: 6
        enableReadWriteLimit: true
        useFastCloningOnXFSVolumes: true
        advancedSettings:
          perVmBackup: true
          RotatedDriveCleanupMode: null
          decompressBeforeStoring: true
          rotatedDrives: true
          alignDataBlocks: true
        readWriteRate: 9
      properties:
        path:
          description: Path to the folder where backup files are stored.
          type: string
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        enableReadWriteLimit:
          description: "If *true*, reading and writing speed is limited."
          type: boolean
        readWriteRate:
          description: Maximum rate that restricts the total speed of reading and
            writing data to the backup repository disk.
          type: integer
        useFastCloningOnXFSVolumes:
          description: "If *true*, fast cloning on XFS volumes is used."
          type: boolean
        makeRecentBackupsImmutableDays:
          description: Number of days to keep immutable backups.
          type: integer
        advancedSettings:
          $ref: '#/components/schemas/RepositoryAdvancedSettingsModel'
      type: object
    NetworkRepositorySettingsModel:
      description: Repository settings.
      example:
        enableTaskLimit: true
        maxTaskCount: 7
        enableReadWriteLimit: true
        advancedSettings:
          perVmBackup: true
          RotatedDriveCleanupMode: null
          decompressBeforeStoring: true
          rotatedDrives: true
          alignDataBlocks: true
        readWriteRate: 9
      properties:
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        enableReadWriteLimit:
          description: "If *true*, reading and writing speed is limited."
          type: boolean
        readWriteRate:
          description: Maximum rate that restricts the total speed of reading and
            writing data to the backup repository disk.
          type: integer
        advancedSettings:
          $ref: '#/components/schemas/RepositoryAdvancedSettingsModel'
      type: object
    RepositoryAdvancedSettingsModel:
      description: Advanced settings for the backup repository.
      example:
        perVmBackup: true
        RotatedDriveCleanupMode: null
        decompressBeforeStoring: true
        rotatedDrives: true
        alignDataBlocks: true
      properties:
        alignDataBlocks:
          description: "If *true*, Veeam Backup & Replication aligns VM data saved\
            \ to a backup file at a 4 KB block boundary."
          type: boolean
        decompressBeforeStoring:
          description: "If *true*, Veeam Backup & Replication decompresses backup\
            \ data blocks before storing to improve deduplication ratios."
          type: boolean
        rotatedDrives:
          description: "If *true*, the repository drive is rotated."
          type: boolean
        perVmBackup:
          description: "If *true*, Veeam Backup & Replication creates a separate backup\
            \ file for every VM in the job."
          type: boolean
        RotatedDriveCleanupMode:
          $ref: '#/components/schemas/ERotatedDriveCleanupMode'
      type: object
    ERotatedDriveCleanupMode:
      description: Cleanup mode:<ul> <li>`Disabled` — continue the backup chain on
        an inserted drive.</li> <li>`ClearBackupFolder` — delete existing backups
        belonging to the job.</li> <li>`ClearRepositoryFolder` — delete all existing
        backups from repository.</li></ul>
      enum:
      - Disabled
      - ClearBackupFolder
      - ClearRepositoryFolder
      type: string
    MountServerSettingsModel:
      description: Settings for the mount server that is used for file-level and application
        items restore.
      properties:
        mountServerId:
          description: ID of the mount server.
          format: uuid
          type: string
        writeCacheFolder:
          description: Path to the folder used for writing cache during mount operations.
          type: string
        vPowerNFSEnabled:
          description: "If *true*, the vPower NFS Service is enabled on the mount\
            \ server."
          type: boolean
        vPowerNFSPortSettings:
          $ref: '#/components/schemas/VPowerNFSPortSettingsModel'
      required:
      - mountServerId
      - vPowerNFSEnabled
      - writeCacheFolder
      type: object
    VPowerNFSPortSettingsModel:
      description: Network ports used by the vPower NFS Service.
      example:
        vPowerNFSPort: 5
        mountPort: 1
      properties:
        mountPort:
          description: Mount port.
          type: integer
        vPowerNFSPort:
          description: vPower NFS port.
          type: integer
      type: object
    WindowsLocalStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/WindowsLocalStorageSpec_allOf'
      description: Microsoft Windows-based repository.
    LinuxLocalStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/LinuxLocalStorageSpec_allOf'
      description: Linux-based repository.
    WindowsLocalStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/WindowsLocalStorageSpec_allOf'
      description: Microsoft Windows-based repository.
    LinuxLocalStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/LinuxLocalStorageSpec_allOf'
      description: Linux-based repository.
    NfsStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/NfsStorageSpec_allOf'
      description: NFS backup repository.
    SmbStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/SmbStorageSpec_allOf'
      description: SMB backup repository.
    NfsStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/NfsStorageSpec_allOf'
      description: NFS backup repository.
    SmbStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/SmbStorageSpec_allOf'
      description: SMB backup repository.
    LinuxHardenedStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/LinuxHardenedStorageSpec_allOf'
      description: Linux hardened repository.
    LinuxHardenedStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/LinuxHardenedStorageSpec_allOf'
      description: Linux hardened repository.
    ProxiesFilters:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EProxiesFiltersOrderColumn'
        orderAsc:
          type: boolean
        nameFilter:
          type: string
        typeFilter:
          $ref: '#/components/schemas/EProxyType'
        hostIdFilter:
          format: uuid
          type: string
      type: object
    EProxiesFiltersOrderColumn:
      enum:
      - Name
      - Type
      - Description
      type: string
    ProxiesResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
      properties:
        data:
          description: Array of backup proxies.
          items:
            $ref: '#/components/schemas/ProxyModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    ProxySpec:
      discriminator:
        mapping:
          ViProxy: '#/components/schemas/ViProxySpec'
        propertyName: type
      example:
        description: description
        type: null
      oneOf:
      - $ref: '#/components/schemas/ViProxySpec'
      properties:
        description:
          description: Description of the backup proxy.
          type: string
        type:
          $ref: '#/components/schemas/EProxyType'
      required:
      - description
      - type
      type: object
    ViProxySpec:
      allOf:
      - $ref: '#/components/schemas/ProxySpec'
      - $ref: '#/components/schemas/ViProxySpec_allOf'
    EProxyType:
      description: Type of the backup proxy.
      enum:
      - ViProxy
      type: string
    ProxyModel:
      discriminator:
        mapping:
          ViProxy: '#/components/schemas/ViProxyModel'
        propertyName: type
      example:
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
      oneOf:
      - $ref: '#/components/schemas/ViProxyModel'
      properties:
        id:
          description: ID of the backup proxy.
          format: uuid
          type: string
        name:
          description: Name of the backup proxy.
          type: string
        description:
          description: Description of the backup proxy.
          type: string
        type:
          $ref: '#/components/schemas/EProxyType'
      required:
      - description
      - id
      - name
      - type
      type: object
    ViProxyModel:
      allOf:
      - $ref: '#/components/schemas/ProxyModel'
      - $ref: '#/components/schemas/ViProxySpec_allOf'
    EBackupProxyTransportMode:
      description: Transport mode of the backup proxy.
      enum:
      - auto
      - directAccess
      - virtualAppliance
      - network
      type: string
    ProxyServerSettingsModel:
      description: Server settings for the backup proxy.
      properties:
        hostId:
          description: ID of the server.
          format: uuid
          type: string
        transportMode:
          $ref: '#/components/schemas/EBackupProxyTransportMode'
        failoverToNetwork:
          description: "(For the Direct storage access and Virtual appliance transport\
            \ modes) If *true*, Veeam Backup & Replication failovers to the network\
            \ transport mode in case the primary mode fails or is unavailable."
          type: boolean
        hostToProxyEncryption:
          description: "(For the Network mode) If *true*, VM data is transferred over\
            \ an encrypted TLS connection."
          type: boolean
        connectedDatastores:
          $ref: '#/components/schemas/ProxyDatastoreSettingsModel'
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
      required:
      - hostId
      type: object
    ProxyDatastoreSettingsModel:
      description: Datastores to which the backup proxy has a direct SAN or NFS connection.
      example:
        autoSelect: true
        datastores:
        - datastore:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          vmCount: 0
        - datastore:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          vmCount: 0
      properties:
        autoSelect:
          description: "If *true*, all datastores that the backup proxy can access\
            \ are detected automatically."
          type: boolean
        datastores:
          description: Array of datastores to which the backup proxy has a direct
            SAN or NFS connection.
          items:
            $ref: '#/components/schemas/ProxyDatastoreModel'
          type: array
      required:
      - autoSelect
      type: object
    ProxyDatastoreModel:
      example:
        datastore:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
        vmCount: 0
      properties:
        datastore:
          $ref: '#/components/schemas/VmwareObjectModel'
        vmCount:
          description: Number of VMs.
          type: integer
      type: object
    GlobalNetworkTrafficRulesModel:
      example:
        trafficRules:
        - throttlingWindowOptions:
            days:
            - hours: hours
              day: null
            - hours: hours
              day: null
          encryptionEnabled: true
          sourceIPEnd: sourceIPEnd
          throttlingUnit: null
          throttlingWindowEnabled: true
          throttlingEnabled: true
          targetIPStart: targetIPStart
          name: name
          throttlingValue: 6
          targetIPEnd: targetIPEnd
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceIPStart: sourceIPStart
        - throttlingWindowOptions:
            days:
            - hours: hours
              day: null
            - hours: hours
              day: null
          encryptionEnabled: true
          sourceIPEnd: sourceIPEnd
          throttlingUnit: null
          throttlingWindowEnabled: true
          throttlingEnabled: true
          targetIPStart: targetIPStart
          name: name
          throttlingValue: 6
          targetIPEnd: targetIPEnd
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceIPStart: sourceIPStart
        preferredNetworks:
          isEnabled: true
          networks:
          - ipAddress: ipAddress
            subnetMask: subnetMask
            cidrNotation: cidrNotation
          - ipAddress: ipAddress
            subnetMask: subnetMask
            cidrNotation: cidrNotation
        uploadStreamsCount: 0
        useMultipleStreamsPerJob: true
      properties:
        useMultipleStreamsPerJob:
          description: "If *true*, Veeam Backup & Replication uses multiple TCP/IP\
            \ transfer connection for every job session."
          type: boolean
        uploadStreamsCount:
          description: Number of TCP/IP connections per job.
          format: integer
          type: integer
        trafficRules:
          description: Array of traffic rules.
          items:
            $ref: '#/components/schemas/TrafficRuleModel'
          type: array
        preferredNetworks:
          $ref: '#/components/schemas/PreferredNetworksModel'
      required:
      - useMultipleStreamsPerJob
      type: object
    TrafficRuleModel:
      example:
        throttlingWindowOptions:
          days:
          - hours: hours
            day: null
          - hours: hours
            day: null
        encryptionEnabled: true
        sourceIPEnd: sourceIPEnd
        throttlingUnit: null
        throttlingWindowEnabled: true
        throttlingEnabled: true
        targetIPStart: targetIPStart
        name: name
        throttlingValue: 6
        targetIPEnd: targetIPEnd
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceIPStart: sourceIPStart
      properties:
        id:
          description: ID of the rule.
          format: uuid
          type: string
        name:
          description: Name of the rule.
          type: string
        sourceIPStart:
          description: Start IP address of the range for the backup infrastructure
            components on the source side.
          type: string
        sourceIPEnd:
          description: End IP address of the range for the backup infrastructure components
            on the source side.
          type: string
        targetIPStart:
          description: Start IP address of the range for the backup infrastructure
            components on the target side.
          type: string
        targetIPEnd:
          description: End IP address of the range for the backup infrastructure components
            on the target side.
          type: string
        encryptionEnabled:
          description: "If *true*, traffic encryption is enabled."
          type: boolean
        throttlingEnabled:
          description: "If *true*, traffic throttling is enabled."
          type: boolean
        throttlingUnit:
          $ref: '#/components/schemas/ESpeedUnit'
        throttlingValue:
          description: Maximum speed that must be used to transfer data from source
            to target.
          format: int32
          type: integer
        throttlingWindowEnabled:
          description: "If *true*, throttling window during which the speed must be\
            \ limited is enabled."
          type: boolean
        throttlingWindowOptions:
          $ref: '#/components/schemas/BackupWindowSettingModel'
      required:
      - name
      - sourceIPEnd
      - sourceIPStart
      - targetIPEnd
      - targetIPStart
      type: object
    ESpeedUnit:
      description: Traffic speed unit.
      enum:
      - KbytePerSec
      - MbitPerSpec
      - MbytePerSec
      type: string
    PreferredNetworksModel:
      description: Preferred networks used for backup and replication traffic.
      example:
        isEnabled: true
        networks:
        - ipAddress: ipAddress
          subnetMask: subnetMask
          cidrNotation: cidrNotation
        - ipAddress: ipAddress
          subnetMask: subnetMask
          cidrNotation: cidrNotation
      properties:
        isEnabled:
          description: "If *true*, prefered networks are enabled."
          type: boolean
        networks:
          description: Array of networks.
          items:
            $ref: '#/components/schemas/PreferredNetworkModel'
          type: array
      required:
      - isEnabled
      type: object
    PreferredNetworkModel:
      example:
        ipAddress: ipAddress
        subnetMask: subnetMask
        cidrNotation: cidrNotation
      properties:
        ipAddress:
          description: IP address.
          type: string
        subnetMask:
          description: Subnet mask.
          type: string
        cidrNotation:
          description: CIDR notation.
          type: string
      type: object
    JobStatesFilters:
      description: Filters jobs by the specified parameters.
      properties:
        skip:
          description: Skips the specified number of jobs.
          format: int32
          type: integer
        limit:
          description: Returns the specified number of jobs.
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EJobStatesFiltersOrderColumn'
        orderAsc:
          description: Sorts jobs in the ascending order by the `orderColumn` parameter.
          type: boolean
        idFilter:
          format: uuid
          type: string
        nameFilter:
          description: "Filters jobs by the `nameFilter` pattern. The pattern can\
            \ match any job state parameter. To substitute one or more characters,\
            \ use the asterisk (*) character at the beginning, at the end or both."
          type: string
        typeFilter:
          $ref: '#/components/schemas/EJobType'
        lastResultFilter:
          $ref: '#/components/schemas/ESessionResult'
        statusFilter:
          $ref: '#/components/schemas/EJobStatus'
        workloadFilter:
          $ref: '#/components/schemas/EJobWorkload'
        lastRunAfterFilter:
          format: date-time
          type: string
        lastRunBeforeFilter:
          format: date-time
          type: string
        isHighPriorityJobFilter:
          type: boolean
        repositoryIdFilter:
          format: uuid
          type: string
        objectsCountFilter:
          type: integer
      type: object
    EJobStatesFiltersOrderColumn:
      description: Orders job states by the specified column.
      enum:
      - Name
      - Type
      - Status
      - LastRun
      - LastResult
      - NextRun
      - Description
      - RepositoryId
      - ObjectsCount
      type: string
    EJobStatus:
      description: Current status of the job.
      enum:
      - running
      - inactive
      - disabled
      type: string
    EJobWorkload:
      description: Workload which the job must process.
      enum:
      - application
      - cloudVm
      - file
      - server
      - workstation
      - vm
      type: string
    JobStatesResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - lastRun: 2000-01-23T04:56:07.000+00:00
          lastResult: null
          description: description
          workload: null
          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
          repositoryName: repositoryName
          nextRun: 2000-01-23T04:56:07.000+00:00
          name: name
          repositoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: null
          objectsCount: 0
        - lastRun: 2000-01-23T04:56:07.000+00:00
          lastResult: null
          description: description
          workload: null
          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
          repositoryName: repositoryName
          nextRun: 2000-01-23T04:56:07.000+00:00
          name: name
          repositoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: null
          objectsCount: 0
      properties:
        data:
          description: Array of job states.
          items:
            $ref: '#/components/schemas/JobStateModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    JobStateModel:
      example:
        lastRun: 2000-01-23T04:56:07.000+00:00
        lastResult: null
        description: description
        workload: null
        sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
        repositoryName: repositoryName
        nextRun: 2000-01-23T04:56:07.000+00:00
        name: name
        repositoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: null
        objectsCount: 0
      properties:
        id:
          description: ID of the job.
          format: uuid
          type: string
        name:
          description: Name of the job.
          type: string
        type:
          $ref: '#/components/schemas/EJobType'
        description:
          description: Description of the job.
          type: string
        status:
          $ref: '#/components/schemas/EJobStatus'
        lastRun:
          description: Last run of the job.
          format: date-time
          type: string
        lastResult:
          $ref: '#/components/schemas/ESessionResult'
        nextRun:
          description: Next run of the job.
          format: date-time
          type: string
        workload:
          $ref: '#/components/schemas/EJobWorkload'
        repositoryId:
          description: ID of the backup repository.
          format: uuid
          type: string
        repositoryName:
          description: Name of the backup repository.
          type: string
        objectsCount:
          description: Number of objects processed by the job.
          type: integer
        sessionId:
          description: ID of the last job session.
          format: uuid
          type: string
      required:
      - description
      - id
      - lastResult
      - name
      - objectsCount
      - status
      - type
      - workload
      type: object
    JobsFilters:
      description: Filters jobs by the specified parameters.
      properties:
        skip:
          description: Skips the specified number of jobs.
          format: int32
          type: integer
        limit:
          description: Returns the specified number of jobs.
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EJobFiltersOrderColumn'
        orderAsc:
          description: Sorts jobs in the ascending order by the `orderColumn` parameter.
          type: boolean
        nameFilter:
          description: "Filters jobs by the `nameFilter` pattern. The pattern can\
            \ match any job parameter. To substitute one or more characters, use the\
            \ asterisk (*) character at the beginning, at the end or both."
          type: string
        typeFilter:
          $ref: '#/components/schemas/EJobType'
      type: object
    EJobFiltersOrderColumn:
      description: Orders jobs by the specified column.
      enum:
      - Name
      - Type
      - Description
      type: string
    JobsResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isDisabled: true
          type: null
        - name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isDisabled: true
          type: null
      properties:
        data:
          description: Array of jobs.
          items:
            $ref: '#/components/schemas/JobModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    JobModel:
      discriminator:
        mapping:
          Backup: '#/components/schemas/BackupJobModel'
        propertyName: type
      example:
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isDisabled: true
        type: null
      oneOf:
      - $ref: '#/components/schemas/BackupJobModel'
      properties:
        id:
          description: ID of the job.
          format: uuid
          type: string
        name:
          description: Name of the job.
          type: string
        description:
          description: Description of the job.
          type: string
        type:
          $ref: '#/components/schemas/EJobType'
        isDisabled:
          description: "If *true*, the job is disabled."
          type: boolean
      required:
      - description
      - id
      - isDisabled
      - name
      - type
      type: object
    EJobType:
      description: Type of the job.
      enum:
      - Backup
      type: string
    JobStartSpec:
      example:
        performActiveFull: false
        startChainedJobs: false
      properties:
        performActiveFull:
          default: false
          description: "If *true*, Veeam Backup & Replication will perform an active\
            \ full backup."
          type: boolean
        startChainedJobs:
          default: false
          description: "If *true*, Veeam Backup & Replication will start chained jobs\
            \ as well."
          type: boolean
      required:
      - performActiveFull
      type: object
    JobStopSpec:
      example:
        gracefullStop: true
      properties:
        gracefullStop:
          default: true
          description: "If *true*, Veeam Backup & Replication will produce a new restore\
            \ point for those VMs that have already been processed and for VMs that\
            \ are being processed at the moment."
          type: boolean
      required:
      - gracefullStop
      type: object
    JobSpec:
      discriminator:
        mapping:
          Backup: '#/components/schemas/BackupJobSpec'
        propertyName: type
      example:
        name: name
        description: description
        type: null
      oneOf:
      - $ref: '#/components/schemas/BackupJobSpec'
      properties:
        name:
          description: Name of the job.
          type: string
        description:
          description: Job description specified at the time of the job creation.
          type: string
        type:
          $ref: '#/components/schemas/EJobType'
      required:
      - description
      - name
      - type
      type: object
    BackupJobSpec:
      allOf:
      - $ref: '#/components/schemas/JobSpec'
      - $ref: '#/components/schemas/BackupJobSpec_allOf'
    BackupJobVirtualMachinesSpec:
      description: Arrays of objects that you want to back up or exclude from the
        backup.
      example:
        excludes:
          disks:
          - disksToProcess: null
            vmObject:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            removeFromVMConfiguration: true
            disks:
            - disks
            - disks
          - disksToProcess: null
            vmObject:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            removeFromVMConfiguration: true
            disks:
            - disks
            - disks
          templates:
            isEnabled: true
            excludeFromIncremental: true
          vms:
          - hostName: hostName
            name: name
            type: null
            objectId: objectId
          - hostName: hostName
            name: name
            type: null
            objectId: objectId
        includes:
        - hostName: hostName
          name: name
          type: null
          objectId: objectId
        - hostName: hostName
          name: name
          type: null
          objectId: objectId
      properties:
        includes:
          description: Array of objects that you want to back up.
          items:
            $ref: '#/components/schemas/VmwareObjectModel'
          type: array
        excludes:
          $ref: '#/components/schemas/BackupJobExclusionsSpec'
      required:
      - includes
      type: object
    BackupJobExclusionsSpec:
      description: Objects that you want to exclude from the backup.
      example:
        disks:
        - disksToProcess: null
          vmObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          removeFromVMConfiguration: true
          disks:
          - disks
          - disks
        - disksToProcess: null
          vmObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          removeFromVMConfiguration: true
          disks:
          - disks
          - disks
        templates:
          isEnabled: true
          excludeFromIncremental: true
        vms:
        - hostName: hostName
          name: name
          type: null
          objectId: objectId
        - hostName: hostName
          name: name
          type: null
          objectId: objectId
      properties:
        vms:
          description: Array of VMs.
          items:
            $ref: '#/components/schemas/VmwareObjectModel'
          type: array
        disks:
          description: Array of disks.
          items:
            $ref: '#/components/schemas/VmwareObjectDiskModel'
          type: array
        templates:
          $ref: '#/components/schemas/BackupJobExclusionsTemplates'
      type: object
    EVmwareInventoryType:
      description: Type of the VMware vSphere object.
      enum:
      - Unknown
      - VirtualMachine
      - vCenterServer
      - Datacenter
      - Cluster
      - Host
      - ResourcePool
      - Folder
      - Datastore
      - DatastoreCluster
      - StoragePolicy
      - Template
      - ComputeResource
      - VirtualApp
      - Tag
      - Category
      - Multitag
      - Network
      type: string
    BackupJobStorageModel:
      description: Backup storage settings.
      properties:
        backupRepositoryId:
          description: ID of the backup repository.
          format: uuid
          type: string
        backupProxies:
          $ref: '#/components/schemas/BackupProxiesSettingsModel'
        retentionPolicy:
          $ref: '#/components/schemas/BackupJobRetentionPolicySettingsModel'
        gfsPolicy:
          $ref: '#/components/schemas/GFSPolicySettingsModel'
        advancedSettings:
          $ref: '#/components/schemas/BackupJobAdvancedSettingsModel'
      required:
      - backupProxies
      - backupRepositoryId
      - retentionPolicy
      type: object
    BackupProxiesSettingsModel:
      description: Backup proxy settings.
      properties:
        autoSelection:
          default: true
          description: "If *true*, backup proxies are detected and assigned automatically."
          type: boolean
        proxyIds:
          description: Array of proxy IDs.
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
      required:
      - autoSelection
      type: object
    BackupJobRetentionPolicySettingsModel:
      description: Retention policy settings.
      example:
        quantity: 0
        type: null
      properties:
        type:
          $ref: '#/components/schemas/ERetentionPolicyType'
        quantity:
          description: Number of restore points or days to keep.
          type: integer
      required:
      - quantity
      - type
      type: object
    ERetentionPolicyType:
      description: Type of the retention policy.
      enum:
      - RestorePoints
      - Days
      type: string
    GFSPolicySettingsModel:
      description: GFS retention policy settings.
      example:
        isEnabled: true
        monthly:
          desiredTime: null
          isEnabled: true
          keepForNumberOfMonths: 1
        yearly:
          desiredTime: null
          isEnabled: true
          keepForNumberOfYears: 5
        weekly:
          keepForNumberOfWeeks: 6
          desiredTime: null
          isEnabled: true
      properties:
        isEnabled:
          description: "If *true*, the long-term (GFS) retention policy is enabled."
          type: boolean
        weekly:
          $ref: '#/components/schemas/GFSPolicySettingsWeeklyModel'
        monthly:
          $ref: '#/components/schemas/GFSPolicySettingsMonthlyModel'
        yearly:
          $ref: '#/components/schemas/GFSPolicySettingsYearlyModel'
      required:
      - isEnabled
      type: object
    GFSPolicySettingsWeeklyModel:
      description: Weekly GFS retention policy.
      example:
        keepForNumberOfWeeks: 6
        desiredTime: null
        isEnabled: true
      properties:
        isEnabled:
          description: "If *true*, the weekly GFS retention policy is enabled."
          type: boolean
        keepForNumberOfWeeks:
          description: Number of weeks to keep full backups for archival purposes.
            Possible values are from 1 through 9999.
          type: integer
        desiredTime:
          $ref: '#/components/schemas/EDayOfWeek'
      required:
      - isEnabled
      type: object
    GFSPolicySettingsMonthlyModel:
      description: Monthly GFS retention policy.
      example:
        desiredTime: null
        isEnabled: true
        keepForNumberOfMonths: 1
      properties:
        isEnabled:
          description: "If *true*, the monthly GFS retention policy is enabled."
          type: boolean
        keepForNumberOfMonths:
          description: Number of months to keep full backups for archival purposes.
            Possible values are from 1 through 999.
          type: integer
        desiredTime:
          $ref: '#/components/schemas/ESennightOfMonth'
      required:
      - isEnabled
      type: object
    GFSPolicySettingsYearlyModel:
      description: Yearly GFS retention policy.
      example:
        desiredTime: null
        isEnabled: true
        keepForNumberOfYears: 5
      properties:
        isEnabled:
          description: "If *true*, the yearly GFS retention policy is enabled."
          type: boolean
        keepForNumberOfYears:
          description: Number of years to keep full backups for archival purposes.
            Possible values are from 1 through 999.
          type: integer
        desiredTime:
          $ref: '#/components/schemas/EMonth'
      required:
      - isEnabled
      type: object
    BackupJobAdvancedSettingsModel:
      description: Advanced settings of the backup job.
      example:
        storageData:
          encryption:
            isEnabled: true
            encryptionPasswordTag: encryptionPasswordTag
            encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          excludeDeletedFileBlocks: true
          compressionLevel: null
          storageOptimization: null
          enableInlineDataDedup: true
          excludeSwapFileBlocks: true
        fullBackupMaintenance:
          defragmentAndCompact:
            isEnabled: true
            monthly:
              dayOfWeek: null
              months:
              - null
              - null
              isEnabled: true
              dayNumberInMonth: null
              dayOfMonths: 5
            weekly:
              isEnabled: false
              days:
              - null
              - null
          RemoveData:
            isEnabled: true
            afterDays: 2
        activeFulls:
          isEnabled: true
          monthly:
            dayOfWeek: null
            months:
            - null
            - null
            isEnabled: true
            dayNumberInMonth: null
            dayOfMonths: 5
          weekly:
            isEnabled: false
            days:
            - null
            - null
        synthenticFulls:
          isEnabled: true
          monthly:
            dayOfWeek: null
            months:
            - null
            - null
            isEnabled: true
            dayNumberInMonth: null
            dayOfMonths: 5
          weekly:
            isEnabled: false
            days:
            - null
            - null
        backupHealth:
          isEnabled: true
          monthly:
            dayOfWeek: null
            months:
            - null
            - null
            isEnabled: true
            dayNumberInMonth: null
            dayOfMonths: 5
          weekly:
            isEnabled: false
            days:
            - null
            - null
        storageIntegration:
          limitProcessedVmCount: 7
          isEnabled: true
          failoverToStandardBackup: true
          limitProcessedVm: true
        scripts:
          postCommand:
            isEnabled: true
            command: command
          dayOfWeek:
          - null
          - null
          preCommand:
            isEnabled: true
            command: command
          periodicityType: null
          runScriptEvery: 9
        backupModeType: null
        notifications:
          emailNotifications:
            customNotificationSettings:
              notifyOnWarning: true
              subject: subject
              notifyOnError: true
              SuppressNotificationUntilLastRetry: true
              notifyOnSuccess: true
            recipients:
            - recipients
            - recipients
            isEnabled: true
            notificationType: null
          sendSNMPNotifications: true
          vmAttribute:
            notes: notes
            appendToExisitingValue: true
            isEnabled: true
        vSphere:
          enableVMWareToolsQuiescence: true
          changedBlockTracking:
            enableCBTautomatically: true
            isEnabled: true
            resetCBTonActiveFull: true
      properties:
        backupModeType:
          $ref: '#/components/schemas/EBackupModeType'
        synthenticFulls:
          $ref: '#/components/schemas/SyntheticFullSettingsModel'
        activeFulls:
          $ref: '#/components/schemas/ActiveFullSettingsModel'
        backupHealth:
          $ref: '#/components/schemas/BackupHealthCheckSettingsModels'
        fullBackupMaintenance:
          $ref: '#/components/schemas/FullBackupMaintenanceModel'
        storageData:
          $ref: '#/components/schemas/BackupStorageSettingModel'
        notifications:
          $ref: '#/components/schemas/NotificationSettingsModel'
        vSphere:
          $ref: '#/components/schemas/BackupJobAdvancedSettingsVSphereModel'
        storageIntegration:
          $ref: '#/components/schemas/PrimaryStorageIntegrationSettingsModel'
        scripts:
          $ref: '#/components/schemas/JobScriptsSettingsModel'
      required:
      - backupModeType
      type: object
    JobScriptsSettingsModel:
      description: Script settings.
      example:
        postCommand:
          isEnabled: true
          command: command
        dayOfWeek:
        - null
        - null
        preCommand:
          isEnabled: true
          command: command
        periodicityType: null
        runScriptEvery: 9
      properties:
        preCommand:
          $ref: '#/components/schemas/ScriptCommand'
        postCommand:
          $ref: '#/components/schemas/ScriptCommand'
        periodicityType:
          $ref: '#/components/schemas/EScriptPeriodicityType'
        runScriptEvery:
          description: Number of the backup job session after which the scripts must
            be executed.
          type: integer
        dayOfWeek:
          description: Days of the week when the scripts must be executed.
          items:
            $ref: '#/components/schemas/EDayOfWeek'
          type: array
          uniqueItems: true
      type: object
    ScriptCommand:
      description: Script settings.
      example:
        isEnabled: true
        command: command
      properties:
        isEnabled:
          description: "If *true*, script execution is enabled."
          type: boolean
        command:
          description: Path to the script.
          type: string
      required:
      - isEnabled
      type: object
    EScriptPeriodicityType:
      description: Type of script periodicity.
      enum:
      - Days
      - BackupSessions
      type: string
    PrimaryStorageIntegrationSettingsModel:
      description: Primary storage integration settings for the backup job.
      example:
        limitProcessedVmCount: 7
        isEnabled: true
        failoverToStandardBackup: true
        limitProcessedVm: true
      properties:
        isEnabled:
          description: "If *true*, the primary storage integration is enabled. In\
            \ this case, storage snapshots (instead of VM snapshots) are used for\
            \ VM data processing."
          type: boolean
        limitProcessedVm:
          description: "If *true*, the number of processed VMs per storage snapshot\
            \ is limited."
          type: boolean
        limitProcessedVmCount:
          description: Number of processed VMs per storage snapshot.
          type: integer
        failoverToStandardBackup:
          description: "If *true*, failover to the regular VM processing mode is enabled.\
            \ In this case, if backup from storage snapshot fails, VM snapshots are\
            \ used."
          type: boolean
      required:
      - isEnabled
      type: object
    BackupJobAdvancedSettingsVSphereModel:
      description: VMware vSphere settings for the backup job.
      example:
        enableVMWareToolsQuiescence: true
        changedBlockTracking:
          enableCBTautomatically: true
          isEnabled: true
          resetCBTonActiveFull: true
      properties:
        enableVMWareToolsQuiescence:
          description: "If *true*, VMware Tools quiescence is enabled for freezing\
            \ the VM file system and application data."
          type: boolean
        changedBlockTracking:
          $ref: '#/components/schemas/VSphereChangedBlockTrackingSettingsModel'
      type: object
    VSphereChangedBlockTrackingSettingsModel:
      description: CBT settings for the backup job.
      example:
        enableCBTautomatically: true
        isEnabled: true
        resetCBTonActiveFull: true
      properties:
        isEnabled:
          description: "If *true*, CBT data is used."
          type: boolean
        enableCBTautomatically:
          description: "If *true*, CBT is enabled for all processed VMs even if CBT\
            \ is disabled in VM configuration. CBT is used for VMs with virtual hardware\
            \ version 7 or later. These VMs must not have existing snapshots."
          type: boolean
        resetCBTonActiveFull:
          description: "If *true*, CBT is reset before creating active full backups."
          type: boolean
      required:
      - isEnabled
      type: object
    NotificationSettingsModel:
      description: Notification settings for the backup job.
      example:
        emailNotifications:
          customNotificationSettings:
            notifyOnWarning: true
            subject: subject
            notifyOnError: true
            SuppressNotificationUntilLastRetry: true
            notifyOnSuccess: true
          recipients:
          - recipients
          - recipients
          isEnabled: true
          notificationType: null
        sendSNMPNotifications: true
        vmAttribute:
          notes: notes
          appendToExisitingValue: true
          isEnabled: true
      properties:
        sendSNMPNotifications:
          description: "If *true*, SNMP notifications are enabled for this job."
          type: boolean
        emailNotifications:
          $ref: '#/components/schemas/EmailNotificationSettingsModel'
        vmAttribute:
          $ref: '#/components/schemas/NotificationVmAttributeSettingsModel'
      type: object
    EmailNotificationSettingsModel:
      description: Email notification settings for the backup job.
      example:
        customNotificationSettings:
          notifyOnWarning: true
          subject: subject
          notifyOnError: true
          SuppressNotificationUntilLastRetry: true
          notifyOnSuccess: true
        recipients:
        - recipients
        - recipients
        isEnabled: true
        notificationType: null
      properties:
        isEnabled:
          description: "If *true*, email notifications are enabled for this job."
          type: boolean
        recipients:
          description: Array of recipient’s email addresses.
          items:
            type: string
          type: array
          uniqueItems: true
        notificationType:
          $ref: '#/components/schemas/EEmailNotificationType'
        customNotificationSettings:
          $ref: '#/components/schemas/EmailCustomNotificationType'
      required:
      - isEnabled
      type: object
    EEmailNotificationType:
      description: "Type of email notification settings (global notification settings\
        \ specified for the backup server, or custom notification settings specified\
        \ for this job)."
      enum:
      - UseGlobalNotificationSettings
      - UseCustomNotificationSettings
      type: string
    EmailCustomNotificationType:
      description: Custom notification settings.
      example:
        notifyOnWarning: true
        subject: subject
        notifyOnError: true
        SuppressNotificationUntilLastRetry: true
        notifyOnSuccess: true
      properties:
        subject:
          description: Notification subject. Use the following variables in the subject:<ul>
            <li>*%Time%* — completion time</li> <li>*%JobName%* — job name</li> <li>*%JobResult%*
            — job result</li> <li>*%ObjectCount%* — number of VMs in the job</li>
            <li>*%Issues%* — number of VMs in the job that have finished with the
            Warning or Failed status</li></ul>
          type: string
        notifyOnSuccess:
          description: "If *true*, email notifications are sent when the job completes\
            \ successfully."
          type: boolean
        notifyOnWarning:
          description: "If *true*, email notifications are sent when the job completes\
            \ with a warning."
          type: boolean
        notifyOnError:
          description: "If *true*, email notifications are sent when the job fails."
          type: boolean
        SuppressNotificationUntilLastRetry:
          description: "If *true*, email notifications are sent about the final job\
            \ status only (not per every job retry)."
          type: boolean
      type: object
    NotificationVmAttributeSettingsModel:
      description: VM attribute settings.
      example:
        notes: notes
        appendToExisitingValue: true
        isEnabled: true
      properties:
        isEnabled:
          description: "If *true*, information about successfully performed backup\
            \ is written to a VM attribute."
          type: boolean
        notes:
          description: Name of the VM attribute.
          type: string
        appendToExisitingValue:
          description: "If *true*, information about successfully performed backup\
            \ is appended to the existing value of the attribute added by the user."
          type: boolean
      required:
      - isEnabled
      type: object
    EBackupModeType:
      description: Type of the backup method used to create a restore point.
      enum:
      - Full
      - Incremental
      - ReverseIncremental
      - Transofrm
      - TransformForeverIncremental
      type: string
    SyntheticFullSettingsModel:
      description: Synthetic full backup settings.
      example:
        isEnabled: true
        monthly:
          dayOfWeek: null
          months:
          - null
          - null
          isEnabled: true
          dayNumberInMonth: null
          dayOfMonths: 5
        weekly:
          isEnabled: false
          days:
          - null
          - null
      properties:
        isEnabled:
          description: "If *true*, active full backups are enabled."
          type: boolean
        weekly:
          $ref: '#/components/schemas/AdvancedStorageScheduleWeeklyModel'
        monthly:
          $ref: '#/components/schemas/AdvancedStorageScheduleMonthlyModel'
      required:
      - isEnabled
      type: object
    ActiveFullSettingsModel:
      description: Active full backup settings.
      example:
        isEnabled: true
        monthly:
          dayOfWeek: null
          months:
          - null
          - null
          isEnabled: true
          dayNumberInMonth: null
          dayOfMonths: 5
        weekly:
          isEnabled: false
          days:
          - null
          - null
      properties:
        isEnabled:
          description: "If *true*, active full backups are enabled."
          type: boolean
        weekly:
          $ref: '#/components/schemas/AdvancedStorageScheduleWeeklyModel'
        monthly:
          $ref: '#/components/schemas/AdvancedStorageScheduleMonthlyModel'
      required:
      - isEnabled
      type: object
    AdvancedStorageScheduleWeeklyModel:
      description: Weekly schedule settings.
      example:
        isEnabled: false
        days:
        - null
        - null
      properties:
        isEnabled:
          default: false
          description: "If *true*, the weekly schedule is enabled."
          type: boolean
        days:
          description: Days of the week when the operation is performed.
          items:
            $ref: '#/components/schemas/EDayOfWeek'
          type: array
          uniqueItems: true
      required:
      - isEnabled
      type: object
    AdvancedStorageScheduleMonthlyModel:
      description: Monthly schedule settings.
      example:
        dayOfWeek: null
        months:
        - null
        - null
        isEnabled: true
        dayNumberInMonth: null
        dayOfMonths: 5
      properties:
        isEnabled:
          description: "If *true*, the monthly schedule is enabled."
          type: boolean
        dayOfWeek:
          $ref: '#/components/schemas/EDayOfWeek'
        dayNumberInMonth:
          $ref: '#/components/schemas/EDayNumberInMonth'
        dayOfMonths:
          description: Day of the month when the operation is performed.
          type: integer
        months:
          description: Months when the operation is performed.
          items:
            $ref: '#/components/schemas/EMonth'
          type: array
          uniqueItems: true
      required:
      - isEnabled
      type: object
    BackupHealthCheckSettingsModels:
      description: Health check settings for the for the latest restore point in the
        backup chain.
      example:
        isEnabled: true
        monthly:
          dayOfWeek: null
          months:
          - null
          - null
          isEnabled: true
          dayNumberInMonth: null
          dayOfMonths: 5
        weekly:
          isEnabled: false
          days:
          - null
          - null
      properties:
        isEnabled:
          description: "If *true*, the health check is enabled."
          type: boolean
        weekly:
          $ref: '#/components/schemas/AdvancedStorageScheduleWeeklyModel'
        monthly:
          $ref: '#/components/schemas/AdvancedStorageScheduleMonthlyModel'
      required:
      - isEnabled
      type: object
    FullBackupMaintenanceModel:
      description: Maintenance settings for full backup files.
      example:
        defragmentAndCompact:
          isEnabled: true
          monthly:
            dayOfWeek: null
            months:
            - null
            - null
            isEnabled: true
            dayNumberInMonth: null
            dayOfMonths: 5
          weekly:
            isEnabled: false
            days:
            - null
            - null
        RemoveData:
          isEnabled: true
          afterDays: 2
      properties:
        RemoveData:
          $ref: '#/components/schemas/FullBackupMaintenanceRemoveDataModel'
        defragmentAndCompact:
          $ref: '#/components/schemas/FullBackupMaintenanceDefragmentAndCompactModel'
      type: object
    FullBackupMaintenanceRemoveDataModel:
      description: Backup data setting for deleted VMs.
      example:
        isEnabled: true
        afterDays: 2
      properties:
        isEnabled:
          description: "If *true*, Veeam Backup & Replication keeps the backup data\
            \ of deleted VMs for the `afterDays` number of days."
          type: boolean
        afterDays:
          description: Number of days.
          type: integer
      required:
      - isEnabled
      type: object
    FullBackupMaintenanceDefragmentAndCompactModel:
      description: Compact operation settings.
      example:
        isEnabled: true
        monthly:
          dayOfWeek: null
          months:
          - null
          - null
          isEnabled: true
          dayNumberInMonth: null
          dayOfMonths: 5
        weekly:
          isEnabled: false
          days:
          - null
          - null
      properties:
        isEnabled:
          description: "If *true*, Veeam Backup & Replication compacts full backup\
            \ files."
          type: boolean
        weekly:
          $ref: '#/components/schemas/AdvancedStorageScheduleWeeklyModel'
        monthly:
          $ref: '#/components/schemas/AdvancedStorageScheduleMonthlyModel'
      required:
      - isEnabled
      type: object
    BackupStorageSettingModel:
      description: Storage settings.
      example:
        encryption:
          isEnabled: true
          encryptionPasswordTag: encryptionPasswordTag
          encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        excludeDeletedFileBlocks: true
        compressionLevel: null
        storageOptimization: null
        enableInlineDataDedup: true
        excludeSwapFileBlocks: true
      properties:
        enableInlineDataDedup:
          description: "If *true*, Veeam Backup & Replication deduplicates VM data\
            \ before storing it in the backup repository."
          type: boolean
        excludeSwapFileBlocks:
          description: "If *true*, Veeam Backup & Replication excludes swap file blocks\
            \ from processing."
          type: boolean
        excludeDeletedFileBlocks:
          description: "If *true*, Veeam Backup & Replication does not copy deleted\
            \ file blocks."
          type: boolean
        compressionLevel:
          $ref: '#/components/schemas/ECompressionLevel'
        storageOptimization:
          $ref: '#/components/schemas/EStorageOptimization'
        encryption:
          $ref: '#/components/schemas/BackupStorageSettingsEncryptionModel'
      type: object
    EStorageOptimization:
      description: Storage optimization that depends on the target type.
      enum:
      - LocalTargetLarge
      - LocalTarget
      - LANTarget
      - WANTarget
      - LocalTargetLarge8192
      - LocalTargetLarge4096
      type: string
    ECompressionLevel:
      description: Compression level.
      enum:
      - None
      - DedupFriendly
      - Optimal
      - High
      - Extreme
      type: string
    BackupStorageSettingsEncryptionModel:
      description: Encryption of backup files.
      example:
        isEnabled: true
        encryptionPasswordTag: encryptionPasswordTag
        encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        isEnabled:
          description: "If *true*, the content of backup files is encrypted."
          type: boolean
        encryptionPasswordIdOrNull:
          description: ID of the password used for encryption. The value is *null*
            for exported objects.
          format: uuid
          type: string
        encryptionPasswordTag:
          description: Tag used to identify the password.
          type: string
      required:
      - isEnabled
      type: object
    BackupJobGuestProcessingModel:
      description: Guest processing settings.
      properties:
        appAwareProcessing:
          $ref: '#/components/schemas/BackupApplicationAwareProcessingModel'
        guestFSIndexing:
          $ref: '#/components/schemas/GuestFileSystemIndexingModel'
        guestInteractionProxies:
          $ref: '#/components/schemas/GuestInteractionProxiesSettingsModel'
        guestCredentials:
          $ref: '#/components/schemas/GuestOsCredentialsModel'
      required:
      - appAwareProcessing
      - guestFSIndexing
      type: object
    BackupApplicationAwareProcessingModel:
      description: Application-aware processing settings.
      properties:
        isEnabled:
          description: "If *true*, application-aware processing is enabled."
          type: boolean
        appSettings:
          description: Array of VMware vSphere objects and their application settings.
          items:
            $ref: '#/components/schemas/BackupApplicationSettingsModel'
          type: array
      required:
      - isEnabled
      type: object
    BackupApplicationSettingsModel:
      properties:
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
        vss:
          $ref: '#/components/schemas/EApplicationSettingsVSS'
        usePersistentGuestAgent:
          description: "If *true*, persistent guest agent is used."
          type: boolean
        transactionLogs:
          $ref: '#/components/schemas/ETransactionLogsSettings'
        sql:
          $ref: '#/components/schemas/BackupSQLSettingsModel'
        oracle:
          $ref: '#/components/schemas/BackupOracleSettingsModel'
        exclusions:
          $ref: '#/components/schemas/BackupFSExclusionsModel'
        scripts:
          $ref: '#/components/schemas/BackupScriptSettingsModel'
      required:
      - vmObject
      - vss
      type: object
    EApplicationSettingsVSS:
      description: Behavior scenario for application-aware processing.
      enum:
      - requireSuccess
      - ignoreFailures
      - disabled
      type: string
    ETransactionLogsSettings:
      description: "Transaction logs settings that define whether copy-only backups\
        \ must be created, or transaction logs for Microsoft Exchange, Microsoft SQL\
        \ and Oracle VMs must be processed.<br> If transaction log processing is selected,\
        \ specify the following parameters:<ul> <li>[For Microsoft SQL Server VMs]\
        \ Microsoft SQL Server transaction log settings</li> <li>[For Oracle VMs]\
        \ Oracle archived log settings</li></ul>"
      enum:
      - process
      - copyOnly
      type: string
    BackupSQLSettingsModel:
      description: Microsoft SQL Server transaction log settings.
      properties:
        logsProcessing:
          $ref: '#/components/schemas/ESQLLogsProcessing'
        backupMinsCount:
          description: "Frequency of transaction log backup, in minutes."
          type: integer
        retainLogBackups:
          $ref: '#/components/schemas/ERetainLogBackupsType'
        keepDaysCount:
          description: Number of days to keep transaction logs in the backup repository.
          type: integer
        logShippingServers:
          $ref: '#/components/schemas/BackupLogShippingServersModel'
      required:
      - logsProcessing
      type: object
    ESQLLogsProcessing:
      description: Type of transaction logs processing.
      enum:
      - truncate
      - preserve
      - backup
      - neverTruncate
      type: string
    ERetainLogBackupsType:
      description: Retention policy for the logs stored in the backup repository.
      enum:
      - untilBackupDeleted
      - KeepOnlyDays
      type: string
    BackupLogShippingServersModel:
      description: Log shipping server used to transport logs.
      properties:
        autoSelection:
          description: "If *true*, Veeam Backup & Replication chooses an optimal log\
            \ shipping server automatically."
          type: boolean
        shippingServerIds:
          description: Array of servers that are explicitly selected for log shipping.
          items:
            format: uuid
            type: string
          type: array
      required:
      - autoSelection
      type: object
    BackupOracleSettingsModel:
      description: Oracle archived log settings.
      properties:
        useGuestCredentials:
          description: "If *true*, Veeam Backup & Replication uses credentials specified\
            \ in the guest processing settings."
          type: boolean
        credentialsId:
          description: ID of the credentials record that is used if `useGuestCredentials`
            is *false*.
          format: uuid
          type: string
        archiveLogs:
          $ref: '#/components/schemas/EBackupOracleLogsSettings'
        deleteHoursCount:
          description: Time period in hours to keep archived logs. This parameter
            should be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredHours*.
          type: integer
        deleteGBsCount:
          description: Maximum size for archived logs in GB. This parameter should
            be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredGBs*.
          type: integer
        backupLogs:
          description: "If *true*, archived logs are backed up."
          type: boolean
        backupMinsCount:
          description: "Frequency of archived log backup, in minutes."
          type: integer
        retainLogBackups:
          $ref: '#/components/schemas/ERetainLogBackupsType'
        keepDaysCount:
          description: Number of days to keep archived logs.
          type: integer
        logShippingServers:
          $ref: '#/components/schemas/BackupLogShippingServersModel'
      required:
      - archiveLogs
      - useGuestCredentials
      type: object
    EBackupOracleLogsSettings:
      description: Type of archived logs processing.
      enum:
      - preserve
      - deleteExpiredHours
      - deleteExpiredGBs
      type: string
    BackupFSExclusionsModel:
      description: VM guest OS file exclusion.
      example:
        itemsList:
        - itemsList
        - itemsList
        exclusionPolicy: null
      properties:
        exclusionPolicy:
          $ref: '#/components/schemas/EBackupExclusionPolicy'
        itemsList:
          description: "Array of files and folders. Full paths to files and folders,\
            \ environmental variables and file masks with the asterisk (*) and question\
            \ mark (?) characters can be used."
          items:
            type: string
          type: array
      required:
      - exclusionPolicy
      type: object
    EBackupExclusionPolicy:
      description: Exclusion policy.
      enum:
      - disabled
      - excludeOnly
      - includeOnly
      type: string
    BackupScriptSettingsModel:
      description: Pre-freeze and post-thaw scripts.
      example:
        scriptProcessingMode: null
        windowsScripts:
          preFreezeScript: preFreezeScript
          postThawScript: postThawScript
        linuxScripts:
          preFreezeScript: preFreezeScript
          postThawScript: postThawScript
      properties:
        scriptProcessingMode:
          $ref: '#/components/schemas/EBackupScriptProcessingMode'
        windowsScripts:
          $ref: '#/components/schemas/BackupWindowsScriptModel'
        linuxScripts:
          $ref: '#/components/schemas/BackupLinuxScriptModel'
      required:
      - scriptProcessingMode
      type: object
    EBackupScriptProcessingMode:
      description: Scenario for scripts execution.
      enum:
      - disableExec
      - ignoreExecFailures
      - requireSuccess
      type: string
    BackupWindowsScriptModel:
      description: Paths to pre-freeze and post-thaw scripts for Microsoft Windows
        VMs.
      example:
        preFreezeScript: preFreezeScript
        postThawScript: postThawScript
      properties:
        preFreezeScript:
          description: Path to a pre-freeze script.
          type: string
        postThawScript:
          description: Path to a post-thaw script.
          type: string
      type: object
    BackupLinuxScriptModel:
      description: Paths to pre-freeze and post-thaw scripts for Linux VMs.
      example:
        preFreezeScript: preFreezeScript
        postThawScript: postThawScript
      properties:
        preFreezeScript:
          description: Path to a pre-freeze script.
          type: string
        postThawScript:
          description: Path to a post-thaw script.
          type: string
      type: object
    GuestFileSystemIndexingModel:
      description: VM guest OS file indexing.
      example:
        indexingSettings:
        - vmObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          WindowsIndexing:
            guestFSIndexingMode: null
            indexingList:
            - indexingList
            - indexingList
          LinuxIndexing:
            guestFSIndexingMode: null
            indexingList:
            - indexingList
            - indexingList
        - vmObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          WindowsIndexing:
            guestFSIndexingMode: null
            indexingList:
            - indexingList
            - indexingList
          LinuxIndexing:
            guestFSIndexingMode: null
            indexingList:
            - indexingList
            - indexingList
        isEnabled: true
      properties:
        isEnabled:
          description: "If *true*, file indexing is enabled."
          type: boolean
        indexingSettings:
          description: Array of VMs with guest OS file indexing options.
          items:
            $ref: '#/components/schemas/BackupIndexingSettingsModel'
          type: array
      required:
      - isEnabled
      type: object
    BackupIndexingSettingsModel:
      example:
        vmObject:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
        WindowsIndexing:
          guestFSIndexingMode: null
          indexingList:
          - indexingList
          - indexingList
        LinuxIndexing:
          guestFSIndexingMode: null
          indexingList:
          - indexingList
          - indexingList
      properties:
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
        WindowsIndexing:
          $ref: '#/components/schemas/BackupObjectIndexingModel'
        LinuxIndexing:
          $ref: '#/components/schemas/BackupObjectIndexingModel'
      required:
      - vmObject
      type: object
    BackupObjectIndexingModel:
      description: Guest OS indexing options for the VM.
      example:
        guestFSIndexingMode: null
        indexingList:
        - indexingList
        - indexingList
      properties:
        guestFSIndexingMode:
          $ref: '#/components/schemas/EGuestFSIndexingMode'
        indexingList:
          description: Array of folders. Environmental variables and full paths to
            folders can be used.
          items:
            type: string
          type: array
      required:
      - guestFSIndexingMode
      type: object
    EGuestFSIndexingMode:
      description: Indexing mode.
      enum:
      - disable
      - indexAll
      - indexAllExcept
      - indexOnly
      type: string
    EGuestOSType:
      description: Type of the guest OS.
      enum:
      - Windows
      - Linux
      type: string
    GuestInteractionProxiesSettingsModel:
      description: Guest interaction proxy used to deploy the runtime process on the
        VM guest OS.
      properties:
        autoSelection:
          default: true
          description: "If *true*, Veeam Backup & Replication automatically selects\
            \ the guest interaction proxy."
          type: boolean
        proxyIds:
          description: Array of proxies specified explicitly. The array must contain
            Microsoft Windows servers added to the backup infrastructure only.
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
      required:
      - autoSelection
      type: object
    GuestOsCredentialsModel:
      description: VM custom credentials.
      properties:
        credsId:
          description: Credentials ID for Microsoft Windows VMs.
          format: uuid
          type: string
        credsType:
          $ref: '#/components/schemas/ECredentialsType'
        credentialsPerMachine:
          description: Individual credentials for VMs.
          items:
            $ref: '#/components/schemas/GuestOsCredentialsPerMachineModel'
          type: array
          uniqueItems: true
      required:
      - credsId
      - credsType
      type: object
    GuestOsCredentialsPerMachineModel:
      properties:
        windowsCredsId:
          description: Credentials ID for a Microsoft Windows VM.
          format: uuid
          type: string
        linuxCredsId:
          description: Credentials ID for a Linux VM.
          format: uuid
          type: string
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
      required:
      - vmObject
      type: object
    ECredentialsType:
      description: Credentials type.
      enum:
      - Standard
      - Linux
      type: string
    BackupScheduleModel:
      description: Job scheduling options.
      example:
        runAutomatically: false
        daily:
          localTime: localTime
          isEnabled: true
          days:
          - null
          - null
          dailyKind: null
        monthly:
          localTime: localTime
          dayOfWeek: null
          months:
          - null
          - null
          dayOfMonth: 6
          isEnabled: false
          dayNumberInMonth: null
        periodically:
          startTimeWithinAnHour: 6
          periodicallyKind: null
          isEnabled: false
          backupWindow:
            days:
            - hours: hours
              day: null
            - hours: hours
              day: null
          frequency: 1
        continuously:
          isEnabled: false
          backupWindow:
            days:
            - hours: hours
              day: null
            - hours: hours
              day: null
        backupWindow:
          isEnabled: false
          backupWindow:
            days:
            - hours: hours
              day: null
            - hours: hours
              day: null
        retry:
          retryCount: 7
          isEnabled: false
          awaitMinutes: 1
        afterThisJob:
          jobName: jobName
          isEnabled: true
      properties:
        runAutomatically:
          default: false
          description: "If *true*, job scheduling is enabled."
          type: boolean
        daily:
          $ref: '#/components/schemas/ScheduleDailyModel'
        monthly:
          $ref: '#/components/schemas/ScheduleMonthlyModel'
        periodically:
          $ref: '#/components/schemas/SchedulePeriodicallyModel'
        continuously:
          $ref: '#/components/schemas/ScheduleBackupWindowModel'
        afterThisJob:
          $ref: '#/components/schemas/ScheduleAfterThisJobModel'
        retry:
          $ref: '#/components/schemas/ScheduleRetryModel'
        backupWindow:
          $ref: '#/components/schemas/ScheduleBackupWindowModel'
      required:
      - runAutomatically
      type: object
    ScheduleAfterThisJobModel:
      description: Job chaining options.
      example:
        jobName: jobName
        isEnabled: true
      properties:
        isEnabled:
          description: "If *true*, job chaining is enabled."
          type: boolean
        jobName:
          description: Name of the preceding job.
          type: string
      required:
      - isEnabled
      type: object
    ScheduleDailyModel:
      description: Daily scheduling options.
      example:
        localTime: localTime
        isEnabled: true
        days:
        - null
        - null
        dailyKind: null
      properties:
        isEnabled:
          default: true
          description: "If *true*, daily schedule is enabled."
          type: boolean
        localTime:
          description: Local time when the job must start.
          format: time
          type: string
        dailyKind:
          $ref: '#/components/schemas/EDailyKinds'
        days:
          description: Days of the week when the job must start.
          items:
            $ref: '#/components/schemas/EDayOfWeek'
          type: array
          uniqueItems: true
      required:
      - isEnabled
      type: object
    EDailyKinds:
      description: Kind of daily scheduling scheme.
      enum:
      - Everyday
      - WeekDays
      - SelectedDays
      type: string
    EDayOfWeek:
      description: Day of the week.
      enum:
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
      type: string
    ScheduleMonthlyModel:
      description: Monthly scheduling options.
      example:
        localTime: localTime
        dayOfWeek: null
        months:
        - null
        - null
        dayOfMonth: 6
        isEnabled: false
        dayNumberInMonth: null
      properties:
        isEnabled:
          default: false
          description: "If *true*, monthly schedule is enabled."
          type: boolean
        localTime:
          description: Local time when the job must start.
          format: time
          type: string
        dayOfWeek:
          $ref: '#/components/schemas/EDayOfWeek'
        dayNumberInMonth:
          $ref: '#/components/schemas/EDayNumberInMonth'
        dayOfMonth:
          description: Day of the month when the job must start.
          type: integer
        months:
          description: Months when the job must start.
          items:
            $ref: '#/components/schemas/EMonth'
          type: array
          uniqueItems: true
      required:
      - isEnabled
      type: object
    EDayNumberInMonth:
      description: Week day number in the month.
      enum:
      - First
      - Second
      - Third
      - Fourth
      - Last
      - OnDay
      type: string
    EMonth:
      description: Month.
      enum:
      - January
      - February
      - March
      - April
      - May
      - June
      - July
      - August
      - September
      - October
      - November
      - December
      type: string
    SchedulePeriodicallyModel:
      description: Periodic scheduling options.
      example:
        startTimeWithinAnHour: 6
        periodicallyKind: null
        isEnabled: false
        backupWindow:
          days:
          - hours: hours
            day: null
          - hours: hours
            day: null
        frequency: 1
      properties:
        isEnabled:
          default: false
          description: "If *true*, periodic schedule is enabled."
          type: boolean
        periodicallyKind:
          $ref: '#/components/schemas/EPeriodicallyKinds'
        frequency:
          description: Number of time units that defines the time interval.
          type: integer
        backupWindow:
          $ref: '#/components/schemas/BackupWindowSettingModel'
        startTimeWithinAnHour:
          description: "Start time within an hour, in minutes."
          type: integer
      required:
      - isEnabled
      type: object
    EPeriodicallyKinds:
      description: Time unit for periodic job scheduling.
      enum:
      - Hours
      - Minutes
      - Seconds
      - Days
      type: string
    ScheduleBackupWindowModel:
      description: Backup window settings.
      example:
        isEnabled: false
        backupWindow:
          days:
          - hours: hours
            day: null
          - hours: hours
            day: null
      properties:
        isEnabled:
          default: false
          description: "If *true*, backup window is enabled."
          type: boolean
        backupWindow:
          $ref: '#/components/schemas/BackupWindowSettingModel'
      required:
      - isEnabled
      type: object
    BackupWindowDayHoursModel:
      description: Hourly scheme for a day.
      example:
        hours: hours
        day: null
      properties:
        day:
          $ref: '#/components/schemas/EDayOfWeek'
        hours:
          description: "String of 24 hours in the following format:<br>*1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1*<br>where\
            \ *1* means permitted, *0* means denied."
          type: string
      required:
      - day
      - hours
      type: object
    BackupWindowSettingModel:
      description: Time scheme that defines permitted days and hours for the job to
        start.
      example:
        days:
        - hours: hours
          day: null
        - hours: hours
          day: null
      properties:
        days:
          description: Array of per-day schemes.
          items:
            $ref: '#/components/schemas/BackupWindowDayHoursModel'
          type: array
      required:
      - days
      type: object
    ScheduleRetryModel:
      description: Retry options.
      example:
        retryCount: 7
        isEnabled: false
        awaitMinutes: 1
      properties:
        isEnabled:
          default: false
          description: "If *true*, retry options are enabled."
          type: boolean
        retryCount:
          default: 3
          description: Number of retries set for the job. Must be greater than zero.
          type: integer
        awaitMinutes:
          default: 10
          description: Time interval between job retries in minutes. Must be greater
            than zero.
          type: integer
      type: object
    ESennightOfMonth:
      description: Sennight of the month.
      enum:
      - First
      - Second
      - Third
      - Fourth
      - Fifth
      - Last
      type: string
    BackupJobModel:
      allOf:
      - $ref: '#/components/schemas/JobModel'
      - $ref: '#/components/schemas/BackupJobModel_allOf'
    BackupJobVirtualMachinesModel:
      description: Included and excluded objects.
      properties:
        includes:
          description: Array of VMs and VM containers processed by the job.
          items:
            $ref: '#/components/schemas/VmwareObjectSizeModel'
          type: array
        excludes:
          $ref: '#/components/schemas/BackupJobExclusions'
      required:
      - includes
      type: object
    BackupJobExclusions:
      description: Objects excluded from the backup.
      properties:
        vms:
          description: Array of VMs excluded from the backup.
          items:
            $ref: '#/components/schemas/VmwareObjectSizeModel'
          type: array
        disks:
          description: Array of VM disks excluded from the backup.
          items:
            $ref: '#/components/schemas/VmwareObjectDiskModel'
          type: array
        templates:
          $ref: '#/components/schemas/BackupJobExclusionsTemplates'
      type: object
    BackupJobExclusionsTemplates:
      description: VM templates exclusion.
      example:
        isEnabled: true
        excludeFromIncremental: true
      properties:
        isEnabled:
          description: "If *true*, VM templates are excluded from the backup."
          type: boolean
        excludeFromIncremental:
          description: "If *true*, VM templates are excluded from the incremental\
            \ backup."
          type: boolean
      type: object
    VmwareObjectDiskModel:
      example:
        disksToProcess: null
        vmObject:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
        removeFromVMConfiguration: true
        disks:
        - disks
        - disks
      properties:
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
        disksToProcess:
          $ref: '#/components/schemas/EVmwareDisksTypeToProcess'
        disks:
          description: Array of disks.
          items:
            description: ID of the disk.
            type: string
          type: array
        removeFromVMConfiguration:
          description: "If *true*, the disk is removed from VM configuration."
          type: boolean
      required:
      - disks
      - disksToProcess
      - vmObject
      type: object
    EVmwareDisksTypeToProcess:
      description: Type of disk selection.
      enum:
      - AllDisks
      - SystemOnly
      - SelectedDisks
      type: string
    VmwareObjectSizeModel:
      example:
        size: size
        inventoryObject:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
      properties:
        inventoryObject:
          $ref: '#/components/schemas/VmwareObjectModel'
        size:
          description: Size used by the VMware vSphere object.
          type: string
      required:
      - inventoryObject
      type: object
    VmwareObjectModel:
      description: VMware vSphere object.
      example:
        hostName: hostName
        name: name
        type: null
        objectId: objectId
      properties:
        hostName:
          description: Name of the VMware vSphere server that hosts the object.
          type: string
        name:
          description: Name of the VMware vSphere object.
          type: string
        type:
          $ref: '#/components/schemas/EVmwareInventoryType'
        objectId:
          description: ID of the VMware vSphere object. The parameter is required
            for all VMware vSphere objects except vCenter Servers and standalone ESXi
            hosts.
          type: string
      required:
      - hostName
      - name
      - type
      type: object
    CredentialsFilters:
      properties:
        skip:
          description: Number of credentials records to skip.
          format: int32
          type: integer
        limit:
          description: Maximum number of credentials records to return.
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/ECredentialsFiltersOrderColumn'
        orderAsc:
          description: Sorts credentials in the ascending order by the `orderColumn`
            parameter.
          type: boolean
        nameFilter:
          description: "Filters credentials by the `nameFilter` pattern. The pattern\
            \ can match any credentials parameter. To substitute one or more characters,\
            \ use the asterisk (*) character at the beginning and/or at the end."
          type: string
      type: object
    ECredentialsFiltersOrderColumn:
      enum:
      - Username
      - Description
      type: string
    CredentialsResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
          username: username
        - creationTime: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
          username: username
      properties:
        data:
          description: Array of credentials.
          items:
            $ref: '#/components/schemas/CredentialsModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    CredentialsSpec:
      discriminator:
        mapping:
          Standard: '#/components/schemas/StandardCredentialsSpec'
          Linux: '#/components/schemas/LinuxCredentialsSpec'
        propertyName: type
      example:
        password: password
        description: description
        type: null
        username: username
      oneOf:
      - $ref: '#/components/schemas/StandardCredentialsSpec'
      - $ref: '#/components/schemas/LinuxCredentialsSpec'
      properties:
        username:
          description: User name.
          type: string
        password:
          description: Password.
          type: string
        description:
          description: Description of the credentials record.
          type: string
        type:
          $ref: '#/components/schemas/ECredentialsType'
      required:
      - type
      - username
      type: object
    StandardCredentialsSpec:
      allOf:
      - $ref: '#/components/schemas/CredentialsSpec'
      - $ref: '#/components/schemas/StandardCredentialsSpec_allOf'
    LinuxCredentialsSpec:
      allOf:
      - $ref: '#/components/schemas/CredentialsSpec'
      - $ref: '#/components/schemas/LinuxCredentialsSpec_allOf'
    CredentialsModel:
      discriminator:
        mapping:
          Standard: '#/components/schemas/StandardCredentialsModel'
          Linux: '#/components/schemas/LinuxCredentialsModel'
        propertyName: type
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
        username: username
      oneOf:
      - $ref: '#/components/schemas/StandardCredentialsModel'
      - $ref: '#/components/schemas/LinuxCredentialsModel'
      properties:
        id:
          description: ID of the credentials record.
          format: uuid
          type: string
        username:
          description: User name.
          type: string
        description:
          description: Description of the credentials record.
          type: string
        type:
          $ref: '#/components/schemas/ECredentialsType'
        creationTime:
          description: Date and time when the credentials were created.
          format: date-time
          type: string
      required:
      - creationTime
      - description
      - id
      - type
      - username
      type: object
    StandardCredentialsModel:
      allOf:
      - $ref: '#/components/schemas/CredentialsModel'
      - $ref: '#/components/schemas/StandardCredentialsSpec_allOf'
    CredentialsPasswordChangeSpec:
      example:
        password: password
      properties:
        password:
          description: New password.
          type: string
      required:
      - password
      type: object
    LinuxCredentialsModel:
      allOf:
      - $ref: '#/components/schemas/CredentialsModel'
      - $ref: '#/components/schemas/LinuxCredentialsModel_allOf'
    PrivateKeyChangeSpec:
      example:
        privateKey: privateKey
        passphrase: passphrase
      properties:
        privateKey:
          description: New private key.
          type: string
        passphrase:
          description: Passphrase that protects the private key.
          type: string
      required:
      - privateKey
      type: object
    JobImportSpecCollection:
      example:
        jobs:
        - schedule:
            runAutomatically: false
            daily:
              localTime: localTime
              isEnabled: true
              days:
              - null
              - null
              dailyKind: null
            monthly:
              localTime: localTime
              dayOfWeek: null
              months:
              - null
              - null
              dayOfMonth: 6
              isEnabled: false
              dayNumberInMonth: null
            periodically:
              startTimeWithinAnHour: 6
              periodicallyKind: null
              isEnabled: false
              backupWindow:
                days:
                - hours: hours
                  day: null
                - hours: hours
                  day: null
              frequency: 1
            continuously:
              isEnabled: false
              backupWindow:
                days:
                - hours: hours
                  day: null
                - hours: hours
                  day: null
            backupWindow:
              isEnabled: false
              backupWindow:
                days:
                - hours: hours
                  day: null
                - hours: hours
                  day: null
            retry:
              retryCount: 7
              isEnabled: false
              awaitMinutes: 1
            afterThisJob:
              jobName: jobName
              isEnabled: true
          isHighPriority: true
          name: name
          description: description
          virtualMachines:
            excludes:
              disks:
              - disksToProcess: null
                vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                removeFromVMConfiguration: true
                disks:
                - disks
                - disks
              - disksToProcess: null
                vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                removeFromVMConfiguration: true
                disks:
                - disks
                - disks
              templates:
                isEnabled: true
                excludeFromIncremental: true
              vms:
              - hostName: hostName
                name: name
                type: null
                objectId: objectId
              - hostName: hostName
                name: name
                type: null
                objectId: objectId
            includes:
            - hostName: hostName
              name: name
              type: null
              objectId: objectId
            - hostName: hostName
              name: name
              type: null
              objectId: objectId
          storage:
            backupRepository:
              name: name
              tag: tag
            advancedSettings:
              storageData:
                encryption:
                  isEnabled: true
                  encryptionPasswordTag: encryptionPasswordTag
                  encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                excludeDeletedFileBlocks: true
                compressionLevel: null
                storageOptimization: null
                enableInlineDataDedup: true
                excludeSwapFileBlocks: true
              fullBackupMaintenance:
                defragmentAndCompact:
                  isEnabled: true
                  monthly:
                    dayOfWeek: null
                    months:
                    - null
                    - null
                    isEnabled: true
                    dayNumberInMonth: null
                    dayOfMonths: 5
                  weekly:
                    isEnabled: false
                    days:
                    - null
                    - null
                RemoveData:
                  isEnabled: true
                  afterDays: 2
              activeFulls:
                isEnabled: true
                monthly:
                  dayOfWeek: null
                  months:
                  - null
                  - null
                  isEnabled: true
                  dayNumberInMonth: null
                  dayOfMonths: 5
                weekly:
                  isEnabled: false
                  days:
                  - null
                  - null
              synthenticFulls:
                isEnabled: true
                monthly:
                  dayOfWeek: null
                  months:
                  - null
                  - null
                  isEnabled: true
                  dayNumberInMonth: null
                  dayOfMonths: 5
                weekly:
                  isEnabled: false
                  days:
                  - null
                  - null
              backupHealth:
                isEnabled: true
                monthly:
                  dayOfWeek: null
                  months:
                  - null
                  - null
                  isEnabled: true
                  dayNumberInMonth: null
                  dayOfMonths: 5
                weekly:
                  isEnabled: false
                  days:
                  - null
                  - null
              storageIntegration:
                limitProcessedVmCount: 7
                isEnabled: true
                failoverToStandardBackup: true
                limitProcessedVm: true
              scripts:
                postCommand:
                  isEnabled: true
                  command: command
                dayOfWeek:
                - null
                - null
                preCommand:
                  isEnabled: true
                  command: command
                periodicityType: null
                runScriptEvery: 9
              backupModeType: null
              notifications:
                emailNotifications:
                  customNotificationSettings:
                    notifyOnWarning: true
                    subject: subject
                    notifyOnError: true
                    SuppressNotificationUntilLastRetry: true
                    notifyOnSuccess: true
                  recipients:
                  - recipients
                  - recipients
                  isEnabled: true
                  notificationType: null
                sendSNMPNotifications: true
                vmAttribute:
                  notes: notes
                  appendToExisitingValue: true
                  isEnabled: true
              vSphere:
                enableVMWareToolsQuiescence: true
                changedBlockTracking:
                  enableCBTautomatically: true
                  isEnabled: true
                  resetCBTonActiveFull: true
            gfsPolicy:
              isEnabled: true
              monthly:
                desiredTime: null
                isEnabled: true
                keepForNumberOfMonths: 1
              yearly:
                desiredTime: null
                isEnabled: true
                keepForNumberOfYears: 5
              weekly:
                keepForNumberOfWeeks: 6
                desiredTime: null
                isEnabled: true
            retentionPolicy:
              quantity: 0
              type: null
            backupProxies:
              automaticSelection: true
              proxies:
              - name: name
                tag: tag
                type: null
              - name: name
                tag: tag
                type: null
          guestProcessing:
            guestCredentials:
              creds:
                credentialsTag: credentialsTag
                credentialsName: credentialsName
              credentialsPerMachine:
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                linuxCreds:
                  credentialsTag: credentialsTag
                  credentialsName: credentialsName
                windowsCreds:
                  credentialsTag: credentialsTag
                  credentialsName: credentialsName
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                linuxCreds:
                  credentialsTag: credentialsTag
                  credentialsName: credentialsName
                windowsCreds:
                  credentialsTag: credentialsTag
                  credentialsName: credentialsName
            applicationAwareProcessing:
              appSettings:
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                oracle:
                  credentials:
                    credentialsTag: credentialsTag
                    credentialsName: credentialsName
                  deleteHoursCount: 4
                  backupMinsCount: 1
                  retainLogBackups: null
                  deleteGBsCount: 7
                  keepDaysCount: 1
                  archiveLogs: null
                  useGuestCredentials: true
                  backupLogs: true
                  logShippingServers:
                    autoSelection: true
                    shippingServerNames:
                    - shippingServerNames
                    - shippingServerNames
                vss: null
                usePersistentGuestAgent: true
                transactionLogs: null
                exclusions:
                  itemsList:
                  - itemsList
                  - itemsList
                  exclusionPolicy: null
                scripts:
                  scriptProcessingMode: null
                  windowsScripts:
                    preFreezeScript: preFreezeScript
                    postThawScript: postThawScript
                  linuxScripts:
                    preFreezeScript: preFreezeScript
                    postThawScript: postThawScript
                sql:
                  logsProcessing: null
                  backupMinsCount: 3
                  retainLogBackups: null
                  keepDaysCount: 2
                  logShippingServers:
                    autoSelection: true
                    shippingServerNames:
                    - shippingServerNames
                    - shippingServerNames
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                oracle:
                  credentials:
                    credentialsTag: credentialsTag
                    credentialsName: credentialsName
                  deleteHoursCount: 4
                  backupMinsCount: 1
                  retainLogBackups: null
                  deleteGBsCount: 7
                  keepDaysCount: 1
                  archiveLogs: null
                  useGuestCredentials: true
                  backupLogs: true
                  logShippingServers:
                    autoSelection: true
                    shippingServerNames:
                    - shippingServerNames
                    - shippingServerNames
                vss: null
                usePersistentGuestAgent: true
                transactionLogs: null
                exclusions:
                  itemsList:
                  - itemsList
                  - itemsList
                  exclusionPolicy: null
                scripts:
                  scriptProcessingMode: null
                  windowsScripts:
                    preFreezeScript: preFreezeScript
                    postThawScript: postThawScript
                  linuxScripts:
                    preFreezeScript: preFreezeScript
                    postThawScript: postThawScript
                sql:
                  logsProcessing: null
                  backupMinsCount: 3
                  retainLogBackups: null
                  keepDaysCount: 2
                  logShippingServers:
                    autoSelection: true
                    shippingServerNames:
                    - shippingServerNames
                    - shippingServerNames
              isEnabled: true
            guestFileSystemIndexing:
              indexingSettings:
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                WindowsIndexing:
                  guestFSIndexingMode: null
                  indexingList:
                  - indexingList
                  - indexingList
                LinuxIndexing:
                  guestFSIndexingMode: null
                  indexingList:
                  - indexingList
                  - indexingList
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                WindowsIndexing:
                  guestFSIndexingMode: null
                  indexingList:
                  - indexingList
                  - indexingList
                LinuxIndexing:
                  guestFSIndexingMode: null
                  indexingList:
                  - indexingList
                  - indexingList
              isEnabled: true
            guestInteractionProxies:
              automaticSelection: true
              proxies:
              - proxies
              - proxies
          type: null
        - schedule:
            runAutomatically: false
            daily:
              localTime: localTime
              isEnabled: true
              days:
              - null
              - null
              dailyKind: null
            monthly:
              localTime: localTime
              dayOfWeek: null
              months:
              - null
              - null
              dayOfMonth: 6
              isEnabled: false
              dayNumberInMonth: null
            periodically:
              startTimeWithinAnHour: 6
              periodicallyKind: null
              isEnabled: false
              backupWindow:
                days:
                - hours: hours
                  day: null
                - hours: hours
                  day: null
              frequency: 1
            continuously:
              isEnabled: false
              backupWindow:
                days:
                - hours: hours
                  day: null
                - hours: hours
                  day: null
            backupWindow:
              isEnabled: false
              backupWindow:
                days:
                - hours: hours
                  day: null
                - hours: hours
                  day: null
            retry:
              retryCount: 7
              isEnabled: false
              awaitMinutes: 1
            afterThisJob:
              jobName: jobName
              isEnabled: true
          isHighPriority: true
          name: name
          description: description
          virtualMachines:
            excludes:
              disks:
              - disksToProcess: null
                vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                removeFromVMConfiguration: true
                disks:
                - disks
                - disks
              - disksToProcess: null
                vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                removeFromVMConfiguration: true
                disks:
                - disks
                - disks
              templates:
                isEnabled: true
                excludeFromIncremental: true
              vms:
              - hostName: hostName
                name: name
                type: null
                objectId: objectId
              - hostName: hostName
                name: name
                type: null
                objectId: objectId
            includes:
            - hostName: hostName
              name: name
              type: null
              objectId: objectId
            - hostName: hostName
              name: name
              type: null
              objectId: objectId
          storage:
            backupRepository:
              name: name
              tag: tag
            advancedSettings:
              storageData:
                encryption:
                  isEnabled: true
                  encryptionPasswordTag: encryptionPasswordTag
                  encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                excludeDeletedFileBlocks: true
                compressionLevel: null
                storageOptimization: null
                enableInlineDataDedup: true
                excludeSwapFileBlocks: true
              fullBackupMaintenance:
                defragmentAndCompact:
                  isEnabled: true
                  monthly:
                    dayOfWeek: null
                    months:
                    - null
                    - null
                    isEnabled: true
                    dayNumberInMonth: null
                    dayOfMonths: 5
                  weekly:
                    isEnabled: false
                    days:
                    - null
                    - null
                RemoveData:
                  isEnabled: true
                  afterDays: 2
              activeFulls:
                isEnabled: true
                monthly:
                  dayOfWeek: null
                  months:
                  - null
                  - null
                  isEnabled: true
                  dayNumberInMonth: null
                  dayOfMonths: 5
                weekly:
                  isEnabled: false
                  days:
                  - null
                  - null
              synthenticFulls:
                isEnabled: true
                monthly:
                  dayOfWeek: null
                  months:
                  - null
                  - null
                  isEnabled: true
                  dayNumberInMonth: null
                  dayOfMonths: 5
                weekly:
                  isEnabled: false
                  days:
                  - null
                  - null
              backupHealth:
                isEnabled: true
                monthly:
                  dayOfWeek: null
                  months:
                  - null
                  - null
                  isEnabled: true
                  dayNumberInMonth: null
                  dayOfMonths: 5
                weekly:
                  isEnabled: false
                  days:
                  - null
                  - null
              storageIntegration:
                limitProcessedVmCount: 7
                isEnabled: true
                failoverToStandardBackup: true
                limitProcessedVm: true
              scripts:
                postCommand:
                  isEnabled: true
                  command: command
                dayOfWeek:
                - null
                - null
                preCommand:
                  isEnabled: true
                  command: command
                periodicityType: null
                runScriptEvery: 9
              backupModeType: null
              notifications:
                emailNotifications:
                  customNotificationSettings:
                    notifyOnWarning: true
                    subject: subject
                    notifyOnError: true
                    SuppressNotificationUntilLastRetry: true
                    notifyOnSuccess: true
                  recipients:
                  - recipients
                  - recipients
                  isEnabled: true
                  notificationType: null
                sendSNMPNotifications: true
                vmAttribute:
                  notes: notes
                  appendToExisitingValue: true
                  isEnabled: true
              vSphere:
                enableVMWareToolsQuiescence: true
                changedBlockTracking:
                  enableCBTautomatically: true
                  isEnabled: true
                  resetCBTonActiveFull: true
            gfsPolicy:
              isEnabled: true
              monthly:
                desiredTime: null
                isEnabled: true
                keepForNumberOfMonths: 1
              yearly:
                desiredTime: null
                isEnabled: true
                keepForNumberOfYears: 5
              weekly:
                keepForNumberOfWeeks: 6
                desiredTime: null
                isEnabled: true
            retentionPolicy:
              quantity: 0
              type: null
            backupProxies:
              automaticSelection: true
              proxies:
              - name: name
                tag: tag
                type: null
              - name: name
                tag: tag
                type: null
          guestProcessing:
            guestCredentials:
              creds:
                credentialsTag: credentialsTag
                credentialsName: credentialsName
              credentialsPerMachine:
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                linuxCreds:
                  credentialsTag: credentialsTag
                  credentialsName: credentialsName
                windowsCreds:
                  credentialsTag: credentialsTag
                  credentialsName: credentialsName
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                linuxCreds:
                  credentialsTag: credentialsTag
                  credentialsName: credentialsName
                windowsCreds:
                  credentialsTag: credentialsTag
                  credentialsName: credentialsName
            applicationAwareProcessing:
              appSettings:
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                oracle:
                  credentials:
                    credentialsTag: credentialsTag
                    credentialsName: credentialsName
                  deleteHoursCount: 4
                  backupMinsCount: 1
                  retainLogBackups: null
                  deleteGBsCount: 7
                  keepDaysCount: 1
                  archiveLogs: null
                  useGuestCredentials: true
                  backupLogs: true
                  logShippingServers:
                    autoSelection: true
                    shippingServerNames:
                    - shippingServerNames
                    - shippingServerNames
                vss: null
                usePersistentGuestAgent: true
                transactionLogs: null
                exclusions:
                  itemsList:
                  - itemsList
                  - itemsList
                  exclusionPolicy: null
                scripts:
                  scriptProcessingMode: null
                  windowsScripts:
                    preFreezeScript: preFreezeScript
                    postThawScript: postThawScript
                  linuxScripts:
                    preFreezeScript: preFreezeScript
                    postThawScript: postThawScript
                sql:
                  logsProcessing: null
                  backupMinsCount: 3
                  retainLogBackups: null
                  keepDaysCount: 2
                  logShippingServers:
                    autoSelection: true
                    shippingServerNames:
                    - shippingServerNames
                    - shippingServerNames
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                oracle:
                  credentials:
                    credentialsTag: credentialsTag
                    credentialsName: credentialsName
                  deleteHoursCount: 4
                  backupMinsCount: 1
                  retainLogBackups: null
                  deleteGBsCount: 7
                  keepDaysCount: 1
                  archiveLogs: null
                  useGuestCredentials: true
                  backupLogs: true
                  logShippingServers:
                    autoSelection: true
                    shippingServerNames:
                    - shippingServerNames
                    - shippingServerNames
                vss: null
                usePersistentGuestAgent: true
                transactionLogs: null
                exclusions:
                  itemsList:
                  - itemsList
                  - itemsList
                  exclusionPolicy: null
                scripts:
                  scriptProcessingMode: null
                  windowsScripts:
                    preFreezeScript: preFreezeScript
                    postThawScript: postThawScript
                  linuxScripts:
                    preFreezeScript: preFreezeScript
                    postThawScript: postThawScript
                sql:
                  logsProcessing: null
                  backupMinsCount: 3
                  retainLogBackups: null
                  keepDaysCount: 2
                  logShippingServers:
                    autoSelection: true
                    shippingServerNames:
                    - shippingServerNames
                    - shippingServerNames
              isEnabled: true
            guestFileSystemIndexing:
              indexingSettings:
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                WindowsIndexing:
                  guestFSIndexingMode: null
                  indexingList:
                  - indexingList
                  - indexingList
                LinuxIndexing:
                  guestFSIndexingMode: null
                  indexingList:
                  - indexingList
                  - indexingList
              - vmObject:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                WindowsIndexing:
                  guestFSIndexingMode: null
                  indexingList:
                  - indexingList
                  - indexingList
                LinuxIndexing:
                  guestFSIndexingMode: null
                  indexingList:
                  - indexingList
                  - indexingList
              isEnabled: true
            guestInteractionProxies:
              automaticSelection: true
              proxies:
              - proxies
              - proxies
          type: null
      properties:
        jobs:
          description: Array of jobs.
          items:
            $ref: '#/components/schemas/JobImportSpec'
          type: array
          uniqueItems: true
      required:
      - jobs
      type: object
    JobImportSpec:
      example:
        schedule:
          runAutomatically: false
          daily:
            localTime: localTime
            isEnabled: true
            days:
            - null
            - null
            dailyKind: null
          monthly:
            localTime: localTime
            dayOfWeek: null
            months:
            - null
            - null
            dayOfMonth: 6
            isEnabled: false
            dayNumberInMonth: null
          periodically:
            startTimeWithinAnHour: 6
            periodicallyKind: null
            isEnabled: false
            backupWindow:
              days:
              - hours: hours
                day: null
              - hours: hours
                day: null
            frequency: 1
          continuously:
            isEnabled: false
            backupWindow:
              days:
              - hours: hours
                day: null
              - hours: hours
                day: null
          backupWindow:
            isEnabled: false
            backupWindow:
              days:
              - hours: hours
                day: null
              - hours: hours
                day: null
          retry:
            retryCount: 7
            isEnabled: false
            awaitMinutes: 1
          afterThisJob:
            jobName: jobName
            isEnabled: true
        isHighPriority: true
        name: name
        description: description
        virtualMachines:
          excludes:
            disks:
            - disksToProcess: null
              vmObject:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              removeFromVMConfiguration: true
              disks:
              - disks
              - disks
            - disksToProcess: null
              vmObject:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              removeFromVMConfiguration: true
              disks:
              - disks
              - disks
            templates:
              isEnabled: true
              excludeFromIncremental: true
            vms:
            - hostName: hostName
              name: name
              type: null
              objectId: objectId
            - hostName: hostName
              name: name
              type: null
              objectId: objectId
          includes:
          - hostName: hostName
            name: name
            type: null
            objectId: objectId
          - hostName: hostName
            name: name
            type: null
            objectId: objectId
        storage:
          backupRepository:
            name: name
            tag: tag
          advancedSettings:
            storageData:
              encryption:
                isEnabled: true
                encryptionPasswordTag: encryptionPasswordTag
                encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              excludeDeletedFileBlocks: true
              compressionLevel: null
              storageOptimization: null
              enableInlineDataDedup: true
              excludeSwapFileBlocks: true
            fullBackupMaintenance:
              defragmentAndCompact:
                isEnabled: true
                monthly:
                  dayOfWeek: null
                  months:
                  - null
                  - null
                  isEnabled: true
                  dayNumberInMonth: null
                  dayOfMonths: 5
                weekly:
                  isEnabled: false
                  days:
                  - null
                  - null
              RemoveData:
                isEnabled: true
                afterDays: 2
            activeFulls:
              isEnabled: true
              monthly:
                dayOfWeek: null
                months:
                - null
                - null
                isEnabled: true
                dayNumberInMonth: null
                dayOfMonths: 5
              weekly:
                isEnabled: false
                days:
                - null
                - null
            synthenticFulls:
              isEnabled: true
              monthly:
                dayOfWeek: null
                months:
                - null
                - null
                isEnabled: true
                dayNumberInMonth: null
                dayOfMonths: 5
              weekly:
                isEnabled: false
                days:
                - null
                - null
            backupHealth:
              isEnabled: true
              monthly:
                dayOfWeek: null
                months:
                - null
                - null
                isEnabled: true
                dayNumberInMonth: null
                dayOfMonths: 5
              weekly:
                isEnabled: false
                days:
                - null
                - null
            storageIntegration:
              limitProcessedVmCount: 7
              isEnabled: true
              failoverToStandardBackup: true
              limitProcessedVm: true
            scripts:
              postCommand:
                isEnabled: true
                command: command
              dayOfWeek:
              - null
              - null
              preCommand:
                isEnabled: true
                command: command
              periodicityType: null
              runScriptEvery: 9
            backupModeType: null
            notifications:
              emailNotifications:
                customNotificationSettings:
                  notifyOnWarning: true
                  subject: subject
                  notifyOnError: true
                  SuppressNotificationUntilLastRetry: true
                  notifyOnSuccess: true
                recipients:
                - recipients
                - recipients
                isEnabled: true
                notificationType: null
              sendSNMPNotifications: true
              vmAttribute:
                notes: notes
                appendToExisitingValue: true
                isEnabled: true
            vSphere:
              enableVMWareToolsQuiescence: true
              changedBlockTracking:
                enableCBTautomatically: true
                isEnabled: true
                resetCBTonActiveFull: true
          gfsPolicy:
            isEnabled: true
            monthly:
              desiredTime: null
              isEnabled: true
              keepForNumberOfMonths: 1
            yearly:
              desiredTime: null
              isEnabled: true
              keepForNumberOfYears: 5
            weekly:
              keepForNumberOfWeeks: 6
              desiredTime: null
              isEnabled: true
          retentionPolicy:
            quantity: 0
            type: null
          backupProxies:
            automaticSelection: true
            proxies:
            - name: name
              tag: tag
              type: null
            - name: name
              tag: tag
              type: null
        guestProcessing:
          guestCredentials:
            creds:
              credentialsTag: credentialsTag
              credentialsName: credentialsName
            credentialsPerMachine:
            - vmObject:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              linuxCreds:
                credentialsTag: credentialsTag
                credentialsName: credentialsName
              windowsCreds:
                credentialsTag: credentialsTag
                credentialsName: credentialsName
            - vmObject:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              linuxCreds:
                credentialsTag: credentialsTag
                credentialsName: credentialsName
              windowsCreds:
                credentialsTag: credentialsTag
                credentialsName: credentialsName
          applicationAwareProcessing:
            appSettings:
            - vmObject:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              oracle:
                credentials:
                  credentialsTag: credentialsTag
                  credentialsName: credentialsName
                deleteHoursCount: 4
                backupMinsCount: 1
                retainLogBackups: null
                deleteGBsCount: 7
                keepDaysCount: 1
                archiveLogs: null
                useGuestCredentials: true
                backupLogs: true
                logShippingServers:
                  autoSelection: true
                  shippingServerNames:
                  - shippingServerNames
                  - shippingServerNames
              vss: null
              usePersistentGuestAgent: true
              transactionLogs: null
              exclusions:
                itemsList:
                - itemsList
                - itemsList
                exclusionPolicy: null
              scripts:
                scriptProcessingMode: null
                windowsScripts:
                  preFreezeScript: preFreezeScript
                  postThawScript: postThawScript
                linuxScripts:
                  preFreezeScript: preFreezeScript
                  postThawScript: postThawScript
              sql:
                logsProcessing: null
                backupMinsCount: 3
                retainLogBackups: null
                keepDaysCount: 2
                logShippingServers:
                  autoSelection: true
                  shippingServerNames:
                  - shippingServerNames
                  - shippingServerNames
            - vmObject:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              oracle:
                credentials:
                  credentialsTag: credentialsTag
                  credentialsName: credentialsName
                deleteHoursCount: 4
                backupMinsCount: 1
                retainLogBackups: null
                deleteGBsCount: 7
                keepDaysCount: 1
                archiveLogs: null
                useGuestCredentials: true
                backupLogs: true
                logShippingServers:
                  autoSelection: true
                  shippingServerNames:
                  - shippingServerNames
                  - shippingServerNames
              vss: null
              usePersistentGuestAgent: true
              transactionLogs: null
              exclusions:
                itemsList:
                - itemsList
                - itemsList
                exclusionPolicy: null
              scripts:
                scriptProcessingMode: null
                windowsScripts:
                  preFreezeScript: preFreezeScript
                  postThawScript: postThawScript
                linuxScripts:
                  preFreezeScript: preFreezeScript
                  postThawScript: postThawScript
              sql:
                logsProcessing: null
                backupMinsCount: 3
                retainLogBackups: null
                keepDaysCount: 2
                logShippingServers:
                  autoSelection: true
                  shippingServerNames:
                  - shippingServerNames
                  - shippingServerNames
            isEnabled: true
          guestFileSystemIndexing:
            indexingSettings:
            - vmObject:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              WindowsIndexing:
                guestFSIndexingMode: null
                indexingList:
                - indexingList
                - indexingList
              LinuxIndexing:
                guestFSIndexingMode: null
                indexingList:
                - indexingList
                - indexingList
            - vmObject:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              WindowsIndexing:
                guestFSIndexingMode: null
                indexingList:
                - indexingList
                - indexingList
              LinuxIndexing:
                guestFSIndexingMode: null
                indexingList:
                - indexingList
                - indexingList
            isEnabled: true
          guestInteractionProxies:
            automaticSelection: true
            proxies:
            - proxies
            - proxies
        type: null
      properties:
        name:
          description: Name of the job.
          type: string
        description:
          description: Description of the job.
          type: string
        isHighPriority:
          description: "If *true*, the job has a high priority in getting backup infrastructure\
            \ resources."
          type: boolean
        type:
          $ref: '#/components/schemas/EJobType'
        virtualMachines:
          $ref: '#/components/schemas/BackupJobVirtualMachinesSpec'
        storage:
          $ref: '#/components/schemas/BackupJobStorageImportModel'
        guestProcessing:
          $ref: '#/components/schemas/BackupJobGuestProcessingImportModel'
        schedule:
          $ref: '#/components/schemas/BackupScheduleModel'
      required:
      - description
      - guestProcessing
      - isHighPriority
      - name
      - schedule
      - storage
      - type
      - virtualMachines
      type: object
    BackupJobStorageImportModel:
      description: Backup storage settings.
      example:
        backupRepository:
          name: name
          tag: tag
        advancedSettings:
          storageData:
            encryption:
              isEnabled: true
              encryptionPasswordTag: encryptionPasswordTag
              encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            excludeDeletedFileBlocks: true
            compressionLevel: null
            storageOptimization: null
            enableInlineDataDedup: true
            excludeSwapFileBlocks: true
          fullBackupMaintenance:
            defragmentAndCompact:
              isEnabled: true
              monthly:
                dayOfWeek: null
                months:
                - null
                - null
                isEnabled: true
                dayNumberInMonth: null
                dayOfMonths: 5
              weekly:
                isEnabled: false
                days:
                - null
                - null
            RemoveData:
              isEnabled: true
              afterDays: 2
          activeFulls:
            isEnabled: true
            monthly:
              dayOfWeek: null
              months:
              - null
              - null
              isEnabled: true
              dayNumberInMonth: null
              dayOfMonths: 5
            weekly:
              isEnabled: false
              days:
              - null
              - null
          synthenticFulls:
            isEnabled: true
            monthly:
              dayOfWeek: null
              months:
              - null
              - null
              isEnabled: true
              dayNumberInMonth: null
              dayOfMonths: 5
            weekly:
              isEnabled: false
              days:
              - null
              - null
          backupHealth:
            isEnabled: true
            monthly:
              dayOfWeek: null
              months:
              - null
              - null
              isEnabled: true
              dayNumberInMonth: null
              dayOfMonths: 5
            weekly:
              isEnabled: false
              days:
              - null
              - null
          storageIntegration:
            limitProcessedVmCount: 7
            isEnabled: true
            failoverToStandardBackup: true
            limitProcessedVm: true
          scripts:
            postCommand:
              isEnabled: true
              command: command
            dayOfWeek:
            - null
            - null
            preCommand:
              isEnabled: true
              command: command
            periodicityType: null
            runScriptEvery: 9
          backupModeType: null
          notifications:
            emailNotifications:
              customNotificationSettings:
                notifyOnWarning: true
                subject: subject
                notifyOnError: true
                SuppressNotificationUntilLastRetry: true
                notifyOnSuccess: true
              recipients:
              - recipients
              - recipients
              isEnabled: true
              notificationType: null
            sendSNMPNotifications: true
            vmAttribute:
              notes: notes
              appendToExisitingValue: true
              isEnabled: true
          vSphere:
            enableVMWareToolsQuiescence: true
            changedBlockTracking:
              enableCBTautomatically: true
              isEnabled: true
              resetCBTonActiveFull: true
        gfsPolicy:
          isEnabled: true
          monthly:
            desiredTime: null
            isEnabled: true
            keepForNumberOfMonths: 1
          yearly:
            desiredTime: null
            isEnabled: true
            keepForNumberOfYears: 5
          weekly:
            keepForNumberOfWeeks: 6
            desiredTime: null
            isEnabled: true
        retentionPolicy:
          quantity: 0
          type: null
        backupProxies:
          automaticSelection: true
          proxies:
          - name: name
            tag: tag
            type: null
          - name: name
            tag: tag
            type: null
      properties:
        backupRepository:
          $ref: '#/components/schemas/BackupRepositoryImportModel'
        backupProxies:
          $ref: '#/components/schemas/BackupJobImportProxiesModel'
        retentionPolicy:
          $ref: '#/components/schemas/BackupJobRetentionPolicySettingsModel'
        gfsPolicy:
          $ref: '#/components/schemas/GFSPolicySettingsModel'
        advancedSettings:
          $ref: '#/components/schemas/BackupJobAdvancedSettingsModel'
      required:
      - backupProxies
      - backupRepository
      - retentionPolicy
      type: object
    BackupRepositoryImportModel:
      description: Backup repository.
      example:
        name: name
        tag: tag
      properties:
        name:
          description: Name of the backup repository.
          type: string
        tag:
          description: Tag that identifies the backup repository.
          type: string
      required:
      - name
      type: object
    BackupJobImportProxiesModel:
      description: Backup proxies.
      example:
        automaticSelection: true
        proxies:
        - name: name
          tag: tag
          type: null
        - name: name
          tag: tag
          type: null
      properties:
        automaticSelection:
          default: true
          description: "If *true*, backup proxies are detected and assigned automatically."
          type: boolean
        proxies:
          description: Array of backup proxies.
          items:
            $ref: '#/components/schemas/BackupProxyImportModel'
          type: array
      required:
      - automaticSelection
      type: object
    BackupProxyImportModel:
      example:
        name: name
        tag: tag
        type: null
      properties:
        name:
          description: Name of the backup proxy.
          type: string
        type:
          $ref: '#/components/schemas/EBackupProxyImportType'
        tag:
          description: Tag assigned to the backup proxy.
          type: string
      required:
      - name
      - type
      type: object
    EBackupProxyImportType:
      enum:
      - vmware
      type: string
    BackupJobGuestProcessingImportModel:
      description: Guest processing settings.
      example:
        guestCredentials:
          creds:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
          credentialsPerMachine:
          - vmObject:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            linuxCreds:
              credentialsTag: credentialsTag
              credentialsName: credentialsName
            windowsCreds:
              credentialsTag: credentialsTag
              credentialsName: credentialsName
          - vmObject:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            linuxCreds:
              credentialsTag: credentialsTag
              credentialsName: credentialsName
            windowsCreds:
              credentialsTag: credentialsTag
              credentialsName: credentialsName
        applicationAwareProcessing:
          appSettings:
          - vmObject:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            oracle:
              credentials:
                credentialsTag: credentialsTag
                credentialsName: credentialsName
              deleteHoursCount: 4
              backupMinsCount: 1
              retainLogBackups: null
              deleteGBsCount: 7
              keepDaysCount: 1
              archiveLogs: null
              useGuestCredentials: true
              backupLogs: true
              logShippingServers:
                autoSelection: true
                shippingServerNames:
                - shippingServerNames
                - shippingServerNames
            vss: null
            usePersistentGuestAgent: true
            transactionLogs: null
            exclusions:
              itemsList:
              - itemsList
              - itemsList
              exclusionPolicy: null
            scripts:
              scriptProcessingMode: null
              windowsScripts:
                preFreezeScript: preFreezeScript
                postThawScript: postThawScript
              linuxScripts:
                preFreezeScript: preFreezeScript
                postThawScript: postThawScript
            sql:
              logsProcessing: null
              backupMinsCount: 3
              retainLogBackups: null
              keepDaysCount: 2
              logShippingServers:
                autoSelection: true
                shippingServerNames:
                - shippingServerNames
                - shippingServerNames
          - vmObject:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            oracle:
              credentials:
                credentialsTag: credentialsTag
                credentialsName: credentialsName
              deleteHoursCount: 4
              backupMinsCount: 1
              retainLogBackups: null
              deleteGBsCount: 7
              keepDaysCount: 1
              archiveLogs: null
              useGuestCredentials: true
              backupLogs: true
              logShippingServers:
                autoSelection: true
                shippingServerNames:
                - shippingServerNames
                - shippingServerNames
            vss: null
            usePersistentGuestAgent: true
            transactionLogs: null
            exclusions:
              itemsList:
              - itemsList
              - itemsList
              exclusionPolicy: null
            scripts:
              scriptProcessingMode: null
              windowsScripts:
                preFreezeScript: preFreezeScript
                postThawScript: postThawScript
              linuxScripts:
                preFreezeScript: preFreezeScript
                postThawScript: postThawScript
            sql:
              logsProcessing: null
              backupMinsCount: 3
              retainLogBackups: null
              keepDaysCount: 2
              logShippingServers:
                autoSelection: true
                shippingServerNames:
                - shippingServerNames
                - shippingServerNames
          isEnabled: true
        guestFileSystemIndexing:
          indexingSettings:
          - vmObject:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            WindowsIndexing:
              guestFSIndexingMode: null
              indexingList:
              - indexingList
              - indexingList
            LinuxIndexing:
              guestFSIndexingMode: null
              indexingList:
              - indexingList
              - indexingList
          - vmObject:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            WindowsIndexing:
              guestFSIndexingMode: null
              indexingList:
              - indexingList
              - indexingList
            LinuxIndexing:
              guestFSIndexingMode: null
              indexingList:
              - indexingList
              - indexingList
          isEnabled: true
        guestInteractionProxies:
          automaticSelection: true
          proxies:
          - proxies
          - proxies
      properties:
        applicationAwareProcessing:
          $ref: '#/components/schemas/BackupApplicationAwareProcessingImportModel'
        guestFileSystemIndexing:
          $ref: '#/components/schemas/GuestFileSystemIndexingModel'
        guestInteractionProxies:
          $ref: '#/components/schemas/GuestInteractionProxiesSettingsImportModel'
        guestCredentials:
          $ref: '#/components/schemas/GuestOsCredentialsImportModel'
      required:
      - applicationAwareProcessing
      - guestFileSystemIndexing
      type: object
    BackupApplicationAwareProcessingImportModel:
      description: Application-aware processing settings.
      example:
        appSettings:
        - vmObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          oracle:
            credentials:
              credentialsTag: credentialsTag
              credentialsName: credentialsName
            deleteHoursCount: 4
            backupMinsCount: 1
            retainLogBackups: null
            deleteGBsCount: 7
            keepDaysCount: 1
            archiveLogs: null
            useGuestCredentials: true
            backupLogs: true
            logShippingServers:
              autoSelection: true
              shippingServerNames:
              - shippingServerNames
              - shippingServerNames
          vss: null
          usePersistentGuestAgent: true
          transactionLogs: null
          exclusions:
            itemsList:
            - itemsList
            - itemsList
            exclusionPolicy: null
          scripts:
            scriptProcessingMode: null
            windowsScripts:
              preFreezeScript: preFreezeScript
              postThawScript: postThawScript
            linuxScripts:
              preFreezeScript: preFreezeScript
              postThawScript: postThawScript
          sql:
            logsProcessing: null
            backupMinsCount: 3
            retainLogBackups: null
            keepDaysCount: 2
            logShippingServers:
              autoSelection: true
              shippingServerNames:
              - shippingServerNames
              - shippingServerNames
        - vmObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          oracle:
            credentials:
              credentialsTag: credentialsTag
              credentialsName: credentialsName
            deleteHoursCount: 4
            backupMinsCount: 1
            retainLogBackups: null
            deleteGBsCount: 7
            keepDaysCount: 1
            archiveLogs: null
            useGuestCredentials: true
            backupLogs: true
            logShippingServers:
              autoSelection: true
              shippingServerNames:
              - shippingServerNames
              - shippingServerNames
          vss: null
          usePersistentGuestAgent: true
          transactionLogs: null
          exclusions:
            itemsList:
            - itemsList
            - itemsList
            exclusionPolicy: null
          scripts:
            scriptProcessingMode: null
            windowsScripts:
              preFreezeScript: preFreezeScript
              postThawScript: postThawScript
            linuxScripts:
              preFreezeScript: preFreezeScript
              postThawScript: postThawScript
          sql:
            logsProcessing: null
            backupMinsCount: 3
            retainLogBackups: null
            keepDaysCount: 2
            logShippingServers:
              autoSelection: true
              shippingServerNames:
              - shippingServerNames
              - shippingServerNames
        isEnabled: true
      properties:
        isEnabled:
          description: "If *true*, application-aware processing is enabled."
          type: boolean
        appSettings:
          description: Array of VMware vSphere objects and their application settings.
          items:
            $ref: '#/components/schemas/BackupApplicationSettingsImportModel'
          type: array
      required:
      - isEnabled
      type: object
    BackupApplicationSettingsImportModel:
      example:
        vmObject:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
        oracle:
          credentials:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
          deleteHoursCount: 4
          backupMinsCount: 1
          retainLogBackups: null
          deleteGBsCount: 7
          keepDaysCount: 1
          archiveLogs: null
          useGuestCredentials: true
          backupLogs: true
          logShippingServers:
            autoSelection: true
            shippingServerNames:
            - shippingServerNames
            - shippingServerNames
        vss: null
        usePersistentGuestAgent: true
        transactionLogs: null
        exclusions:
          itemsList:
          - itemsList
          - itemsList
          exclusionPolicy: null
        scripts:
          scriptProcessingMode: null
          windowsScripts:
            preFreezeScript: preFreezeScript
            postThawScript: postThawScript
          linuxScripts:
            preFreezeScript: preFreezeScript
            postThawScript: postThawScript
        sql:
          logsProcessing: null
          backupMinsCount: 3
          retainLogBackups: null
          keepDaysCount: 2
          logShippingServers:
            autoSelection: true
            shippingServerNames:
            - shippingServerNames
            - shippingServerNames
      properties:
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
        vss:
          $ref: '#/components/schemas/EApplicationSettingsVSS'
        usePersistentGuestAgent:
          description: "If *true*, persistent guest agent is used."
          type: boolean
        transactionLogs:
          $ref: '#/components/schemas/ETransactionLogsSettings'
        sql:
          $ref: '#/components/schemas/BackupSQLSettingsImportModel'
        oracle:
          $ref: '#/components/schemas/BackupOracleSettingsImportModel'
        exclusions:
          $ref: '#/components/schemas/BackupFSExclusionsModel'
        scripts:
          $ref: '#/components/schemas/BackupScriptSettingsModel'
      required:
      - vmObject
      - vss
      type: object
    BackupSQLSettingsImportModel:
      description: Microsoft SQL Server transaction log settings.
      example:
        logsProcessing: null
        backupMinsCount: 3
        retainLogBackups: null
        keepDaysCount: 2
        logShippingServers:
          autoSelection: true
          shippingServerNames:
          - shippingServerNames
          - shippingServerNames
      properties:
        logsProcessing:
          $ref: '#/components/schemas/ESQLLogsProcessing'
        backupMinsCount:
          description: "Frequency of transaction log backup, in minutes."
          type: integer
        retainLogBackups:
          $ref: '#/components/schemas/ERetainLogBackupsType'
        keepDaysCount:
          description: Number of days to keep transaction logs in the backup repository.
          type: integer
        logShippingServers:
          $ref: '#/components/schemas/BackupLogShippingServersImportModel'
      required:
      - logsProcessing
      type: object
    BackupLogShippingServersImportModel:
      description: Log shipping server used to transport logs.
      example:
        autoSelection: true
        shippingServerNames:
        - shippingServerNames
        - shippingServerNames
      properties:
        autoSelection:
          description: "If *true*, Veeam Backup & Replication chooses an optimal log\
            \ shipping server automatically."
          type: boolean
        shippingServerNames:
          description: Array of servers that are explicitly selected for log shipping.
          items:
            type: string
          type: array
      required:
      - autoSelection
      type: object
    BackupOracleSettingsImportModel:
      description: Oracle archived log settings.
      example:
        credentials:
          credentialsTag: credentialsTag
          credentialsName: credentialsName
        deleteHoursCount: 4
        backupMinsCount: 1
        retainLogBackups: null
        deleteGBsCount: 7
        keepDaysCount: 1
        archiveLogs: null
        useGuestCredentials: true
        backupLogs: true
        logShippingServers:
          autoSelection: true
          shippingServerNames:
          - shippingServerNames
          - shippingServerNames
      properties:
        useGuestCredentials:
          description: "If *true*, Veeam Backup & Replication uses credentials specified\
            \ in the guest processing settings."
          type: boolean
        credentials:
          $ref: '#/components/schemas/CredentialsImportModel'
        archiveLogs:
          $ref: '#/components/schemas/EBackupOracleLogsSettings'
        deleteHoursCount:
          description: Time period in hours to keep archived logs. This parameter
            should be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredHours*.
          type: integer
        deleteGBsCount:
          description: Maximum size for archived logs in GB. This parameter should
            be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredGBs*.
          type: integer
        backupLogs:
          description: "If *true*, archived logs are backed up."
          type: boolean
        backupMinsCount:
          description: "Frequency of archived log backup, in minutes."
          type: integer
        retainLogBackups:
          $ref: '#/components/schemas/ERetainLogBackupsType'
        keepDaysCount:
          description: Number of days to keep archived logs.
          type: integer
        logShippingServers:
          $ref: '#/components/schemas/BackupLogShippingServersImportModel'
      required:
      - archiveLogs
      - useGuestCredentials
      type: object
    GuestOsCredentialsImportModel:
      description: VM custom credentials.
      example:
        creds:
          credentialsTag: credentialsTag
          credentialsName: credentialsName
        credentialsPerMachine:
        - vmObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          linuxCreds:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
          windowsCreds:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
        - vmObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          linuxCreds:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
          windowsCreds:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
      properties:
        creds:
          $ref: '#/components/schemas/CredentialsImportModel'
        credentialsPerMachine:
          description: Individual credentials for VMs.
          items:
            $ref: '#/components/schemas/GuestOsCredentialsPerMachineImportModel'
          type: array
          uniqueItems: true
      type: object
    GuestOsCredentialsPerMachineImportModel:
      example:
        vmObject:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
        linuxCreds:
          credentialsTag: credentialsTag
          credentialsName: credentialsName
        windowsCreds:
          credentialsTag: credentialsTag
          credentialsName: credentialsName
      properties:
        windowsCreds:
          $ref: '#/components/schemas/CredentialsImportModel'
        linuxCreds:
          $ref: '#/components/schemas/CredentialsImportModel'
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
      required:
      - vmObject
      type: object
    CredentialsImportModel:
      description: Credentials used for connection.
      example:
        credentialsTag: credentialsTag
        credentialsName: credentialsName
      properties:
        credentialsName:
          description: "User name, account name or access key."
          type: string
        credentialsTag:
          description: Tag used to identify the credentials record.
          type: string
      required:
      - credentialsName
      type: object
    GuestInteractionProxiesSettingsImportModel:
      description: Guest interaction proxy used to deploy the runtime process on the
        VM guest OS.
      example:
        automaticSelection: true
        proxies:
        - proxies
        - proxies
      properties:
        automaticSelection:
          default: true
          description: "If *true*, Veeam Backup & Replication automatically selects\
            \ the guest interaction proxy."
          type: boolean
        proxies:
          description: Array of proxies specified explicitly. The array must contain
            Microsoft Windows servers added to the backup infrastructure only.
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - automaticSelection
      type: object
    JobExportSpec:
      example:
        types:
        - types
        - types
        names:
        - names
        - names
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ids:
          description: Array of job IDs.
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
        types:
          description: Array of job types.
          items:
            type: string
          type: array
          uniqueItems: true
        names:
          description: Array of job names. Wildcard characters are supported.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    ViRootFilters:
      properties:
        skip:
          description: Number of VMware vSphere servers to skip.
          format: int32
          type: integer
        limit:
          description: Maximum number of VMware vSphere servers to return.
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EViRootFiltersOrderColumn'
        orderAsc:
          description: Sorts VMware vSphere servers in the ascending order by the
            `orderColumn` parameter.
          type: boolean
        nameFilter:
          description: "Filters VMware vSphere servers by the `nameFilter` pattern.\
            \ The pattern can match any VMware vSphere server parameter. To substitute\
            \ one or more characters, use the asterisk (*) character at the beginning\
            \ and/or at the end."
          type: string
      type: object
    EViRootFiltersOrderColumn:
      description: Sorts VMware vSphere servers by one of the VMware vSphere server
        parameters.
      enum:
      - Name
      - Type
      type: string
    ViRootsResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - size: size
          inventoryObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
        - size: size
          inventoryObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
      properties:
        data:
          description: Array of VMware vSphere servers.
          items:
            $ref: '#/components/schemas/VmwareObjectSizeModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    VCenterInventoryFilters:
      properties:
        skip:
          description: Number of objects to skip.
          format: int32
          type: integer
        limit:
          description: Maximum number of objects to return.
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EvCentersInventoryFiltersOrderColumn'
        orderAsc:
          description: Sorts objects in the ascending order by the `orderColumn` parameter.
          type: boolean
        objectIdFilter:
          description: Filters objects by object ID.
          type: string
        hierarchyTypeFilter:
          $ref: '#/components/schemas/EHierarchyType'
        nameFilter:
          description: "Filters objects by the `nameFilter` pattern. The pattern can\
            \ match any object parameter. To substitute one or more characters, use\
            \ the asterisk (*) character at the beginning, at the end or both."
          type: string
        typeFilter:
          $ref: '#/components/schemas/EVmwareInventoryType'
        parentContainerNameFilter:
          description: Filters objects by name of the parent container.
          type: string
      type: object
    EHierarchyType:
      description: Hierarchy type.
      enum:
      - HostsAndClusters
      - DatastoresAndVms
      - HostsAndDatastores
      - VmsAndTemplates
      - VmsAndTags
      - Network
      type: string
    EvCentersInventoryFiltersOrderColumn:
      description: Sorts vCenter Servers by one of the job parameters.
      enum:
      - Name
      - ObjectId
      - Type
      type: string
    VCenterInventoryResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - size: size
          inventoryObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
        - size: size
          inventoryObject:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
      properties:
        data:
          description: Array of vCenter Servers.
          items:
            $ref: '#/components/schemas/VmwareObjectSizeModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    CredentialsImportSpecCollection:
      example:
        credentials:
        - password: password
          linuxAdditionalSettings:
            addToSudoers: true
            privateKey: privateKey
            autoElevated: true
            passphrase: passphrase
            SSHPort: 0
            rootPassword: rootPassword
            useSu: true
          description: description
          tag: tag
          type: null
          username: username
        - password: password
          linuxAdditionalSettings:
            addToSudoers: true
            privateKey: privateKey
            autoElevated: true
            passphrase: passphrase
            SSHPort: 0
            rootPassword: rootPassword
            useSu: true
          description: description
          tag: tag
          type: null
          username: username
      properties:
        credentials:
          description: Array of credentials.
          items:
            $ref: '#/components/schemas/CredentialsImportSpec'
          type: array
          uniqueItems: true
      required:
      - credentials
      type: object
    CredentialsImportSpec:
      example:
        password: password
        linuxAdditionalSettings:
          addToSudoers: true
          privateKey: privateKey
          autoElevated: true
          passphrase: passphrase
          SSHPort: 0
          rootPassword: rootPassword
          useSu: true
        description: description
        tag: tag
        type: null
        username: username
      properties:
        username:
          description: User name.
          type: string
        password:
          description: Password.
          type: string
        description:
          description: Description of the credentials record.
          type: string
        tag:
          description: Tag used to identify the credentials record.
          type: string
        type:
          $ref: '#/components/schemas/ECredentialsType'
        linuxAdditionalSettings:
          $ref: '#/components/schemas/CredentialsLinuxSettingsImportModel'
      required:
      - tag
      - type
      - username
      type: object
    CredentialsLinuxSettingsImportModel:
      description: Additional Linux account settings.
      example:
        addToSudoers: true
        privateKey: privateKey
        autoElevated: true
        passphrase: passphrase
        SSHPort: 0
        rootPassword: rootPassword
        useSu: true
      properties:
        SSHPort:
          description: SSH port used to connect to a Linux server.
          type: integer
        autoElevated:
          description: "If *true*, the permissions of the account are automatically\
            \ elevated to the root user."
          type: boolean
        addToSudoers:
          description: "If *true*, the account is automatically added to the sudoers\
            \ file."
          type: boolean
        useSu:
          description: "If *true*, the `su` command is used for Linux distributions\
            \ where the `sudo` command is not available."
          type: boolean
        privateKey:
          description: Private key.
          type: string
        passphrase:
          description: Passphrase that protects the private key.
          type: string
        rootPassword:
          description: Password for the root account.
          type: string
      type: object
    CredentialsExportSpec:
      example:
        types:
        - null
        - null
        names:
        - names
        - names
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        showHiddenCreds: true
      properties:
        showHiddenCreds:
          description: "If *true*, service credentials are exported."
          type: boolean
        ids:
          description: Array of credentials IDs.
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
        types:
          description: Array of credentials types.
          items:
            $ref: '#/components/schemas/ECredentialsType'
          type: array
          uniqueItems: true
        names:
          description: Array of credentials user names. Wildcard characters are supported.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    CloudCredentialsExportSpec:
      example:
        types:
        - null
        - null
        names:
        - names
        - names
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ids:
          description: Array of cloud credentials IDs that you want to export.
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
        types:
          description: Array of cloud credentials types that you want to export.
          items:
            $ref: '#/components/schemas/ECloudCredentialsType'
          type: array
          uniqueItems: true
        names:
          description: Array of cloud credentials user names. Wildcard characters
            are supported.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    CloudCredentialsImportSpecCollection:
      example:
        amazon:
        - secretKey: secretKey
          accessKey: accessKey
          description: description
          tag: tag
          type: null
        - secretKey: secretKey
          accessKey: accessKey
          description: description
          tag: tag
          type: null
        azureCompute:
        - description: description
          tag: tag
          connectionName: connectionName
          type: null
          existingAccount:
            subscription:
              tenantId: tenantId
              certificate:
                password: password
                certificate: certificate
                formatType: null
              secret: secret
              applicationId: applicationId
            deployment:
              deploymentType: null
              region: null
        - description: description
          tag: tag
          connectionName: connectionName
          type: null
          existingAccount:
            subscription:
              tenantId: tenantId
              certificate:
                password: password
                certificate: certificate
                formatType: null
              secret: secret
              applicationId: applicationId
            deployment:
              deploymentType: null
              region: null
        azureStorage:
        - sharedKey: sharedKey
          description: description
          tag: tag
          type: null
          account: account
        - sharedKey: sharedKey
          description: description
          tag: tag
          type: null
          account: account
        google:
        - secretKey: secretKey
          accessKey: accessKey
          description: description
          tag: tag
          type: null
        - secretKey: secretKey
          accessKey: accessKey
          description: description
          tag: tag
          type: null
      properties:
        azureStorage:
          description: Array of Azure storage accounts.
          items:
            $ref: '#/components/schemas/AzureStorageCloudCredentialsImportSpec'
          type: array
          uniqueItems: true
        azureCompute:
          description: Array of Azure compute accounts.
          items:
            $ref: '#/components/schemas/AzureComputeCloudCredentialsImportSpec'
          type: array
          uniqueItems: true
        amazon:
          description: Array of AWS accounts.
          items:
            $ref: '#/components/schemas/AmazonCloudCredentialsImportSpec'
          type: array
          uniqueItems: true
        google:
          description: Array of Google accounts.
          items:
            $ref: '#/components/schemas/GoogleCloudCredentialsImportSpec'
          type: array
          uniqueItems: true
      required:
      - credentials
      type: object
    AzureStorageCloudCredentialsImportSpec:
      example:
        sharedKey: sharedKey
        description: description
        tag: tag
        type: null
        account: account
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
        description:
          description: Description of the cloud credentials record.
          type: string
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
        account:
          description: Name of the Azure storage account.
          type: string
        sharedKey:
          description: Shared key of the Azure storage account.
          type: string
      required:
      - account
      - sharedKey
      - tag
      - type
      type: object
    AzureComputeCloudCredentialsImportSpec:
      example:
        description: description
        tag: tag
        connectionName: connectionName
        type: null
        existingAccount:
          subscription:
            tenantId: tenantId
            certificate:
              password: password
              certificate: certificate
              formatType: null
            secret: secret
            applicationId: applicationId
          deployment:
            deploymentType: null
            region: null
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
        description:
          description: Description of the cloud credentials record.
          type: string
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
        connectionName:
          description: Name under which the cloud credentials record is shown in Veeam
            Backup & Replication.
          type: string
        existingAccount:
          $ref: '#/components/schemas/AzureComputeCredentialsExistingAccountSpec'
      required:
      - connectionName
      - existingAccount
      - tag
      - type
      type: object
    AmazonCloudCredentialsImportSpec:
      example:
        secretKey: secretKey
        accessKey: accessKey
        description: description
        tag: tag
        type: null
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
        description:
          description: Description of the cloud credentials record.
          type: string
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
        accessKey:
          description: ID of the access key.
          type: string
        secretKey:
          description: Secret key.
          type: string
      required:
      - accessKey
      - secretKey
      - tag
      - type
      type: object
    GoogleCloudCredentialsImportSpec:
      example:
        secretKey: secretKey
        accessKey: accessKey
        description: description
        tag: tag
        type: null
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
        description:
          description: Description of the cloud credentials record.
          type: string
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
        accessKey:
          description: Access ID of a Google HMAC key.
          type: string
        secretKey:
          description: Secret linked to the access ID.
          type: string
      required:
      - accessKey
      - secretKey
      - tag
      - type
      type: object
    ProxyExportSpec:
      example:
        types:
        - null
        - null
        names:
        - names
        - names
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ids:
          description: Array of backup proxy IDs.
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
        types:
          description: Array of backup proxy types.
          items:
            $ref: '#/components/schemas/EProxyType'
          type: array
          uniqueItems: true
        names:
          description: Array of backup proxy names. Wildcard characters are supported.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    ProxyImportSpecCollection:
      example:
        proxies:
        - server:
            maxTaskCount: 6
            hostName: hostName
            failoverToNetwork: true
            hostToProxyEncryption: true
            transportMode: null
            connectedDatastores:
              autoSelect: true
              datastores:
              - datastore:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                vmCount: 0
              - datastore:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                vmCount: 0
            hostTag: hostTag
          description: description
          type: null
        - server:
            maxTaskCount: 6
            hostName: hostName
            failoverToNetwork: true
            hostToProxyEncryption: true
            transportMode: null
            connectedDatastores:
              autoSelect: true
              datastores:
              - datastore:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                vmCount: 0
              - datastore:
                  hostName: hostName
                  name: name
                  type: null
                  objectId: objectId
                vmCount: 0
            hostTag: hostTag
          description: description
          type: null
      properties:
        proxies:
          description: Array of backup proxies.
          items:
            $ref: '#/components/schemas/ProxyImportSpec'
          type: array
          uniqueItems: true
      required:
      - proxies
      type: object
    ProxyImportSpec:
      example:
        server:
          maxTaskCount: 6
          hostName: hostName
          failoverToNetwork: true
          hostToProxyEncryption: true
          transportMode: null
          connectedDatastores:
            autoSelect: true
            datastores:
            - datastore:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              vmCount: 0
            - datastore:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              vmCount: 0
          hostTag: hostTag
        description: description
        type: null
      properties:
        description:
          description: Description of the backup proxy.
          type: string
        type:
          $ref: '#/components/schemas/EProxyType'
        server:
          $ref: '#/components/schemas/ProxyServerSettingsImportSpec'
      required:
      - description
      - server
      - type
      type: object
    ProxyServerSettingsImportSpec:
      description: Settings of the server that is used as a backup proxy.
      example:
        maxTaskCount: 6
        hostName: hostName
        failoverToNetwork: true
        hostToProxyEncryption: true
        transportMode: null
        connectedDatastores:
          autoSelect: true
          datastores:
          - datastore:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            vmCount: 0
          - datastore:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            vmCount: 0
        hostTag: hostTag
      properties:
        hostName:
          description: Name of the server.
          type: string
        hostTag:
          description: Tag assigned to the server.
          type: string
        transportMode:
          $ref: '#/components/schemas/EBackupProxyTransportMode'
        failoverToNetwork:
          description: "(For the Direct storage access and Virtual appliance transport\
            \ modes) If *true*, Veeam Backup & Replication failovers to the network\
            \ transport mode in case the primary mode fails or is unavailable."
          type: boolean
        hostToProxyEncryption:
          description: "(For the Network mode) If *true*, VM data is transferred over\
            \ an encrypted TLS connection."
          type: boolean
        connectedDatastores:
          $ref: '#/components/schemas/ProxyDatastoreSettingsModel'
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
      required:
      - hostName
      type: object
    ManageServerExportSpec:
      example:
        types:
        - null
        - null
        names:
        - names
        - names
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ids:
          description: Array of server IDs.
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
        types:
          description: Array of server types.
          items:
            $ref: '#/components/schemas/EManagedServerType'
          type: array
          uniqueItems: true
        names:
          description: Array of server names. Wildcard characters are supported.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    ManageServerImportSpecCollection:
      example:
        linuxHosts:
        - sshFingerprint: sshFingerprint
          credentials:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
          name: name
          description: description
          type: null
          sshSettings:
            managementPort: 7
            serverThisSide: true
            portRangeStart: 5
            portRangeEnd: 2
            sshTimeOutMs: 5
        - sshFingerprint: sshFingerprint
          credentials:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
          name: name
          description: description
          type: null
          sshSettings:
            managementPort: 7
            serverThisSide: true
            portRangeStart: 5
            portRangeEnd: 2
            sshTimeOutMs: 5
        windowsHosts:
        - networkSettings:
            components:
            - port: 0
              componentName: null
            - port: 0
              componentName: null
            serverThisSide: true
            portRangeStart: 6
            portRangeEnd: 1
          credentials:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
          name: name
          description: description
          type: null
        - networkSettings:
            components:
            - port: 0
              componentName: null
            - port: 0
              componentName: null
            serverThisSide: true
            portRangeStart: 6
            portRangeEnd: 1
          credentials:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
          name: name
          description: description
          type: null
        viHosts:
        - credentials:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
          port: 9
          certificateThumbprint: certificateThumbprint
          name: name
          description: description
          type: null
          viHostType: null
        - credentials:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
          port: 9
          certificateThumbprint: certificateThumbprint
          name: name
          description: description
          type: null
          viHostType: null
      properties:
        windowsHosts:
          description: Array of managed Microsoft Windows servers.
          items:
            $ref: '#/components/schemas/WindowsHostImportSpec'
          type: array
          uniqueItems: true
        linuxHosts:
          description: Array of managed Linux servers.
          items:
            $ref: '#/components/schemas/LinuxHostImportSpec'
          type: array
          uniqueItems: true
        viHosts:
          description: Array of VMware vSphere servers.
          items:
            $ref: '#/components/schemas/ViHostImportSpec'
          type: array
          uniqueItems: true
      type: object
    WindowsHostImportSpec:
      example:
        networkSettings:
          components:
          - port: 0
            componentName: null
          - port: 0
            componentName: null
          serverThisSide: true
          portRangeStart: 6
          portRangeEnd: 1
        credentials:
          credentialsTag: credentialsTag
          credentialsName: credentialsName
        name: name
        description: description
        type: null
      properties:
        name:
          description: Full DNS name or IP address of the server.
          type: string
        description:
          description: Description of the server.
          type: string
        type:
          $ref: '#/components/schemas/EManagedServerType'
        credentials:
          $ref: '#/components/schemas/CredentialsImportModel'
        networkSettings:
          $ref: '#/components/schemas/WindowsHostPortsModel'
      required:
      - description
      - name
      - type
      type: object
    LinuxHostImportSpec:
      example:
        sshFingerprint: sshFingerprint
        credentials:
          credentialsTag: credentialsTag
          credentialsName: credentialsName
        name: name
        description: description
        type: null
        sshSettings:
          managementPort: 7
          serverThisSide: true
          portRangeStart: 5
          portRangeEnd: 2
          sshTimeOutMs: 5
      properties:
        name:
          description: Full DNS name or IP address of the server.
          type: string
        description:
          description: Description of the server.
          type: string
        type:
          $ref: '#/components/schemas/EManagedServerType'
        credentials:
          $ref: '#/components/schemas/CredentialsImportModel'
        sshSettings:
          $ref: '#/components/schemas/LinuxHostSSHSettingsModel'
        sshFingerprint:
          description: SSH key fingerprint used to verify the server identity.
          type: string
      required:
      - credentials
      - description
      - name
      - sshFingerprint
      - type
      type: object
    ViHostImportSpec:
      example:
        credentials:
          credentialsTag: credentialsTag
          credentialsName: credentialsName
        port: 9
        certificateThumbprint: certificateThumbprint
        name: name
        description: description
        type: null
        viHostType: null
      properties:
        name:
          description: Full DNS name or IP address of the server.
          type: string
        description:
          description: Description of the server.
          type: string
        type:
          $ref: '#/components/schemas/EManagedServerType'
        viHostType:
          $ref: '#/components/schemas/EViHostType'
        credentials:
          $ref: '#/components/schemas/CredentialsImportModel'
        port:
          description: Port used to communicate with the server.
          type: integer
        certificateThumbprint:
          description: Certificate thumbprint used to verify the server identity.
          type: string
      required:
      - credentials
      - description
      - name
      - type
      - viHostType
      type: object
    RepositoryExportSpec:
      example:
        types:
        - null
        - null
        names:
        - names
        - names
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ids:
          description: Array of repository IDs.
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
        types:
          description: Array of repository types.
          items:
            $ref: '#/components/schemas/ERepositoryType'
          type: array
          uniqueItems: true
        names:
          description: Array of repository names. Wildcard characters are supported.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    RepositoryImportSpecCollection:
      example:
        AzureBlobStorages:
        - enableTaskLimit: true
          maxTaskCount: 3
          container:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            containerName: containerName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            regionType: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
          proxyAppliance:
            instanceSize: instanceSize
            resourceGroup: resourceGroup
            subnet: subnet
            redirectorPort: 4
            subscriptionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            virtualNetwork: virtualNetwork
        - enableTaskLimit: true
          maxTaskCount: 3
          container:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            containerName: containerName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            regionType: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
          proxyAppliance:
            instanceSize: instanceSize
            resourceGroup: resourceGroup
            subnet: subnet
            redirectorPort: 4
            subscriptionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            virtualNetwork: virtualNetwork
        AmazonS3Storages:
        - enableTaskLimit: true
          maxTaskCount: 1
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            immutability:
              isEnabled: true
              daysCount: 1
            infrequentAccessStorage:
              singleZoneEnabled: true
              isEnabled: true
            bucketName: bucketName
            regionId: regionId
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            regionType: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
          proxyAppliance:
            subnet: subnet
            ec2InstanceType: ec2InstanceType
            vpc: vpc
            redirectorPort: 1
            securityGroup: securityGroup
        - enableTaskLimit: true
          maxTaskCount: 1
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            immutability:
              isEnabled: true
              daysCount: 1
            infrequentAccessStorage:
              singleZoneEnabled: true
              isEnabled: true
            bucketName: bucketName
            regionId: regionId
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            regionType: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
          proxyAppliance:
            subnet: subnet
            ec2InstanceType: ec2InstanceType
            vpc: vpc
            redirectorPort: 1
            securityGroup: securityGroup
        LinuxHardenedRepositories:
        - hostName: hostName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          repository:
            enableTaskLimit: true
            maxTaskCount: 9
            path: path
            makeRecentBackupsImmutableDays: 6
            enableReadWriteLimit: true
            useFastCloningOnXFSVolumes: true
            advancedSettings:
              perVmBackup: true
              RotatedDriveCleanupMode: null
              decompressBeforeStoring: true
              rotatedDrives: true
              alignDataBlocks: true
            readWriteRate: 9
        - hostName: hostName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          repository:
            enableTaskLimit: true
            maxTaskCount: 9
            path: path
            makeRecentBackupsImmutableDays: 6
            enableReadWriteLimit: true
            useFastCloningOnXFSVolumes: true
            advancedSettings:
              perVmBackup: true
              RotatedDriveCleanupMode: null
              decompressBeforeStoring: true
              rotatedDrives: true
              alignDataBlocks: true
            readWriteRate: 9
        LinuxLocalRepositories:
        - hostName: hostName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          repository:
            enableTaskLimit: true
            maxTaskCount: 5
            path: path
            enableReadWriteLimit: true
            useFastCloningOnXFSVolumes: true
            advancedSettings:
              perVmBackup: true
              RotatedDriveCleanupMode: null
              decompressBeforeStoring: true
              rotatedDrives: true
              alignDataBlocks: true
            readWriteRate: 2
        - hostName: hostName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          repository:
            enableTaskLimit: true
            maxTaskCount: 5
            path: path
            enableReadWriteLimit: true
            useFastCloningOnXFSVolumes: true
            advancedSettings:
              perVmBackup: true
              RotatedDriveCleanupMode: null
              decompressBeforeStoring: true
              rotatedDrives: true
              alignDataBlocks: true
            readWriteRate: 2
        AmazonS3GlacierStorages:
        - bucket:
            bucketName: bucketName
            useDeepArchive: true
            immutabilityEnabled: true
            regionId: regionId
            folderName: folderName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            regionType: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
          proxyAppliance:
            subnet: subnet
            ec2InstanceType: ec2InstanceType
            vpc: vpc
            redirectorPort: 1
            securityGroup: securityGroup
        - bucket:
            bucketName: bucketName
            useDeepArchive: true
            immutabilityEnabled: true
            regionId: regionId
            folderName: folderName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            regionType: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
          proxyAppliance:
            subnet: subnet
            ec2InstanceType: ec2InstanceType
            vpc: vpc
            redirectorPort: 1
            securityGroup: securityGroup
        AmazonSnowballEdgeStorages:
        - enableTaskLimit: true
          maxTaskCount: 6
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            bucketName: bucketName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            regionId: regionId
            credentials:
              name: name
              tag: tag
              type: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
            servicePoint: servicePoint
        - enableTaskLimit: true
          maxTaskCount: 6
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            bucketName: bucketName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            regionId: regionId
            credentials:
              name: name
              tag: tag
              type: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
            servicePoint: servicePoint
        WindowsLocalRepositories:
        - hostName: hostName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          repository:
            enableTaskLimit: true
            maxTaskCount: 0
            path: path
            enableReadWriteLimit: true
            advancedSettings:
              perVmBackup: true
              RotatedDriveCleanupMode: null
              decompressBeforeStoring: true
              rotatedDrives: true
              alignDataBlocks: true
            readWriteRate: 6
        - hostName: hostName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          repository:
            enableTaskLimit: true
            maxTaskCount: 0
            path: path
            enableReadWriteLimit: true
            advancedSettings:
              perVmBackup: true
              RotatedDriveCleanupMode: null
              decompressBeforeStoring: true
              rotatedDrives: true
              alignDataBlocks: true
            readWriteRate: 6
        WasabiCloudStorages:
        - enableTaskLimit: true
          maxTaskCount: 5
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            immutability:
              isEnabled: true
              daysCount: 1
            bucketName: bucketName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            regionId: regionId
            credentials:
              name: name
              tag: tag
              type: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
          proxyAppliance:
            managedServerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - enableTaskLimit: true
          maxTaskCount: 5
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            immutability:
              isEnabled: true
              daysCount: 1
            bucketName: bucketName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            regionId: regionId
            credentials:
              name: name
              tag: tag
              type: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
          proxyAppliance:
            managedServerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        SmbRepositories:
        - mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          share:
            credentials:
              credentialsTag: credentialsTag
              credentialsName: credentialsName
            sharePath: sharePath
            gatewayServer:
              autoSelect: true
              gatewayServerName: gatewayServerName
          tag: tag
          type: null
          repository:
            enableTaskLimit: true
            maxTaskCount: 7
            enableReadWriteLimit: true
            advancedSettings:
              perVmBackup: true
              RotatedDriveCleanupMode: null
              decompressBeforeStoring: true
              rotatedDrives: true
              alignDataBlocks: true
            readWriteRate: 9
        - mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          share:
            credentials:
              credentialsTag: credentialsTag
              credentialsName: credentialsName
            sharePath: sharePath
            gatewayServer:
              autoSelect: true
              gatewayServerName: gatewayServerName
          tag: tag
          type: null
          repository:
            enableTaskLimit: true
            maxTaskCount: 7
            enableReadWriteLimit: true
            advancedSettings:
              perVmBackup: true
              RotatedDriveCleanupMode: null
              decompressBeforeStoring: true
              rotatedDrives: true
              alignDataBlocks: true
            readWriteRate: 9
        S3CompatibleStorages:
        - enableTaskLimit: true
          maxTaskCount: 7
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            immutability:
              isEnabled: true
              daysCount: 1
            bucketName: bucketName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            regionId: regionId
            credentials:
              name: name
              tag: tag
              type: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
            servicePoint: servicePoint
          proxyAppliance:
            managedServerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - enableTaskLimit: true
          maxTaskCount: 7
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            immutability:
              isEnabled: true
              daysCount: 1
            bucketName: bucketName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            regionId: regionId
            credentials:
              name: name
              tag: tag
              type: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
            servicePoint: servicePoint
          proxyAppliance:
            managedServerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        AzureDataBoxStorages:
        - enableTaskLimit: true
          maxTaskCount: 7
          container:
            containerName: containerName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
            serviceEndpoint: serviceEndpoint
        - enableTaskLimit: true
          maxTaskCount: 7
          container:
            containerName: containerName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
            serviceEndpoint: serviceEndpoint
        IBMCloudStorages:
        - enableTaskLimit: true
          maxTaskCount: 4
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            immutability:
              isEnabled: true
              daysCount: 1
            bucketName: bucketName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            regionId: regionId
            credentials:
              name: name
              tag: tag
              type: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
            servicePoint: servicePoint
          proxyAppliance:
            managedServerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - enableTaskLimit: true
          maxTaskCount: 4
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            immutability:
              isEnabled: true
              daysCount: 1
            bucketName: bucketName
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            regionId: regionId
            credentials:
              name: name
              tag: tag
              type: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
            servicePoint: servicePoint
          proxyAppliance:
            managedServerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        AzureArchiveStorages:
        - container:
            containerName: containerName
            folderName: folderName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            regionType: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
          proxyAppliance:
            instanceSize: instanceSize
            resourceGroup: resourceGroup
            subnet: subnet
            redirectorPort: 4
            subscriptionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            virtualNetwork: virtualNetwork
        - container:
            containerName: containerName
            folderName: folderName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            regionType: null
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
          proxyAppliance:
            instanceSize: instanceSize
            resourceGroup: resourceGroup
            subnet: subnet
            redirectorPort: 4
            subscriptionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            virtualNetwork: virtualNetwork
        GoogleCloudStorages:
        - enableTaskLimit: true
          maxTaskCount: 1
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            bucketName: bucketName
            nearlineStorageEnabled: true
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            regionId: regionId
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
        - enableTaskLimit: true
          maxTaskCount: 1
          bucket:
            storageConsumptionLimit:
              consumptionLimitCount: 2
              isEnabled: true
              consumptionLimitKind: null
            bucketName: bucketName
            nearlineStorageEnabled: true
            folderName: folderName
          mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          tag: tag
          type: null
          account:
            credentials:
              name: name
              tag: tag
              type: null
            regionId: regionId
            connectionSettings:
              gatewayServers:
              - gatewayServers
              - gatewayServers
              connectionType: null
        NfsRepositories:
        - mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          share:
            sharePath: sharePath
            gatewayServer:
              autoSelect: true
              gatewayServerName: gatewayServerName
          tag: tag
          type: null
          repository:
            enableTaskLimit: true
            maxTaskCount: 7
            enableReadWriteLimit: true
            advancedSettings:
              perVmBackup: true
              RotatedDriveCleanupMode: null
              decompressBeforeStoring: true
              rotatedDrives: true
              alignDataBlocks: true
            readWriteRate: 9
        - mountServer:
            writeCacheFolder: writeCacheFolder
            vPowerNFSPortSettings:
              vPowerNFSPort: 5
              mountPort: 1
            vPowerNFSEnabled: true
            mountServerName: mountServerName
          name: name
          description: description
          share:
            sharePath: sharePath
            gatewayServer:
              autoSelect: true
              gatewayServerName: gatewayServerName
          tag: tag
          type: null
          repository:
            enableTaskLimit: true
            maxTaskCount: 7
            enableReadWriteLimit: true
            advancedSettings:
              perVmBackup: true
              RotatedDriveCleanupMode: null
              decompressBeforeStoring: true
              rotatedDrives: true
              alignDataBlocks: true
            readWriteRate: 9
      properties:
        WindowsLocalRepositories:
          description: Array of Microsoft Windows-based repositories.
          items:
            $ref: '#/components/schemas/WindowsLocalStorageImportSpec'
          type: array
          uniqueItems: true
        LinuxLocalRepositories:
          description: Array of Microsoft Linux-based repositories.
          items:
            $ref: '#/components/schemas/LinuxLocalStorageImportSpec'
          type: array
          uniqueItems: true
        SmbRepositories:
          description: Array of SMB backup repositories.
          items:
            $ref: '#/components/schemas/SmbStorageImportSpec'
          type: array
          uniqueItems: true
        NfsRepositories:
          description: Array of NFS backup repositories.
          items:
            $ref: '#/components/schemas/NfsStorageImportSpec'
          type: array
          uniqueItems: true
        AzureBlobStorages:
          description: Array of Microsoft Azure Blob storages.
          items:
            $ref: '#/components/schemas/AzureBlobStorageImportSpec'
          type: array
          uniqueItems: true
        AzureDataBoxStorages:
          description: Array of Microsoft Azure Data Box storages.
          items:
            $ref: '#/components/schemas/AzureDataBoxStorageImportSpec'
          type: array
          uniqueItems: true
        AmazonS3Storages:
          description: Array of Amazon S3 storages.
          items:
            $ref: '#/components/schemas/AmazonS3StorageImportSpec'
          type: array
          uniqueItems: true
        AmazonSnowballEdgeStorages:
          description: Array of AWS Snowball Edge storages.
          items:
            $ref: '#/components/schemas/AmazonSnowballEdgeStorageImportSpec'
          type: array
          uniqueItems: true
        S3CompatibleStorages:
          description: Array of S3 compatible storages.
          items:
            $ref: '#/components/schemas/S3CompatibleStorageImportSpec'
          type: array
          uniqueItems: true
        GoogleCloudStorages:
          description: Array of Google Cloud storages.
          items:
            $ref: '#/components/schemas/GoogleCloudStorageImportSpec'
          type: array
          uniqueItems: true
        IBMCloudStorages:
          description: Array of IBM Cloud storages.
          items:
            $ref: '#/components/schemas/IBMCloudStorageImportSpec'
          type: array
          uniqueItems: true
        AmazonS3GlacierStorages:
          description: Array of Amazon S3 Glacier storages.
          items:
            $ref: '#/components/schemas/AmazonS3GlacierStorageImportSpec'
          type: array
          uniqueItems: true
        AzureArchiveStorages:
          description: Array of Microsoft Azure Archive storages.
          items:
            $ref: '#/components/schemas/AzureArchiveStorageImportSpec'
          type: array
          uniqueItems: true
        WasabiCloudStorages:
          description: Array of Wasabi Cloud storages.
          items:
            $ref: '#/components/schemas/WasabiCloudStorageImportSpec'
          type: array
          uniqueItems: true
        LinuxHardenedRepositories:
          description: Array of Linux hardened repositories.
          items:
            $ref: '#/components/schemas/LinuxHardenedStorageImportSpec'
          type: array
          uniqueItems: true
      type: object
    WindowsLocalStorageImportSpec:
      example:
        hostName: hostName
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        tag: tag
        type: null
        repository:
          enableTaskLimit: true
          maxTaskCount: 0
          path: path
          enableReadWriteLimit: true
          advancedSettings:
            perVmBackup: true
            RotatedDriveCleanupMode: null
            decompressBeforeStoring: true
            rotatedDrives: true
            alignDataBlocks: true
          readWriteRate: 6
      properties:
        name:
          description: Name of the backup repository.
          type: string
        description:
          description: Description of the backup repository.
          type: string
        tag:
          description: Tag that identifies the backup repository.
          type: string
        hostName:
          description: ID of the server that is used as a backup repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        repository:
          $ref: '#/components/schemas/WindowsLocalRepositorySettingsModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
      required:
      - description
      - hostName
      - kind
      - mountServer
      - name
      - repository
      - tag
      - type
      type: object
    LinuxLocalStorageImportSpec:
      example:
        hostName: hostName
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        tag: tag
        type: null
        repository:
          enableTaskLimit: true
          maxTaskCount: 5
          path: path
          enableReadWriteLimit: true
          useFastCloningOnXFSVolumes: true
          advancedSettings:
            perVmBackup: true
            RotatedDriveCleanupMode: null
            decompressBeforeStoring: true
            rotatedDrives: true
            alignDataBlocks: true
          readWriteRate: 2
      properties:
        name:
          description: Name of the backup repository.
          type: string
        description:
          description: Description of the backup repository.
          type: string
        tag:
          description: Tag that identifies the backup repository.
          type: string
        hostName:
          description: ID of the server that is used as a backup repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        repository:
          $ref: '#/components/schemas/LinuxLocalRepositorySettingsModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
      required:
      - description
      - hostName
      - kind
      - mountServer
      - name
      - repository
      - tag
      - type
      type: object
    LinuxHardenedStorageImportSpec:
      example:
        hostName: hostName
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        tag: tag
        type: null
        repository:
          enableTaskLimit: true
          maxTaskCount: 9
          path: path
          makeRecentBackupsImmutableDays: 6
          enableReadWriteLimit: true
          useFastCloningOnXFSVolumes: true
          advancedSettings:
            perVmBackup: true
            RotatedDriveCleanupMode: null
            decompressBeforeStoring: true
            rotatedDrives: true
            alignDataBlocks: true
          readWriteRate: 9
      properties:
        name:
          description: Name of the backup repository.
          type: string
        description:
          description: Description of the backup repository.
          type: string
        tag:
          description: Tag that identifies the backup repository.
          type: string
        hostName:
          description: ID of the server that is used as a backup repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        repository:
          $ref: '#/components/schemas/LinuxHardenedRepositorySettingsModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
      required:
      - description
      - hostName
      - kind
      - mountServer
      - name
      - repository
      - tag
      - type
      type: object
    MountServerSettingsImportSpec:
      description: Settings for the mount server that is used for file-level and application
        items restore.
      example:
        writeCacheFolder: writeCacheFolder
        vPowerNFSPortSettings:
          vPowerNFSPort: 5
          mountPort: 1
        vPowerNFSEnabled: true
        mountServerName: mountServerName
      properties:
        mountServerName:
          description: Name of the mount server.
          type: string
        writeCacheFolder:
          description: Path to the folder used for writing cache during mount operations.
          type: string
        vPowerNFSEnabled:
          description: "If *true*, the vPower NFS Service is enabled on the mount\
            \ server."
          type: boolean
        vPowerNFSPortSettings:
          $ref: '#/components/schemas/VPowerNFSPortSettingsModel'
      required:
      - mountServerName
      - vPowerNFSEnabled
      - writeCacheFolder
      type: object
    SmbStorageImportSpec:
      example:
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        share:
          credentials:
            credentialsTag: credentialsTag
            credentialsName: credentialsName
          sharePath: sharePath
          gatewayServer:
            autoSelect: true
            gatewayServerName: gatewayServerName
        tag: tag
        type: null
        repository:
          enableTaskLimit: true
          maxTaskCount: 7
          enableReadWriteLimit: true
          advancedSettings:
            perVmBackup: true
            RotatedDriveCleanupMode: null
            decompressBeforeStoring: true
            rotatedDrives: true
            alignDataBlocks: true
          readWriteRate: 9
      properties:
        name:
          description: Name of the backup repository.
          type: string
        description:
          description: Description of the backup repository.
          type: string
        tag:
          description: Tag that identifies the backup repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        share:
          $ref: '#/components/schemas/SmbRepositoryShareSettingsSpec'
        repository:
          $ref: '#/components/schemas/NetworkRepositorySettingsModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
      required:
      - description
      - kind
      - mountServer
      - name
      - repository
      - share
      - tag
      - type
      type: object
    NfsStorageImportSpec:
      example:
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        share:
          sharePath: sharePath
          gatewayServer:
            autoSelect: true
            gatewayServerName: gatewayServerName
        tag: tag
        type: null
        repository:
          enableTaskLimit: true
          maxTaskCount: 7
          enableReadWriteLimit: true
          advancedSettings:
            perVmBackup: true
            RotatedDriveCleanupMode: null
            decompressBeforeStoring: true
            rotatedDrives: true
            alignDataBlocks: true
          readWriteRate: 9
      properties:
        name:
          description: Name of the backup repository.
          type: string
        description:
          description: Description of the backup repository.
          type: string
        tag:
          description: Tag that identifies the backup repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        share:
          $ref: '#/components/schemas/NfsRepositoryShareSettingsSpec'
        repository:
          $ref: '#/components/schemas/NetworkRepositorySettingsModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
      required:
      - description
      - kind
      - mountServer
      - name
      - repository
      - share
      - tag
      - type
      type: object
    SmbRepositoryShareSettingsSpec:
      description: Share settings.
      example:
        credentials:
          credentialsTag: credentialsTag
          credentialsName: credentialsName
        sharePath: sharePath
        gatewayServer:
          autoSelect: true
          gatewayServerName: gatewayServerName
      properties:
        sharePath:
          description: Path to the shared folder that is used as a backup repository.
          type: string
        credentials:
          $ref: '#/components/schemas/CredentialsImportModel'
        gatewayServer:
          $ref: '#/components/schemas/RepositoryShareGatewayImportSpec'
      required:
      - credentials
      - sharePath
      type: object
    NfsRepositoryShareSettingsSpec:
      example:
        sharePath: sharePath
        gatewayServer:
          autoSelect: true
          gatewayServerName: gatewayServerName
      properties:
        sharePath:
          description: Path to the shared folder that is used as a backup repository.
          type: string
        gatewayServer:
          $ref: '#/components/schemas/RepositoryShareGatewayImportSpec'
      required:
      - sharePath
      type: object
    RepositoryShareGatewayImportSpec:
      description: Settings for the gateway server.
      example:
        autoSelect: true
        gatewayServerName: gatewayServerName
      properties:
        autoSelect:
          description: "If *true*, Veeam Backup & Replication automatically selects\
            \ a gateway server."
          type: boolean
        gatewayServerName:
          description: Name of the gateway server.
          type: string
      type: object
    AzureBlobStorageImportSpec:
      example:
        enableTaskLimit: true
        maxTaskCount: 3
        container:
          storageConsumptionLimit:
            consumptionLimitCount: 2
            isEnabled: true
            consumptionLimitKind: null
          containerName: containerName
          folderName: folderName
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        tag: tag
        type: null
        account:
          credentials:
            name: name
            tag: tag
            type: null
          regionType: null
          connectionSettings:
            gatewayServers:
            - gatewayServers
            - gatewayServers
            connectionType: null
        proxyAppliance:
          instanceSize: instanceSize
          resourceGroup: resourceGroup
          subnet: subnet
          redirectorPort: 4
          subscriptionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          virtualNetwork: virtualNetwork
      properties:
        name:
          description: Name of the object storage repository.
          type: string
        description:
          description: Description of the object storage repository.
          type: string
        tag:
          description: Tag that identifies the object storage repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/AzureBlobStorageAccountImportModel'
        container:
          $ref: '#/components/schemas/AzureBlobStorageContainerModel'
        proxyAppliance:
          $ref: '#/components/schemas/AzureStorageProxyModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
      required:
      - account
      - container
      - description
      - mountServer
      - name
      - tag
      - type
      type: object
    AzureBlobStorageAccountImportModel:
      description: Account used to access the Azure Blob storage.
      example:
        credentials:
          name: name
          tag: tag
          type: null
        regionType: null
        connectionSettings:
          gatewayServers:
          - gatewayServers
          - gatewayServers
          connectionType: null
      properties:
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionType:
          $ref: '#/components/schemas/EAzureRegionType'
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
      required:
      - credentials
      - gatewayServer
      - regionType
      type: object
    CloudCredentialsImportModel:
      description: Cloud credentials used for connection.
      example:
        name: name
        tag: tag
        type: null
      properties:
        name:
          description: "User name, account name or access key."
          type: string
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
      - name
      - tag
      - type
      type: object
    ObjectStorageConnectionImportSpec:
      description: Object storage connection settings.
      example:
        gatewayServers:
        - gatewayServers
        - gatewayServers
        connectionType: null
      properties:
        connectionType:
          $ref: '#/components/schemas/ERepositoryConnectionType'
        gatewayServers:
          description: Array of gateway server IDs. The value is *null* if the connection
            type is *Direct*.
          items:
            type: string
          type: array
      required:
      - connectionType
      type: object
    AzureDataBoxStorageImportSpec:
      example:
        enableTaskLimit: true
        maxTaskCount: 7
        container:
          containerName: containerName
          folderName: folderName
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        tag: tag
        type: null
        account:
          credentials:
            name: name
            tag: tag
            type: null
          connectionSettings:
            gatewayServers:
            - gatewayServers
            - gatewayServers
            connectionType: null
          serviceEndpoint: serviceEndpoint
      properties:
        name:
          description: Name of the object storage repository.
          type: string
        description:
          description: Description of the object storage repository.
          type: string
        tag:
          description: Tag that identifies the object storage repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/AzureDataBoxStorageAccountImportModel'
        container:
          $ref: '#/components/schemas/AzureDataBoxStorageContainerModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
      required:
      - account
      - container
      - description
      - mountServer
      - name
      - tag
      - type
      type: object
    AzureDataBoxStorageAccountImportModel:
      description: Account used to access the Azure Data Box storage.
      example:
        credentials:
          name: name
          tag: tag
          type: null
        connectionSettings:
          gatewayServers:
          - gatewayServers
          - gatewayServers
          connectionType: null
        serviceEndpoint: serviceEndpoint
      properties:
        serviceEndpoint:
          description: Service endpoint address of the Azure Data Box device.
          type: string
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
      required:
      - connectionSettings
      - credentials
      - serviceEndpoint
      type: object
    AmazonS3StorageImportSpec:
      example:
        enableTaskLimit: true
        maxTaskCount: 1
        bucket:
          storageConsumptionLimit:
            consumptionLimitCount: 2
            isEnabled: true
            consumptionLimitKind: null
          immutability:
            isEnabled: true
            daysCount: 1
          infrequentAccessStorage:
            singleZoneEnabled: true
            isEnabled: true
          bucketName: bucketName
          regionId: regionId
          folderName: folderName
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        tag: tag
        type: null
        account:
          credentials:
            name: name
            tag: tag
            type: null
          regionType: null
          connectionSettings:
            gatewayServers:
            - gatewayServers
            - gatewayServers
            connectionType: null
        proxyAppliance:
          subnet: subnet
          ec2InstanceType: ec2InstanceType
          vpc: vpc
          redirectorPort: 1
          securityGroup: securityGroup
      properties:
        name:
          description: Name of the object storage repository.
          type: string
        description:
          description: Description of the object storage repository.
          type: string
        tag:
          description: Tag that identifies the object storage repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/AmazonS3StorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/AmazonS3StorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        proxyAppliance:
          $ref: '#/components/schemas/AmazonS3StorageProxyApplianceModel'
      required:
      - account
      - bucket
      - description
      - mountServer
      - name
      - tag
      - type
      type: object
    AmazonS3StorageAccountImportModel:
      description: Account used to access the Amazon S3 storage.
      example:
        credentials:
          name: name
          tag: tag
          type: null
        regionType: null
        connectionSettings:
          gatewayServers:
          - gatewayServers
          - gatewayServers
          connectionType: null
      properties:
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionType:
          $ref: '#/components/schemas/EAmazonRegionType'
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
      required:
      - connectionSettings
      - credentials
      - regionType
      type: object
    AmazonSnowballEdgeStorageImportSpec:
      example:
        enableTaskLimit: true
        maxTaskCount: 6
        bucket:
          storageConsumptionLimit:
            consumptionLimitCount: 2
            isEnabled: true
            consumptionLimitKind: null
          bucketName: bucketName
          folderName: folderName
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        tag: tag
        type: null
        account:
          regionId: regionId
          credentials:
            name: name
            tag: tag
            type: null
          connectionSettings:
            gatewayServers:
            - gatewayServers
            - gatewayServers
            connectionType: null
          servicePoint: servicePoint
      properties:
        name:
          description: Name of the object storage repository.
          type: string
        description:
          description: Description of the object storage repository.
          type: string
        tag:
          description: Tag that identifies the object storage repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/AmazonSnowballEdgeStorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/AmazonSnowballEdgeStorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
      required:
      - account
      - bucket
      - description
      - mountServer
      - name
      - tag
      - type
      type: object
    AmazonSnowballEdgeStorageAccountImportModel:
      description: AWS account used to access the AWS Snowball Edge storage.
      example:
        regionId: regionId
        credentials:
          name: name
          tag: tag
          type: null
        connectionSettings:
          gatewayServers:
          - gatewayServers
          - gatewayServers
          connectionType: null
        servicePoint: servicePoint
      properties:
        servicePoint:
          description: Service point address and port number of the AWS Snowball Edge
            device.
          type: string
        regionId:
          description: "For AWS Snowball Edge, the region is *snow*."
          type: string
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
      required:
      - connectionSettings
      - credentials
      - regionId
      - servicePoint
      type: object
    S3CompatibleStorageImportSpec:
      example:
        enableTaskLimit: true
        maxTaskCount: 7
        bucket:
          storageConsumptionLimit:
            consumptionLimitCount: 2
            isEnabled: true
            consumptionLimitKind: null
          immutability:
            isEnabled: true
            daysCount: 1
          bucketName: bucketName
          folderName: folderName
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        tag: tag
        type: null
        account:
          regionId: regionId
          credentials:
            name: name
            tag: tag
            type: null
          connectionSettings:
            gatewayServers:
            - gatewayServers
            - gatewayServers
            connectionType: null
          servicePoint: servicePoint
        proxyAppliance:
          managedServerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          description: Name of the object storage repository.
          type: string
        description:
          description: Description of the object storage repository.
          type: string
        tag:
          description: Tag that identifies the object storage repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/S3CompatibleStorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/S3CompatibleStorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        proxyAppliance:
          $ref: '#/components/schemas/S3CompatibleProxyModel'
      required:
      - account
      - bucket
      - description
      - mountServer
      - name
      - tag
      - type
      type: object
    S3CompatibleStorageAccountImportModel:
      description: Account used to access the S3 compatible storage.
      example:
        regionId: regionId
        credentials:
          name: name
          tag: tag
          type: null
        connectionSettings:
          gatewayServers:
          - gatewayServers
          - gatewayServers
          connectionType: null
        servicePoint: servicePoint
      properties:
        servicePoint:
          description: Endpoint address of the storage.
          type: string
        regionId:
          description: ID of a region where the storage is located.
          type: string
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
      required:
      - connectionSettings
      - credentials
      - regionId
      - servicePoint
      type: object
    GoogleCloudStorageImportSpec:
      example:
        enableTaskLimit: true
        maxTaskCount: 1
        bucket:
          storageConsumptionLimit:
            consumptionLimitCount: 2
            isEnabled: true
            consumptionLimitKind: null
          bucketName: bucketName
          nearlineStorageEnabled: true
          folderName: folderName
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        tag: tag
        type: null
        account:
          credentials:
            name: name
            tag: tag
            type: null
          regionId: regionId
          connectionSettings:
            gatewayServers:
            - gatewayServers
            - gatewayServers
            connectionType: null
      properties:
        name:
          description: Name of the object storage repository.
          type: string
        description:
          description: Description of the object storage repository.
          type: string
        tag:
          description: Tag that identifies the object storage repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/GoogleCloudStorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/GoogleCloudStorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
      required:
      - account
      - bucket
      - description
      - mountServer
      - name
      - tag
      - type
      type: object
    GoogleCloudStorageAccountImportModel:
      description: Account used to access the Google Cloud storage.
      example:
        credentials:
          name: name
          tag: tag
          type: null
        regionId: regionId
        connectionSettings:
          gatewayServers:
          - gatewayServers
          - gatewayServers
          connectionType: null
      properties:
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionId:
          description: ID of a region where the storage bucket is located.
          type: string
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
      required:
      - connectionSettings
      - credentials
      - regionId
      type: object
    IBMCloudStorageImportSpec:
      example:
        enableTaskLimit: true
        maxTaskCount: 4
        bucket:
          storageConsumptionLimit:
            consumptionLimitCount: 2
            isEnabled: true
            consumptionLimitKind: null
          immutability:
            isEnabled: true
            daysCount: 1
          bucketName: bucketName
          folderName: folderName
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        tag: tag
        type: null
        account:
          regionId: regionId
          credentials:
            name: name
            tag: tag
            type: null
          connectionSettings:
            gatewayServers:
            - gatewayServers
            - gatewayServers
            connectionType: null
          servicePoint: servicePoint
        proxyAppliance:
          managedServerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          description: Name of the object storage repository.
          type: string
        description:
          description: Description of the object storage repository.
          type: string
        tag:
          description: Tag that identifies the object storage repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/IBMCloudStorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/IBMCloudStorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        proxyAppliance:
          $ref: '#/components/schemas/S3CompatibleProxyModel'
      required:
      - account
      - bucket
      - description
      - mountServer
      - name
      - tag
      - type
      type: object
    IBMCloudStorageAccountImportModel:
      description: Account used to access the IBM Cloud storage.
      example:
        regionId: regionId
        credentials:
          name: name
          tag: tag
          type: null
        connectionSettings:
          gatewayServers:
          - gatewayServers
          - gatewayServers
          connectionType: null
        servicePoint: servicePoint
      properties:
        servicePoint:
          description: Endpoint address of the storage.
          type: string
        regionId:
          description: ID of a region where the storage is located.
          type: string
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
      required:
      - connectionSettings
      - credentials
      - regionId
      - servicePoint
      type: object
    AmazonS3GlacierStorageImportSpec:
      example:
        bucket:
          bucketName: bucketName
          useDeepArchive: true
          immutabilityEnabled: true
          regionId: regionId
          folderName: folderName
        name: name
        description: description
        tag: tag
        type: null
        account:
          credentials:
            name: name
            tag: tag
            type: null
          regionType: null
          connectionSettings:
            gatewayServers:
            - gatewayServers
            - gatewayServers
            connectionType: null
        proxyAppliance:
          subnet: subnet
          ec2InstanceType: ec2InstanceType
          vpc: vpc
          redirectorPort: 1
          securityGroup: securityGroup
      properties:
        name:
          description: Name of the object storage repository.
          type: string
        description:
          description: Description of the object storage repository.
          type: string
        tag:
          description: Tag that identifies the object storage repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        account:
          $ref: '#/components/schemas/AmazonS3StorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/AmazonS3GlacierStorageBucketModel'
        proxyAppliance:
          $ref: '#/components/schemas/AmazonS3StorageProxyApplianceModel'
      required:
      - account
      - bucket
      - description
      - mountServer
      - name
      - tag
      - type
      type: object
    AzureArchiveStorageImportSpec:
      example:
        container:
          containerName: containerName
          folderName: folderName
        name: name
        description: description
        tag: tag
        type: null
        account:
          credentials:
            name: name
            tag: tag
            type: null
          regionType: null
          connectionSettings:
            gatewayServers:
            - gatewayServers
            - gatewayServers
            connectionType: null
        proxyAppliance:
          instanceSize: instanceSize
          resourceGroup: resourceGroup
          subnet: subnet
          redirectorPort: 4
          subscriptionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          virtualNetwork: virtualNetwork
      properties:
        name:
          description: Name of the object storage repository.
          type: string
        description:
          description: Description of the object storage repository.
          type: string
        tag:
          description: Tag that identifies the object storage repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        account:
          $ref: '#/components/schemas/AzureArchiveStorageAccountImportModel'
        container:
          $ref: '#/components/schemas/AzureArchiveStorageContainerModel'
        proxyAppliance:
          $ref: '#/components/schemas/AzureStorageProxyModel'
      required:
      - account
      - container
      - description
      - mountServer
      - name
      - tag
      - type
      type: object
    AzureArchiveStorageAccountImportModel:
      description: Account used to access the Azure Archive storage.
      example:
        credentials:
          name: name
          tag: tag
          type: null
        regionType: null
        connectionSettings:
          gatewayServers:
          - gatewayServers
          - gatewayServers
          connectionType: null
      properties:
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionType:
          $ref: '#/components/schemas/EAzureRegionType'
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
      required:
      - credentials
      - gatewayServer
      - regionType
      type: object
    WasabiCloudStorageImportSpec:
      example:
        enableTaskLimit: true
        maxTaskCount: 5
        bucket:
          storageConsumptionLimit:
            consumptionLimitCount: 2
            isEnabled: true
            consumptionLimitKind: null
          immutability:
            isEnabled: true
            daysCount: 1
          bucketName: bucketName
          folderName: folderName
        mountServer:
          writeCacheFolder: writeCacheFolder
          vPowerNFSPortSettings:
            vPowerNFSPort: 5
            mountPort: 1
          vPowerNFSEnabled: true
          mountServerName: mountServerName
        name: name
        description: description
        tag: tag
        type: null
        account:
          regionId: regionId
          credentials:
            name: name
            tag: tag
            type: null
          connectionSettings:
            gatewayServers:
            - gatewayServers
            - gatewayServers
            connectionType: null
        proxyAppliance:
          managedServerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          description: Name of the object storage repository.
          type: string
        description:
          description: Description of the object storage repository.
          type: string
        tag:
          description: Tag that identifies the object storage repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/WasabiCloudStorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/WasabiCloudStorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        proxyAppliance:
          $ref: '#/components/schemas/S3CompatibleProxyModel'
      required:
      - account
      - bucket
      - description
      - mountServer
      - name
      - tag
      - type
      type: object
    WasabiCloudStorageAccountImportModel:
      description: Account used to access the Wasabi Cloud storage.
      example:
        regionId: regionId
        credentials:
          name: name
          tag: tag
          type: null
        connectionSettings:
          gatewayServers:
          - gatewayServers
          - gatewayServers
          connectionType: null
      properties:
        regionId:
          description: ID of a region where the storage is located.
          type: string
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
      required:
      - connectionSettings
      - credentials
      - regionId
      type: object
    EncryptionPasswordsFilters:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EEncryptionPasswordsFiltersOrderColumn'
        orderAsc:
          type: boolean
      type: object
    EEncryptionPasswordsFiltersOrderColumn:
      enum:
      - Hint
      - ModificationTime
      type: string
    EncryptionPasswordSpec:
      example:
        password: password
        hint: hint
        tag: tag
      properties:
        password:
          description: "Password for data encryption. If you lose the password, you\
            \ will not be able to restore it."
          type: string
        hint:
          description: Hint for the encryption password. Provide a meaningful hint
            that will help you recall the password.
          type: string
        tag:
          description: Tag for the encryption password.
          type: string
      required:
      - hint
      - password
      type: object
    EncryptionPasswordsResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - modificationTime: 2000-01-23T04:56:07.000+00:00
          hint: hint
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
        - modificationTime: 2000-01-23T04:56:07.000+00:00
          hint: hint
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
      properties:
        data:
          description: Array of encryption passwords.
          items:
            $ref: '#/components/schemas/EncryptionPasswordModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    EncryptionPasswordModel:
      example:
        modificationTime: 2000-01-23T04:56:07.000+00:00
        hint: hint
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tag: tag
      properties:
        id:
          description: ID of the encryption password.
          format: uuid
          type: string
        hint:
          description: Hint for the encryption password.
          type: string
        modificationTime:
          description: Date and time when the password was last modified.
          format: date-time
          type: string
        tag:
          description: Tag for the encryption password.
          type: string
      required:
      - hint
      - id
      type: object
    EncryptionPasswordImportSpecCollection:
      example:
        encryptionPasswords:
        - password: password
          hint: hint
          tag: tag
        - password: password
          hint: hint
          tag: tag
      properties:
        encryptionPasswords:
          description: Array of encryption passwords.
          items:
            $ref: '#/components/schemas/EncryptionPasswordImportSpec'
          type: array
          uniqueItems: true
      type: object
    EncryptionPasswordImportSpec:
      example:
        password: password
        hint: hint
        tag: tag
      properties:
        password:
          description: Password.
          type: string
        hint:
          description: Hint for the encryption password.
          type: string
        tag:
          description: Tag for the encryption password.
          type: string
      required:
      - hint
      - password
      type: object
    EncryptionPasswordExportSpec:
      example:
        modificationTimeFrom: 2000-01-23T04:56:07.000+00:00
        hints:
        - hints
        - hints
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
        - tags
        - tags
      properties:
        modificationTimeFrom:
          description: Date and time when the password was last modified.
          format: date-time
          type: string
        ids:
          description: Array of password IDs.
          items:
            format: uuid
            type: string
          type: array
          uniqueItems: true
        hints:
          description: Array of password hints.
          items:
            type: string
          type: array
          uniqueItems: true
        tags:
          description: Array of password tags.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    BackupsFilters:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EBackupsFiltersOrderColumn'
        orderAsc:
          type: boolean
        nameFilter:
          type: string
        createdAfterFilter:
          format: date-time
          type: string
        createdBeforeFilter:
          format: date-time
          type: string
        platformIdFilter:
          format: uuid
          type: string
        jobIdFilter:
          format: uuid
          type: string
        policyTagFilter:
          type: string
      type: object
    EBackupsFiltersOrderColumn:
      enum:
      - Name
      - CreationTime
      - PlatformId
      - JobId
      - PolicyTag
      type: string
    BackupsResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policyTag: policyTag
          creationTime: 2000-01-23T04:56:07.000+00:00
          name: name
          repositoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          platformId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          platformName: null
        - jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          policyTag: policyTag
          creationTime: 2000-01-23T04:56:07.000+00:00
          name: name
          repositoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          platformId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          platformName: null
      properties:
        data:
          description: Array of backups.
          items:
            $ref: '#/components/schemas/BackupModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    BackupModel:
      example:
        jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        policyTag: policyTag
        creationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        repositoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        platformId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        platformName: null
      properties:
        id:
          description: ID of the backup.
          format: uuid
          type: string
        jobId:
          description: ID of the job that created the backup.
          format: uuid
          type: string
        policyTag:
          description: Tag that identifies retention policy.
          type: string
        name:
          description: Name of the job that created the backup.
          type: string
        platformName:
          $ref: '#/components/schemas/EPlatformType'
        platformId:
          description: ID of the platform of the backup resource.
          format: uuid
          type: string
        creationTime:
          description: Date and time when the backup was created.
          format: date-time
          type: string
        repositoryId:
          description: ID of the backup repository where the backup is stored.
          format: uuid
          type: string
      required:
      - creationTime
      - id
      - name
      - platformId
      - platformName
      - repositoryId
      - type
      type: object
    EPlatformType:
      description: Platform name.
      enum:
      - VMware
      - HyperV
      - Vcd
      - WindowsPhysical
      - LinuxPhysical
      - Tape
      - NasBackup
      - CustomPlatform
      type: string
    BackupObjectsFilters:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EBackupObjectsFiltersOrderColumn'
        orderAsc:
          type: boolean
        nameFilter:
          type: string
        platformNameFilter:
          $ref: '#/components/schemas/EPlatformType'
        platformIdFilter:
          format: uuid
          type: string
        typeFilter:
          type: string
        viTypeFilter:
          type: string
      type: object
    EBackupObjectsFiltersOrderColumn:
      enum:
      - Name
      - ObjectId
      - PlatformId
      - Type
      type: string
    BackupObjectsResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - restorePointsCount: 0
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          platformId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          platformName: null
        - restorePointsCount: 0
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          platformId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          platformName: null
      properties:
        data:
          description: Array of backup objects.
          items:
            $ref: '#/components/schemas/BackupObjectModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    BackupObjectModel:
      discriminator:
        mapping:
          VMware: '#/components/schemas/ViBackupObjectModel'
        propertyName: platformName
      example:
        restorePointsCount: 0
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        platformId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        platformName: null
      oneOf:
      - $ref: '#/components/schemas/ViBackupObjectModel'
      properties:
        id:
          description: ID of the object.
          format: uuid
          type: string
        name:
          description: Name of the object.
          type: string
        type:
          description: Type of the object.
          type: string
        platformName:
          $ref: '#/components/schemas/EPlatformType'
        platformId:
          description: Id of the platform where the object was created.
          format: uuid
          type: string
        restorePointsCount:
          description: Number of restore points.
          type: integer
      required:
      - id
      - platformName
      type: object
    ViBackupObjectModel:
      allOf:
      - $ref: '#/components/schemas/BackupObjectModel'
      - $ref: '#/components/schemas/ViBackupObjectModel_allOf'
    ObjectRestorePointsFilters:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EObjectRestorePointsFiltersOrderColumn'
        orderAsc:
          type: boolean
        createdAfterFilter:
          format: date-time
          type: string
        createdBeforeFilter:
          format: date-time
          type: string
        nameFilter:
          type: string
        platformNameFilter:
          $ref: '#/components/schemas/EPlatformType'
        platformIdFilter:
          format: uuid
          type: string
        backupIdFilter:
          format: uuid
          type: string
        backupObjectIdFilter:
          format: uuid
          type: string
      type: object
    EObjectRestorePointsFiltersOrderColumn:
      enum:
      - CreationTime
      - PlatformId
      - BackupId
      type: string
    ObjectRestorePointsResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - allowedOperations:
          - null
          - null
          creationTime: 2000-01-23T04:56:07.000+00:00
          backupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          platformId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          platformName: null
        - allowedOperations:
          - null
          - null
          creationTime: 2000-01-23T04:56:07.000+00:00
          backupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          platformId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          platformName: null
      properties:
        data:
          description: Array of restore points.
          items:
            $ref: '#/components/schemas/ObjectRestorePointModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    ObjectRestorePointModel:
      example:
        allowedOperations:
        - null
        - null
        creationTime: 2000-01-23T04:56:07.000+00:00
        backupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        platformId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        platformName: null
      properties:
        id:
          description: ID of the restore point.
          format: uuid
          type: string
        name:
          description: Object name.
          type: string
        platformName:
          $ref: '#/components/schemas/EPlatformType'
        platformId:
          description: ID of a platform on which the object was created.
          format: uuid
          type: string
        creationTime:
          description: Date and time when the restore point was created.
          format: date-time
          type: string
        backupId:
          description: ID of a backup that contains the restore point.
          format: uuid
          type: string
        allowedOperations:
          description: Array of operations allowed for the restore point.
          items:
            $ref: '#/components/schemas/EObjectRestorePointOperation'
          type: array
      required:
      - allowedOperations
      - backupId
      - creationTime
      - id
      - name
      - paltformName
      - platformId
      type: object
    EObjectRestorePointOperation:
      enum:
      - VmwareInstantRecoveryFcd
      type: string
    ObjectRestorePointDisksResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - uid: uid
          name: name
          state: null
          type: null
          capacity: 0
        - uid: uid
          name: name
          state: null
          type: null
          capacity: 0
      properties:
        data:
          description: Array of disks.
          items:
            $ref: '#/components/schemas/ObjectRestorePointDiskModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    ObjectRestorePointDiskModel:
      example:
        uid: uid
        name: name
        state: null
        type: null
        capacity: 0
      properties:
        uid:
          description: ID of the disk.
          type: string
        type:
          $ref: '#/components/schemas/EDiskInfoType'
        name:
          description: Name of the disk.
          type: string
        capacity:
          description: Capacity of the disk.
          format: int64
          type: integer
        state:
          $ref: '#/components/schemas/EDiskInfoProcessState'
      required:
      - capacity
      - name
      - state
      - type
      - uid
      type: object
    EDiskInfoProcessState:
      description: Process state of the disk.
      enum:
      - NotProcessed
      - InProcessing
      - PartiallyProcessed
      - Processed
      type: string
    EDiskInfoType:
      description: Type of the disk.
      enum:
      - Unknown
      - Simple
      - Vi
      - Hv
      - HvRawDiskFile
      - EndPoint
      type: string
    VmwareFcdInstantRecoverySpec:
      description: Instant FCD Recovery configuration:<ul> <li>Restore point ID</li>
        <li>Destination cluster</li> <li>Disks for restore</li> <li>Write cache</li></ul>
      example:
        writeCache:
          redirectIsEnabled: true
          cacheDatastore:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          storagePolicy:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
        destinationCluster:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
        objectRestorePointId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        disksMapping:
        - mountedDiskName: mountedDiskName
          nameInBackup: nameInBackup
          registeredFcdName: registeredFcdName
        - mountedDiskName: mountedDiskName
          nameInBackup: nameInBackup
          registeredFcdName: registeredFcdName
      properties:
        objectRestorePointId:
          description: ID of the restore point.
          format: uuid
          type: string
        destinationCluster:
          $ref: '#/components/schemas/VmwareObjectModel'
        disksMapping:
          description: Array of disks for restore.
          items:
            $ref: '#/components/schemas/VmwareFcdInstantRecoveryDiskSpec'
          type: array
        writeCache:
          $ref: '#/components/schemas/VmwareFcdWriteCacheSpec'
      required:
      - destinationCluster
      - disksMapping
      - objectRestorePointId
      type: object
    VmwareFcdInstantRecoveryMountsFilters:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EVmwareFcdInstantRecoveryMountsFiltersOrderColumn'
        orderAsc:
          type: boolean
        nameFilter:
          type: string
        stateFilter:
          $ref: '#/components/schemas/EInstantRecoveryMountState'
      type: object
    EVmwareFcdInstantRecoveryMountsFiltersOrderColumn:
      enum:
      - state
      - name
      type: string
    VmwareFcdInstantRecoveryMountsResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - errorMessage: errorMessage
          mountedDisks:
          - mountedDiskName: mountedDiskName
            nameInBackup: nameInBackup
            registeredFcdName: registeredFcdName
            objectId: objectId
          - mountedDiskName: mountedDiskName
            nameInBackup: nameInBackup
            registeredFcdName: registeredFcdName
            objectId: objectId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: null
          spec:
            writeCache:
              redirectIsEnabled: true
              cacheDatastore:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              storagePolicy:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
            destinationCluster:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            objectRestorePointId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            disksMapping:
            - mountedDiskName: mountedDiskName
              nameInBackup: nameInBackup
              registeredFcdName: registeredFcdName
            - mountedDiskName: mountedDiskName
              nameInBackup: nameInBackup
              registeredFcdName: registeredFcdName
        - errorMessage: errorMessage
          mountedDisks:
          - mountedDiskName: mountedDiskName
            nameInBackup: nameInBackup
            registeredFcdName: registeredFcdName
            objectId: objectId
          - mountedDiskName: mountedDiskName
            nameInBackup: nameInBackup
            registeredFcdName: registeredFcdName
            objectId: objectId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: null
          spec:
            writeCache:
              redirectIsEnabled: true
              cacheDatastore:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
              storagePolicy:
                hostName: hostName
                name: name
                type: null
                objectId: objectId
            destinationCluster:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            objectRestorePointId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            disksMapping:
            - mountedDiskName: mountedDiskName
              nameInBackup: nameInBackup
              registeredFcdName: registeredFcdName
            - mountedDiskName: mountedDiskName
              nameInBackup: nameInBackup
              registeredFcdName: registeredFcdName
      properties:
        data:
          description: Array of FCD mounts.
          items:
            $ref: '#/components/schemas/VmwareFcdInstantRecoveryMount'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    VmwareFcdInstantRecoveryMount:
      example:
        errorMessage: errorMessage
        mountedDisks:
        - mountedDiskName: mountedDiskName
          nameInBackup: nameInBackup
          registeredFcdName: registeredFcdName
          objectId: objectId
        - mountedDiskName: mountedDiskName
          nameInBackup: nameInBackup
          registeredFcdName: registeredFcdName
          objectId: objectId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: null
        spec:
          writeCache:
            redirectIsEnabled: true
            cacheDatastore:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
            storagePolicy:
              hostName: hostName
              name: name
              type: null
              objectId: objectId
          destinationCluster:
            hostName: hostName
            name: name
            type: null
            objectId: objectId
          objectRestorePointId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          disksMapping:
          - mountedDiskName: mountedDiskName
            nameInBackup: nameInBackup
            registeredFcdName: registeredFcdName
          - mountedDiskName: mountedDiskName
            nameInBackup: nameInBackup
            registeredFcdName: registeredFcdName
      properties:
        id:
          description: Mount ID.
          format: uuid
          type: string
        sessionId:
          description: "ID of the restore session. Use the ID to track the progress.\
            \ For details, see [Get Session](#tag/Sessions/operation/GetSession)."
          format: uuid
          type: string
        state:
          $ref: '#/components/schemas/EInstantRecoveryMountState'
        spec:
          $ref: '#/components/schemas/VmwareFcdInstantRecoverySpec'
        errorMessage:
          description: Error message.
          type: string
        mountedDisks:
          description: Array of mounted disks.
          items:
            $ref: '#/components/schemas/VmwareFcdInstantRecoveryDiskInfo'
          type: array
      required:
      - id
      - sessionId
      - spec
      - state
      type: object
    VmwareFcdInstantRecoveryDiskSpec:
      example:
        mountedDiskName: mountedDiskName
        nameInBackup: nameInBackup
        registeredFcdName: registeredFcdName
      properties:
        nameInBackup:
          description: Disk name displayed in the backup.
          type: string
        mountedDiskName:
          description: Name of the VMDK file that will be stored in the datastore.
          type: string
        registeredFcdName:
          description: Name under which the disk will be registered as an FCD in the
            vCenter Managed Object Browser.
          type: string
      required:
      - mountedDiskName
      - nameInBackup
      - registeredFcdName
      type: object
    VmwareFcdInstantRecoveryDiskInfo:
      example:
        mountedDiskName: mountedDiskName
        nameInBackup: nameInBackup
        registeredFcdName: registeredFcdName
        objectId: objectId
      properties:
        nameInBackup:
          description: Disk name displayed in the backup.
          type: string
        mountedDiskName:
          description: Name of the VMDK file that is stored in the datastore.
          type: string
        registeredFcdName:
          description: Name under which the disk is registered as an FCD in the vCenter
            Managed Object Browser.
          type: string
        objectId:
          description: FCD ID.
          type: string
      required:
      - mountedDiskName
      - nameInBackup
      - objectId
      - registeredFcdName
      type: object
    VmwareFcdWriteCacheSpec:
      description: Write cache for recovered disks.
      example:
        redirectIsEnabled: true
        cacheDatastore:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
        storagePolicy:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
      properties:
        redirectIsEnabled:
          description: "If *true*, cache redirection is enabled. In this case, all\
            \ changes made to the recovered disks while the Instant FCD Recovery is\
            \ active are redirected to the specified `cacheDatastore` associated with\
            \ the `storagePolicy`."
          type: boolean
        cacheDatastore:
          $ref: '#/components/schemas/VmwareObjectModel'
        storagePolicy:
          $ref: '#/components/schemas/VmwareObjectModel'
      required:
      - redirectIsEnabled
      type: object
    EInstantRecoveryMountState:
      description: Mount state.
      enum:
      - Failed
      - Mounting
      - Mounted
      - Dismounting
      type: string
    ScaleOutRepositoriesResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - capacityTier:
            extents:
            - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            encryption:
              isEnabled: true
              encryptionPasswordTag: encryptionPasswordTag
              encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            offloadWindow:
              days:
              - hours: hours
                day: null
              - hours: hours
                day: null
            copyPolicyEnabled: true
            movePolicyEnabled: true
            operationalRestorePeriodDays: 0
            enabled: true
            overridePolicy:
              overrideSpaceThresholdPercents: 6
              isEnabled: true
          performanceTier:
            performanceExtents:
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: null
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: null
            advancedSettings:
              perVmBackup: true
              fullWhenExtentOffline: true
          name: name
          description: description
          placementPolicy:
            settings:
            - extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              allowedBackups: null
            - extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              allowedBackups: null
            enforceStrictPlacementPolicy: true
            type: null
          archiveTier:
            extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            advancedSettings:
              archiveDeduplicationEnabled: true
              costOptimizedArchiveEnabled: true
            isEnabled: true
            archivePeriodDays: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
        - capacityTier:
            extents:
            - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            encryption:
              isEnabled: true
              encryptionPasswordTag: encryptionPasswordTag
              encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            offloadWindow:
              days:
              - hours: hours
                day: null
              - hours: hours
                day: null
            copyPolicyEnabled: true
            movePolicyEnabled: true
            operationalRestorePeriodDays: 0
            enabled: true
            overridePolicy:
              overrideSpaceThresholdPercents: 6
              isEnabled: true
          performanceTier:
            performanceExtents:
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: null
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: null
            advancedSettings:
              perVmBackup: true
              fullWhenExtentOffline: true
          name: name
          description: description
          placementPolicy:
            settings:
            - extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              allowedBackups: null
            - extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              allowedBackups: null
            enforceStrictPlacementPolicy: true
            type: null
          archiveTier:
            extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            advancedSettings:
              archiveDeduplicationEnabled: true
              costOptimizedArchiveEnabled: true
            isEnabled: true
            archivePeriodDays: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
      properties:
        data:
          description: Array of scale-out backup repositories.
          items:
            $ref: '#/components/schemas/ScaleOutRepositoryModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    ScaleOutRepositorySpec:
      example:
        capacityTier:
          extents:
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          encryption:
            isEnabled: true
            encryptionPasswordTag: encryptionPasswordTag
            encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          offloadWindow:
            days:
            - hours: hours
              day: null
            - hours: hours
              day: null
          copyPolicyEnabled: true
          movePolicyEnabled: true
          operationalRestorePeriodDays: 0
          enabled: true
          overridePolicy:
            overrideSpaceThresholdPercents: 6
            isEnabled: true
        performanceTier:
          performanceExtents:
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          advancedSettings:
            perVmBackup: true
            fullWhenExtentOffline: true
        name: name
        description: description
        placementPolicy:
          settings:
          - extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            allowedBackups: null
          - extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            allowedBackups: null
          enforceStrictPlacementPolicy: true
          type: null
        archiveTier:
          extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          advancedSettings:
            archiveDeduplicationEnabled: true
            costOptimizedArchiveEnabled: true
          isEnabled: true
          archivePeriodDays: 1
        tag: tag
      properties:
        name:
          description: Name of the scale-out backup repository.
          type: string
        description:
          description: Description of the scale-out backup repository.
          type: string
        tag:
          description: Tag assigned to the scale-out backup repository.
          type: string
        performanceTier:
          $ref: '#/components/schemas/PerformanceTierSpec'
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicyModel'
        capacityTier:
          $ref: '#/components/schemas/CapacityTierModel'
        archiveTier:
          $ref: '#/components/schemas/ArchiveTierModel'
      required:
      - description
      - name
      - performanceTier
      type: object
    PerformanceTierSpec:
      description: Performance tier.
      example:
        performanceExtents:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        advancedSettings:
          perVmBackup: true
          fullWhenExtentOffline: true
      properties:
        performanceExtents:
          description: Array of performance extents.
          items:
            $ref: '#/components/schemas/PerformanceExtentSpec'
          type: array
        advancedSettings:
          $ref: '#/components/schemas/PerformanceTierAdvancedSettingsModel'
      required:
      - performanceExtents
      type: object
    PerformanceExtentSpec:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: ID of a backup repository added as a performance extent.
          format: uuid
          type: string
      required:
      - id
      type: object
    ScaleOutRepositoryModel:
      example:
        capacityTier:
          extents:
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          encryption:
            isEnabled: true
            encryptionPasswordTag: encryptionPasswordTag
            encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          offloadWindow:
            days:
            - hours: hours
              day: null
            - hours: hours
              day: null
          copyPolicyEnabled: true
          movePolicyEnabled: true
          operationalRestorePeriodDays: 0
          enabled: true
          overridePolicy:
            overrideSpaceThresholdPercents: 6
            isEnabled: true
        performanceTier:
          performanceExtents:
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: null
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: null
          advancedSettings:
            perVmBackup: true
            fullWhenExtentOffline: true
        name: name
        description: description
        placementPolicy:
          settings:
          - extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            allowedBackups: null
          - extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            allowedBackups: null
          enforceStrictPlacementPolicy: true
          type: null
        archiveTier:
          extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          advancedSettings:
            archiveDeduplicationEnabled: true
            costOptimizedArchiveEnabled: true
          isEnabled: true
          archivePeriodDays: 1
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tag: tag
      properties:
        id:
          description: ID of the scale-out backup repository.
          format: uuid
          type: string
        name:
          description: Name of the scale-out backup repository.
          type: string
        description:
          description: Description of the scale-out backup repository.
          type: string
        tag:
          description: Tag assigned to the scale-out backup repository.
          type: string
        performanceTier:
          $ref: '#/components/schemas/PerformanceTierModel'
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicyModel'
        capacityTier:
          $ref: '#/components/schemas/CapacityTierModel'
        archiveTier:
          $ref: '#/components/schemas/ArchiveTierModel'
      required:
      - description
      - id
      - name
      - performanceTier
      type: object
    PerformanceTierModel:
      description: Performance tier.
      example:
        performanceExtents:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: null
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: null
        advancedSettings:
          perVmBackup: true
          fullWhenExtentOffline: true
      properties:
        performanceExtents:
          description: Array of performance extents.
          items:
            $ref: '#/components/schemas/PerformanceExtentModel'
          type: array
        advancedSettings:
          $ref: '#/components/schemas/PerformanceTierAdvancedSettingsModel'
      required:
      - performanceExtents
      type: object
    PerformanceExtentModel:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: null
      properties:
        id:
          description: ID of the backup repository added as a performance extent.
          format: uuid
          type: string
        name:
          description: Name of the backup repository added as a performance extent.
          type: string
        status:
          $ref: '#/components/schemas/ERepositoryExtentStatusType'
      required:
      - id
      - name
      type: object
    PerformanceTierAdvancedSettingsModel:
      description: Advanced settings of the performance tier.
      example:
        perVmBackup: true
        fullWhenExtentOffline: true
      properties:
        perVmBackup:
          description: "If *true*, Veeam Backup & Replication creates a separate backup\
            \ file for every VM in the job."
          type: boolean
        fullWhenExtentOffline:
          description: "If *true*, Veeam Backup & Replication creates a full backup\
            \ file instead of an incremental backup file in case the required extent\
            \ is offline."
          type: boolean
      type: object
    PlacementPolicyModel:
      description: Backup file placement policy.
      example:
        settings:
        - extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          allowedBackups: null
        - extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          allowedBackups: null
        enforceStrictPlacementPolicy: true
        type: null
      properties:
        type:
          $ref: '#/components/schemas/EPlacementPolicyType'
        settings:
          description: Placement policy settings.
          items:
            $ref: '#/components/schemas/BackupPlacementSettingsModel'
          type: array
        enforceStrictPlacementPolicy:
          description: "If *true*, the backup job fails in case the placement policy\
            \ cannot be met."
          type: boolean
      required:
      - type
      type: object
    EPlacementPolicyType:
      description: Type of placement policy.
      enum:
      - DataLocality
      - Performance
      type: string
      x-enumDescriptions:
        DataLocality: Veeam Backup & Replication stores full and incremental backup
          files to the same performance extent of the scale-out backup repository.
        Performance: Veeam Backup & Replication stores full and incremental backup
          files to different performance extents of the scale-out backup repository.
    ERepositoryExtentStatusType:
      description: Performance extent status.
      enum:
      - Normal
      - Evacuate
      - Pending
      - Sealed
      - Maintenance
      - ResyncRequired
      - TenantEvacuating
      type: string
    BackupPlacementSettingsModel:
      example:
        extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowedBackups: null
      properties:
        extentId:
          description: ID of a performance extent.
          format: uuid
          type: string
        allowedBackups:
          $ref: '#/components/schemas/EAllowedBackupsType'
      required:
      - allowedBackups
      - extentId
      type: object
    EAllowedBackupsType:
      description: Type of backup files that can be stored on the extent.
      enum:
      - All
      - FullsOnly
      - IncrementsOnly
      - None
      type: string
    CapacityTierModel:
      description: Capacity tier.
      example:
        extents:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        encryption:
          isEnabled: true
          encryptionPasswordTag: encryptionPasswordTag
          encryptionPasswordIdOrNull: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        offloadWindow:
          days:
          - hours: hours
            day: null
          - hours: hours
            day: null
        copyPolicyEnabled: true
        movePolicyEnabled: true
        operationalRestorePeriodDays: 0
        enabled: true
        overridePolicy:
          overrideSpaceThresholdPercents: 6
          isEnabled: true
      properties:
        enabled:
          description: "If *true*, the capacity tier is enabled."
          type: boolean
        extents:
          description: Array of capacity extents.
          items:
            $ref: '#/components/schemas/CapacityExtentModel'
          type: array
        offloadWindow:
          $ref: '#/components/schemas/BackupWindowSettingModel'
        copyPolicyEnabled:
          description: "If *true*, Veeam Backup & Replication copies backups from\
            \ the performance extents to the capacity extent as soon as the backups\
            \ are created."
          type: boolean
        movePolicyEnabled:
          description: "If *true*, Veeam Backup & Replication moves backup files that\
            \ belong to inactive backup chains from the performance extents to the\
            \ capacity extent."
          type: boolean
        operationalRestorePeriodDays:
          description: Number of days after which inactive backup chains on the performance
            extents are moved to the capacity extent. Specify *0* to offload inactive
            backup chains on the same day they are created.
          type: integer
        overridePolicy:
          $ref: '#/components/schemas/CapacityTierOverridePolicyModel'
        encryption:
          $ref: '#/components/schemas/BackupStorageSettingsEncryptionModel'
      required:
      - enabled
      type: object
    CapacityExtentModel:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: ID of an object storage repository added as a capacity extent.
          format: uuid
          type: string
      required:
      - id
      type: object
    CapacityTierOverridePolicyModel:
      description: Policy that overrides the move policy if the scale-out backup repository
        is reaching its capacity.
      example:
        overrideSpaceThresholdPercents: 6
        isEnabled: true
      properties:
        isEnabled:
          description: "If *true*, Veeam Backup & Replication moves oldest backup\
            \ files sooner if the scale-out backup repository is reaching the threshold."
          type: boolean
        overrideSpaceThresholdPercents:
          description: "Space threshold of the scale-out backup repository, in percent."
          type: integer
      required:
      - isEnabled
      type: object
    ArchiveTierModel:
      description: Archive tier.
      example:
        extentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        advancedSettings:
          archiveDeduplicationEnabled: true
          costOptimizedArchiveEnabled: true
        isEnabled: true
        archivePeriodDays: 1
      properties:
        isEnabled:
          description: "If *true*, the archive tier is enabled."
          type: boolean
        extentId:
          description: ID of an object storage repository added as an archive extent.
          format: uuid
          type: string
        archivePeriodDays:
          description: Number of days after which backup chains on the capacity extent
            are moved to the archive extent. Specify *0* to offload inactive backup
            chains on the same day they are created.
          type: integer
        advancedSettings:
          $ref: '#/components/schemas/ArchiveTierAdvancedSettingsModel'
      required:
      - isEnabled
      type: object
    ArchiveTierAdvancedSettingsModel:
      description: Advanced settings of the archive tier.
      example:
        archiveDeduplicationEnabled: true
        costOptimizedArchiveEnabled: true
      properties:
        costOptimizedArchiveEnabled:
          description: "If *true*, backups are archived as soon as the remaining retention\
            \ time is above minimum storage period for the repository."
          type: boolean
        archiveDeduplicationEnabled:
          description: "If *true*, each backup is stored as a delta to the previous\
            \ one."
          type: boolean
      type: object
    ScaleOutRepositoriesFilters:
      properties:
        skip:
          description: Number of repositories to skip.
          format: int32
          type: integer
        limit:
          description: Maximum number of repositories to return.
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EScaleOutRepositoryFiltersOrderColumn'
        orderAsc:
          description: Sorts repositories in the ascending order by the `orderColumn`
            parameter.
          type: boolean
        nameFilter:
          description: "Filters repositories by the `nameFilter` pattern. The pattern\
            \ can match any repository parameter. To substitute one or more characters,\
            \ use the asterisk (*) character at the beginning, at the end or both."
          type: string
      type: object
    EScaleOutRepositoryFiltersOrderColumn:
      enum:
      - Name
      - Description
      - Type
      - Host
      - Path
      type: string
    CloudCredentialsResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
        - description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
      properties:
        data:
          description: Array of cloud credentials.
          items:
            $ref: '#/components/schemas/CloudCredentialsModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    CloudCredentialsSpec:
      discriminator:
        mapping:
          AzureStorage: '#/components/schemas/AzureStorageCloudCredentialsSpec'
          Amazon: '#/components/schemas/AmazonCloudCredentialsSpec'
          Google: '#/components/schemas/GoogleCloudCredentialsSpec'
          AzureCompute: '#/components/schemas/AzureComputeCloudCredentialsSpec'
        propertyName: type
      example:
        description: description
        type: null
      oneOf:
      - $ref: '#/components/schemas/AmazonCloudCredentialsSpec'
      - $ref: '#/components/schemas/AzureStorageCloudCredentialsSpec'
      - $ref: '#/components/schemas/AzureComputeCloudCredentialsSpec'
      - $ref: '#/components/schemas/GoogleCloudCredentialsSpec'
      properties:
        description:
          description: Description of the cloud credentials record.
          type: string
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
      - type
      type: object
    CloudCredentialsModel:
      discriminator:
        mapping:
          AzureStorage: '#/components/schemas/AzureStorageCloudCredentialsModel'
          Amazon: '#/components/schemas/AmazonCloudCredentialsModel'
          Google: '#/components/schemas/GoogleCloudCredentialsModel'
          AzureCompute: '#/components/schemas/AzureComputeCloudCredentialsModel'
        propertyName: type
      example:
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
      oneOf:
      - $ref: '#/components/schemas/AmazonCloudCredentialsModel'
      - $ref: '#/components/schemas/AzureStorageCloudCredentialsModel'
      - $ref: '#/components/schemas/AzureComputeCloudCredentialsModel'
      - $ref: '#/components/schemas/GoogleCloudCredentialsModel'
      properties:
        id:
          description: ID of the cloud credentials record.
          format: uuid
          type: string
        description:
          description: Description of the cloud credentials record.
          type: string
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
      - id
      - type
      type: object
    AmazonCloudCredentialsSpec:
      allOf:
      - $ref: '#/components/schemas/CloudCredentialsSpec'
      - $ref: '#/components/schemas/AmazonCloudCredentialsSpec_allOf'
    AmazonCloudCredentialsModel:
      allOf:
      - $ref: '#/components/schemas/CloudCredentialsModel'
      - $ref: '#/components/schemas/AmazonCloudCredentialsModel_allOf'
    AzureStorageCloudCredentialsSpec:
      allOf:
      - $ref: '#/components/schemas/CloudCredentialsSpec'
      - $ref: '#/components/schemas/AzureStorageCloudCredentialsSpec_allOf'
    AzureStorageCloudCredentialsModel:
      allOf:
      - $ref: '#/components/schemas/CloudCredentialsModel'
      - $ref: '#/components/schemas/AzureStorageCloudCredentialsModel_allOf'
    AzureComputeCloudCredentialsSpec:
      allOf:
      - $ref: '#/components/schemas/CloudCredentialsSpec'
      - $ref: '#/components/schemas/AzureComputeCloudCredentialsSpec_allOf'
    EAzureComputeCredentialsCreationMode:
      description: Mode that defines whether you want to connect to Azure Active Directory
        using an existing or a newly created Azure Active Directory application.
      enum:
      - NewAccount
      - ExistingAccount
      type: string
    AzureComputeCredentialsExistingAccountSpec:
      description: Existing Azure Active Directory application.
      example:
        subscription:
          tenantId: tenantId
          certificate:
            password: password
            certificate: certificate
            formatType: null
          secret: secret
          applicationId: applicationId
        deployment:
          deploymentType: null
          region: null
      properties:
        deployment:
          $ref: '#/components/schemas/AzureComputeCloudCredentialsDeploymentModel'
        subscription:
          $ref: '#/components/schemas/AzureComputeCloudCredentialsSubscriptionSpec'
      required:
      - deployment
      - subscription
      type: object
    AzureComputeCredentialsNewAccountSpec:
      description: New Azure Active Directory application.
      properties:
        region:
          $ref: '#/components/schemas/EAzureRegionType'
        verificationCode:
          description: Single-use verification code. Use this code to sign in on the
            https://microsoft.com/devicelogin page.
          type: string
      required:
      - region
      - verificationCode
      type: object
    CloudHelperApplianceSpec:
      description: Helper appliance settings.
      discriminator:
        mapping:
          AzureCompute: '#/components/schemas/AzureLinuxHelperApplianceSpec'
        propertyName: type
      example:
        type: null
      oneOf:
      - $ref: '#/components/schemas/AzureLinuxHelperApplianceSpec'
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
      - type
      type: object
    CloudHelperApplianceModel:
      description: Helper appliance settings.
      discriminator:
        mapping:
          AzureCompute: '#/components/schemas/AzureLinuxHelperApplianceModel'
        propertyName: type
      example:
        type: null
      oneOf:
      - $ref: '#/components/schemas/AzureLinuxHelperApplianceModel'
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
      - type
      type: object
    CloudHelperApplianceResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - type: null
        - type: null
      properties:
        data:
          description: Array of Lunux-based helper appliances.
          items:
            $ref: '#/components/schemas/CloudHelperApplianceModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    AzureLinuxHelperApplianceSpec:
      allOf:
      - $ref: '#/components/schemas/CloudHelperApplianceSpec'
    AzureLinuxHelperApplianceModel:
      allOf:
      - $ref: '#/components/schemas/CloudHelperApplianceModel'
      - $ref: '#/components/schemas/AzureLinuxHelperApplianceModel_allOf'
    AzureComputeCloudCredentialsSubscriptionSpec:
      description: "Microsoft Azure compute account. For password-based authentication,\
        \ specify client secret. For certificate-based authentication, specify certificate\
        \ and password."
      example:
        tenantId: tenantId
        certificate:
          password: password
          certificate: certificate
          formatType: null
        secret: secret
        applicationId: applicationId
      properties:
        tenantId:
          description: ID of a tenant where the Azure Active Directory application
            is registered in.
          type: string
        applicationId:
          description: Client ID assigned to the Azure Active Directory application.
          type: string
        secret:
          description: (For password-based authentication) Client secret assigned
            to the Azure Active Directory application.
          type: string
        certificate:
          $ref: '#/components/schemas/CertificateUploadSpec'
      required:
      - applicationId
      - tenantId
      type: object
    CertificateUploadSpec:
      description: Certificate settings (for certificate-based authentication).
      example:
        password: password
        certificate: certificate
        formatType: null
      properties:
        certificate:
          description: Base64-encoded string of the content of a PFX certificate file.
          type: string
        formatType:
          $ref: '#/components/schemas/ECertificateFileFormatType'
        password:
          description: Decryption password for the certificate file.
          type: string
      required:
      - certificate
      - formatType
      type: object
    ECertificateFileFormatType:
      description: Certificate file format.
      enum:
      - pfx
      type: string
    AzureComputeCloudCredentialsDeploymentModel:
      description: Environment to restore workloads to.
      example:
        deploymentType: null
        region: null
      properties:
        deploymentType:
          $ref: '#/components/schemas/EAzureComputeCredentialsDeploymentType'
        region:
          $ref: '#/components/schemas/EAzureRegionType'
      required:
      - deploymentType
      type: object
    EAzureComputeCredentialsDeploymentType:
      description: Deployment type (global Microsoft Azure or Microsoft Azure Stack
        Hub).
      enum:
      - MicrosoftAzure
      - MicrosoftAzureStack
      type: string
    AzureComputeCloudCredentialsModel:
      allOf:
      - $ref: '#/components/schemas/CloudCredentialsModel'
      - $ref: '#/components/schemas/AzureComputeCloudCredentialsModel_allOf'
      description: Microsoft Azure compute account.
    AzureComputeCloudCredentialsSubscriptionModel:
      description: Microsoft Azure tenant settings.
      properties:
        tenantId:
          description: ID of a tenant where the Azure Active Directory application
            is registered in.
          type: string
        applicationId:
          description: Client ID assigned to the Azure Active Directory application.
          type: string
        secret:
          description: (For password-based authentication) Client secret assigned
            to the Azure Active Directory application.
          type: string
        subscriptions:
          description: Array of Azure subscriptions associated with the account.
          items:
            $ref: '#/components/schemas/AzureComputeCloudCredentialsSubscriptionInfo'
          type: array
      required:
      - applicationId
      - tenantId
      type: object
    AzureComputeCloudCredentialsSubscriptionInfo:
      properties:
        id:
          description: ID that Veeam Backup & Replication assigned to the Azure subscription.
          format: uuid
          type: string
        azureSubscriptionId:
          description: Original Azure subscription ID.
          type: string
        azureSubscriptionName:
          description: Azure subscription name.
          type: string
      required:
      - azureSubscriptionId
      - id
      type: object
    GoogleCloudCredentialsSpec:
      allOf:
      - $ref: '#/components/schemas/CloudCredentialsSpec'
      - $ref: '#/components/schemas/GoogleCloudCredentialsSpec_allOf'
    GoogleCloudCredentialsModel:
      allOf:
      - $ref: '#/components/schemas/CloudCredentialsModel'
      - $ref: '#/components/schemas/GoogleCloudCredentialsModel_allOf'
    ECloudCredentialsType:
      description: Cloud credentials type.
      enum:
      - AzureStorage
      - AzureCompute
      - Amazon
      - Google
      type: string
    CloudCredentialsFilters:
      properties:
        skip:
          description: Number of cloud credentials records to skip.
          format: int32
          type: integer
        limit:
          description: Maximum number of cloud credentials records to return.
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/ECloudCredentialsFiltersOrderColumn'
        orderAsc:
          description: Sorts cloud credentials in the ascending order by the `orderColumn`
            parameter.
          type: boolean
        nameFilter:
          description: "Filters cloud credentials by the `nameFilter` pattern. The\
            \ pattern can match any cloud credentials parameter. To substitute one\
            \ or more characters, use the asterisk (*) character at the beginning\
            \ and/or at the end."
          type: string
        typeFilter:
          $ref: '#/components/schemas/ECloudCredentialsType'
      type: object
    ECloudCredentialsFiltersOrderColumn:
      description: Sorts cloud credentials by one of the cloud credentials parameters.
      enum:
      - Name
      - Description
      type: string
    CloudCredentialsPasswordSpec:
      example:
        newSecretKey: newSecretKey
      properties:
        newSecretKey:
          description: New secret key.
          type: string
      required:
      - newSecretKey
      type: object
    CloudBrowserSpec:
      discriminator:
        mapping:
          AzureBlob: '#/components/schemas/AzureBlobBrowserSpec'
          AzureDataBox: '#/components/schemas/AzureDataBoxBrowserSpec'
          AmazonS3: '#/components/schemas/AmazonS3BrowserSpec'
          S3Compatible: '#/components/schemas/S3CompatibleBrowserSpec'
          AmazonSnowballEdge: '#/components/schemas/AmazonSnowballEdgeBrowserSpec'
          GoogleCloud: '#/components/schemas/GoogleCloudStorageBrowserSpec'
          IBMCloud: '#/components/schemas/IBMCloudStorageBrowserSpec'
          AzureCompute: '#/components/schemas/AzureComputeBrowserSpec'
          AmazonEC2: '#/components/schemas/AmazonEC2BrowserSpec'
          WasabiCloud: '#/components/schemas/WasabiCloudStorageBrowserSpec'
        propertyName: serviceType
      example:
        serviceType: null
        credentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      oneOf:
      - $ref: '#/components/schemas/AzureBlobBrowserSpec'
      - $ref: '#/components/schemas/AzureDataBoxBrowserSpec'
      - $ref: '#/components/schemas/AmazonS3BrowserSpec'
      - $ref: '#/components/schemas/S3CompatibleBrowserSpec'
      - $ref: '#/components/schemas/AmazonSnowballEdgeBrowserSpec'
      - $ref: '#/components/schemas/GoogleCloudStorageBrowserSpec'
      - $ref: '#/components/schemas/IBMCloudStorageBrowserSpec'
      - $ref: '#/components/schemas/AzureComputeBrowserSpec'
      - $ref: '#/components/schemas/AmazonEC2BrowserSpec'
      - $ref: '#/components/schemas/WasabiCloudStorageBrowserSpec'
      properties:
        credentialsId:
          description: ID of the object storage account (for browsing either storage
            or compute infrastructure).
          format: uuid
          type: string
        serviceType:
          $ref: '#/components/schemas/ECloudServiceType'
      required:
      - credentialsId
      - serviceType
      type: object
    AzureBlobBrowserSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserSpec'
      - $ref: '#/components/schemas/AzureBlobBrowserSpec_allOf'
    AzureDataBoxBrowserSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserSpec'
      - $ref: '#/components/schemas/AzureDataBoxBrowserSpec_allOf'
    AmazonS3BrowserSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserSpec'
      - $ref: '#/components/schemas/AmazonS3BrowserSpec_allOf'
    AmazonS3CloudBrowserFilters:
      description: Amazon S3 hierarchy filters.
      properties:
        regionId:
          description: Filters buckets by AWS region where an Amazon S3 data center
            is located.
          type: string
        bucketName:
          description: Filters buckets by bucket name.
          type: string
      required:
      - regionId
      type: object
    ECloudBrowserFolderType:
      description: Folder type.
      enum:
      - backup
      - archive
      type: string
    S3CompatibleBrowserSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserSpec'
      - $ref: '#/components/schemas/S3CompatibleBrowserSpec_allOf'
    AmazonSnowballEdgeBrowserSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserSpec'
      - $ref: '#/components/schemas/AmazonSnowballEdgeBrowserSpec_allOf'
    GoogleCloudStorageBrowserSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserSpec'
      - $ref: '#/components/schemas/GoogleCloudStorageBrowserSpec_allOf'
    GoogleCloudStorageBrowserFilters:
      description: Google Cloud hierarchy filters.
      properties:
        regionId:
          description: Google Cloud data center region.
          type: string
        bucketName:
          description: Bucket name.
          type: string
      required:
      - regionId
      type: object
    IBMCloudStorageBrowserSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserSpec'
      - $ref: '#/components/schemas/IBMCloudStorageBrowserSpec_allOf'
    AzureComputeBrowserSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserSpec'
      - $ref: '#/components/schemas/AzureComputeBrowserSpec_allOf'
    AzureComputeBrowserFilters:
      description: Azure Compute hierarchy filters.
      properties:
        showAllStorageAccounts:
          default: false
          description: "If *true*, the result contains compute resorces for all storage\
            \ accounts. If *false*, the result contains compute resorces available\
            \ for the specified storage account only."
          type: boolean
        subscriptionId:
          description: Filters compute resorces by ID that Veeam Backup & Replication
            assigned to the Azure subscription.
          type: string
        location:
          description: Filters compute resorces by Azure location name.
          type: string
        hasNetworks:
          default: false
          description: "If *true*, the result contains Azure resource groups with\
            \ virtual networks only."
          type: boolean
      type: object
    AmazonEC2BrowserSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserSpec'
      - $ref: '#/components/schemas/AmazonEC2BrowserSpec_allOf'
    AmazonEC2BrowserFilters:
      description: Amazon EC2 hierarchy filters.
      properties:
        regionId:
          description: Filters Amazon EC2 resources by AWS region.
          type: string
      required:
      - regionId
      type: object
    WasabiCloudStorageBrowserSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserSpec'
      - $ref: '#/components/schemas/WasabiCloudStorageBrowserSpec_allOf'
    ECloudServiceType:
      description: Type of cloud service.
      enum:
      - AzureBlob
      - AzureDataBox
      - AmazonS3
      - AmazonEC2
      - S3Compatible
      - AmazonSnowballEdge
      - GoogleCloud
      - IBMCloud
      - AzureCompute
      - WasabiCloud
      type: string
    CloudBrowserModel:
      discriminator:
        mapping:
          AzureBlob: '#/components/schemas/AzureBlobBrowserModel'
          AzureDataBox: '#/components/schemas/AzureDataBoxBrowserModel'
          AmazonS3: '#/components/schemas/AmazonS3BrowserModel'
          AmazonSnowballEdge: '#/components/schemas/AmazonSnowballEdgeBrowserModel'
          S3Compatible: '#/components/schemas/S3CompatibleBrowserModel'
          GoogleCloud: '#/components/schemas/GoogleCloudStorageBrowserModel'
          IBMCloud: '#/components/schemas/IBMCloudStorageBrowserModel'
          AzureCompute: '#/components/schemas/AzureComputeBrowserModel'
          AmazonEC2: '#/components/schemas/AmazonEC2BrowserModel'
          WasabiCloud: '#/components/schemas/WasabiCloudStorageBrowserModel'
        propertyName: serviceType
      example:
        serviceType: null
        credentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      oneOf:
      - $ref: '#/components/schemas/AzureBlobBrowserModel'
      - $ref: '#/components/schemas/AzureDataBoxBrowserModel'
      - $ref: '#/components/schemas/AmazonS3BrowserModel'
      - $ref: '#/components/schemas/AmazonSnowballEdgeBrowserModel'
      - $ref: '#/components/schemas/S3CompatibleBrowserModel'
      - $ref: '#/components/schemas/GoogleCloudStorageBrowserModel'
      - $ref: '#/components/schemas/IBMCloudStorageBrowserModel'
      - $ref: '#/components/schemas/AzureComputeBrowserModel'
      - $ref: '#/components/schemas/AmazonEC2BrowserModel'
      - $ref: '#/components/schemas/WasabiCloudStorageBrowserModel'
      properties:
        credentialsId:
          description: ID of the cloud credentials record.
          format: uuid
          type: string
        serviceType:
          $ref: '#/components/schemas/ECloudServiceType'
      required:
      - credentialsId
      - serviceType
      type: object
    AzureBlobBrowserModel:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserModel'
      - $ref: '#/components/schemas/AzureBlobBrowserModel_allOf'
    AzureBlobContainerBrowserModel:
      properties:
        name:
          description: Container name.
          type: string
        folders:
          description: Array of folders loated in the container.
          items:
            type: string
          type: array
      type: object
    AzureDataBoxBrowserModel:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserModel'
      - $ref: '#/components/schemas/AzureDataBoxBrowserModel_allOf'
    AzureDataBoxContainerBrowserModel:
      properties:
        name:
          description: Container name.
          type: string
        folders:
          description: Array of folders located in the container.
          items:
            type: string
          type: array
      type: object
    AmazonS3BrowserModel:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserModel'
      - $ref: '#/components/schemas/AmazonS3BrowserModel_allOf'
    AmazonS3RegionBrowserModel:
      description: AWS region.
      properties:
        id:
          description: Region ID.
          type: string
        name:
          description: Region name.
          type: string
        buckets:
          description: Array of buckets located in the region.
          items:
            $ref: '#/components/schemas/AmazonS3BucketBrowserModel'
          type: array
      type: object
    AmazonS3BucketBrowserModel:
      properties:
        name:
          description: Bucket name.
          type: string
        folders:
          description: Array of folders located in the bucket.
          items:
            type: string
          type: array
      type: object
    S3CompatibleBrowserModel:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserModel'
      - $ref: '#/components/schemas/S3CompatibleBrowserModel_allOf'
    S3CompatibleRegionBrowserModel:
      properties:
        id:
          description: Region ID.
          type: string
        name:
          description: Region name.
          type: string
        buckets:
          description: Array of buckets located in the region.
          items:
            $ref: '#/components/schemas/S3CompatibleBucketBrowserModel'
          type: array
      type: object
    S3CompatibleBucketBrowserModel:
      properties:
        name:
          description: Bucket name.
          type: string
        folders:
          description: Array of folders located in the bucket.
          items:
            type: string
          type: array
      type: object
    AmazonSnowballEdgeBrowserModel:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserModel'
      - $ref: '#/components/schemas/AmazonSnowballEdgeBrowserModel_allOf'
    AmazonSnowballEdgeRegionBrowserModel:
      properties:
        id:
          description: Region ID.
          type: string
        name:
          description: Region name.
          type: string
        buckets:
          description: Array of buckets located in the region.
          items:
            $ref: '#/components/schemas/AmazonSnowballEdgeBucketBrowserModel'
          type: array
      type: object
    AmazonSnowballEdgeBucketBrowserModel:
      properties:
        name:
          description: Bucket name.
          type: string
        folders:
          description: Array of folders located in the bucket.
          items:
            type: string
          type: array
      type: object
    GoogleCloudStorageBrowserModel:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserModel'
      - $ref: '#/components/schemas/GoogleCloudStorageBrowserModel_allOf'
    GoogleCloudStorageRegionBrowserModel:
      properties:
        id:
          description: Region ID.
          type: string
        name:
          description: Region name.
          type: string
        buckets:
          description: Array of buckets located in the region.
          items:
            $ref: '#/components/schemas/GoogleCloudStorageBucketBrowserModel'
          type: array
      type: object
    GoogleCloudStorageBucketBrowserModel:
      properties:
        name:
          description: Bucket name.
          type: string
        folders:
          description: Array of folders located in the bucket.
          items:
            type: string
          type: array
      type: object
    IBMCloudStorageBrowserModel:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserModel'
      - $ref: '#/components/schemas/IBMCloudStorageBrowserModel_allOf'
    IBMCloudStorageRegionBrowserModel:
      properties:
        id:
          description: Region ID.
          type: string
        name:
          description: Region name.
          type: string
        buckets:
          description: Array of buckets located in the region.
          items:
            $ref: '#/components/schemas/IBMCloudStorageBucketBrowserModel'
          type: array
      type: object
    IBMCloudStorageBucketBrowserModel:
      properties:
        name:
          description: Bucket name.
          type: string
        folders:
          description: Array of folders located in the bucket.
          items:
            type: string
          type: array
      type: object
    AzureComputeBrowserModel:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserModel'
      - $ref: '#/components/schemas/AzureComputeBrowserModel_allOf'
    AzureSubscriptionBrowserModel:
      properties:
        id:
          description: ID that Veeam Backup & Replication assigned to the Azure subscription.
          format: uuid
          type: string
        azureSubscriptionId:
          description: Original Azure subscription ID.
          type: string
        locations:
          description: Array of Azure geographic regions.
          items:
            $ref: '#/components/schemas/AzureLocationBrowserModel'
          type: array
      required:
      - id
      - resourceGroups
      - storageAccounts
      - virtualNetworks
      type: object
    AzureLocationBrowserModel:
      properties:
        location:
          description: Location name.
          type: string
        storageAccounts:
          description: Array of storage accounts associated with the location.
          items:
            $ref: '#/components/schemas/AzureStorageAccountBrowserModel'
          type: array
        resourceGroups:
          description: Array of Azure resource groups.
          items:
            $ref: '#/components/schemas/AzureResourceGroupBrowserModel'
          type: array
      required:
      - location
      - resourceGroups
      - storageAccounts
      type: object
    AzureStorageAccountBrowserModel:
      properties:
        storageAccountName:
          description: Account name.
          type: string
        instanceSizes:
          description: Array of available instance sizes.
          items:
            type: string
          type: array
      type: object
    AzureResourceGroupBrowserModel:
      properties:
        resourceGroup:
          description: Resource group name.
          type: string
        virtualNetworks:
          description: Array of virtual networks available in the resource group.
          items:
            $ref: '#/components/schemas/AzureVirtualNetworkBrowserModel'
          type: array
      required:
      - resourceGroup
      - virtualNetworks
      type: object
    AzureVirtualNetworkBrowserModel:
      properties:
        virtualNetworkName:
          description: Virtual network name.
          type: string
        subnets:
          description: Array of subnets.
          items:
            type: string
          type: array
      type: object
    AmazonEC2BrowserModel:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserModel'
      - $ref: '#/components/schemas/AmazonEC2BrowserModel_allOf'
    AmazonEC2RegionBrowserModel:
      properties:
        regionId:
          description: Region ID.
          type: string
        vpcs:
          description: Array of Amazon Virtual Private Cloud (Amazon VPC) networks.
          items:
            $ref: '#/components/schemas/AmazonVPCBrowserModel'
          type: array
        instanceTypes:
          description: Array of Amazon instance types.
          items:
            type: string
          type: array
      type: object
    AmazonVPCBrowserModel:
      properties:
        vpcName:
          description: VPC name.
          type: string
        subnets:
          description: Array of VPC subnets.
          items:
            type: string
          type: array
        securityGroups:
          description: Array of security groups.
          items:
            type: string
          type: array
      type: object
    WasabiCloudStorageBrowserModel:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserModel'
      - $ref: '#/components/schemas/WasabiCloudStorageBrowserModel_allOf'
    WasabiCloudStorageRegionBrowserModel:
      properties:
        id:
          description: Region ID.
          type: string
        name:
          description: Region name.
          type: string
        buckets:
          description: Array of buckets located in the region.
          items:
            $ref: '#/components/schemas/WasabiCloudStorageBucketBrowserModel'
          type: array
      type: object
    WasabiCloudStorageBucketBrowserModel:
      properties:
        name:
          description: Bucket name.
          type: string
        folders:
          description: Array of folders located in the bucket.
          items:
            type: string
          type: array
      type: object
    AzureBlobStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/AzureBlobStorageSpec_allOf'
      description: Microsoft Azure Blob storage.
    AzureBlobStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/AzureBlobStorageSpec_allOf'
      description: Microsoft Azure Blob storage.
    AzureBlobStorageAccountModel:
      description: Account used to access the Azure Blob storage.
      properties:
        credentialsId:
          description: ID of the cloud credentials record.
          format: uuid
          type: string
        regionType:
          $ref: '#/components/schemas/EAzureRegionType'
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
      required:
      - connectionSettings
      - credentialsId
      - regionType
      type: object
    EAzureRegionType:
      description: Region where your Microsoft Azure container is located.
      enum:
      - China
      - Germany
      - Global
      - Government
      type: string
    AzureBlobStorageContainerModel:
      description: Azure Blob storage container.
      example:
        storageConsumptionLimit:
          consumptionLimitCount: 2
          isEnabled: true
          consumptionLimitKind: null
        containerName: containerName
        folderName: folderName
      properties:
        containerName:
          description: Container name.
          type: string
        folderName:
          description: Name of the folder that the object storage repository is mapped
            to.
          type: string
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
      required:
      - containerName
      - folderName
      type: object
    AzureDataBoxStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/AzureDataBoxStorageSpec_allOf'
      description: Microsoft Azure Data Box storage.
    AzureDataBoxStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/AzureDataBoxStorageSpec_allOf'
      description: Microsoft Azure Data Box storage.
    AzureDataBoxStorageAccountModel:
      description: Account used to access the Azure Data Box storage.
      properties:
        serviceEndpoint:
          description: Service endpoint address of the Azure Data Box device.
          type: string
        credentialsId:
          description: ID of the cloud credentials record.
          format: uuid
          type: string
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
      required:
      - credentialsId
      - serviceEndpoint
      type: object
    AzureDataBoxStorageContainerModel:
      description: Azure Data Box container where backup data is stored.
      example:
        containerName: containerName
        folderName: folderName
      properties:
        containerName:
          description: Container name.
          type: string
        folderName:
          description: Name of the folder that the object storage repository is mapped
            to.
          type: string
      type: object
    AmazonS3StorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/AmazonS3StorageSpec_allOf'
      description: Amazon S3 storage.
    AmazonS3StorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/AmazonS3StorageSpec_allOf'
      description: Amazon S3 storage.
    AmazonSnowballEdgeStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/AmazonSnowballEdgeStorageSpec_allOf'
      description: AWS Snowball Edge storage.
    AmazonSnowballEdgeStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/AmazonSnowballEdgeStorageSpec_allOf'
      description: AWS Snowball Edge storage.
    AmazonSnowballEdgeStorageAccountModel:
      description: AWS account used to access the AWS Snowball Edge storage.
      properties:
        servicePoint:
          description: Service point address and port number of the AWS Snowball Edge
            device.
          type: string
        regionId:
          description: "For AWS Snowball Edge, the region is `snow`."
          type: string
        credentialsId:
          description: ID of the cloud credentials record.
          format: uuid
          type: string
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
      required:
      - credentialsId
      - gatewayServer
      - regionId
      - servicePoint
      type: object
    AmazonSnowballEdgeStorageBucketModel:
      description: Amazon S3 bucket.
      example:
        storageConsumptionLimit:
          consumptionLimitCount: 2
          isEnabled: true
          consumptionLimitKind: null
        bucketName: bucketName
        folderName: folderName
      properties:
        bucketName:
          description: Name of the Amazon S3 bucket.
          type: string
        folderName:
          description: Name of the folder that the object storage repository is mapped
            to.
          type: string
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
      type: object
    S3CompatibleStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/S3CompatibleStorageSpec_allOf'
      description: S3 compatible storage.
    S3CompatibleStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/S3CompatibleStorageSpec_allOf'
      description: S3 compatible storage.
    S3CompatibleStorageAccountModel:
      description: Account used to access the S3 compatible storage.
      properties:
        servicePoint:
          description: Endpoint address and port number of the storage.
          type: string
        regionId:
          description: ID of a region where the storage is located.
          type: string
        credentialsId:
          description: ID of a cloud credentials record used to access the storage.
          format: uuid
          type: string
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
      required:
      - credentialsId
      - gatewayServer
      - regionId
      - servicePoint
      type: object
    S3CompatibleStorageBucketModel:
      description: Bucket where backup data is stored.
      example:
        storageConsumptionLimit:
          consumptionLimitCount: 2
          isEnabled: true
          consumptionLimitKind: null
        immutability:
          isEnabled: true
          daysCount: 1
        bucketName: bucketName
        folderName: folderName
      properties:
        bucketName:
          description: Bucket name.
          type: string
        folderName:
          description: Name of the folder that the object storage repository is mapped
            to.
          type: string
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
        immutability:
          $ref: '#/components/schemas/ObjectStorageImmutabilityModel'
      required:
      - bucketName
      - folderName
      type: object
    AmazonS3StorageAccountModel:
      description: Account used to access the Amazon S3 storage.
      properties:
        credentialsId:
          description: ID of the cloud credentials record.
          format: uuid
          type: string
        regionType:
          $ref: '#/components/schemas/EAmazonRegionType'
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
      required:
      - credentialsId
      - gatewayServer
      - regionType
      type: object
    AmazonS3StorageBucketModel:
      description: Amazon S3 bucket where backup data is stored.
      example:
        storageConsumptionLimit:
          consumptionLimitCount: 2
          isEnabled: true
          consumptionLimitKind: null
        immutability:
          isEnabled: true
          daysCount: 1
        infrequentAccessStorage:
          singleZoneEnabled: true
          isEnabled: true
        bucketName: bucketName
        regionId: regionId
        folderName: folderName
      properties:
        regionId:
          description: ID of a region where the Amazon S3 bucket is located.
          type: string
        bucketName:
          description: Name of an Amazon S3 bucket.
          type: string
        folderName:
          description: Name of the folder that the object storage repository is mapped
            to.
          type: string
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
        immutability:
          $ref: '#/components/schemas/ObjectStorageImmutabilityModel'
        infrequentAccessStorage:
          $ref: '#/components/schemas/AmazonS3IAStorageModel'
      required:
      - bucketName
      - folderName
      - regionId
      type: object
    ObjectStorageImmutabilityModel:
      description: Object storage immutability.
      example:
        isEnabled: true
        daysCount: 1
      properties:
        isEnabled:
          description: "If *true*, storage immutability is enabled."
          type: boolean
        daysCount:
          description: Immutability period.
          type: integer
      type: object
    AmazonS3IAStorageModel:
      description: Standard Infrequent Access.
      example:
        singleZoneEnabled: true
        isEnabled: true
      properties:
        isEnabled:
          description: "If *true*, Standard Infrequent Access is enabled."
          type: boolean
        singleZoneEnabled:
          description: "If *true*, Amazon S3 One Zone-Infrequent Access is enabled."
          type: boolean
      type: object
    CloudBrowserNewFolderSpec:
      discriminator:
        mapping:
          AzureBlob: '#/components/schemas/AzureBlobBrowserDestinationSpec'
          AzureDataBox: '#/components/schemas/AzureDataBoxBrowserDestinationSpec'
          AmazonS3: '#/components/schemas/AmazonS3BrowserDestinationSpec'
          S3Compatible: '#/components/schemas/S3CompatibleBrowserDestinationSpec'
          AmazonSnowballEdge: '#/components/schemas/AmazonSnowballEdgeBrowserDestinationSpec'
          GoogleCloud: '#/components/schemas/GoogleCloudStorageBrowserDestinationSpec'
          IBMCloud: '#/components/schemas/IBMCloudStorageBrowserDestinationSpec'
          WasabiCloud: '#/components/schemas/WasabiCloudStorageBrowserDestinationSpec'
        propertyName: serviceType
      example:
        serviceType: null
        credentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        newFolderName: newFolderName
      oneOf:
      - $ref: '#/components/schemas/AzureBlobBrowserDestinationSpec'
      - $ref: '#/components/schemas/AzureDataBoxBrowserDestinationSpec'
      - $ref: '#/components/schemas/AmazonS3BrowserDestinationSpec'
      - $ref: '#/components/schemas/S3CompatibleBrowserDestinationSpec'
      - $ref: '#/components/schemas/AmazonSnowballEdgeBrowserDestinationSpec'
      - $ref: '#/components/schemas/GoogleCloudStorageBrowserDestinationSpec'
      - $ref: '#/components/schemas/IBMCloudStorageBrowserDestinationSpec'
      - $ref: '#/components/schemas/WasabiCloudStorageBrowserDestinationSpec'
      properties:
        credentialsId:
          description: ID of a cloud credentials record requiered to connect to the
            object storage.
          format: uuid
          type: string
        serviceType:
          $ref: '#/components/schemas/ECloudServiceType'
        newFolderName:
          description: Name of the new folder.
          type: string
      required:
      - credentialsId
      - newFolderName
      - serviceType
      type: object
    AzureBlobBrowserDestinationSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserNewFolderSpec'
      - $ref: '#/components/schemas/AzureBlobBrowserDestinationSpec_allOf'
    AzureDataBoxBrowserDestinationSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserNewFolderSpec'
      - $ref: '#/components/schemas/AzureDataBoxBrowserDestinationSpec_allOf'
    AmazonS3BrowserDestinationSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserNewFolderSpec'
      - $ref: '#/components/schemas/AmazonS3BrowserDestinationSpec_allOf'
    S3CompatibleBrowserDestinationSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserNewFolderSpec'
      - $ref: '#/components/schemas/S3CompatibleBrowserDestinationSpec_allOf'
    AmazonSnowballEdgeBrowserDestinationSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserNewFolderSpec'
      - $ref: '#/components/schemas/AmazonSnowballEdgeBrowserDestinationSpec_allOf'
    GoogleCloudStorageBrowserDestinationSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserNewFolderSpec'
      - $ref: '#/components/schemas/GoogleCloudStorageBrowserDestinationSpec_allOf'
    IBMCloudStorageBrowserDestinationSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserNewFolderSpec'
      - $ref: '#/components/schemas/IBMCloudStorageBrowserDestinationSpec_allOf'
    WasabiCloudStorageBrowserDestinationSpec:
      allOf:
      - $ref: '#/components/schemas/CloudBrowserNewFolderSpec'
      - $ref: '#/components/schemas/WasabiCloudStorageBrowserDestinationSpec_allOf'
    EAmazonRegionType:
      description: AWS region type.
      enum:
      - China
      - Global
      - Government
      type: string
    EAmazonS3Region:
      description: Amazon S3 region code.
      enum:
      - unknown
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - af-south-1
      - ap-east-1
      - ap-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ca-central-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-south-1
      - eu-west-3
      - eu-north-1
      - me-south-1
      - sa-east-1
      type: string
    ObjectStorageConsumptionLimitModel:
      description: Soft consumption limit for the storage. The limit can be exceeded
        temporarily.
      example:
        consumptionLimitCount: 2
        isEnabled: true
        consumptionLimitKind: null
      properties:
        isEnabled:
          description: "If *true*, the consumption limit is enabled."
          type: boolean
        consumptionLimitCount:
          description: Limit value.
          type: integer
        consumptionLimitKind:
          $ref: '#/components/schemas/EConsumptionLimitKind'
      type: object
    EConsumptionLimitKind:
      description: Measurement unit.
      enum:
      - TB
      - PB
      type: string
    GoogleCloudStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/GoogleCloudStorageSpec_allOf'
      description: Google Cloud storage.
    GoogleCloudStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/GoogleCloudStorageSpec_allOf'
      description: Google Cloud storage.
    GoogleCloudStorageAccountModel:
      description: Account used to access the Google Cloud storage.
      properties:
        credentialsId:
          description: ID of a cloud credentials record used to access the storage.
          format: uuid
          type: string
        regionId:
          description: ID of a region where the storage bucket is located.
          type: string
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
      required:
      - connectionSettings
      - credentialsId
      - regionId
      type: object
    GoogleCloudStorageBucketModel:
      description: Google Cloud object storage bucket where backup data is stored.
      example:
        storageConsumptionLimit:
          consumptionLimitCount: 2
          isEnabled: true
          consumptionLimitKind: null
        bucketName: bucketName
        nearlineStorageEnabled: true
        folderName: folderName
      properties:
        bucketName:
          description: Name of a Google Cloud bucket.
          type: string
        folderName:
          description: Name of the folder that the object storage repository is mapped
            to.
          type: string
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
        nearlineStorageEnabled:
          description: "If *true*, the nearline storage class is used."
          type: boolean
      required:
      - bucketName
      - folderName
      type: object
    IBMCloudStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/IBMCloudStorageSpec_allOf'
      description: IBM Cloud storage.
    IBMCloudStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/IBMCloudStorageSpec_allOf'
      description: IBM Cloud storage.
    S3CompatibleProxyModel:
      description: Proxy appliance for the S3 compatible storage.
      example:
        managedServerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        managedServerId:
          description: ID of a managed server used as a proxy appliance.
          format: uuid
          type: string
      required:
      - managedServerId
      type: object
    IBMCloudStorageAccountModel:
      description: Account used to access the IBM Cloud storage.
      properties:
        servicePoint:
          description: Endpoint address and port number of the storage.
          type: string
        regionId:
          description: ID of a region where the storage is located.
          type: string
        credentialsId:
          description: ID of a cloud credentials record used to access the storage.
          format: uuid
          type: string
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
      required:
      - connectionSettings
      - credentialsId
      - regionId
      - servicePoint
      type: object
    IBMCloudStorageBucketModel:
      description: IBM Cloud bucket where backup data is stored.
      example:
        storageConsumptionLimit:
          consumptionLimitCount: 2
          isEnabled: true
          consumptionLimitKind: null
        immutability:
          isEnabled: true
          daysCount: 1
        bucketName: bucketName
        folderName: folderName
      properties:
        bucketName:
          description: Name of an IBM Cloud bucket.
          type: string
        folderName:
          description: Name of the folder that the object storage repository is mapped
            to.
          type: string
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
        immutability:
          $ref: '#/components/schemas/ObjectStorageImmutabilityModel'
      required:
      - bucketName
      - folderName
      type: object
    AmazonS3GlacierStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/AmazonS3GlacierStorageSpec_allOf'
      description: Amazon S3 Glacier storage.
    AmazonS3GlacierStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/AmazonS3GlacierStorageSpec_allOf'
      description: Amazon S3 Glacier storage.
    AmazonS3GlacierStorageBucketModel:
      description: Amazon S3 Glacier bucket where backup data is stored.
      example:
        bucketName: bucketName
        useDeepArchive: true
        immutabilityEnabled: true
        regionId: regionId
        folderName: folderName
      properties:
        regionId:
          description: ID of a region where the Amazon S3 bucket is located.
          type: string
        bucketName:
          description: Name of an Amazon S3 Glacier bucket.
          type: string
        folderName:
          description: Name of the folder that the object storage repository is mapped
            to.
          type: string
        immutabilityEnabled:
          description: "If *true*, storage immutability is enabled."
          type: boolean
        useDeepArchive:
          description: "If *true*, Glacier Deep Archive is used for backups with the\
            \ retention policy over 180 days."
          type: boolean
      required:
      - bucketName
      - folderName
      - regionId
      type: object
    AmazonS3StorageProxyApplianceModel:
      description: Amazon S3 proxy appliance.
      example:
        subnet: subnet
        ec2InstanceType: ec2InstanceType
        vpc: vpc
        redirectorPort: 1
        securityGroup: securityGroup
      properties:
        ec2InstanceType:
          description: EC2 instance type for the proxy appliance.
          type: string
        vpc:
          description: Amazon VPC where Veeam Backup & Replication launches the target
            instance.
          type: string
        subnet:
          description: Subnet for the proxy appliance.
          type: string
        securityGroup:
          description: Security group associated with the proxy appliance.
          type: string
        redirectorPort:
          description: TCP port used to route requests between the proxy appliance
            and backup infrastructure components.
          type: integer
      type: object
    AzureArchiveStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/AzureArchiveStorageSpec_allOf'
      description: Microsoft Azure Archive storage.
    AzureArchiveStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/AzureArchiveStorageSpec_allOf'
      description: Microsoft Azure Archive storage.
    AzureArchiveStorageAccountModel:
      description: Account used to access the Azure Archive storage.
      properties:
        credentialsId:
          description: ID of a cloud credentials record used to access the storage.
          format: uuid
          type: string
        regionType:
          $ref: '#/components/schemas/EAzureRegionType'
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
      required:
      - connectionSettings
      - credentialsId
      - regionType
      type: object
    AzureArchiveStorageContainerModel:
      description: Azure Archive container where backup data is stored.
      example:
        containerName: containerName
        folderName: folderName
      properties:
        containerName:
          description: Name of an Azure Archive container.
          type: string
        folderName:
          description: Name of the folder that the object storage repository is mapped
            to.
          type: string
      required:
      - containerName
      - folderName
      type: object
    AzureStorageProxyModel:
      description: Azure storage proxy appliance.
      example:
        instanceSize: instanceSize
        resourceGroup: resourceGroup
        subnet: subnet
        redirectorPort: 4
        subscriptionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        virtualNetwork: virtualNetwork
      properties:
        subscriptionId:
          description: ID that Veeam Backup & Replication assigned to the Azure subscription.
          format: uuid
          type: string
        instanceSize:
          description: Size of the appliance.
          type: string
        resourceGroup:
          description: Resource group associated with the proxy appliance.
          type: string
        virtualNetwork:
          description: Network to which the helper appliance is connected.
          type: string
        subnet:
          description: Subnet for the proxy appliance.
          type: string
        redirectorPort:
          description: TCP port used to route requests between the proxy appliance
            and backup infrastructure components.
          type: integer
      required:
      - subscriptionId
      type: object
    WasabiCloudStorageSpec:
      allOf:
      - $ref: '#/components/schemas/RepositorySpec'
      - $ref: '#/components/schemas/WasabiCloudStorageSpec_allOf'
      description: Wasabi Cloud storage.
    WasabiCloudStorageModel:
      allOf:
      - $ref: '#/components/schemas/RepositoryModel'
      - $ref: '#/components/schemas/WasabiCloudStorageSpec_allOf'
      description: Wasabi Cloud storage.
    WasabiCloudStorageAccountModel:
      description: Account used to access the Wasabi Cloud storage.
      properties:
        regionId:
          description: ID of a region where the storage is located.
          type: string
        credentialsId:
          description: ID of a cloud credentials record used to access the storage.
          format: uuid
          type: string
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
      required:
      - connectionSettings
      - credentialsId
      - regionId
      type: object
    WasabiCloudStorageBucketModel:
      description: Wasabi bucket where backup data is stored.
      example:
        storageConsumptionLimit:
          consumptionLimitCount: 2
          isEnabled: true
          consumptionLimitKind: null
        immutability:
          isEnabled: true
          daysCount: 1
        bucketName: bucketName
        folderName: folderName
      properties:
        bucketName:
          description: Name of a Wasabi bucket.
          type: string
        folderName:
          description: Name of the folder that the object storage repository is mapped
            to.
          type: string
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
        immutability:
          $ref: '#/components/schemas/ObjectStorageImmutabilityModel'
      required:
      - bucketName
      - folderName
      type: object
    VmwareFcdQuickMigrationSpec:
      example:
        mountedDiskNames:
        - mountedDiskNames
        - mountedDiskNames
        storagePolicy:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
        targetDatastore:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
      properties:
        mountedDiskNames:
          description: Array of disks that will be migrated to the `targetDatastore`
            associated with the `storagePolicy`.
          items:
            type: string
          type: array
        targetDatastore:
          $ref: '#/components/schemas/VmwareObjectModel'
        storagePolicy:
          $ref: '#/components/schemas/VmwareObjectModel'
      required:
      - targetDatastore
      type: object
    RepositoryStatesResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - hostName: hostName
          path: path
          freeGB: 6.027456183070403
          usedSpaceGB: 1.4658129805029452
          capacityGB: 0.8008281904610115
          name: name
          description: description
          hostId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
        - hostName: hostName
          path: path
          freeGB: 6.027456183070403
          usedSpaceGB: 1.4658129805029452
          capacityGB: 0.8008281904610115
          name: name
          description: description
          hostId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
      properties:
        data:
          description: Array of repository states.
          items:
            $ref: '#/components/schemas/RepositoryStateModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    RepositoryStateModel:
      example:
        hostName: hostName
        path: path
        freeGB: 6.027456183070403
        usedSpaceGB: 1.4658129805029452
        capacityGB: 0.8008281904610115
        name: name
        description: description
        hostId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
      properties:
        id:
          description: ID of the backup repository.
          format: uuid
          type: string
        name:
          description: Name of the backup repository.
          type: string
        type:
          $ref: '#/components/schemas/ERepositoryType'
        description:
          description: Description of the backup repository.
          type: string
        hostId:
          description: ID of the server that is used as a backup repository.
          format: uuid
          type: string
        hostName:
          description: Name of the server that is used as a backup repository.
          type: string
        path:
          description: Path to the folder where backup files are stored.
          type: string
        capacityGB:
          description: Repository capacity in GB.
          format: double
          type: number
        freeGB:
          description: Repository free space in GB.
          format: double
          type: number
        usedSpaceGB:
          description: Repository used space in GB.
          format: double
          type: number
      required:
      - capacityGB
      - description
      - freeGB
      - id
      - name
      - type
      - usedSpaceGB
      type: object
    RepositoryStatesFilters:
      description: Filters repositories by the specified parameters.
      properties:
        skip:
          description: Skips the specified number of repositories.
          format: int32
          type: integer
        limit:
          description: Returns the specified number of repositories.
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/ERepositoryStatesFiltersOrderColumn'
        orderAsc:
          description: Sorts repositories in the ascending order by the `orderColumn`
            parameter.
          type: boolean
        idFilter:
          format: uuid
          type: string
        nameFilter:
          description: "Filters repositories by the `nameFilter` pattern. The pattern\
            \ can match any repository parameter. To substitute one or more characters,\
            \ use the asterisk (*) character at the beginning and/or at the end."
          type: string
        typeFilter:
          $ref: '#/components/schemas/ERepositoryType'
        capacityFilter:
          description: Filters repositories by repository capacity.
          format: double
          type: number
        freeSpaceFilter:
          description: Filters repositories by repository free space.
          format: double
          type: number
        usedSpaceFilter:
          description: Filters repositories by repository used space.
          format: double
          type: number
      type: object
    ERepositoryStatesFiltersOrderColumn:
      description: Orders repositories by the specified column.
      enum:
      - Name
      - Type
      - Host
      - Path
      - CapacityGB
      - FreeGB
      - UsedSpaceGB
      - Description
      type: string
    ServicesResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - port: 0
          name: name
        - port: 0
          name: name
      properties:
        data:
          description: Array of services.
          items:
            $ref: '#/components/schemas/ServicesModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    ServicesModel:
      example:
        port: 0
        name: name
      properties:
        name:
          description: Name of the service.
          type: string
        port:
          description: Port used to communicate with the service.
          type: integer
      required:
      - name
      - port
      type: object
    ServicesFilters:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EServicesFiltersOrderColumn'
        orderAsc:
          type: boolean
        nameFilter:
          type: string
      type: object
    EServicesFiltersOrderColumn:
      enum:
      - Name
      - Port
      type: string
    RepositoryAccessPermissionsModel:
      description: Repository access permissions.
      example:
        encryptBackups: true
        passwordId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        accessPolicy: null
        accounts:
        - accounts
        - accounts
      properties:
        accessPolicy:
          $ref: '#/components/schemas/ERepositoryAccessType'
        accounts:
          description: (For *AllowExplicit* access policy) Array of accounts that
            have access to the backup repository.
          items:
            type: string
          type: array
        encryptBackups:
          description: "If *true*, Veeam Backup & Replication encrypts Veeam Agent\
            \ backup files stored in the backup repository."
          type: boolean
        passwordId:
          description: ID of the password used for encryption.
          format: uuid
          type: string
      required:
      - accessPolicy
      - encryptBackups
      type: object
    ERepositoryAccessType:
      description: Access type.
      enum:
      - DenyAll
      - AllowAll
      - AllowExplicit
      type: string
    DeleteRepositoryFilters:
      properties:
        deleteBackups:
          type: boolean
      type: object
    GeneralOptionsModel:
      example:
        emailSettings:
          sendDailyReportsAt: 2000-01-23T04:56:07.000+00:00
          notifyOnWarning: true
          notifyOnFailure: true
          smtpServerName: smtpServerName
          subject: subject
          isEnabled: true
          notifyOnLastRetry: true
          advancedSmtpOptions:
            authRequired: true
            SSLEnabled: true
            port: 0
            timeoutMs: 6
            credentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          from: from
          to: to
          notifyOnSuccess: true
        notifications:
          notifyOnUpdates: true
          storageSpaceThresholdEnabled: true
          skipVMSpaceThreshold: 5
          skipVMSpaceThresholdEnabled: true
          datastoreSpaceThreshold: 5
          datastoreSpaceThresholdEnabled: true
          storageSpaceThreshold: 1
          notifyOnSupportExpiration: true
      properties:
        emailSettings:
          $ref: '#/components/schemas/GeneralOptionsEmailNotificationsModel'
        notifications:
          $ref: '#/components/schemas/GeneralOptionsNotificationsModel'
      type: object
    GeneralOptionsEmailNotificationsModel:
      description: Global email notification settings and job notifications.
      example:
        sendDailyReportsAt: 2000-01-23T04:56:07.000+00:00
        notifyOnWarning: true
        notifyOnFailure: true
        smtpServerName: smtpServerName
        subject: subject
        isEnabled: true
        notifyOnLastRetry: true
        advancedSmtpOptions:
          authRequired: true
          SSLEnabled: true
          port: 0
          timeoutMs: 6
          credentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        from: from
        to: to
        notifyOnSuccess: true
      properties:
        isEnabled:
          description: "If *true*, global email notification settings are enabled."
          type: boolean
        smtpServerName:
          description: Full DNS name or IP address of the SMTP server.
          type: string
        advancedSmtpOptions:
          $ref: '#/components/schemas/AdvancedSmtpOptionsModel'
        from:
          description: Email address from which email notifications must be sent.
          type: string
        to:
          description: Recipient email addresses. Use a semicolon to separate multiple
            addresses.
          type: string
        subject:
          description: Notification subject. Use the following variables in the subject:<ul>
            <li>%Time% — completion time</li> <li>%JobName% — job name</li> <li>%JobResult%
            — job result</li> <li>%ObjectCount% — number of VMs in the job</li> <li>%Issues%
            — number of VMs in the job that have been processed with the Warning or
            Failed status</li></ul>
          type: string
        sendDailyReportsAt:
          description: Time when Veeam Backup & Replication sends daily email reports.
          format: date-time
          type: string
        notifyOnSuccess:
          description: "If *true*, email notifications are sent when the job completes\
            \ successfully."
          type: boolean
        notifyOnWarning:
          description: "If *true*, email notifications are sent when the job completes\
            \ with a warning."
          type: boolean
        notifyOnFailure:
          description: "If *true*, email notifications are sent when the job fails."
          type: boolean
        notifyOnLastRetry:
          description: "If *true*, email notifications are sent about the final job\
            \ status only (not per every job retry)."
          type: boolean
      required:
      - advancedSmtpOptions
      - from
      - isEnabled
      - notifyOnFailure
      - notifyOnLastRetry
      - notifyOnSuccess
      - notifyOnWarning
      - sendDailyReportsAt
      - smtpServerName
      - subject
      - to
      type: object
    AdvancedSmtpOptionsModel:
      description: Advanced global email notification settings.
      example:
        authRequired: true
        SSLEnabled: true
        port: 0
        timeoutMs: 6
        credentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        port:
          description: Port number for the SMTP server.
          format: int32
          type: integer
        timeoutMs:
          description: Connection timeout for the SMTP server.
          format: int32
          type: integer
        SSLEnabled:
          description: "If *true*, secure connection for email operations is used."
          type: boolean
        authRequired:
          description: "If *true*, the `credentialsId` credentials are used to connect\
            \ to the SMTP server."
          type: boolean
        credentialsId:
          description: ID of the credentials used to connect to the server.
          format: uuid
          type: string
      required:
      - SSLEnabled
      - authRequired
      - port
      - timeoutMs
      type: object
    GeneralOptionsNotificationsModel:
      description: "Other notifications such as notifications on low disk space, support\
        \ contract expiration, and available updates."
      example:
        notifyOnUpdates: true
        storageSpaceThresholdEnabled: true
        skipVMSpaceThreshold: 5
        skipVMSpaceThresholdEnabled: true
        datastoreSpaceThreshold: 5
        datastoreSpaceThresholdEnabled: true
        storageSpaceThreshold: 1
        notifyOnSupportExpiration: true
      properties:
        storageSpaceThresholdEnabled:
          description: "If *true*, notifications about critical amount of free space\
            \ in backup storage are enabled."
          type: boolean
        storageSpaceThreshold:
          description: "Space threshold of backup storage, in percent."
          format: int32
          type: integer
        datastoreSpaceThresholdEnabled:
          description: "If *true*, notifications about critical amount of free space\
            \ in production datastore are enabled."
          type: boolean
        datastoreSpaceThreshold:
          description: "Space threshold of production datastore, in percent."
          format: int32
          type: integer
        skipVMSpaceThresholdEnabled:
          description: "If *true* and the `skipVMSpaceThreshold` threshold is reached,\
            \ Veeam Backup & Replication terminates backup and replication jobs working\
            \ with production datastores before VM snapshots are taken."
          type: boolean
        skipVMSpaceThreshold:
          description: "Space threshold of production datastore, in percent."
          format: int32
          type: integer
        notifyOnSupportExpiration:
          description: "If *true*, notifications about support contract expiration\
            \ are enabled."
          type: boolean
        notifyOnUpdates:
          description: "If *true*, notifications about updates are enabled."
          type: boolean
      required:
      - datastoreSpaceThreshold
      - datastoreSpaceThresholdEnabled
      - notifyOnSupportExpiration
      - notifyOnUpdates
      - skipVMSpaceThreshold
      - skipVMSpaceThresholdEnabled
      - storageSpaceThreshold
      - storageSpaceThresholdEnabled
      type: object
    ConfigBackupModel:
      example:
        schedule:
          isEnabled: true
          daily:
            localTime: localTime
            isEnabled: true
            days:
            - null
            - null
            dailyKind: null
          monthly:
            localTime: localTime
            dayOfWeek: null
            months:
            - null
            - null
            dayOfMonth: 6
            isEnabled: false
            dayNumberInMonth: null
        encryption:
          passwordId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isEnabled: true
        isEnabled: true
        backupRepositoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        restorePointsToKeep: 0
        lastSuccessfulBackup:
          lastSuccessfulTime: 2000-01-23T04:56:07.000+00:00
          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        notifications:
          SNMPEnabled: true
          SMTPSettings:
            settingsType: null
            notifyOnWarning: true
            recipients:
            - recipients
            - recipients
            subject: subject
            isEnabled: true
            notifyOnError: true
            notifyOnSuccess: true
      properties:
        isEnabled:
          description: "If *true*, configuration backup is enabled."
          type: boolean
        backupRepositoryId:
          description: ID of the backup repository on which the configuration backup
            is stored.
          format: uuid
          type: string
        restorePointsToKeep:
          description: Number of restore points to keep in the backup repository.
          format: int32
          type: integer
        notifications:
          $ref: '#/components/schemas/ConfigBackupNotificationsModel'
        schedule:
          $ref: '#/components/schemas/ConfigBackupScheduleModel'
        lastSuccessfulBackup:
          $ref: '#/components/schemas/ConfigBackupLastSuccessfulModel'
        encryption:
          $ref: '#/components/schemas/ConfigBackupEncryptionModel'
      required:
      - backupRepositoryId
      - encryption
      - isEnabled
      - lastSuccessfulBackup
      - notifications
      - restorePointsToKeep
      - schedule
      type: object
    ConfigBackupNotificationsModel:
      description: Notification settings.
      example:
        SNMPEnabled: true
        SMTPSettings:
          settingsType: null
          notifyOnWarning: true
          recipients:
          - recipients
          - recipients
          subject: subject
          isEnabled: true
          notifyOnError: true
          notifyOnSuccess: true
      properties:
        SNMPEnabled:
          description: "If *true*, SNMP traps are enabled for this job."
          type: boolean
        SMTPSettings:
          $ref: '#/components/schemas/ConfigBackupSMTPSettigsModel'
      required:
      - SNMPEnabled
      type: object
    ConfigBackupSMTPSettigsModel:
      description: Email notification settings.
      example:
        settingsType: null
        notifyOnWarning: true
        recipients:
        - recipients
        - recipients
        subject: subject
        isEnabled: true
        notifyOnError: true
        notifyOnSuccess: true
      properties:
        isEnabled:
          description: "If *true*, email notifications are enabled for this job."
          type: boolean
        recipients:
          description: Array of recipients' email addresses.
          items:
            type: string
          type: array
        settingsType:
          $ref: '#/components/schemas/EConfigBackupSMTPSettingsType'
        subject:
          description: Notification subject. Use the following variables in the subject:<ul>
            <li>*%Time%* — completion time</li> <li>*%JobName%* — job name</li> <li>*%JobResult%*
            — job result</li></ul>
          type: string
        notifyOnSuccess:
          description: "If *true*, email notifications are sent when the job completes\
            \ successfully."
          type: boolean
        notifyOnWarning:
          description: "If *true*, email notifications are sent when the job completes\
            \ with a warning."
          type: boolean
        notifyOnError:
          description: "If *true*, email notifications are sent when the job fails."
          type: boolean
      required:
      - isEnabled
      - notifyOnError
      - notifyOnSuccess
      - notifyOnWarning
      - recipients
      - settingsType
      - subject
      type: object
    EConfigBackupSMTPSettingsType:
      description: Type of notification settings.
      enum:
      - Global
      - Custom
      type: string
    ConfigBackupLastSuccessfulModel:
      description: Last successful backup.
      example:
        lastSuccessfulTime: 2000-01-23T04:56:07.000+00:00
        sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        lastSuccessfulTime:
          description: Date and time when the last successful backup was created.
          format: date-time
          type: string
        sessionId:
          description: ID of the job session.
          format: uuid
          type: string
      type: object
    ConfigBackupScheduleModel:
      description: Scheduling settings.
      example:
        isEnabled: true
        daily:
          localTime: localTime
          isEnabled: true
          days:
          - null
          - null
          dailyKind: null
        monthly:
          localTime: localTime
          dayOfWeek: null
          months:
          - null
          - null
          dayOfMonth: 6
          isEnabled: false
          dayNumberInMonth: null
      properties:
        isEnabled:
          description: "If *true*, backup scheduling is enabled."
          type: boolean
        daily:
          $ref: '#/components/schemas/ScheduleDailyModel'
        monthly:
          $ref: '#/components/schemas/ScheduleMonthlyModel'
      required:
      - isEnabled
      type: object
    ConfigBackupEncryptionModel:
      description: Encryption settings.
      example:
        passwordId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isEnabled: true
      properties:
        isEnabled:
          description: "If *true*, backup encryption is enabled."
          type: boolean
        passwordId:
          description: ID of the password used for encryption.
          format: uuid
          type: string
      required:
      - isEnabled
      - passwordId
      type: object
    ScaleOutExtentMaintenanceSpec:
      example:
        repositoryIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        repositoryIds:
          description: Array of repository IDs added as scale-out backup repository
            extents.
          items:
            format: uuid
            type: string
          type: array
      required:
      - repositoryIds
      type: object
    ConnectionCertificateModel:
      example:
        fingerprint: fingerprint
        certificate:
          serialNumber: serialNumber
          keyAlgorithm: keyAlgorithm
          issuedTo: issuedTo
          keySize: keySize
          subject: subject
          issuedBy: issuedBy
          thumbprint: thumbprint
          validFrom: 2000-01-23T04:56:07.000+00:00
          validBy: 2000-01-23T04:56:07.000+00:00
      properties:
        fingerprint:
          description: SSH key fingerprint used to verify the server identity.
          type: string
        certificate:
          $ref: '#/components/schemas/CertificateModel'
      type: object
    EEntireVMRestoreModeType:
      description: Restore mode.
      enum:
      - OriginalLocation
      - Customized
      type: string
    EntireViVMRestoreSpec:
      discriminator:
        mapping:
          OriginalLocation: '#/components/schemas/EntireViVMOriginalLocationRestoreSpec'
          Customized: '#/components/schemas/EntireViVMCustomizedRestoreSpec'
        propertyName: type
      example:
        secureRestore:
          enableEntireVolumeScan: true
          enableAntivirusScan: true
          virusDetectionAction: null
        powerUp: true
        reason: reason
        restoreProxies:
          autoSelection: true
          proxyIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        objectRestorePointId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
      oneOf:
      - $ref: '#/components/schemas/EntireViVMOriginalLocationRestoreSpec'
      - $ref: '#/components/schemas/EntireViVMCustomizedRestoreSpec'
      properties:
        objectRestorePointId:
          description: ID of the restore point.
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/EEntireVMRestoreModeType'
        restoreProxies:
          $ref: '#/components/schemas/RestoreProxySpec'
        secureRestore:
          $ref: '#/components/schemas/SecureRestoreSpec'
        powerUp:
          description: "If *true*, Veeam Backup & Replication starts the restored\
            \ VM on the target host."
          type: boolean
        reason:
          description: Reason for restoring the VM.
          type: string
      required:
      - objectRestorePointId
      - type
      type: object
    EntireViVMOriginalLocationRestoreSpec:
      allOf:
      - $ref: '#/components/schemas/EntireViVMRestoreSpec'
      - $ref: '#/components/schemas/EntireViVMOriginalLocationRestoreSpec_allOf'
      description: Restore to the original location with initial settings.
    EntireViVMCustomizedRestoreSpec:
      allOf:
      - $ref: '#/components/schemas/EntireViVMRestoreSpec'
      - $ref: '#/components/schemas/EntireViVMCustomizedRestoreSpec_allOf'
      description: "Restore to a new location or with different settings. To get models\
        \ of the destination host and resource pool, use the [Get VMware vSphere Server\
        \ Objects](#tag/Inventory-Browser/operation/GetVmwareHostObject) request."
    RestoreProxySpec:
      description: Backup proxies for VM data transport.
      example:
        autoSelection: true
        proxyIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        autoSelection:
          description: "If *true*, Veeam Backup & Replication detects backup proxies\
            \ that are connected to the source datastore and automatically assigns\
            \ optimal proxy resources for processing VM data."
          type: boolean
        proxyIds:
          description: Array of backup proxy IDs.
          items:
            format: uuid
            type: string
          type: array
      required:
      - autoSelection
      type: object
    SecureRestoreSpec:
      description: Secure restore settings.
      example:
        enableEntireVolumeScan: true
        enableAntivirusScan: true
        virusDetectionAction: null
      properties:
        enableAntivirusScan:
          description: "If *true*, Veeam Backup & Replication scans machine data with\
            \ antivirus software before restoring the machine to the production environment."
          type: boolean
        virusDetectionAction:
          $ref: '#/components/schemas/EVirusDetectionAction'
        enableEntireVolumeScan:
          description: "If *true*, the antivirus continues machine scan after the\
            \ first malware is found."
          type: boolean
      required:
      - enableAntivirusScan
      type: object
    EVirusDetectionAction:
      description: Action that Veeam Backup & Replication takes if the antivirus software
        finds a threat.
      enum:
      - DisableNetwork
      - AbortRecovery
      - Ignore
      type: string
    RestoreTargetDatastoreSpec:
      description: Destination datastore.
      properties:
        datastore:
          $ref: '#/components/schemas/VmwareObjectModel'
        diskType:
          $ref: '#/components/schemas/EDiskCreationMode'
      type: object
    EDiskCreationMode:
      description: Disk format of the restored VM.
      enum:
      - Source
      - Thick
      - Thin
      - ThickEagerZeroed
      type: string
      x-enumDescriptions:
        Source: Same as source.
        Thick: Thick provision lazy zeroed.
        Thin: Thin provision.
        ThickEagerZeroed: Thick provision eager zeroed.
    RestoreTargetFolderSpec:
      description: Destination VM folder.
      properties:
        vmName:
          description: VM name.
          type: string
        folder:
          $ref: '#/components/schemas/VmwareObjectModel'
        restoreVmTags:
          description: "If *true*, Veeam Backup & Replication restores tags that were\
            \ assigned to the original VMs, and assigns them to the restored VMs."
          type: boolean
      required:
      - folder
      type: object
    RestoreTargetNetworkSpec:
      description: Network to which the restored VM is connected.
      properties:
        network:
          $ref: '#/components/schemas/VmwareObjectModel'
        disconnected:
          description: "If *true*, the restored VMs is not connected to any virtual\
            \ network."
          type: boolean
      required:
      - network
      type: object
    InstantViVMRecoverySpec:
      description: Instant Recovery settings.
      discriminator:
        mapping:
          OriginalLocation: '#/components/schemas/InstantViVMOriginalLocationRecoverySpec'
          Customized: '#/components/schemas/InstantViVMCustomizedRecoverySpec'
        propertyName: type
      example:
        secureRestore:
          enableEntireVolumeScan: true
          enableAntivirusScan: true
          virusDetectionAction: null
        powerUp: true
        reason: reason
        VmTagsRestoreEnabled: true
        objectRestorePointId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: null
        nicsEnabled: true
      oneOf:
      - $ref: '#/components/schemas/InstantViVMOriginalLocationRecoverySpec'
      - $ref: '#/components/schemas/InstantViVMCustomizedRecoverySpec'
      properties:
        objectRestorePointId:
          description: ID of the restore point.
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/EInstantVMRecoveryModeType'
        VmTagsRestoreEnabled:
          description: "If *true*, Veeam Backup & Replication restores tags that were\
            \ assigned to the original VM, and assign them to the restored VM."
          type: boolean
        secureRestore:
          $ref: '#/components/schemas/SecureRestoreSpec'
        nicsEnabled:
          description: "If *true*, the restored VM is connected to the network."
          type: boolean
        powerUp:
          description: "If *true*, Veeam Backup & Replication starts the restored\
            \ VM on the target host."
          type: boolean
        reason:
          description: Reason for restoring the VM.
          type: string
      required:
      - objectRestorePointId
      - secureRestore
      - type
      type: object
    EInstantVMRecoveryModeType:
      description: Restore mode.
      enum:
      - OriginalLocation
      - Customized
      type: string
    InstantViVMOriginalLocationRecoverySpec:
      allOf:
      - $ref: '#/components/schemas/InstantViVMRecoverySpec'
      description: Instant Recovery to the original location with initial settings.
    InstantViVMCustomizedRecoverySpec:
      allOf:
      - $ref: '#/components/schemas/InstantViVMRecoverySpec'
      - $ref: '#/components/schemas/InstantViVMCustomizedRecoverySpec_allOf'
      description: Instant Recovery to a new location or with different settings.
    InstantViVMCustomizedRecoveryDestinationSpec:
      description: "Destination where the recovered VM resides. To get models of the\
        \ destination host, folder and resource pool, use the [Get VMware vSphere\
        \ Server Objects](#tag/Inventory-Browser/operation/GetVmwareHostObject) request."
      properties:
        restoredVmName:
          description: Restored VM name.
          type: string
        destinationHost:
          $ref: '#/components/schemas/VmwareObjectModel'
        folder:
          $ref: '#/components/schemas/VmwareObjectModel'
        resourcePool:
          $ref: '#/components/schemas/VmwareObjectModel'
        biosUuidPolicy:
          $ref: '#/components/schemas/EInstantViVmRecoveryBiosUuidPolicyType'
      required:
      - biosUuidPolicy
      - destinationHost
      - folder
      - resourcePool
      - restoredVmName
      type: object
    EInstantViVmRecoveryBiosUuidPolicyType:
      description: BIOS UUID policy for the restored VM.
      enum:
      - preserve
      - generateNew
      type: string
    InstantViVMCustomizedRecoveryDatastoreSpec:
      description: Datastore that keeps redo logs with changes that take place while
        a VM is running from a backup.
      properties:
        redirectIsEnabled:
          description: "If *true*, redo logs are redirected to `cacheDatastore`."
          type: boolean
        cacheDatastore:
          $ref: '#/components/schemas/VmwareObjectModel'
      required:
      - redirectIsEnabled
      type: object
    InstantViVMRecoveryMount:
      description: VM mount.
      example:
        vmName: vmName
        errorMessage: errorMessage
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: null
        spec:
          secureRestore:
            enableEntireVolumeScan: true
            enableAntivirusScan: true
            virusDetectionAction: null
          powerUp: true
          reason: reason
          VmTagsRestoreEnabled: true
          objectRestorePointId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: null
          nicsEnabled: true
      properties:
        id:
          description: Mount ID.
          format: uuid
          type: string
        sessionId:
          description: "ID of the restore session. Use the ID to track the progress.\
            \ For details, see [Get Session](#tag/Sessions/operation/GetSession)."
          format: uuid
          type: string
        state:
          $ref: '#/components/schemas/EInstantRecoveryMountState'
        spec:
          $ref: '#/components/schemas/InstantViVMRecoverySpec'
        vmName:
          description: Name of the recovered VM.
          type: string
        errorMessage:
          description: Error message.
          type: string
      required:
      - id
      - sessionId
      - spec
      - state
      - vmName
      type: object
    InstantViVMRecoveryMountsFilters:
      properties:
        skip:
          description: Number of mounts to skip.
          format: int32
          type: integer
        limit:
          description: Maximum number of mounts to return.
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EInstantViVMRecoveryMountsFiltersOrderColumn'
        orderAsc:
          description: Sorts mounts in the ascending order by the `orderColumn` parameter.
          type: boolean
        nameFilter:
          description: "Filters mounts by the `nameFilter` pattern. The pattern can\
            \ match any mount parameter. To substitute one or more characters, use\
            \ the asterisk (*) character at the beginning, at the end or both."
          type: string
        stateFilter:
          $ref: '#/components/schemas/EInstantRecoveryMountState'
      type: object
    EInstantViVMRecoveryMountsFiltersOrderColumn:
      description: Sorts mounts by one of the mount parameters.
      enum:
      - state
      - name
      type: string
    InstantViVMRecoveryMountsResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - vmName: vmName
          errorMessage: errorMessage
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: null
          spec:
            secureRestore:
              enableEntireVolumeScan: true
              enableAntivirusScan: true
              virusDetectionAction: null
            powerUp: true
            reason: reason
            VmTagsRestoreEnabled: true
            objectRestorePointId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: null
            nicsEnabled: true
        - vmName: vmName
          errorMessage: errorMessage
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sessionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: null
          spec:
            secureRestore:
              enableEntireVolumeScan: true
              enableAntivirusScan: true
              virusDetectionAction: null
            powerUp: true
            reason: reason
            VmTagsRestoreEnabled: true
            objectRestorePointId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: null
            nicsEnabled: true
      properties:
        data:
          description: Array of VM mounts.
          items:
            $ref: '#/components/schemas/InstantViVMRecoveryMount'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    ViVMQuickMigrationSpec:
      example:
        folder:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
        VeeamQMEnabled: true
        sourceProxyIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        datastore:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
        targetProxyIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        DeleteSourceVmsFiles: true
        destinationHost:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
        resourcePool:
          hostName: hostName
          name: name
          type: null
          objectId: objectId
      properties:
        destinationHost:
          $ref: '#/components/schemas/VmwareObjectModel'
        resourcePool:
          $ref: '#/components/schemas/VmwareObjectModel'
        folder:
          $ref: '#/components/schemas/VmwareObjectModel'
        datastore:
          $ref: '#/components/schemas/VmwareObjectModel'
        sourceProxyIds:
          description: Array of source backup proxies.
          items:
            format: uuid
            type: string
          type: array
        targetProxyIds:
          description: Array of target backup proxies.
          items:
            format: uuid
            type: string
          type: array
        VeeamQMEnabled:
          description: "If *true*, the Veeam Quick Migration mechanism is used. Otherwise,\
            \ Veeam Backup & Replication will use VMware vMotion for migration."
          type: boolean
        DeleteSourceVmsFiles:
          description: "If *true*, Veeam Backup & Replication will delete source VM\
            \ files upon successful migration."
          type: boolean
      required:
      - destinationHost
      type: object
    ComputerRecoveryTokenSpec:
      example:
        backupIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        backupIds:
          description: Array of backup IDs whose data you want to restore with the
            recovery token.
          items:
            format: uuid
            type: string
          type: array
        expirationDate:
          description: Date and time when the access token expires.
          format: date-time
          type: string
      required:
      - backupIds
      - expirationDate
      type: object
    ComputerRecoveryTokenFilters:
      properties:
        skip:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        orderColumn:
          $ref: '#/components/schemas/EComputerRecoveryTokenFiltersOrderColumn'
        orderAsc:
          type: boolean
        nameFilter:
          type: string
        expirationDateBefore:
          format: date-time
          type: string
        expirationDateAfter:
          format: date-time
          type: string
      type: object
    EComputerRecoveryTokenFiltersOrderColumn:
      enum:
      - Name
      - ExpirationDate
      type: string
    ComputerRecoveryTokenResult:
      example:
        pagination:
          total: 6
          count: 1
          limit: 5
          skip: 5
        data:
        - name: name
          recoveryToken: recoveryToken
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expirationDate: 2000-01-23T04:56:07.000+00:00
        - name: name
          recoveryToken: recoveryToken
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          description: Array of recovery tokens.
          items:
            $ref: '#/components/schemas/ComputerRecoveryTokenModel'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
      - data
      - pagination
      type: object
    ComputerRecoveryTokenModel:
      example:
        name: name
        recoveryToken: recoveryToken
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: ID of the recovery token.
          format: uuid
          type: string
        name:
          description: Friendly name of the recovery token.
          type: string
        recoveryToken:
          description: Recovery token.
          type: string
        expirationDate:
          description: Date and time when the recovery token expires.
          format: date-time
          type: string
      required:
      - expirationDate
      - id
      - name
      type: object
    CloudDeviceCodeSpec:
      discriminator:
        mapping:
          AzureCompute: '#/components/schemas/AzureComputeCloudDeviceCodeSpec'
        propertyName: type
      example:
        type: null
      oneOf:
      - $ref: '#/components/schemas/AzureComputeCloudDeviceCodeSpec'
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
      - type
      type: object
    AzureComputeCloudDeviceCodeSpec:
      allOf:
      - $ref: '#/components/schemas/CloudDeviceCodeSpec'
      - $ref: '#/components/schemas/AzureComputeCloudDeviceCodeSpec_allOf'
    CloudDeviceCodeModel:
      discriminator:
        mapping:
          AzureCompute: '#/components/schemas/AzureComputeCloudDeviceCodeModel'
        propertyName: type
      example:
        type: null
      oneOf:
      - $ref: '#/components/schemas/AzureComputeCloudDeviceCodeModel'
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
      - type
      type: object
    AzureComputeCloudDeviceCodeModel:
      allOf:
      - $ref: '#/components/schemas/CloudDeviceCodeModel'
      - $ref: '#/components/schemas/AzureComputeCloudDeviceCodeModel_allOf'
    CloudNativeApplicationModel:
      discriminator:
        mapping:
          AzureCompute: '#/components/schemas/AzureComputeCloudNativeApplicationModel'
        propertyName: type
      example:
        type: null
      oneOf:
      - $ref: '#/components/schemas/AzureComputeCloudNativeApplicationModel'
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
      - type
      type: object
    AzureComputeCloudNativeApplicationModel:
      allOf:
      - $ref: '#/components/schemas/CloudNativeApplicationModel'
      - $ref: '#/components/schemas/AzureComputeCloudNativeApplicationModel_allOf'
    WindowsHostSpec_allOf:
      properties:
        networkSettings:
          $ref: '#/components/schemas/WindowsHostPortsModel'
      type: object
      example: null
    LinuxHostModel_allOf:
      properties:
        sshSettings:
          $ref: '#/components/schemas/LinuxHostSSHSettingsModel'
        credentialsStorageType:
          $ref: '#/components/schemas/ECredentialsStorageType'
      type: object
      example: null
    ViHostModel_allOf:
      properties:
        viHostType:
          $ref: '#/components/schemas/EViHostType'
        port:
          description: Port used to communicate with the server.
          type: integer
      required:
      - port
      type: object
      example: null
    ViHostSpec_allOf:
      properties:
        port:
          description: Port used to communicate with the server.
          type: integer
        certificateThumbprint:
          description: "Certificate thumbprint used to verify the server identity.\
            \ For details on how to get the thumbprint, see [Request TLS Certificate\
            \ or SSH Fingerprint](#tag/Connection/operation/GetConnectionCertificate)."
          type: string
      type: object
      example: null
    WindowsLocalStorageSpec_allOf:
      properties:
        hostId:
          description: ID of the server that is used as a backup repository.
          format: uuid
          type: string
        repository:
          $ref: '#/components/schemas/WindowsLocalRepositorySettingsModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
      required:
      - hostId
      - mountServer
      - repository
      type: object
      example: null
    LinuxLocalStorageSpec_allOf:
      properties:
        hostId:
          description: ID of the server that is used as a backup repository.
          format: uuid
          type: string
        repository:
          $ref: '#/components/schemas/LinuxLocalRepositorySettingsModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
      required:
      - hostId
      - mountServer
      - repository
      type: object
      example: null
    NfsStorageSpec_allOf:
      properties:
        share:
          $ref: '#/components/schemas/NfsRepositoryShareSettingsModel'
        repository:
          $ref: '#/components/schemas/NetworkRepositorySettingsModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
      required:
      - mountServer
      - repository
      - share
      type: object
      example: null
    SmbStorageSpec_allOf:
      properties:
        share:
          $ref: '#/components/schemas/SmbRepositoryShareSettingsModel'
        repository:
          $ref: '#/components/schemas/NetworkRepositorySettingsModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
      required:
      - mountServer
      - repository
      - share
      type: object
      example: null
    LinuxHardenedStorageSpec_allOf:
      properties:
        hostId:
          description: ID of the server that is used as a backup repository.
          format: uuid
          type: string
        repository:
          $ref: '#/components/schemas/LinuxHardenedRepositorySettingsModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
      required:
      - hostId
      - mountServer
      - repository
      type: object
      example: null
    ViProxySpec_allOf:
      properties:
        server:
          $ref: '#/components/schemas/ProxyServerSettingsModel'
      required:
      - server
      type: object
      example: null
    BackupJobSpec_allOf:
      properties:
        isHighPriority:
          default: false
          description: "If *true*, the job has a high priority in getting backup infrastructure\
            \ resources."
          type: boolean
        virtualMachines:
          $ref: '#/components/schemas/BackupJobVirtualMachinesSpec'
        storage:
          $ref: '#/components/schemas/BackupJobStorageModel'
        guestProcessing:
          $ref: '#/components/schemas/BackupJobGuestProcessingModel'
        schedule:
          $ref: '#/components/schemas/BackupScheduleModel'
      required:
      - guestProcessing
      - isHighPriority
      - schedule
      - storage
      - virtualMachines
      type: object
      example: null
    BackupJobModel_allOf:
      properties:
        isHighPriority:
          description: "If *true*, the job has a high priority in getting backup infrastructure\
            \ resources."
          type: boolean
        virtualMachines:
          $ref: '#/components/schemas/BackupJobVirtualMachinesModel'
        storage:
          $ref: '#/components/schemas/BackupJobStorageModel'
        guestProcessing:
          $ref: '#/components/schemas/BackupJobGuestProcessingModel'
        schedule:
          $ref: '#/components/schemas/BackupScheduleModel'
      required:
      - guestProcessing
      - isHighPriority
      - schedule
      - storage
      - virtualMachines
      type: object
      example: null
    StandardCredentialsSpec_allOf:
      properties:
        tag:
          description: Tag used to identify the credentials record.
          type: string
      type: object
      example: null
    LinuxCredentialsSpec_allOf:
      properties:
        tag:
          description: Tag used to identify the credentials record.
          type: string
        SSHPort:
          description: SSH port used to connect to a Linux server.
          type: integer
        autoElevated:
          description: "If *true*, the permissions of the account are automatically\
            \ elevated to the root user."
          type: boolean
        addToSudoers:
          description: "If *true*, the account is automatically added to the sudoers\
            \ file."
          type: boolean
        useSu:
          description: "If *true*, the `su` command is used for Linux distributions\
            \ where the `sudo` command is not available."
          type: boolean
        privateKey:
          description: Private key.
          type: string
        passphrase:
          description: Passphrase that protects the private key.
          type: string
        rootPassword:
          description: Password for the root account.
          type: string
      type: object
      example: null
    LinuxCredentialsModel_allOf:
      properties:
        tag:
          description: Tag used to identify the credentials record.
          type: string
        SSHPort:
          description: SSH port used to connect to a Linux server.
          type: integer
        autoElevated:
          description: "If *true*, the permissions of the account are automatically\
            \ elevated to the root user."
          type: boolean
        addToSudoers:
          description: "If *true*, the account is automatically added to the sudoers\
            \ file."
          type: boolean
        useSu:
          description: "If *true*, the `su` command is used for Linux distributions\
            \ where the `sudo` command is not available."
          type: boolean
        privateKey:
          description: Private key.
          type: string
        passphrase:
          description: Passphrase that protects the private key.
          type: string
      type: object
      example: null
    ViBackupObjectModel_allOf:
      properties:
        objectId:
          description: "ID of the virtual infrastructure object (mo-ref or ID, depending\
            \ on the virtualization platform)."
          type: string
        viType:
          $ref: '#/components/schemas/EVmwareInventoryType'
        path:
          description: Path to the object.
          type: string
      required:
      - objectId
      type: object
      example: null
    AmazonCloudCredentialsSpec_allOf:
      properties:
        accessKey:
          description: ID of the access key.
          type: string
        secretKey:
          description: Secret key.
          type: string
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
      required:
      - accessKey
      - secretKey
      type: object
      example: null
    AmazonCloudCredentialsModel_allOf:
      properties:
        accessKey:
          description: ID of the access key.
          type: string
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
      required:
      - accessKey
      type: object
      example: null
    AzureStorageCloudCredentialsSpec_allOf:
      example: "{\"description\":\"Azure storage account\",\"type\":\"AzureStorage\"\
        ,\"tag\":\"createdbysheiladcory\",\"account\":\"williamfox\",\"sharedKey\"\
        :\"0sF53pZ/c8cVk+sEMby1lGZzA4SJezapyrFysdjlfLlUwMESTW6dEnkC3x62USr4cwHgPxarsBCE+ASt1Zjmwg==\"\
        }"
      properties:
        account:
          description: Name of the Azure storage account.
          type: string
        sharedKey:
          description: Shared key of the Azure storage account.
          type: string
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
      required:
      - account
      - sharedKey
      type: object
    AzureStorageCloudCredentialsModel_allOf:
      properties:
        account:
          description: Name of the Azure storage account.
          type: string
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
      required:
      - account
      type: object
      example: null
    AzureComputeCloudCredentialsSpec_allOf:
      properties:
        connectionName:
          description: Name under which the cloud credentials record will be shown
            in Veeam Backup & Replication.
          type: string
        creationMode:
          $ref: '#/components/schemas/EAzureComputeCredentialsCreationMode'
        existingAccount:
          $ref: '#/components/schemas/AzureComputeCredentialsExistingAccountSpec'
        newAccount:
          $ref: '#/components/schemas/AzureComputeCredentialsNewAccountSpec'
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
      required:
      - connectionName
      - creationMode
      type: object
      example: null
    AzureLinuxHelperApplianceModel_allOf:
      description: Lunux-based helper appliance for Microsoft Azure account.
      properties:
        id:
          description: Helper appliance ID.
          format: uuid
          type: string
        subscriptionId:
          description: ID that Veeam Backup & Replication assigned to the Azure subscription.
          format: uuid
          type: string
        vmName:
          description: VM name of the helper appliance.
          type: string
        location:
          description: Storage account location where the helper appliance is configured.
          type: string
        storageAccount:
          description: Azure storage account whose resources are used to store disks
            of the helper appliance.
          type: string
        resourceGroup:
          description: Resource group associated with the helper appliance.
          type: string
        virtualNetwork:
          description: Network to which the helper appliance is connected.
          type: string
        subnet:
          description: Subnet for the helper appliance.
          type: string
        SSHPort:
          description: Port over which Veeam Backup & Replication communicates with
            the helper appliance.
          type: integer
      required:
      - id
      - subscriptionId
      type: object
      example: null
    AzureComputeCloudCredentialsModel_allOf:
      properties:
        connectionName:
          description: Name under which the cloud credentials record is shown in Veeam
            Backup & Replication.
          type: string
        deployment:
          $ref: '#/components/schemas/AzureComputeCloudCredentialsDeploymentModel'
        subscription:
          $ref: '#/components/schemas/AzureComputeCloudCredentialsSubscriptionModel'
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
      required:
      - connectionName
      - deployment
      - subscription
      type: object
      example: null
    GoogleCloudCredentialsSpec_allOf:
      properties:
        accessKey:
          description: Access ID of a Google HMAC key.
          type: string
        secretKey:
          description: Secret linked to the access ID.
          type: string
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
      required:
      - accessKey
      - secretKey
      type: object
      example: null
    GoogleCloudCredentialsModel_allOf:
      properties:
        accessKey:
          description: Access ID of a Google HMAC key.
          type: string
        tag:
          description: Tag used to identify the cloud credentials record.
          type: string
      required:
      - accessKey
      type: object
      example: null
    AzureBlobBrowserSpec_allOf:
      properties:
        regionType:
          $ref: '#/components/schemas/EAzureRegionType'
        folderType:
          $ref: '#/components/schemas/ECloudBrowserFolderType'
        gatewayServerId:
          description: "ID of a gateway server you want to use to connect to the object\
            \ storage. Specify this parameter to check internet connection of the\
            \ server. As a gateway server you can use the backup server or any Microsoft\
            \ Windows or Linux server added to your backup infrastructure. By default,\
            \ the backup server ID is used."
          format: uuid
          type: string
      type: object
      example: null
    AzureDataBoxBrowserSpec_allOf:
      properties:
        servicePoint:
          description: Service endpoint used to connect to the Azure Data Box object
            storage.
          type: string
        gatewayServerId:
          description: "ID of a gateway server you want to use to connect to the object\
            \ storage. Specify this parameter to check internet connection of the\
            \ server. As a gateway server you can use the backup server or any Microsoft\
            \ Windows or Linux server added to your backup infrastructure. By default,\
            \ the backup server ID is used."
          format: uuid
          type: string
      type: object
      example: null
    AmazonS3BrowserSpec_allOf:
      properties:
        regionType:
          $ref: '#/components/schemas/EAmazonRegionType'
        gatewayServerId:
          description: "ID of a gateway server you want to use to connect to the object\
            \ storage. Specify this parameter to check internet connection of the\
            \ server. As a gateway server you can use the backup server or any Microsoft\
            \ Windows or Linux server added to your backup infrastructure. By default,\
            \ the backup server ID is used."
          format: uuid
          type: string
        folderType:
          $ref: '#/components/schemas/ECloudBrowserFolderType'
        filters:
          $ref: '#/components/schemas/AmazonS3CloudBrowserFilters'
      required:
      - regionType
      type: object
      example: null
    S3CompatibleBrowserSpec_allOf:
      properties:
        regionId:
          description: Region where the S3 compatible storage is located.
          type: string
        servicePoint:
          description: Service point address of the S3 compatible storage.
          type: string
        gatewayServerId:
          description: "ID of a gateway server you want to use to connect to the object\
            \ storage. Specify this parameter to check internet connection of the\
            \ server. As a gateway server you can use the backup server or any Microsoft\
            \ Windows or Linux server added to your backup infrastructure. By default,\
            \ the backup server ID is used."
          format: uuid
          type: string
      type: object
      example: null
    AmazonSnowballEdgeBrowserSpec_allOf:
      properties:
        regionId:
          description: "To connect to the AWS Snowball Edge device, specify the `snow`\
            \ value."
          type: string
        servicePoint:
          description: Service point address and port number of the AWS Snowball Edge
            device.
          type: string
        gatewayServerId:
          description: "ID of a gateway server you want to use to connect to the object\
            \ storage. Specify this parameter to check internet connection of the\
            \ server. As a gateway server you can use the backup server or any Microsoft\
            \ Windows or Linux server added to your backup infrastructure. By default,\
            \ the backup server ID is used."
          format: uuid
          type: string
      type: object
      example: null
    GoogleCloudStorageBrowserSpec_allOf:
      properties:
        gatewayServerId:
          description: "ID of a gateway server you want to use to connect to the object\
            \ storage. Specify this parameter to check internet connection of the\
            \ server. As a gateway server you can use the backup server or any Microsoft\
            \ Windows or Linux server added to your backup infrastructure. By default,\
            \ the backup server ID is used."
          format: uuid
          type: string
        filters:
          $ref: '#/components/schemas/GoogleCloudStorageBrowserFilters'
      type: object
      example: null
    IBMCloudStorageBrowserSpec_allOf:
      properties:
        regionId:
          description: Region of the IBM Cloud object storage.
          type: string
        servicePoint:
          description: Endpoint address and port number of the IBM Cloud object storage.
          type: string
        gatewayServerId:
          description: "ID of a gateway server you want to use to connect to the object\
            \ storage. Specify this parameter to check internet connection of the\
            \ server. As a gateway server you can use the backup server or any Microsoft\
            \ Windows or Linux server added to your backup infrastructure. By default,\
            \ the backup server ID is used."
          format: uuid
          type: string
      required:
      - regionId
      - servicePoint
      type: object
      example: null
    AzureComputeBrowserSpec_allOf:
      properties:
        filters:
          $ref: '#/components/schemas/AzureComputeBrowserFilters'
      type: object
      example: null
    AmazonEC2BrowserSpec_allOf:
      properties:
        regionType:
          $ref: '#/components/schemas/EAmazonRegionType'
        filters:
          $ref: '#/components/schemas/AmazonEC2BrowserFilters'
      required:
      - regionType
      type: object
      example: null
    WasabiCloudStorageBrowserSpec_allOf:
      properties:
        regionId:
          description: Region ID.
          type: string
        gatewayServerId:
          description: "ID of a gateway server you want to use to connect to the object\
            \ storage. Specify this parameter to check internet connection of the\
            \ server. As a gateway server you can use the backup server or any Microsoft\
            \ Windows or Linux server added to your backup infrastructure. By default,\
            \ the backup server ID is used."
          format: uuid
          type: string
      required:
      - regionId
      type: object
      example: null
    AzureBlobBrowserModel_allOf:
      properties:
        hostId:
          description: ID of a server used to connect to the object storage.
          format: uuid
          type: string
        regionType:
          $ref: '#/components/schemas/EAzureRegionType'
        containers:
          description: Array of containers that reside in the Azure storage account.
          items:
            $ref: '#/components/schemas/AzureBlobContainerBrowserModel'
          type: array
      type: object
      example: null
    AzureDataBoxBrowserModel_allOf:
      properties:
        hostId:
          description: ID of a server used to connect to the object storage.
          format: uuid
          type: string
        containers:
          description: Array of containers that reside in the Azure storage account.
          items:
            $ref: '#/components/schemas/AzureDataBoxContainerBrowserModel'
          type: array
      type: object
      example: null
    AmazonS3BrowserModel_allOf:
      properties:
        hostId:
          description: ID of a server used to connect to the object storage.
          format: uuid
          type: string
        regionType:
          $ref: '#/components/schemas/EAmazonRegionType'
        regions:
          description: Array of AWS regions belonged to the region type.
          items:
            $ref: '#/components/schemas/AmazonS3RegionBrowserModel'
          type: array
      required:
      - hostId
      - regionType
      type: object
      example: null
    S3CompatibleBrowserModel_allOf:
      properties:
        hostId:
          description: ID of a server used to connect to the S3 compatible storage.
          format: uuid
          type: string
        connectionPoint:
          description: Service point address and port number of the S3 compatible
            storage.
          type: string
        regions:
          description: Array of regions.
          items:
            $ref: '#/components/schemas/S3CompatibleRegionBrowserModel'
          type: array
      type: object
      example: null
    AmazonSnowballEdgeBrowserModel_allOf:
      properties:
        hostId:
          description: ID of a server used to connect to the AWS Snowball Edge device.
          format: uuid
          type: string
        connectionPoint:
          description: Service point address and port number of the AWS Snowball Edge
            device.
          type: string
        regions:
          description: Array of regions.
          items:
            $ref: '#/components/schemas/AmazonSnowballEdgeRegionBrowserModel'
          type: array
      type: object
      example: null
    GoogleCloudStorageBrowserModel_allOf:
      properties:
        hostId:
          description: ID of a server used to connect to the object storage.
          format: uuid
          type: string
        regions:
          description: Array of regions.
          items:
            $ref: '#/components/schemas/GoogleCloudStorageRegionBrowserModel'
          type: array
      type: object
      example: null
    IBMCloudStorageBrowserModel_allOf:
      properties:
        hostId:
          description: ID of a server used to connect to the object storage.
          format: uuid
          type: string
        regions:
          description: Array of regions.
          items:
            $ref: '#/components/schemas/IBMCloudStorageRegionBrowserModel'
          type: array
      type: object
      example: null
    AzureComputeBrowserModel_allOf:
      properties:
        regionType:
          description: Azure region type.
          type: string
        subscriptions:
          description: Array of Azure subscriptions associated with the account.
          items:
            $ref: '#/components/schemas/AzureSubscriptionBrowserModel'
          type: array
      type: object
      example: null
    AmazonEC2BrowserModel_allOf:
      properties:
        hostId:
          description: ID of a server used to connect to the object storage.
          format: uuid
          type: string
        regionType:
          $ref: '#/components/schemas/EAmazonRegionType'
        regions:
          description: Array of regions.
          items:
            $ref: '#/components/schemas/AmazonEC2RegionBrowserModel'
          type: array
      required:
      - hostId
      - regionType
      - regions
      type: object
      example: null
    WasabiCloudStorageBrowserModel_allOf:
      properties:
        hostId:
          description: ID of a server used to connect to the object storage.
          format: uuid
          type: string
        regions:
          description: Array of regions.
          items:
            $ref: '#/components/schemas/WasabiCloudStorageRegionBrowserModel'
          type: array
      type: object
      example: null
    AzureBlobStorageSpec_allOf:
      properties:
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/AzureBlobStorageAccountModel'
        container:
          $ref: '#/components/schemas/AzureBlobStorageContainerModel'
        proxyAppliance:
          $ref: '#/components/schemas/AzureStorageProxyModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
      required:
      - account
      - container
      - mountServer
      type: object
      example: null
    AzureDataBoxStorageSpec_allOf:
      properties:
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/AzureDataBoxStorageAccountModel'
        container:
          $ref: '#/components/schemas/AzureDataBoxStorageContainerModel'
      required:
      - account
      - container
      type: object
      example: null
    AmazonS3StorageSpec_allOf:
      properties:
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/AmazonS3StorageAccountModel'
        bucket:
          $ref: '#/components/schemas/AmazonS3StorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
        proxyAppliance:
          $ref: '#/components/schemas/AmazonS3StorageProxyApplianceModel'
      required:
      - account
      - bucket
      - mountServer
      type: object
      example: null
    AmazonSnowballEdgeStorageSpec_allOf:
      properties:
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/AmazonSnowballEdgeStorageAccountModel'
        bucket:
          $ref: '#/components/schemas/AmazonSnowballEdgeStorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
      required:
      - account
      - bucket
      - mountServer
      type: object
      example: null
    S3CompatibleStorageSpec_allOf:
      properties:
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/S3CompatibleStorageAccountModel'
        bucket:
          $ref: '#/components/schemas/S3CompatibleStorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
        proxyAppliance:
          $ref: '#/components/schemas/S3CompatibleProxyModel'
      required:
      - account
      - bucket
      - mountServer
      type: object
      example: null
    AzureBlobBrowserDestinationSpec_allOf:
      properties:
        hostId:
          description: "ID of a server you want to use to connect to the object storage.\
            \ You can use the backup server or any Microsoft Windows or Linux server\
            \ added to your backup infrastructure. By default, the backup server ID\
            \ is used."
          format: uuid
          type: string
        regionType:
          $ref: '#/components/schemas/EAzureRegionType'
        containerName:
          description: Name of the container where you want to store your backup data.
          type: string
        folderType:
          $ref: '#/components/schemas/ECloudBrowserFolderType'
      required:
      - containerName
      - regionType
      type: object
      example: null
    AzureDataBoxBrowserDestinationSpec_allOf:
      properties:
        hostId:
          description: "ID of a server you want to use to connect to the object storage.\
            \ You can use the backup server or any Microsoft Windows or Linux server\
            \ added to your backup infrastructure. By default, the backup server ID\
            \ is used."
          format: uuid
          type: string
        containerName:
          description: Name of the container where you want to store your backup data.
          type: string
        servicePoint:
          description: Service endpoint address of the Azure Data Box device.
          type: string
      required:
      - containerName
      - servicePoint
      type: object
      example: null
    AmazonS3BrowserDestinationSpec_allOf:
      properties:
        hostId:
          description: "ID of a server you want to use to connect to the object storage.\
            \ You can use the backup server or any Microsoft Windows or Linux server\
            \ added to your backup infrastructure. By default, the backup server ID\
            \ is used."
          format: uuid
          type: string
        regionType:
          $ref: '#/components/schemas/EAmazonRegionType'
        regionId:
          description: AWS region where the Amazon S3 bucket is located.
          type: string
        bucketName:
          description: Name of the bucket where you want to store your backup data.
          type: string
        folderType:
          $ref: '#/components/schemas/ECloudBrowserFolderType'
      required:
      - bucketName
      - regionId
      - regionType
      type: object
      example: null
    S3CompatibleBrowserDestinationSpec_allOf:
      properties:
        hostId:
          description: "ID of a server you want to use to connect to the object storage.\
            \ You can use the backup server or any Microsoft Windows or Linux server\
            \ added to your backup infrastructure. By default, the backup server ID\
            \ is used."
          format: uuid
          type: string
        connectionPoint:
          description: Endpoint address and port number of the S3 compatible storage.
          type: string
        regionId:
          description: Region where the bucket is located.
          type: string
        bucketName:
          description: Name of the bucket where you want to store your backup data.
          type: string
      required:
      - bucketName
      - connectionPoint
      - regionId
      type: object
      example: null
    AmazonSnowballEdgeBrowserDestinationSpec_allOf:
      properties:
        hostId:
          description: "ID of a server you want to use to connect to the object storage.\
            \ You can use the backup server or any Microsoft Windows or Linux server\
            \ added to your backup infrastructure. By default, the backup server ID\
            \ is used."
          format: uuid
          type: string
        connectionPoint:
          description: Service point address and port number of the AWS Snowball Edge
            device.
          type: string
        regionId:
          description: "For AWS Snowball Edge, the region is *snow*."
          type: string
        bucketName:
          description: Name of the bucket where you want to store your backup data.
          type: string
      required:
      - bucketName
      - connectionPoint
      - regionId
      type: object
      example: null
    GoogleCloudStorageBrowserDestinationSpec_allOf:
      properties:
        hostId:
          description: "ID of a server you want to use to connect to the object storage.\
            \ You can use the backup server or any Microsoft Windows or Linux server\
            \ added to your backup infrastructure. By default, the backup server ID\
            \ is used."
          format: uuid
          type: string
        regionId:
          description: Data center region where the bucket is located.
          type: string
        bucketName:
          description: Name of the bucket where you want to store your backup data.
          type: string
      required:
      - bucketName
      - regionId
      type: object
      example: null
    IBMCloudStorageBrowserDestinationSpec_allOf:
      properties:
        hostId:
          description: "ID of a server you want to use to connect to the object storage.\
            \ You can use the backup server or any Microsoft Windows or Linux server\
            \ added to your backup infrastructure. By default, the backup server ID\
            \ is used."
          format: uuid
          type: string
        connectionPoint:
          description: Endpoint address and port number of the IBM Cloud object storage.
          type: string
        regionId:
          description: Region where the bucket is located.
          type: string
        bucketName:
          description: Name of the bucket where you want to store your backup data.
          type: string
      required:
      - bucketName
      - connectionPoint
      - regionId
      type: object
      example: null
    WasabiCloudStorageBrowserDestinationSpec_allOf:
      properties:
        hostId:
          description: "ID of a server you want to use to connect to the object storage.\
            \ You can use the backup server or any Microsoft Windows or Linux server\
            \ added to your backup infrastructure. By default, the backup server ID\
            \ is used."
          format: uuid
          type: string
        regionId:
          description: Region where the bucket is located.
          type: string
        bucketName:
          description: Name of the bucket where you want to store your backup data.
          type: string
      required:
      - bucketName
      - regionId
      type: object
      example: null
    GoogleCloudStorageSpec_allOf:
      properties:
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/GoogleCloudStorageAccountModel'
        bucket:
          $ref: '#/components/schemas/GoogleCloudStorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
      required:
      - account
      - bucket
      - mountServer
      type: object
      example: null
    IBMCloudStorageSpec_allOf:
      properties:
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/IBMCloudStorageAccountModel'
        bucket:
          $ref: '#/components/schemas/IBMCloudStorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
        proxyAppliance:
          $ref: '#/components/schemas/S3CompatibleProxyModel'
      required:
      - account
      - bucket
      - mountServer
      type: object
      example: null
    AmazonS3GlacierStorageSpec_allOf:
      properties:
        account:
          $ref: '#/components/schemas/AmazonS3StorageAccountModel'
        bucket:
          $ref: '#/components/schemas/AmazonS3GlacierStorageBucketModel'
        proxyAppliance:
          $ref: '#/components/schemas/AmazonS3StorageProxyApplianceModel'
      required:
      - account
      - bucket
      - mountServer
      type: object
      example: null
    AzureArchiveStorageSpec_allOf:
      properties:
        account:
          $ref: '#/components/schemas/AzureArchiveStorageAccountModel'
        container:
          $ref: '#/components/schemas/AzureArchiveStorageContainerModel'
        proxyAppliance:
          $ref: '#/components/schemas/AzureStorageProxyModel'
      required:
      - account
      - container
      - proxyAppliance
      type: object
      example: null
    WasabiCloudStorageSpec_allOf:
      properties:
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: boolean
        maxTaskCount:
          description: Maximum number of concurrent tasks.
          type: integer
        account:
          $ref: '#/components/schemas/WasabiCloudStorageAccountModel'
        bucket:
          $ref: '#/components/schemas/WasabiCloudStorageBucketModel'
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsModel'
        proxyAppliance:
          $ref: '#/components/schemas/S3CompatibleProxyModel'
      required:
      - account
      - bucket
      - mountServer
      type: object
      example: null
    EntireViVMOriginalLocationRestoreSpec_allOf:
      properties:
        quickRollback:
          description: "If *true*, Veeam Backup & Replication performs incremental\
            \ restore."
          type: boolean
      type: object
      example: null
    EntireViVMCustomizedRestoreSpec_allOf:
      properties:
        destinationHost:
          $ref: '#/components/schemas/VmwareObjectModel'
        resourcePool:
          $ref: '#/components/schemas/VmwareObjectModel'
        datastore:
          $ref: '#/components/schemas/RestoreTargetDatastoreSpec'
        folder:
          $ref: '#/components/schemas/RestoreTargetFolderSpec'
        network:
          $ref: '#/components/schemas/RestoreTargetNetworkSpec'
      type: object
      example: null
    InstantViVMCustomizedRecoverySpec_allOf:
      properties:
        destination:
          $ref: '#/components/schemas/InstantViVMCustomizedRecoveryDestinationSpec'
        datastore:
          $ref: '#/components/schemas/InstantViVMCustomizedRecoveryDatastoreSpec'
        overwrite:
          description: "If *true*, Veeam Backup & Replication overwrites the existing\
            \ VM that has the same name."
          type: boolean
      required:
      - datastore
      - destination
      type: object
      example: null
    AzureComputeCloudDeviceCodeSpec_allOf:
      properties:
        region:
          $ref: '#/components/schemas/EAzureRegionType'
      required:
      - region
      type: object
      example: null
    AzureComputeCloudDeviceCodeModel_allOf:
      properties:
        url:
          description: Verification URI.
          type: string
        verificationCode:
          description: Verification code.
          type: string
        expirationTime:
          description: "Expiration date and time of the verification code. By default,\
            \ the code is valid for 15 minutes."
          format: date-time
          type: string
      required:
      - expirationTime
      - url
      - verificationCode
      type: object
      example: null
    AzureComputeCloudNativeApplicationModel_allOf:
      properties:
        applicationId:
          description: Client ID assigned to the Azure Active Directory application.
          type: string
        secret:
          description: Client secret assigned to the Azure Active Directory application.
          type: string
        tenantId:
          description: ID of a tenant where the Azure Active Directory application
            is registered in.
          type: string
      required:
      - applicationId
      - secret
      - tenantId
      type: object
      example: null
  securitySchemes:
    Bearer:
      description: Access token specified in the following format&#58; `Bearer <access
        token>`.
      in: header
      name: Authorization
      type: apiKey
