// Code generated by go-swagger; DO NOT EDIT.

package backup_objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// GetBackupObjectReader is a Reader for the GetBackupObject structure.
type GetBackupObjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBackupObjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBackupObjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetBackupObjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBackupObjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBackupObjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBackupObjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBackupObjectOK creates a GetBackupObjectOK with default headers values
func NewGetBackupObjectOK() *GetBackupObjectOK {
	return &GetBackupObjectOK{}
}

/* GetBackupObjectOK describes a response with status code 200, with default header values.

OK
*/
type GetBackupObjectOK struct {
	Payload *models.BackupObjectModel
}

func (o *GetBackupObjectOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/backupObjects/{id}][%d] getBackupObjectOK  %+v", 200, o.Payload)
}
func (o *GetBackupObjectOK) GetPayload() *models.BackupObjectModel {
	return o.Payload
}

func (o *GetBackupObjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BackupObjectModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupObjectUnauthorized creates a GetBackupObjectUnauthorized with default headers values
func NewGetBackupObjectUnauthorized() *GetBackupObjectUnauthorized {
	return &GetBackupObjectUnauthorized{}
}

/* GetBackupObjectUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type GetBackupObjectUnauthorized struct {
	Payload *models.Error
}

func (o *GetBackupObjectUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/backupObjects/{id}][%d] getBackupObjectUnauthorized  %+v", 401, o.Payload)
}
func (o *GetBackupObjectUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBackupObjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupObjectForbidden creates a GetBackupObjectForbidden with default headers values
func NewGetBackupObjectForbidden() *GetBackupObjectForbidden {
	return &GetBackupObjectForbidden{}
}

/* GetBackupObjectForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type GetBackupObjectForbidden struct {
	Payload *models.Error
}

func (o *GetBackupObjectForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/backupObjects/{id}][%d] getBackupObjectForbidden  %+v", 403, o.Payload)
}
func (o *GetBackupObjectForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBackupObjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupObjectNotFound creates a GetBackupObjectNotFound with default headers values
func NewGetBackupObjectNotFound() *GetBackupObjectNotFound {
	return &GetBackupObjectNotFound{}
}

/* GetBackupObjectNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type GetBackupObjectNotFound struct {
	Payload *models.Error
}

func (o *GetBackupObjectNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/backupObjects/{id}][%d] getBackupObjectNotFound  %+v", 404, o.Payload)
}
func (o *GetBackupObjectNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBackupObjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupObjectInternalServerError creates a GetBackupObjectInternalServerError with default headers values
func NewGetBackupObjectInternalServerError() *GetBackupObjectInternalServerError {
	return &GetBackupObjectInternalServerError{}
}

/* GetBackupObjectInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type GetBackupObjectInternalServerError struct {
	Payload *models.Error
}

func (o *GetBackupObjectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/backupObjects/{id}][%d] getBackupObjectInternalServerError  %+v", 500, o.Payload)
}
func (o *GetBackupObjectInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBackupObjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
