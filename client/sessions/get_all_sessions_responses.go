// Code generated by go-swagger; DO NOT EDIT.

package sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// GetAllSessionsReader is a Reader for the GetAllSessions structure.
type GetAllSessionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllSessionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllSessionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllSessionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllSessionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllSessionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllSessionsOK creates a GetAllSessionsOK with default headers values
func NewGetAllSessionsOK() *GetAllSessionsOK {
	return &GetAllSessionsOK{}
}

/* GetAllSessionsOK describes a response with status code 200, with default header values.

OK
*/
type GetAllSessionsOK struct {
	Payload *models.SessionsResult
}

func (o *GetAllSessionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/sessions][%d] getAllSessionsOK  %+v", 200, o.Payload)
}
func (o *GetAllSessionsOK) GetPayload() *models.SessionsResult {
	return o.Payload
}

func (o *GetAllSessionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionsResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSessionsUnauthorized creates a GetAllSessionsUnauthorized with default headers values
func NewGetAllSessionsUnauthorized() *GetAllSessionsUnauthorized {
	return &GetAllSessionsUnauthorized{}
}

/* GetAllSessionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type GetAllSessionsUnauthorized struct {
	Payload *models.Error
}

func (o *GetAllSessionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/sessions][%d] getAllSessionsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAllSessionsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllSessionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSessionsForbidden creates a GetAllSessionsForbidden with default headers values
func NewGetAllSessionsForbidden() *GetAllSessionsForbidden {
	return &GetAllSessionsForbidden{}
}

/* GetAllSessionsForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type GetAllSessionsForbidden struct {
	Payload *models.Error
}

func (o *GetAllSessionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/sessions][%d] getAllSessionsForbidden  %+v", 403, o.Payload)
}
func (o *GetAllSessionsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllSessionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSessionsInternalServerError creates a GetAllSessionsInternalServerError with default headers values
func NewGetAllSessionsInternalServerError() *GetAllSessionsInternalServerError {
	return &GetAllSessionsInternalServerError{}
}

/* GetAllSessionsInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type GetAllSessionsInternalServerError struct {
	Payload *models.Error
}

func (o *GetAllSessionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/sessions][%d] getAllSessionsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAllSessionsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllSessionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
