// Code generated by go-swagger; DO NOT EDIT.

package sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// GetSessionLogsReader is a Reader for the GetSessionLogs structure.
type GetSessionLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSessionLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSessionLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSessionLogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSessionLogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSessionLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSessionLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSessionLogsOK creates a GetSessionLogsOK with default headers values
func NewGetSessionLogsOK() *GetSessionLogsOK {
	return &GetSessionLogsOK{}
}

/* GetSessionLogsOK describes a response with status code 200, with default header values.

OK
*/
type GetSessionLogsOK struct {
	Payload *models.SessionLogResult
}

func (o *GetSessionLogsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/sessions/{id}/logs][%d] getSessionLogsOK  %+v", 200, o.Payload)
}
func (o *GetSessionLogsOK) GetPayload() *models.SessionLogResult {
	return o.Payload
}

func (o *GetSessionLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionLogResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSessionLogsUnauthorized creates a GetSessionLogsUnauthorized with default headers values
func NewGetSessionLogsUnauthorized() *GetSessionLogsUnauthorized {
	return &GetSessionLogsUnauthorized{}
}

/* GetSessionLogsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type GetSessionLogsUnauthorized struct {
	Payload *models.Error
}

func (o *GetSessionLogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/sessions/{id}/logs][%d] getSessionLogsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetSessionLogsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSessionLogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSessionLogsForbidden creates a GetSessionLogsForbidden with default headers values
func NewGetSessionLogsForbidden() *GetSessionLogsForbidden {
	return &GetSessionLogsForbidden{}
}

/* GetSessionLogsForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type GetSessionLogsForbidden struct {
	Payload *models.Error
}

func (o *GetSessionLogsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/sessions/{id}/logs][%d] getSessionLogsForbidden  %+v", 403, o.Payload)
}
func (o *GetSessionLogsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSessionLogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSessionLogsNotFound creates a GetSessionLogsNotFound with default headers values
func NewGetSessionLogsNotFound() *GetSessionLogsNotFound {
	return &GetSessionLogsNotFound{}
}

/* GetSessionLogsNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type GetSessionLogsNotFound struct {
	Payload *models.Error
}

func (o *GetSessionLogsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/sessions/{id}/logs][%d] getSessionLogsNotFound  %+v", 404, o.Payload)
}
func (o *GetSessionLogsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSessionLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSessionLogsInternalServerError creates a GetSessionLogsInternalServerError with default headers values
func NewGetSessionLogsInternalServerError() *GetSessionLogsInternalServerError {
	return &GetSessionLogsInternalServerError{}
}

/* GetSessionLogsInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type GetSessionLogsInternalServerError struct {
	Payload *models.Error
}

func (o *GetSessionLogsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/sessions/{id}/logs][%d] getSessionLogsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSessionLogsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSessionLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
