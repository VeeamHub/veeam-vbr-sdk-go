/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RestoreTargetNetworkSpec Network to which the restored VM is connected.
type RestoreTargetNetworkSpec struct {
	Network VmwareObjectModel `json:"network"`
	// If *true*, the restored VMs is not connected to any virtual network.
	Disconnected *bool `json:"disconnected,omitempty"`
}

// NewRestoreTargetNetworkSpec instantiates a new RestoreTargetNetworkSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreTargetNetworkSpec(network VmwareObjectModel) *RestoreTargetNetworkSpec {
	this := RestoreTargetNetworkSpec{}
	this.Network = network
	return &this
}

// NewRestoreTargetNetworkSpecWithDefaults instantiates a new RestoreTargetNetworkSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreTargetNetworkSpecWithDefaults() *RestoreTargetNetworkSpec {
	this := RestoreTargetNetworkSpec{}
	return &this
}

// GetNetwork returns the Network field value
func (o *RestoreTargetNetworkSpec) GetNetwork() VmwareObjectModel {
	if o == nil {
		var ret VmwareObjectModel
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *RestoreTargetNetworkSpec) GetNetworkOk() (*VmwareObjectModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *RestoreTargetNetworkSpec) SetNetwork(v VmwareObjectModel) {
	o.Network = v
}

// GetDisconnected returns the Disconnected field value if set, zero value otherwise.
func (o *RestoreTargetNetworkSpec) GetDisconnected() bool {
	if o == nil || isNil(o.Disconnected) {
		var ret bool
		return ret
	}
	return *o.Disconnected
}

// GetDisconnectedOk returns a tuple with the Disconnected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreTargetNetworkSpec) GetDisconnectedOk() (*bool, bool) {
	if o == nil || isNil(o.Disconnected) {
    return nil, false
	}
	return o.Disconnected, true
}

// HasDisconnected returns a boolean if a field has been set.
func (o *RestoreTargetNetworkSpec) HasDisconnected() bool {
	if o != nil && !isNil(o.Disconnected) {
		return true
	}

	return false
}

// SetDisconnected gets a reference to the given bool and assigns it to the Disconnected field.
func (o *RestoreTargetNetworkSpec) SetDisconnected(v bool) {
	o.Disconnected = &v
}

func (o RestoreTargetNetworkSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["network"] = o.Network
	}
	if !isNil(o.Disconnected) {
		toSerialize["disconnected"] = o.Disconnected
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreTargetNetworkSpec struct {
	value *RestoreTargetNetworkSpec
	isSet bool
}

func (v NullableRestoreTargetNetworkSpec) Get() *RestoreTargetNetworkSpec {
	return v.value
}

func (v *NullableRestoreTargetNetworkSpec) Set(val *RestoreTargetNetworkSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreTargetNetworkSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreTargetNetworkSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreTargetNetworkSpec(val *RestoreTargetNetworkSpec) *NullableRestoreTargetNetworkSpec {
	return &NullableRestoreTargetNetworkSpec{value: val, isSet: true}
}

func (v NullableRestoreTargetNetworkSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreTargetNetworkSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


