/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AzureStorageCloudCredentialsImportSpec struct for AzureStorageCloudCredentialsImportSpec
type AzureStorageCloudCredentialsImportSpec struct {
	Type ECloudCredentialsType `json:"type"`
	// Description of the cloud credentials record.
	Description *string `json:"description,omitempty"`
	// Tag used to identify the cloud credentials record.
	Tag string `json:"tag"`
	// Name of the Azure storage account.
	Account string `json:"account"`
	// Shared key of the Azure storage account.
	SharedKey string `json:"sharedKey"`
}

// NewAzureStorageCloudCredentialsImportSpec instantiates a new AzureStorageCloudCredentialsImportSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureStorageCloudCredentialsImportSpec(type_ ECloudCredentialsType, tag string, account string, sharedKey string) *AzureStorageCloudCredentialsImportSpec {
	this := AzureStorageCloudCredentialsImportSpec{}
	this.Type = type_
	this.Tag = tag
	this.Account = account
	this.SharedKey = sharedKey
	return &this
}

// NewAzureStorageCloudCredentialsImportSpecWithDefaults instantiates a new AzureStorageCloudCredentialsImportSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureStorageCloudCredentialsImportSpecWithDefaults() *AzureStorageCloudCredentialsImportSpec {
	this := AzureStorageCloudCredentialsImportSpec{}
	return &this
}

// GetType returns the Type field value
func (o *AzureStorageCloudCredentialsImportSpec) GetType() ECloudCredentialsType {
	if o == nil {
		var ret ECloudCredentialsType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AzureStorageCloudCredentialsImportSpec) GetTypeOk() (*ECloudCredentialsType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AzureStorageCloudCredentialsImportSpec) SetType(v ECloudCredentialsType) {
	o.Type = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AzureStorageCloudCredentialsImportSpec) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureStorageCloudCredentialsImportSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AzureStorageCloudCredentialsImportSpec) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AzureStorageCloudCredentialsImportSpec) SetDescription(v string) {
	o.Description = &v
}

// GetTag returns the Tag field value
func (o *AzureStorageCloudCredentialsImportSpec) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *AzureStorageCloudCredentialsImportSpec) GetTagOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *AzureStorageCloudCredentialsImportSpec) SetTag(v string) {
	o.Tag = v
}

// GetAccount returns the Account field value
func (o *AzureStorageCloudCredentialsImportSpec) GetAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *AzureStorageCloudCredentialsImportSpec) GetAccountOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *AzureStorageCloudCredentialsImportSpec) SetAccount(v string) {
	o.Account = v
}

// GetSharedKey returns the SharedKey field value
func (o *AzureStorageCloudCredentialsImportSpec) GetSharedKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SharedKey
}

// GetSharedKeyOk returns a tuple with the SharedKey field value
// and a boolean to check if the value has been set.
func (o *AzureStorageCloudCredentialsImportSpec) GetSharedKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SharedKey, true
}

// SetSharedKey sets field value
func (o *AzureStorageCloudCredentialsImportSpec) SetSharedKey(v string) {
	o.SharedKey = v
}

func (o AzureStorageCloudCredentialsImportSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["tag"] = o.Tag
	}
	if true {
		toSerialize["account"] = o.Account
	}
	if true {
		toSerialize["sharedKey"] = o.SharedKey
	}
	return json.Marshal(toSerialize)
}

type NullableAzureStorageCloudCredentialsImportSpec struct {
	value *AzureStorageCloudCredentialsImportSpec
	isSet bool
}

func (v NullableAzureStorageCloudCredentialsImportSpec) Get() *AzureStorageCloudCredentialsImportSpec {
	return v.value
}

func (v *NullableAzureStorageCloudCredentialsImportSpec) Set(val *AzureStorageCloudCredentialsImportSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureStorageCloudCredentialsImportSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureStorageCloudCredentialsImportSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureStorageCloudCredentialsImportSpec(val *AzureStorageCloudCredentialsImportSpec) *NullableAzureStorageCloudCredentialsImportSpec {
	return &NullableAzureStorageCloudCredentialsImportSpec{value: val, isSet: true}
}

func (v NullableAzureStorageCloudCredentialsImportSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureStorageCloudCredentialsImportSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


