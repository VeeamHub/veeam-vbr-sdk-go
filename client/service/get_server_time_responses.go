// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// GetServerTimeReader is a Reader for the GetServerTime structure.
type GetServerTimeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServerTimeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServerTimeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetServerTimeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServerTimeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServerTimeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetServerTimeOK creates a GetServerTimeOK with default headers values
func NewGetServerTimeOK() *GetServerTimeOK {
	return &GetServerTimeOK{}
}

/* GetServerTimeOK describes a response with status code 200, with default header values.

OK
*/
type GetServerTimeOK struct {
	Payload *models.ServerTimeModel
}

func (o *GetServerTimeOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/serverTime][%d] getServerTimeOK  %+v", 200, o.Payload)
}
func (o *GetServerTimeOK) GetPayload() *models.ServerTimeModel {
	return o.Payload
}

func (o *GetServerTimeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerTimeModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerTimeUnauthorized creates a GetServerTimeUnauthorized with default headers values
func NewGetServerTimeUnauthorized() *GetServerTimeUnauthorized {
	return &GetServerTimeUnauthorized{}
}

/* GetServerTimeUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type GetServerTimeUnauthorized struct {
	Payload *models.Error
}

func (o *GetServerTimeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/serverTime][%d] getServerTimeUnauthorized  %+v", 401, o.Payload)
}
func (o *GetServerTimeUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServerTimeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerTimeForbidden creates a GetServerTimeForbidden with default headers values
func NewGetServerTimeForbidden() *GetServerTimeForbidden {
	return &GetServerTimeForbidden{}
}

/* GetServerTimeForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type GetServerTimeForbidden struct {
	Payload *models.Error
}

func (o *GetServerTimeForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/serverTime][%d] getServerTimeForbidden  %+v", 403, o.Payload)
}
func (o *GetServerTimeForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServerTimeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerTimeInternalServerError creates a GetServerTimeInternalServerError with default headers values
func NewGetServerTimeInternalServerError() *GetServerTimeInternalServerError {
	return &GetServerTimeInternalServerError{}
}

/* GetServerTimeInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type GetServerTimeInternalServerError struct {
	Payload *models.Error
}

func (o *GetServerTimeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/serverTime][%d] getServerTimeInternalServerError  %+v", 500, o.Payload)
}
func (o *GetServerTimeInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServerTimeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
