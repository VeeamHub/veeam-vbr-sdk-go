// Code generated by go-swagger; DO NOT EDIT.

package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// EnableJobReader is a Reader for the EnableJob structure.
type EnableJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EnableJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEnableJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEnableJobBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewEnableJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEnableJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEnableJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEnableJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEnableJobOK creates a EnableJobOK with default headers values
func NewEnableJobOK() *EnableJobOK {
	return &EnableJobOK{}
}

/* EnableJobOK describes a response with status code 200, with default header values.

Job has been enabled.
*/
type EnableJobOK struct {
	Payload models.EmptySuccessResponse
}

func (o *EnableJobOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/jobs/{id}/enable][%d] enableJobOK  %+v", 200, o.Payload)
}
func (o *EnableJobOK) GetPayload() models.EmptySuccessResponse {
	return o.Payload
}

func (o *EnableJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnableJobBadRequest creates a EnableJobBadRequest with default headers values
func NewEnableJobBadRequest() *EnableJobBadRequest {
	return &EnableJobBadRequest{}
}

/* EnableJobBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type EnableJobBadRequest struct {
	Payload *models.Error
}

func (o *EnableJobBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/jobs/{id}/enable][%d] enableJobBadRequest  %+v", 400, o.Payload)
}
func (o *EnableJobBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *EnableJobBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnableJobUnauthorized creates a EnableJobUnauthorized with default headers values
func NewEnableJobUnauthorized() *EnableJobUnauthorized {
	return &EnableJobUnauthorized{}
}

/* EnableJobUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type EnableJobUnauthorized struct {
	Payload *models.Error
}

func (o *EnableJobUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/jobs/{id}/enable][%d] enableJobUnauthorized  %+v", 401, o.Payload)
}
func (o *EnableJobUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *EnableJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnableJobForbidden creates a EnableJobForbidden with default headers values
func NewEnableJobForbidden() *EnableJobForbidden {
	return &EnableJobForbidden{}
}

/* EnableJobForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type EnableJobForbidden struct {
	Payload *models.Error
}

func (o *EnableJobForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/jobs/{id}/enable][%d] enableJobForbidden  %+v", 403, o.Payload)
}
func (o *EnableJobForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *EnableJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnableJobNotFound creates a EnableJobNotFound with default headers values
func NewEnableJobNotFound() *EnableJobNotFound {
	return &EnableJobNotFound{}
}

/* EnableJobNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type EnableJobNotFound struct {
	Payload *models.Error
}

func (o *EnableJobNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/jobs/{id}/enable][%d] enableJobNotFound  %+v", 404, o.Payload)
}
func (o *EnableJobNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *EnableJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnableJobInternalServerError creates a EnableJobInternalServerError with default headers values
func NewEnableJobInternalServerError() *EnableJobInternalServerError {
	return &EnableJobInternalServerError{}
}

/* EnableJobInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type EnableJobInternalServerError struct {
	Payload *models.Error
}

func (o *EnableJobInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/jobs/{id}/enable][%d] enableJobInternalServerError  %+v", 500, o.Payload)
}
func (o *EnableJobInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *EnableJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
