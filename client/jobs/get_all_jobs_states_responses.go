// Code generated by go-swagger; DO NOT EDIT.

package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// GetAllJobsStatesReader is a Reader for the GetAllJobsStates structure.
type GetAllJobsStatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllJobsStatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllJobsStatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllJobsStatesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllJobsStatesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllJobsStatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllJobsStatesOK creates a GetAllJobsStatesOK with default headers values
func NewGetAllJobsStatesOK() *GetAllJobsStatesOK {
	return &GetAllJobsStatesOK{}
}

/* GetAllJobsStatesOK describes a response with status code 200, with default header values.

OK
*/
type GetAllJobsStatesOK struct {
	Payload *models.JobStatesResult
}

func (o *GetAllJobsStatesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/jobs/states][%d] getAllJobsStatesOK  %+v", 200, o.Payload)
}
func (o *GetAllJobsStatesOK) GetPayload() *models.JobStatesResult {
	return o.Payload
}

func (o *GetAllJobsStatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobStatesResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllJobsStatesUnauthorized creates a GetAllJobsStatesUnauthorized with default headers values
func NewGetAllJobsStatesUnauthorized() *GetAllJobsStatesUnauthorized {
	return &GetAllJobsStatesUnauthorized{}
}

/* GetAllJobsStatesUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type GetAllJobsStatesUnauthorized struct {
	Payload *models.Error
}

func (o *GetAllJobsStatesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/jobs/states][%d] getAllJobsStatesUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAllJobsStatesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllJobsStatesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllJobsStatesForbidden creates a GetAllJobsStatesForbidden with default headers values
func NewGetAllJobsStatesForbidden() *GetAllJobsStatesForbidden {
	return &GetAllJobsStatesForbidden{}
}

/* GetAllJobsStatesForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type GetAllJobsStatesForbidden struct {
	Payload *models.Error
}

func (o *GetAllJobsStatesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/jobs/states][%d] getAllJobsStatesForbidden  %+v", 403, o.Payload)
}
func (o *GetAllJobsStatesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllJobsStatesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllJobsStatesInternalServerError creates a GetAllJobsStatesInternalServerError with default headers values
func NewGetAllJobsStatesInternalServerError() *GetAllJobsStatesInternalServerError {
	return &GetAllJobsStatesInternalServerError{}
}

/* GetAllJobsStatesInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type GetAllJobsStatesInternalServerError struct {
	Payload *models.Error
}

func (o *GetAllJobsStatesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/jobs/states][%d] getAllJobsStatesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAllJobsStatesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllJobsStatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
