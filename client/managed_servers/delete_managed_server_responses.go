// Code generated by go-swagger; DO NOT EDIT.

package managed_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// DeleteManagedServerReader is a Reader for the DeleteManagedServer structure.
type DeleteManagedServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteManagedServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDeleteManagedServerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteManagedServerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteManagedServerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteManagedServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteManagedServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteManagedServerCreated creates a DeleteManagedServerCreated with default headers values
func NewDeleteManagedServerCreated() *DeleteManagedServerCreated {
	return &DeleteManagedServerCreated{}
}

/* DeleteManagedServerCreated describes a response with status code 201, with default header values.

Managed server has been removed.
*/
type DeleteManagedServerCreated struct {
	Payload *models.SessionModel
}

func (o *DeleteManagedServerCreated) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/backupInfrastructure/managedServers/{id}][%d] deleteManagedServerCreated  %+v", 201, o.Payload)
}
func (o *DeleteManagedServerCreated) GetPayload() *models.SessionModel {
	return o.Payload
}

func (o *DeleteManagedServerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteManagedServerUnauthorized creates a DeleteManagedServerUnauthorized with default headers values
func NewDeleteManagedServerUnauthorized() *DeleteManagedServerUnauthorized {
	return &DeleteManagedServerUnauthorized{}
}

/* DeleteManagedServerUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type DeleteManagedServerUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteManagedServerUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/backupInfrastructure/managedServers/{id}][%d] deleteManagedServerUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteManagedServerUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteManagedServerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteManagedServerForbidden creates a DeleteManagedServerForbidden with default headers values
func NewDeleteManagedServerForbidden() *DeleteManagedServerForbidden {
	return &DeleteManagedServerForbidden{}
}

/* DeleteManagedServerForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type DeleteManagedServerForbidden struct {
	Payload *models.Error
}

func (o *DeleteManagedServerForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/backupInfrastructure/managedServers/{id}][%d] deleteManagedServerForbidden  %+v", 403, o.Payload)
}
func (o *DeleteManagedServerForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteManagedServerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteManagedServerNotFound creates a DeleteManagedServerNotFound with default headers values
func NewDeleteManagedServerNotFound() *DeleteManagedServerNotFound {
	return &DeleteManagedServerNotFound{}
}

/* DeleteManagedServerNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type DeleteManagedServerNotFound struct {
	Payload *models.Error
}

func (o *DeleteManagedServerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/backupInfrastructure/managedServers/{id}][%d] deleteManagedServerNotFound  %+v", 404, o.Payload)
}
func (o *DeleteManagedServerNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteManagedServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteManagedServerInternalServerError creates a DeleteManagedServerInternalServerError with default headers values
func NewDeleteManagedServerInternalServerError() *DeleteManagedServerInternalServerError {
	return &DeleteManagedServerInternalServerError{}
}

/* DeleteManagedServerInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type DeleteManagedServerInternalServerError struct {
	Payload *models.Error
}

func (o *DeleteManagedServerInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/backupInfrastructure/managedServers/{id}][%d] deleteManagedServerInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteManagedServerInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteManagedServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
