// Code generated by go-swagger; DO NOT EDIT.

package managed_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// UpdateManagedServerReader is a Reader for the UpdateManagedServer structure.
type UpdateManagedServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateManagedServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateManagedServerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateManagedServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateManagedServerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateManagedServerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateManagedServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateManagedServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateManagedServerCreated creates a UpdateManagedServerCreated with default headers values
func NewUpdateManagedServerCreated() *UpdateManagedServerCreated {
	return &UpdateManagedServerCreated{}
}

/* UpdateManagedServerCreated describes a response with status code 201, with default header values.

Infrastructure session has been created to edit the server. To check the progress, track the session `state`.
*/
type UpdateManagedServerCreated struct {
	Payload *models.SessionModel
}

func (o *UpdateManagedServerCreated) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/managedServers/{id}][%d] updateManagedServerCreated  %+v", 201, o.Payload)
}
func (o *UpdateManagedServerCreated) GetPayload() *models.SessionModel {
	return o.Payload
}

func (o *UpdateManagedServerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateManagedServerBadRequest creates a UpdateManagedServerBadRequest with default headers values
func NewUpdateManagedServerBadRequest() *UpdateManagedServerBadRequest {
	return &UpdateManagedServerBadRequest{}
}

/* UpdateManagedServerBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type UpdateManagedServerBadRequest struct {
	Payload *models.Error
}

func (o *UpdateManagedServerBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/managedServers/{id}][%d] updateManagedServerBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateManagedServerBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateManagedServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateManagedServerUnauthorized creates a UpdateManagedServerUnauthorized with default headers values
func NewUpdateManagedServerUnauthorized() *UpdateManagedServerUnauthorized {
	return &UpdateManagedServerUnauthorized{}
}

/* UpdateManagedServerUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type UpdateManagedServerUnauthorized struct {
	Payload *models.Error
}

func (o *UpdateManagedServerUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/managedServers/{id}][%d] updateManagedServerUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateManagedServerUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateManagedServerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateManagedServerForbidden creates a UpdateManagedServerForbidden with default headers values
func NewUpdateManagedServerForbidden() *UpdateManagedServerForbidden {
	return &UpdateManagedServerForbidden{}
}

/* UpdateManagedServerForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type UpdateManagedServerForbidden struct {
	Payload *models.Error
}

func (o *UpdateManagedServerForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/managedServers/{id}][%d] updateManagedServerForbidden  %+v", 403, o.Payload)
}
func (o *UpdateManagedServerForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateManagedServerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateManagedServerNotFound creates a UpdateManagedServerNotFound with default headers values
func NewUpdateManagedServerNotFound() *UpdateManagedServerNotFound {
	return &UpdateManagedServerNotFound{}
}

/* UpdateManagedServerNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type UpdateManagedServerNotFound struct {
	Payload *models.Error
}

func (o *UpdateManagedServerNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/managedServers/{id}][%d] updateManagedServerNotFound  %+v", 404, o.Payload)
}
func (o *UpdateManagedServerNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateManagedServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateManagedServerInternalServerError creates a UpdateManagedServerInternalServerError with default headers values
func NewUpdateManagedServerInternalServerError() *UpdateManagedServerInternalServerError {
	return &UpdateManagedServerInternalServerError{}
}

/* UpdateManagedServerInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type UpdateManagedServerInternalServerError struct {
	Payload *models.Error
}

func (o *UpdateManagedServerInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1/backupInfrastructure/managedServers/{id}][%d] updateManagedServerInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateManagedServerInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateManagedServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
