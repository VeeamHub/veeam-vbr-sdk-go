// Code generated by go-swagger; DO NOT EDIT.

package managed_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// GetAllManagedServersReader is a Reader for the GetAllManagedServers structure.
type GetAllManagedServersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllManagedServersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllManagedServersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllManagedServersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllManagedServersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllManagedServersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllManagedServersOK creates a GetAllManagedServersOK with default headers values
func NewGetAllManagedServersOK() *GetAllManagedServersOK {
	return &GetAllManagedServersOK{}
}

/* GetAllManagedServersOK describes a response with status code 200, with default header values.

OK
*/
type GetAllManagedServersOK struct {
	Payload *models.ManagedServersResult
}

func (o *GetAllManagedServersOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/backupInfrastructure/managedServers][%d] getAllManagedServersOK  %+v", 200, o.Payload)
}
func (o *GetAllManagedServersOK) GetPayload() *models.ManagedServersResult {
	return o.Payload
}

func (o *GetAllManagedServersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ManagedServersResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllManagedServersUnauthorized creates a GetAllManagedServersUnauthorized with default headers values
func NewGetAllManagedServersUnauthorized() *GetAllManagedServersUnauthorized {
	return &GetAllManagedServersUnauthorized{}
}

/* GetAllManagedServersUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type GetAllManagedServersUnauthorized struct {
	Payload *models.Error
}

func (o *GetAllManagedServersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/backupInfrastructure/managedServers][%d] getAllManagedServersUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAllManagedServersUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllManagedServersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllManagedServersForbidden creates a GetAllManagedServersForbidden with default headers values
func NewGetAllManagedServersForbidden() *GetAllManagedServersForbidden {
	return &GetAllManagedServersForbidden{}
}

/* GetAllManagedServersForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type GetAllManagedServersForbidden struct {
	Payload *models.Error
}

func (o *GetAllManagedServersForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/backupInfrastructure/managedServers][%d] getAllManagedServersForbidden  %+v", 403, o.Payload)
}
func (o *GetAllManagedServersForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllManagedServersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllManagedServersInternalServerError creates a GetAllManagedServersInternalServerError with default headers values
func NewGetAllManagedServersInternalServerError() *GetAllManagedServersInternalServerError {
	return &GetAllManagedServersInternalServerError{}
}

/* GetAllManagedServersInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type GetAllManagedServersInternalServerError struct {
	Payload *models.Error
}

func (o *GetAllManagedServersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/backupInfrastructure/managedServers][%d] getAllManagedServersInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAllManagedServersInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllManagedServersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
