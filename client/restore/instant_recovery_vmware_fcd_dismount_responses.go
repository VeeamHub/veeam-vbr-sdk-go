// Code generated by go-swagger; DO NOT EDIT.

package restore

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// InstantRecoveryVmwareFcdDismountReader is a Reader for the InstantRecoveryVmwareFcdDismount structure.
type InstantRecoveryVmwareFcdDismountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InstantRecoveryVmwareFcdDismountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInstantRecoveryVmwareFcdDismountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInstantRecoveryVmwareFcdDismountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInstantRecoveryVmwareFcdDismountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInstantRecoveryVmwareFcdDismountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInstantRecoveryVmwareFcdDismountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInstantRecoveryVmwareFcdDismountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInstantRecoveryVmwareFcdDismountOK creates a InstantRecoveryVmwareFcdDismountOK with default headers values
func NewInstantRecoveryVmwareFcdDismountOK() *InstantRecoveryVmwareFcdDismountOK {
	return &InstantRecoveryVmwareFcdDismountOK{}
}

/* InstantRecoveryVmwareFcdDismountOK describes a response with status code 200, with default header values.

Disks has been unmounted.
*/
type InstantRecoveryVmwareFcdDismountOK struct {
	Payload *models.VmwareFcdInstantRecoveryMount
}

func (o *InstantRecoveryVmwareFcdDismountOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount][%d] instantRecoveryVmwareFcdDismountOK  %+v", 200, o.Payload)
}
func (o *InstantRecoveryVmwareFcdDismountOK) GetPayload() *models.VmwareFcdInstantRecoveryMount {
	return o.Payload
}

func (o *InstantRecoveryVmwareFcdDismountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VmwareFcdInstantRecoveryMount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstantRecoveryVmwareFcdDismountBadRequest creates a InstantRecoveryVmwareFcdDismountBadRequest with default headers values
func NewInstantRecoveryVmwareFcdDismountBadRequest() *InstantRecoveryVmwareFcdDismountBadRequest {
	return &InstantRecoveryVmwareFcdDismountBadRequest{}
}

/* InstantRecoveryVmwareFcdDismountBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type InstantRecoveryVmwareFcdDismountBadRequest struct {
	Payload *models.Error
}

func (o *InstantRecoveryVmwareFcdDismountBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount][%d] instantRecoveryVmwareFcdDismountBadRequest  %+v", 400, o.Payload)
}
func (o *InstantRecoveryVmwareFcdDismountBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *InstantRecoveryVmwareFcdDismountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstantRecoveryVmwareFcdDismountUnauthorized creates a InstantRecoveryVmwareFcdDismountUnauthorized with default headers values
func NewInstantRecoveryVmwareFcdDismountUnauthorized() *InstantRecoveryVmwareFcdDismountUnauthorized {
	return &InstantRecoveryVmwareFcdDismountUnauthorized{}
}

/* InstantRecoveryVmwareFcdDismountUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type InstantRecoveryVmwareFcdDismountUnauthorized struct {
	Payload *models.Error
}

func (o *InstantRecoveryVmwareFcdDismountUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount][%d] instantRecoveryVmwareFcdDismountUnauthorized  %+v", 401, o.Payload)
}
func (o *InstantRecoveryVmwareFcdDismountUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *InstantRecoveryVmwareFcdDismountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstantRecoveryVmwareFcdDismountForbidden creates a InstantRecoveryVmwareFcdDismountForbidden with default headers values
func NewInstantRecoveryVmwareFcdDismountForbidden() *InstantRecoveryVmwareFcdDismountForbidden {
	return &InstantRecoveryVmwareFcdDismountForbidden{}
}

/* InstantRecoveryVmwareFcdDismountForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type InstantRecoveryVmwareFcdDismountForbidden struct {
	Payload *models.Error
}

func (o *InstantRecoveryVmwareFcdDismountForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount][%d] instantRecoveryVmwareFcdDismountForbidden  %+v", 403, o.Payload)
}
func (o *InstantRecoveryVmwareFcdDismountForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *InstantRecoveryVmwareFcdDismountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstantRecoveryVmwareFcdDismountNotFound creates a InstantRecoveryVmwareFcdDismountNotFound with default headers values
func NewInstantRecoveryVmwareFcdDismountNotFound() *InstantRecoveryVmwareFcdDismountNotFound {
	return &InstantRecoveryVmwareFcdDismountNotFound{}
}

/* InstantRecoveryVmwareFcdDismountNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type InstantRecoveryVmwareFcdDismountNotFound struct {
	Payload *models.Error
}

func (o *InstantRecoveryVmwareFcdDismountNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount][%d] instantRecoveryVmwareFcdDismountNotFound  %+v", 404, o.Payload)
}
func (o *InstantRecoveryVmwareFcdDismountNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *InstantRecoveryVmwareFcdDismountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstantRecoveryVmwareFcdDismountInternalServerError creates a InstantRecoveryVmwareFcdDismountInternalServerError with default headers values
func NewInstantRecoveryVmwareFcdDismountInternalServerError() *InstantRecoveryVmwareFcdDismountInternalServerError {
	return &InstantRecoveryVmwareFcdDismountInternalServerError{}
}

/* InstantRecoveryVmwareFcdDismountInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type InstantRecoveryVmwareFcdDismountInternalServerError struct {
	Payload *models.Error
}

func (o *InstantRecoveryVmwareFcdDismountInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount][%d] instantRecoveryVmwareFcdDismountInternalServerError  %+v", 500, o.Payload)
}
func (o *InstantRecoveryVmwareFcdDismountInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *InstantRecoveryVmwareFcdDismountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
