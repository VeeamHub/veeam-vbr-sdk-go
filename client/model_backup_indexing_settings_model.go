/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev1
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BackupIndexingSettingsModel struct for BackupIndexingSettingsModel
type BackupIndexingSettingsModel struct {
	VmObject VmwareObjectModel `json:"vmObject"`
	WindowsIndexing *BackupObjectIndexingModel `json:"WindowsIndexing,omitempty"`
	LinuxIndexing *BackupObjectIndexingModel `json:"LinuxIndexing,omitempty"`
}

// NewBackupIndexingSettingsModel instantiates a new BackupIndexingSettingsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupIndexingSettingsModel(vmObject VmwareObjectModel) *BackupIndexingSettingsModel {
	this := BackupIndexingSettingsModel{}
	this.VmObject = vmObject
	return &this
}

// NewBackupIndexingSettingsModelWithDefaults instantiates a new BackupIndexingSettingsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupIndexingSettingsModelWithDefaults() *BackupIndexingSettingsModel {
	this := BackupIndexingSettingsModel{}
	return &this
}

// GetVmObject returns the VmObject field value
func (o *BackupIndexingSettingsModel) GetVmObject() VmwareObjectModel {
	if o == nil {
		var ret VmwareObjectModel
		return ret
	}

	return o.VmObject
}

// GetVmObjectOk returns a tuple with the VmObject field value
// and a boolean to check if the value has been set.
func (o *BackupIndexingSettingsModel) GetVmObjectOk() (*VmwareObjectModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmObject, true
}

// SetVmObject sets field value
func (o *BackupIndexingSettingsModel) SetVmObject(v VmwareObjectModel) {
	o.VmObject = v
}

// GetWindowsIndexing returns the WindowsIndexing field value if set, zero value otherwise.
func (o *BackupIndexingSettingsModel) GetWindowsIndexing() BackupObjectIndexingModel {
	if o == nil || o.WindowsIndexing == nil {
		var ret BackupObjectIndexingModel
		return ret
	}
	return *o.WindowsIndexing
}

// GetWindowsIndexingOk returns a tuple with the WindowsIndexing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupIndexingSettingsModel) GetWindowsIndexingOk() (*BackupObjectIndexingModel, bool) {
	if o == nil || o.WindowsIndexing == nil {
		return nil, false
	}
	return o.WindowsIndexing, true
}

// HasWindowsIndexing returns a boolean if a field has been set.
func (o *BackupIndexingSettingsModel) HasWindowsIndexing() bool {
	if o != nil && o.WindowsIndexing != nil {
		return true
	}

	return false
}

// SetWindowsIndexing gets a reference to the given BackupObjectIndexingModel and assigns it to the WindowsIndexing field.
func (o *BackupIndexingSettingsModel) SetWindowsIndexing(v BackupObjectIndexingModel) {
	o.WindowsIndexing = &v
}

// GetLinuxIndexing returns the LinuxIndexing field value if set, zero value otherwise.
func (o *BackupIndexingSettingsModel) GetLinuxIndexing() BackupObjectIndexingModel {
	if o == nil || o.LinuxIndexing == nil {
		var ret BackupObjectIndexingModel
		return ret
	}
	return *o.LinuxIndexing
}

// GetLinuxIndexingOk returns a tuple with the LinuxIndexing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupIndexingSettingsModel) GetLinuxIndexingOk() (*BackupObjectIndexingModel, bool) {
	if o == nil || o.LinuxIndexing == nil {
		return nil, false
	}
	return o.LinuxIndexing, true
}

// HasLinuxIndexing returns a boolean if a field has been set.
func (o *BackupIndexingSettingsModel) HasLinuxIndexing() bool {
	if o != nil && o.LinuxIndexing != nil {
		return true
	}

	return false
}

// SetLinuxIndexing gets a reference to the given BackupObjectIndexingModel and assigns it to the LinuxIndexing field.
func (o *BackupIndexingSettingsModel) SetLinuxIndexing(v BackupObjectIndexingModel) {
	o.LinuxIndexing = &v
}

func (o BackupIndexingSettingsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vmObject"] = o.VmObject
	}
	if o.WindowsIndexing != nil {
		toSerialize["WindowsIndexing"] = o.WindowsIndexing
	}
	if o.LinuxIndexing != nil {
		toSerialize["LinuxIndexing"] = o.LinuxIndexing
	}
	return json.Marshal(toSerialize)
}

type NullableBackupIndexingSettingsModel struct {
	value *BackupIndexingSettingsModel
	isSet bool
}

func (v NullableBackupIndexingSettingsModel) Get() *BackupIndexingSettingsModel {
	return v.value
}

func (v *NullableBackupIndexingSettingsModel) Set(val *BackupIndexingSettingsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupIndexingSettingsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupIndexingSettingsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupIndexingSettingsModel(val *BackupIndexingSettingsModel) *NullableBackupIndexingSettingsModel {
	return &NullableBackupIndexingSettingsModel{value: val, isSet: true}
}

func (v NullableBackupIndexingSettingsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupIndexingSettingsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


