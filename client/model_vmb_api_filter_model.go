/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev2
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// VmbApiFilterModel struct for VmbApiFilterModel
type VmbApiFilterModel struct {
	ProtocolVersion int32 `json:"protocolVersion"`
	AssemblyVersion string `json:"assemblyVersion"`
	ProductId string `json:"productId"`
	VersionFlags int32 `json:"versionFlags"`
}

// NewVmbApiFilterModel instantiates a new VmbApiFilterModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmbApiFilterModel(protocolVersion int32, assemblyVersion string, productId string, versionFlags int32, ) *VmbApiFilterModel {
	this := VmbApiFilterModel{}
	this.ProtocolVersion = protocolVersion
	this.AssemblyVersion = assemblyVersion
	this.ProductId = productId
	this.VersionFlags = versionFlags
	return &this
}

// NewVmbApiFilterModelWithDefaults instantiates a new VmbApiFilterModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmbApiFilterModelWithDefaults() *VmbApiFilterModel {
	this := VmbApiFilterModel{}
	return &this
}

// GetProtocolVersion returns the ProtocolVersion field value
func (o *VmbApiFilterModel) GetProtocolVersion() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ProtocolVersion
}

// GetProtocolVersionOk returns a tuple with the ProtocolVersion field value
// and a boolean to check if the value has been set.
func (o *VmbApiFilterModel) GetProtocolVersionOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProtocolVersion, true
}

// SetProtocolVersion sets field value
func (o *VmbApiFilterModel) SetProtocolVersion(v int32) {
	o.ProtocolVersion = v
}

// GetAssemblyVersion returns the AssemblyVersion field value
func (o *VmbApiFilterModel) GetAssemblyVersion() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AssemblyVersion
}

// GetAssemblyVersionOk returns a tuple with the AssemblyVersion field value
// and a boolean to check if the value has been set.
func (o *VmbApiFilterModel) GetAssemblyVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AssemblyVersion, true
}

// SetAssemblyVersion sets field value
func (o *VmbApiFilterModel) SetAssemblyVersion(v string) {
	o.AssemblyVersion = v
}

// GetProductId returns the ProductId field value
func (o *VmbApiFilterModel) GetProductId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *VmbApiFilterModel) GetProductIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *VmbApiFilterModel) SetProductId(v string) {
	o.ProductId = v
}

// GetVersionFlags returns the VersionFlags field value
func (o *VmbApiFilterModel) GetVersionFlags() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.VersionFlags
}

// GetVersionFlagsOk returns a tuple with the VersionFlags field value
// and a boolean to check if the value has been set.
func (o *VmbApiFilterModel) GetVersionFlagsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VersionFlags, true
}

// SetVersionFlags sets field value
func (o *VmbApiFilterModel) SetVersionFlags(v int32) {
	o.VersionFlags = v
}

func (o VmbApiFilterModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["protocolVersion"] = o.ProtocolVersion
	}
	if true {
		toSerialize["assemblyVersion"] = o.AssemblyVersion
	}
	if true {
		toSerialize["productId"] = o.ProductId
	}
	if true {
		toSerialize["versionFlags"] = o.VersionFlags
	}
	return json.Marshal(toSerialize)
}

type NullableVmbApiFilterModel struct {
	value *VmbApiFilterModel
	isSet bool
}

func (v NullableVmbApiFilterModel) Get() *VmbApiFilterModel {
	return v.value
}

func (v *NullableVmbApiFilterModel) Set(val *VmbApiFilterModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVmbApiFilterModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVmbApiFilterModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmbApiFilterModel(val *VmbApiFilterModel) *NullableVmbApiFilterModel {
	return &NullableVmbApiFilterModel{value: val, isSet: true}
}

func (v NullableVmbApiFilterModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmbApiFilterModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


