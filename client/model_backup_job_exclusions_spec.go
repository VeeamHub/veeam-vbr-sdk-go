/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BackupJobExclusionsSpec Objects that you want to exclude from the backup.
type BackupJobExclusionsSpec struct {
	// Array of VMs.
	Vms []VmwareObjectModel `json:"vms,omitempty"`
	// Array of disks.
	Disks []VmwareObjectDiskModel `json:"disks,omitempty"`
	Templates *BackupJobExclusionsTemplates `json:"templates,omitempty"`
}

// NewBackupJobExclusionsSpec instantiates a new BackupJobExclusionsSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupJobExclusionsSpec() *BackupJobExclusionsSpec {
	this := BackupJobExclusionsSpec{}
	return &this
}

// NewBackupJobExclusionsSpecWithDefaults instantiates a new BackupJobExclusionsSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupJobExclusionsSpecWithDefaults() *BackupJobExclusionsSpec {
	this := BackupJobExclusionsSpec{}
	return &this
}

// GetVms returns the Vms field value if set, zero value otherwise.
func (o *BackupJobExclusionsSpec) GetVms() []VmwareObjectModel {
	if o == nil || isNil(o.Vms) {
		var ret []VmwareObjectModel
		return ret
	}
	return o.Vms
}

// GetVmsOk returns a tuple with the Vms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobExclusionsSpec) GetVmsOk() ([]VmwareObjectModel, bool) {
	if o == nil || isNil(o.Vms) {
    return nil, false
	}
	return o.Vms, true
}

// HasVms returns a boolean if a field has been set.
func (o *BackupJobExclusionsSpec) HasVms() bool {
	if o != nil && !isNil(o.Vms) {
		return true
	}

	return false
}

// SetVms gets a reference to the given []VmwareObjectModel and assigns it to the Vms field.
func (o *BackupJobExclusionsSpec) SetVms(v []VmwareObjectModel) {
	o.Vms = v
}

// GetDisks returns the Disks field value if set, zero value otherwise.
func (o *BackupJobExclusionsSpec) GetDisks() []VmwareObjectDiskModel {
	if o == nil || isNil(o.Disks) {
		var ret []VmwareObjectDiskModel
		return ret
	}
	return o.Disks
}

// GetDisksOk returns a tuple with the Disks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobExclusionsSpec) GetDisksOk() ([]VmwareObjectDiskModel, bool) {
	if o == nil || isNil(o.Disks) {
    return nil, false
	}
	return o.Disks, true
}

// HasDisks returns a boolean if a field has been set.
func (o *BackupJobExclusionsSpec) HasDisks() bool {
	if o != nil && !isNil(o.Disks) {
		return true
	}

	return false
}

// SetDisks gets a reference to the given []VmwareObjectDiskModel and assigns it to the Disks field.
func (o *BackupJobExclusionsSpec) SetDisks(v []VmwareObjectDiskModel) {
	o.Disks = v
}

// GetTemplates returns the Templates field value if set, zero value otherwise.
func (o *BackupJobExclusionsSpec) GetTemplates() BackupJobExclusionsTemplates {
	if o == nil || isNil(o.Templates) {
		var ret BackupJobExclusionsTemplates
		return ret
	}
	return *o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobExclusionsSpec) GetTemplatesOk() (*BackupJobExclusionsTemplates, bool) {
	if o == nil || isNil(o.Templates) {
    return nil, false
	}
	return o.Templates, true
}

// HasTemplates returns a boolean if a field has been set.
func (o *BackupJobExclusionsSpec) HasTemplates() bool {
	if o != nil && !isNil(o.Templates) {
		return true
	}

	return false
}

// SetTemplates gets a reference to the given BackupJobExclusionsTemplates and assigns it to the Templates field.
func (o *BackupJobExclusionsSpec) SetTemplates(v BackupJobExclusionsTemplates) {
	o.Templates = &v
}

func (o BackupJobExclusionsSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Vms) {
		toSerialize["vms"] = o.Vms
	}
	if !isNil(o.Disks) {
		toSerialize["disks"] = o.Disks
	}
	if !isNil(o.Templates) {
		toSerialize["templates"] = o.Templates
	}
	return json.Marshal(toSerialize)
}

type NullableBackupJobExclusionsSpec struct {
	value *BackupJobExclusionsSpec
	isSet bool
}

func (v NullableBackupJobExclusionsSpec) Get() *BackupJobExclusionsSpec {
	return v.value
}

func (v *NullableBackupJobExclusionsSpec) Set(val *BackupJobExclusionsSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupJobExclusionsSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupJobExclusionsSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupJobExclusionsSpec(val *BackupJobExclusionsSpec) *NullableBackupJobExclusionsSpec {
	return &NullableBackupJobExclusionsSpec{value: val, isSet: true}
}

func (v NullableBackupJobExclusionsSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupJobExclusionsSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


