/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AmazonS3GlacierStorageImportSpec struct for AmazonS3GlacierStorageImportSpec
type AmazonS3GlacierStorageImportSpec struct {
	// Name of the object storage repository.
	Name string `json:"name"`
	// Description of the object storage repository.
	Description string `json:"description"`
	// Tag that identifies the object storage repository.
	Tag string `json:"tag"`
	Type ERepositoryType `json:"type"`
	Account AmazonS3StorageAccountImportModel `json:"account"`
	Bucket AmazonS3GlacierStorageBucketModel `json:"bucket"`
	ProxyAppliance *AmazonS3StorageProxyApplianceModel `json:"proxyAppliance,omitempty"`
}

// NewAmazonS3GlacierStorageImportSpec instantiates a new AmazonS3GlacierStorageImportSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmazonS3GlacierStorageImportSpec(name string, description string, tag string, type_ ERepositoryType, account AmazonS3StorageAccountImportModel, bucket AmazonS3GlacierStorageBucketModel) *AmazonS3GlacierStorageImportSpec {
	this := AmazonS3GlacierStorageImportSpec{}
	this.Name = name
	this.Description = description
	this.Tag = tag
	this.Type = type_
	this.Account = account
	this.Bucket = bucket
	return &this
}

// NewAmazonS3GlacierStorageImportSpecWithDefaults instantiates a new AmazonS3GlacierStorageImportSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmazonS3GlacierStorageImportSpecWithDefaults() *AmazonS3GlacierStorageImportSpec {
	this := AmazonS3GlacierStorageImportSpec{}
	return &this
}

// GetName returns the Name field value
func (o *AmazonS3GlacierStorageImportSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AmazonS3GlacierStorageImportSpec) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AmazonS3GlacierStorageImportSpec) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *AmazonS3GlacierStorageImportSpec) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AmazonS3GlacierStorageImportSpec) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AmazonS3GlacierStorageImportSpec) SetDescription(v string) {
	o.Description = v
}

// GetTag returns the Tag field value
func (o *AmazonS3GlacierStorageImportSpec) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *AmazonS3GlacierStorageImportSpec) GetTagOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *AmazonS3GlacierStorageImportSpec) SetTag(v string) {
	o.Tag = v
}

// GetType returns the Type field value
func (o *AmazonS3GlacierStorageImportSpec) GetType() ERepositoryType {
	if o == nil {
		var ret ERepositoryType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AmazonS3GlacierStorageImportSpec) GetTypeOk() (*ERepositoryType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AmazonS3GlacierStorageImportSpec) SetType(v ERepositoryType) {
	o.Type = v
}

// GetAccount returns the Account field value
func (o *AmazonS3GlacierStorageImportSpec) GetAccount() AmazonS3StorageAccountImportModel {
	if o == nil {
		var ret AmazonS3StorageAccountImportModel
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *AmazonS3GlacierStorageImportSpec) GetAccountOk() (*AmazonS3StorageAccountImportModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *AmazonS3GlacierStorageImportSpec) SetAccount(v AmazonS3StorageAccountImportModel) {
	o.Account = v
}

// GetBucket returns the Bucket field value
func (o *AmazonS3GlacierStorageImportSpec) GetBucket() AmazonS3GlacierStorageBucketModel {
	if o == nil {
		var ret AmazonS3GlacierStorageBucketModel
		return ret
	}

	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value
// and a boolean to check if the value has been set.
func (o *AmazonS3GlacierStorageImportSpec) GetBucketOk() (*AmazonS3GlacierStorageBucketModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Bucket, true
}

// SetBucket sets field value
func (o *AmazonS3GlacierStorageImportSpec) SetBucket(v AmazonS3GlacierStorageBucketModel) {
	o.Bucket = v
}

// GetProxyAppliance returns the ProxyAppliance field value if set, zero value otherwise.
func (o *AmazonS3GlacierStorageImportSpec) GetProxyAppliance() AmazonS3StorageProxyApplianceModel {
	if o == nil || isNil(o.ProxyAppliance) {
		var ret AmazonS3StorageProxyApplianceModel
		return ret
	}
	return *o.ProxyAppliance
}

// GetProxyApplianceOk returns a tuple with the ProxyAppliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonS3GlacierStorageImportSpec) GetProxyApplianceOk() (*AmazonS3StorageProxyApplianceModel, bool) {
	if o == nil || isNil(o.ProxyAppliance) {
    return nil, false
	}
	return o.ProxyAppliance, true
}

// HasProxyAppliance returns a boolean if a field has been set.
func (o *AmazonS3GlacierStorageImportSpec) HasProxyAppliance() bool {
	if o != nil && !isNil(o.ProxyAppliance) {
		return true
	}

	return false
}

// SetProxyAppliance gets a reference to the given AmazonS3StorageProxyApplianceModel and assigns it to the ProxyAppliance field.
func (o *AmazonS3GlacierStorageImportSpec) SetProxyAppliance(v AmazonS3StorageProxyApplianceModel) {
	o.ProxyAppliance = &v
}

func (o AmazonS3GlacierStorageImportSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["tag"] = o.Tag
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["account"] = o.Account
	}
	if true {
		toSerialize["bucket"] = o.Bucket
	}
	if !isNil(o.ProxyAppliance) {
		toSerialize["proxyAppliance"] = o.ProxyAppliance
	}
	return json.Marshal(toSerialize)
}

type NullableAmazonS3GlacierStorageImportSpec struct {
	value *AmazonS3GlacierStorageImportSpec
	isSet bool
}

func (v NullableAmazonS3GlacierStorageImportSpec) Get() *AmazonS3GlacierStorageImportSpec {
	return v.value
}

func (v *NullableAmazonS3GlacierStorageImportSpec) Set(val *AmazonS3GlacierStorageImportSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAmazonS3GlacierStorageImportSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAmazonS3GlacierStorageImportSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmazonS3GlacierStorageImportSpec(val *AmazonS3GlacierStorageImportSpec) *NullableAmazonS3GlacierStorageImportSpec {
	return &NullableAmazonS3GlacierStorageImportSpec{value: val, isSet: true}
}

func (v NullableAmazonS3GlacierStorageImportSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmazonS3GlacierStorageImportSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


