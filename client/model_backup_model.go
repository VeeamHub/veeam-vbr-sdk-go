/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev1
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// BackupModel struct for BackupModel
type BackupModel struct {
	// ID of the backup.
	Id string `json:"id"`
	// ID of the job that created the backup.
	JobId *string `json:"jobId,omitempty"`
	// Tag that identifies retention policy.
	PolicyTag *string `json:"policyTag,omitempty"`
	// Name of the job that created the backup.
	Name string `json:"name"`
	PlatformName EPlatformType `json:"platformName"`
	// ID of the platform of the backup resource.
	PlatformId string `json:"platformId"`
	// Date and time when the backup was created.
	CreationTime time.Time `json:"creationTime"`
	// ID of the backup repository where the backup is stored.
	RepositoryId string `json:"repositoryId"`
}

// NewBackupModel instantiates a new BackupModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupModel(id string, name string, platformName EPlatformType, platformId string, creationTime time.Time, repositoryId string) *BackupModel {
	this := BackupModel{}
	this.Id = id
	this.Name = name
	this.PlatformName = platformName
	this.PlatformId = platformId
	this.CreationTime = creationTime
	this.RepositoryId = repositoryId
	return &this
}

// NewBackupModelWithDefaults instantiates a new BackupModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupModelWithDefaults() *BackupModel {
	this := BackupModel{}
	return &this
}

// GetId returns the Id field value
func (o *BackupModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BackupModel) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BackupModel) SetId(v string) {
	o.Id = v
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *BackupModel) GetJobId() string {
	if o == nil || o.JobId == nil {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupModel) GetJobIdOk() (*string, bool) {
	if o == nil || o.JobId == nil {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *BackupModel) HasJobId() bool {
	if o != nil && o.JobId != nil {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *BackupModel) SetJobId(v string) {
	o.JobId = &v
}

// GetPolicyTag returns the PolicyTag field value if set, zero value otherwise.
func (o *BackupModel) GetPolicyTag() string {
	if o == nil || o.PolicyTag == nil {
		var ret string
		return ret
	}
	return *o.PolicyTag
}

// GetPolicyTagOk returns a tuple with the PolicyTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupModel) GetPolicyTagOk() (*string, bool) {
	if o == nil || o.PolicyTag == nil {
		return nil, false
	}
	return o.PolicyTag, true
}

// HasPolicyTag returns a boolean if a field has been set.
func (o *BackupModel) HasPolicyTag() bool {
	if o != nil && o.PolicyTag != nil {
		return true
	}

	return false
}

// SetPolicyTag gets a reference to the given string and assigns it to the PolicyTag field.
func (o *BackupModel) SetPolicyTag(v string) {
	o.PolicyTag = &v
}

// GetName returns the Name field value
func (o *BackupModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BackupModel) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BackupModel) SetName(v string) {
	o.Name = v
}

// GetPlatformName returns the PlatformName field value
func (o *BackupModel) GetPlatformName() EPlatformType {
	if o == nil {
		var ret EPlatformType
		return ret
	}

	return o.PlatformName
}

// GetPlatformNameOk returns a tuple with the PlatformName field value
// and a boolean to check if the value has been set.
func (o *BackupModel) GetPlatformNameOk() (*EPlatformType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlatformName, true
}

// SetPlatformName sets field value
func (o *BackupModel) SetPlatformName(v EPlatformType) {
	o.PlatformName = v
}

// GetPlatformId returns the PlatformId field value
func (o *BackupModel) GetPlatformId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlatformId
}

// GetPlatformIdOk returns a tuple with the PlatformId field value
// and a boolean to check if the value has been set.
func (o *BackupModel) GetPlatformIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PlatformId, true
}

// SetPlatformId sets field value
func (o *BackupModel) SetPlatformId(v string) {
	o.PlatformId = v
}

// GetCreationTime returns the CreationTime field value
func (o *BackupModel) GetCreationTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value
// and a boolean to check if the value has been set.
func (o *BackupModel) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreationTime, true
}

// SetCreationTime sets field value
func (o *BackupModel) SetCreationTime(v time.Time) {
	o.CreationTime = v
}

// GetRepositoryId returns the RepositoryId field value
func (o *BackupModel) GetRepositoryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RepositoryId
}

// GetRepositoryIdOk returns a tuple with the RepositoryId field value
// and a boolean to check if the value has been set.
func (o *BackupModel) GetRepositoryIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RepositoryId, true
}

// SetRepositoryId sets field value
func (o *BackupModel) SetRepositoryId(v string) {
	o.RepositoryId = v
}

func (o BackupModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.JobId != nil {
		toSerialize["jobId"] = o.JobId
	}
	if o.PolicyTag != nil {
		toSerialize["policyTag"] = o.PolicyTag
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["platformName"] = o.PlatformName
	}
	if true {
		toSerialize["platformId"] = o.PlatformId
	}
	if true {
		toSerialize["creationTime"] = o.CreationTime
	}
	if true {
		toSerialize["repositoryId"] = o.RepositoryId
	}
	return json.Marshal(toSerialize)
}

type NullableBackupModel struct {
	value *BackupModel
	isSet bool
}

func (v NullableBackupModel) Get() *BackupModel {
	return v.value
}

func (v *NullableBackupModel) Set(val *BackupModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupModel(val *BackupModel) *NullableBackupModel {
	return &NullableBackupModel{value: val, isSet: true}
}

func (v NullableBackupModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


