/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev2
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PrivateKeyChangeSpec struct for PrivateKeyChangeSpec
type PrivateKeyChangeSpec struct {
	// Private key.
	PrivateKey string `json:"privateKey"`
	// Passphrase that protects the private key.
	Passphrase *string `json:"passphrase,omitempty"`
}

// NewPrivateKeyChangeSpec instantiates a new PrivateKeyChangeSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateKeyChangeSpec(privateKey string, ) *PrivateKeyChangeSpec {
	this := PrivateKeyChangeSpec{}
	this.PrivateKey = privateKey
	return &this
}

// NewPrivateKeyChangeSpecWithDefaults instantiates a new PrivateKeyChangeSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateKeyChangeSpecWithDefaults() *PrivateKeyChangeSpec {
	this := PrivateKeyChangeSpec{}
	return &this
}

// GetPrivateKey returns the PrivateKey field value
func (o *PrivateKeyChangeSpec) GetPrivateKey() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value
// and a boolean to check if the value has been set.
func (o *PrivateKeyChangeSpec) GetPrivateKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PrivateKey, true
}

// SetPrivateKey sets field value
func (o *PrivateKeyChangeSpec) SetPrivateKey(v string) {
	o.PrivateKey = v
}

// GetPassphrase returns the Passphrase field value if set, zero value otherwise.
func (o *PrivateKeyChangeSpec) GetPassphrase() string {
	if o == nil || o.Passphrase == nil {
		var ret string
		return ret
	}
	return *o.Passphrase
}

// GetPassphraseOk returns a tuple with the Passphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateKeyChangeSpec) GetPassphraseOk() (*string, bool) {
	if o == nil || o.Passphrase == nil {
		return nil, false
	}
	return o.Passphrase, true
}

// HasPassphrase returns a boolean if a field has been set.
func (o *PrivateKeyChangeSpec) HasPassphrase() bool {
	if o != nil && o.Passphrase != nil {
		return true
	}

	return false
}

// SetPassphrase gets a reference to the given string and assigns it to the Passphrase field.
func (o *PrivateKeyChangeSpec) SetPassphrase(v string) {
	o.Passphrase = &v
}

func (o PrivateKeyChangeSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["privateKey"] = o.PrivateKey
	}
	if o.Passphrase != nil {
		toSerialize["passphrase"] = o.Passphrase
	}
	return json.Marshal(toSerialize)
}

type NullablePrivateKeyChangeSpec struct {
	value *PrivateKeyChangeSpec
	isSet bool
}

func (v NullablePrivateKeyChangeSpec) Get() *PrivateKeyChangeSpec {
	return v.value
}

func (v *NullablePrivateKeyChangeSpec) Set(val *PrivateKeyChangeSpec) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateKeyChangeSpec) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateKeyChangeSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateKeyChangeSpec(val *PrivateKeyChangeSpec) *NullablePrivateKeyChangeSpec {
	return &NullablePrivateKeyChangeSpec{value: val, isSet: true}
}

func (v NullablePrivateKeyChangeSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateKeyChangeSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


