/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev2
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworkRepositorySettingsModel Repository settings.
type NetworkRepositorySettingsModel struct {
	// Maximum number of concurrent tasks.
	MaxTaskCount *int32 `json:"maxTaskCount,omitempty"`
	// Maximum rate that restricts the total speed of reading and writing data to the backup repository disk.
	ReadWriteRate *int32 `json:"readWriteRate,omitempty"`
	AdvancedSettings *RepositoryAdvancedSettingsModel `json:"advancedSettings,omitempty"`
}

// NewNetworkRepositorySettingsModel instantiates a new NetworkRepositorySettingsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkRepositorySettingsModel() *NetworkRepositorySettingsModel {
	this := NetworkRepositorySettingsModel{}
	return &this
}

// NewNetworkRepositorySettingsModelWithDefaults instantiates a new NetworkRepositorySettingsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkRepositorySettingsModelWithDefaults() *NetworkRepositorySettingsModel {
	this := NetworkRepositorySettingsModel{}
	return &this
}

// GetMaxTaskCount returns the MaxTaskCount field value if set, zero value otherwise.
func (o *NetworkRepositorySettingsModel) GetMaxTaskCount() int32 {
	if o == nil || o.MaxTaskCount == nil {
		var ret int32
		return ret
	}
	return *o.MaxTaskCount
}

// GetMaxTaskCountOk returns a tuple with the MaxTaskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRepositorySettingsModel) GetMaxTaskCountOk() (*int32, bool) {
	if o == nil || o.MaxTaskCount == nil {
		return nil, false
	}
	return o.MaxTaskCount, true
}

// HasMaxTaskCount returns a boolean if a field has been set.
func (o *NetworkRepositorySettingsModel) HasMaxTaskCount() bool {
	if o != nil && o.MaxTaskCount != nil {
		return true
	}

	return false
}

// SetMaxTaskCount gets a reference to the given int32 and assigns it to the MaxTaskCount field.
func (o *NetworkRepositorySettingsModel) SetMaxTaskCount(v int32) {
	o.MaxTaskCount = &v
}

// GetReadWriteRate returns the ReadWriteRate field value if set, zero value otherwise.
func (o *NetworkRepositorySettingsModel) GetReadWriteRate() int32 {
	if o == nil || o.ReadWriteRate == nil {
		var ret int32
		return ret
	}
	return *o.ReadWriteRate
}

// GetReadWriteRateOk returns a tuple with the ReadWriteRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRepositorySettingsModel) GetReadWriteRateOk() (*int32, bool) {
	if o == nil || o.ReadWriteRate == nil {
		return nil, false
	}
	return o.ReadWriteRate, true
}

// HasReadWriteRate returns a boolean if a field has been set.
func (o *NetworkRepositorySettingsModel) HasReadWriteRate() bool {
	if o != nil && o.ReadWriteRate != nil {
		return true
	}

	return false
}

// SetReadWriteRate gets a reference to the given int32 and assigns it to the ReadWriteRate field.
func (o *NetworkRepositorySettingsModel) SetReadWriteRate(v int32) {
	o.ReadWriteRate = &v
}

// GetAdvancedSettings returns the AdvancedSettings field value if set, zero value otherwise.
func (o *NetworkRepositorySettingsModel) GetAdvancedSettings() RepositoryAdvancedSettingsModel {
	if o == nil || o.AdvancedSettings == nil {
		var ret RepositoryAdvancedSettingsModel
		return ret
	}
	return *o.AdvancedSettings
}

// GetAdvancedSettingsOk returns a tuple with the AdvancedSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRepositorySettingsModel) GetAdvancedSettingsOk() (*RepositoryAdvancedSettingsModel, bool) {
	if o == nil || o.AdvancedSettings == nil {
		return nil, false
	}
	return o.AdvancedSettings, true
}

// HasAdvancedSettings returns a boolean if a field has been set.
func (o *NetworkRepositorySettingsModel) HasAdvancedSettings() bool {
	if o != nil && o.AdvancedSettings != nil {
		return true
	}

	return false
}

// SetAdvancedSettings gets a reference to the given RepositoryAdvancedSettingsModel and assigns it to the AdvancedSettings field.
func (o *NetworkRepositorySettingsModel) SetAdvancedSettings(v RepositoryAdvancedSettingsModel) {
	o.AdvancedSettings = &v
}

func (o NetworkRepositorySettingsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxTaskCount != nil {
		toSerialize["maxTaskCount"] = o.MaxTaskCount
	}
	if o.ReadWriteRate != nil {
		toSerialize["readWriteRate"] = o.ReadWriteRate
	}
	if o.AdvancedSettings != nil {
		toSerialize["advancedSettings"] = o.AdvancedSettings
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkRepositorySettingsModel struct {
	value *NetworkRepositorySettingsModel
	isSet bool
}

func (v NullableNetworkRepositorySettingsModel) Get() *NetworkRepositorySettingsModel {
	return v.value
}

func (v *NullableNetworkRepositorySettingsModel) Set(val *NetworkRepositorySettingsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkRepositorySettingsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkRepositorySettingsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkRepositorySettingsModel(val *NetworkRepositorySettingsModel) *NullableNetworkRepositorySettingsModel {
	return &NullableNetworkRepositorySettingsModel{value: val, isSet: true}
}

func (v NullableNetworkRepositorySettingsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkRepositorySettingsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


