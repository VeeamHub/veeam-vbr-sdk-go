/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// GoogleCloudCredentialsSpecAllOf struct for GoogleCloudCredentialsSpecAllOf
type GoogleCloudCredentialsSpecAllOf struct {
	// Access ID of a Google HMAC key.
	AccessKey string `json:"accessKey"`
	// Secret linked to the access ID.
	SecretKey string `json:"secretKey"`
	// Tag used to identify the cloud credentials record.
	Tag *string `json:"tag,omitempty"`
}

// NewGoogleCloudCredentialsSpecAllOf instantiates a new GoogleCloudCredentialsSpecAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleCloudCredentialsSpecAllOf(accessKey string, secretKey string) *GoogleCloudCredentialsSpecAllOf {
	this := GoogleCloudCredentialsSpecAllOf{}
	this.AccessKey = accessKey
	this.SecretKey = secretKey
	return &this
}

// NewGoogleCloudCredentialsSpecAllOfWithDefaults instantiates a new GoogleCloudCredentialsSpecAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudCredentialsSpecAllOfWithDefaults() *GoogleCloudCredentialsSpecAllOf {
	this := GoogleCloudCredentialsSpecAllOf{}
	return &this
}

// GetAccessKey returns the AccessKey field value
func (o *GoogleCloudCredentialsSpecAllOf) GetAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value
// and a boolean to check if the value has been set.
func (o *GoogleCloudCredentialsSpecAllOf) GetAccessKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AccessKey, true
}

// SetAccessKey sets field value
func (o *GoogleCloudCredentialsSpecAllOf) SetAccessKey(v string) {
	o.AccessKey = v
}

// GetSecretKey returns the SecretKey field value
func (o *GoogleCloudCredentialsSpecAllOf) GetSecretKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value
// and a boolean to check if the value has been set.
func (o *GoogleCloudCredentialsSpecAllOf) GetSecretKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SecretKey, true
}

// SetSecretKey sets field value
func (o *GoogleCloudCredentialsSpecAllOf) SetSecretKey(v string) {
	o.SecretKey = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *GoogleCloudCredentialsSpecAllOf) GetTag() string {
	if o == nil || isNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleCloudCredentialsSpecAllOf) GetTagOk() (*string, bool) {
	if o == nil || isNil(o.Tag) {
    return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *GoogleCloudCredentialsSpecAllOf) HasTag() bool {
	if o != nil && !isNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *GoogleCloudCredentialsSpecAllOf) SetTag(v string) {
	o.Tag = &v
}

func (o GoogleCloudCredentialsSpecAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accessKey"] = o.AccessKey
	}
	if true {
		toSerialize["secretKey"] = o.SecretKey
	}
	if !isNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return json.Marshal(toSerialize)
}

type NullableGoogleCloudCredentialsSpecAllOf struct {
	value *GoogleCloudCredentialsSpecAllOf
	isSet bool
}

func (v NullableGoogleCloudCredentialsSpecAllOf) Get() *GoogleCloudCredentialsSpecAllOf {
	return v.value
}

func (v *NullableGoogleCloudCredentialsSpecAllOf) Set(val *GoogleCloudCredentialsSpecAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleCloudCredentialsSpecAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleCloudCredentialsSpecAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleCloudCredentialsSpecAllOf(val *GoogleCloudCredentialsSpecAllOf) *NullableGoogleCloudCredentialsSpecAllOf {
	return &NullableGoogleCloudCredentialsSpecAllOf{value: val, isSet: true}
}

func (v NullableGoogleCloudCredentialsSpecAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleCloudCredentialsSpecAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


