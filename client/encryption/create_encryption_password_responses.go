// Code generated by go-swagger; DO NOT EDIT.

package encryption

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// CreateEncryptionPasswordReader is a Reader for the CreateEncryptionPassword structure.
type CreateEncryptionPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateEncryptionPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateEncryptionPasswordCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateEncryptionPasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateEncryptionPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateEncryptionPasswordForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateEncryptionPasswordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateEncryptionPasswordCreated creates a CreateEncryptionPasswordCreated with default headers values
func NewCreateEncryptionPasswordCreated() *CreateEncryptionPasswordCreated {
	return &CreateEncryptionPasswordCreated{}
}

/* CreateEncryptionPasswordCreated describes a response with status code 201, with default header values.

Password has been added.
*/
type CreateEncryptionPasswordCreated struct {
	Payload *models.EncryptionPasswordModel
}

func (o *CreateEncryptionPasswordCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/encryptionPasswords][%d] createEncryptionPasswordCreated  %+v", 201, o.Payload)
}
func (o *CreateEncryptionPasswordCreated) GetPayload() *models.EncryptionPasswordModel {
	return o.Payload
}

func (o *CreateEncryptionPasswordCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EncryptionPasswordModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEncryptionPasswordBadRequest creates a CreateEncryptionPasswordBadRequest with default headers values
func NewCreateEncryptionPasswordBadRequest() *CreateEncryptionPasswordBadRequest {
	return &CreateEncryptionPasswordBadRequest{}
}

/* CreateEncryptionPasswordBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type CreateEncryptionPasswordBadRequest struct {
	Payload *models.Error
}

func (o *CreateEncryptionPasswordBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/encryptionPasswords][%d] createEncryptionPasswordBadRequest  %+v", 400, o.Payload)
}
func (o *CreateEncryptionPasswordBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateEncryptionPasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEncryptionPasswordUnauthorized creates a CreateEncryptionPasswordUnauthorized with default headers values
func NewCreateEncryptionPasswordUnauthorized() *CreateEncryptionPasswordUnauthorized {
	return &CreateEncryptionPasswordUnauthorized{}
}

/* CreateEncryptionPasswordUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type CreateEncryptionPasswordUnauthorized struct {
	Payload *models.Error
}

func (o *CreateEncryptionPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/encryptionPasswords][%d] createEncryptionPasswordUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateEncryptionPasswordUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateEncryptionPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEncryptionPasswordForbidden creates a CreateEncryptionPasswordForbidden with default headers values
func NewCreateEncryptionPasswordForbidden() *CreateEncryptionPasswordForbidden {
	return &CreateEncryptionPasswordForbidden{}
}

/* CreateEncryptionPasswordForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type CreateEncryptionPasswordForbidden struct {
	Payload *models.Error
}

func (o *CreateEncryptionPasswordForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/encryptionPasswords][%d] createEncryptionPasswordForbidden  %+v", 403, o.Payload)
}
func (o *CreateEncryptionPasswordForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateEncryptionPasswordForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEncryptionPasswordInternalServerError creates a CreateEncryptionPasswordInternalServerError with default headers values
func NewCreateEncryptionPasswordInternalServerError() *CreateEncryptionPasswordInternalServerError {
	return &CreateEncryptionPasswordInternalServerError{}
}

/* CreateEncryptionPasswordInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type CreateEncryptionPasswordInternalServerError struct {
	Payload *models.Error
}

func (o *CreateEncryptionPasswordInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/encryptionPasswords][%d] createEncryptionPasswordInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateEncryptionPasswordInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateEncryptionPasswordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
