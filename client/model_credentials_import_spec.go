/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev2
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CredentialsImportSpec struct for CredentialsImportSpec
type CredentialsImportSpec struct {
	// User name.
	Username string `json:"username"`
	// Password.
	Password *string `json:"password,omitempty"`
	// Description of the credentials record.
	Description *string `json:"description,omitempty"`
	// Tag used to identify the credentials record.
	Tag string `json:"tag"`
	Type ECredentialsType `json:"type"`
	LinuxAdditionalSettings *CredentialsLinuxSettingsImportModel `json:"linuxAdditionalSettings,omitempty"`
}

// NewCredentialsImportSpec instantiates a new CredentialsImportSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsImportSpec(username string, tag string, type_ ECredentialsType, ) *CredentialsImportSpec {
	this := CredentialsImportSpec{}
	this.Username = username
	this.Tag = tag
	this.Type = type_
	return &this
}

// NewCredentialsImportSpecWithDefaults instantiates a new CredentialsImportSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsImportSpecWithDefaults() *CredentialsImportSpec {
	this := CredentialsImportSpec{}
	return &this
}

// GetUsername returns the Username field value
func (o *CredentialsImportSpec) GetUsername() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *CredentialsImportSpec) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *CredentialsImportSpec) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CredentialsImportSpec) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsImportSpec) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CredentialsImportSpec) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CredentialsImportSpec) SetPassword(v string) {
	o.Password = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CredentialsImportSpec) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsImportSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CredentialsImportSpec) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CredentialsImportSpec) SetDescription(v string) {
	o.Description = &v
}

// GetTag returns the Tag field value
func (o *CredentialsImportSpec) GetTag() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *CredentialsImportSpec) GetTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *CredentialsImportSpec) SetTag(v string) {
	o.Tag = v
}

// GetType returns the Type field value
func (o *CredentialsImportSpec) GetType() ECredentialsType {
	if o == nil  {
		var ret ECredentialsType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CredentialsImportSpec) GetTypeOk() (*ECredentialsType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CredentialsImportSpec) SetType(v ECredentialsType) {
	o.Type = v
}

// GetLinuxAdditionalSettings returns the LinuxAdditionalSettings field value if set, zero value otherwise.
func (o *CredentialsImportSpec) GetLinuxAdditionalSettings() CredentialsLinuxSettingsImportModel {
	if o == nil || o.LinuxAdditionalSettings == nil {
		var ret CredentialsLinuxSettingsImportModel
		return ret
	}
	return *o.LinuxAdditionalSettings
}

// GetLinuxAdditionalSettingsOk returns a tuple with the LinuxAdditionalSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsImportSpec) GetLinuxAdditionalSettingsOk() (*CredentialsLinuxSettingsImportModel, bool) {
	if o == nil || o.LinuxAdditionalSettings == nil {
		return nil, false
	}
	return o.LinuxAdditionalSettings, true
}

// HasLinuxAdditionalSettings returns a boolean if a field has been set.
func (o *CredentialsImportSpec) HasLinuxAdditionalSettings() bool {
	if o != nil && o.LinuxAdditionalSettings != nil {
		return true
	}

	return false
}

// SetLinuxAdditionalSettings gets a reference to the given CredentialsLinuxSettingsImportModel and assigns it to the LinuxAdditionalSettings field.
func (o *CredentialsImportSpec) SetLinuxAdditionalSettings(v CredentialsLinuxSettingsImportModel) {
	o.LinuxAdditionalSettings = &v
}

func (o CredentialsImportSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["tag"] = o.Tag
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.LinuxAdditionalSettings != nil {
		toSerialize["linuxAdditionalSettings"] = o.LinuxAdditionalSettings
	}
	return json.Marshal(toSerialize)
}

type NullableCredentialsImportSpec struct {
	value *CredentialsImportSpec
	isSet bool
}

func (v NullableCredentialsImportSpec) Get() *CredentialsImportSpec {
	return v.value
}

func (v *NullableCredentialsImportSpec) Set(val *CredentialsImportSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsImportSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsImportSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsImportSpec(val *CredentialsImportSpec) *NullableCredentialsImportSpec {
	return &NullableCredentialsImportSpec{value: val, isSet: true}
}

func (v NullableCredentialsImportSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsImportSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


