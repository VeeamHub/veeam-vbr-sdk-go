/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev1
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BackupJobExclusions struct for BackupJobExclusions
type BackupJobExclusions struct {
	// Array of VMs excluded from the backup.
	Vms *[]VmwareObjectSizeModel `json:"vms,omitempty"`
	// Array of VM disks excluded from the backup.
	Disks *[]VmwareObjectDiskModel `json:"disks,omitempty"`
	Templates *BackupJobExclusionsTemplates `json:"templates,omitempty"`
}

// NewBackupJobExclusions instantiates a new BackupJobExclusions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupJobExclusions() *BackupJobExclusions {
	this := BackupJobExclusions{}
	return &this
}

// NewBackupJobExclusionsWithDefaults instantiates a new BackupJobExclusions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupJobExclusionsWithDefaults() *BackupJobExclusions {
	this := BackupJobExclusions{}
	return &this
}

// GetVms returns the Vms field value if set, zero value otherwise.
func (o *BackupJobExclusions) GetVms() []VmwareObjectSizeModel {
	if o == nil || o.Vms == nil {
		var ret []VmwareObjectSizeModel
		return ret
	}
	return *o.Vms
}

// GetVmsOk returns a tuple with the Vms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobExclusions) GetVmsOk() (*[]VmwareObjectSizeModel, bool) {
	if o == nil || o.Vms == nil {
		return nil, false
	}
	return o.Vms, true
}

// HasVms returns a boolean if a field has been set.
func (o *BackupJobExclusions) HasVms() bool {
	if o != nil && o.Vms != nil {
		return true
	}

	return false
}

// SetVms gets a reference to the given []VmwareObjectSizeModel and assigns it to the Vms field.
func (o *BackupJobExclusions) SetVms(v []VmwareObjectSizeModel) {
	o.Vms = &v
}

// GetDisks returns the Disks field value if set, zero value otherwise.
func (o *BackupJobExclusions) GetDisks() []VmwareObjectDiskModel {
	if o == nil || o.Disks == nil {
		var ret []VmwareObjectDiskModel
		return ret
	}
	return *o.Disks
}

// GetDisksOk returns a tuple with the Disks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobExclusions) GetDisksOk() (*[]VmwareObjectDiskModel, bool) {
	if o == nil || o.Disks == nil {
		return nil, false
	}
	return o.Disks, true
}

// HasDisks returns a boolean if a field has been set.
func (o *BackupJobExclusions) HasDisks() bool {
	if o != nil && o.Disks != nil {
		return true
	}

	return false
}

// SetDisks gets a reference to the given []VmwareObjectDiskModel and assigns it to the Disks field.
func (o *BackupJobExclusions) SetDisks(v []VmwareObjectDiskModel) {
	o.Disks = &v
}

// GetTemplates returns the Templates field value if set, zero value otherwise.
func (o *BackupJobExclusions) GetTemplates() BackupJobExclusionsTemplates {
	if o == nil || o.Templates == nil {
		var ret BackupJobExclusionsTemplates
		return ret
	}
	return *o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobExclusions) GetTemplatesOk() (*BackupJobExclusionsTemplates, bool) {
	if o == nil || o.Templates == nil {
		return nil, false
	}
	return o.Templates, true
}

// HasTemplates returns a boolean if a field has been set.
func (o *BackupJobExclusions) HasTemplates() bool {
	if o != nil && o.Templates != nil {
		return true
	}

	return false
}

// SetTemplates gets a reference to the given BackupJobExclusionsTemplates and assigns it to the Templates field.
func (o *BackupJobExclusions) SetTemplates(v BackupJobExclusionsTemplates) {
	o.Templates = &v
}

func (o BackupJobExclusions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Vms != nil {
		toSerialize["vms"] = o.Vms
	}
	if o.Disks != nil {
		toSerialize["disks"] = o.Disks
	}
	if o.Templates != nil {
		toSerialize["templates"] = o.Templates
	}
	return json.Marshal(toSerialize)
}

type NullableBackupJobExclusions struct {
	value *BackupJobExclusions
	isSet bool
}

func (v NullableBackupJobExclusions) Get() *BackupJobExclusions {
	return v.value
}

func (v *NullableBackupJobExclusions) Set(val *BackupJobExclusions) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupJobExclusions) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupJobExclusions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupJobExclusions(val *BackupJobExclusions) *NullableBackupJobExclusions {
	return &NullableBackupJobExclusions{value: val, isSet: true}
}

func (v NullableBackupJobExclusions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupJobExclusions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


