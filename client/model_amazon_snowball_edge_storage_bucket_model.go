/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AmazonSnowballEdgeStorageBucketModel Amazon S3 bucket.
type AmazonSnowballEdgeStorageBucketModel struct {
	// Name of the Amazon S3 bucket.
	BucketName *string `json:"bucketName,omitempty"`
	// Name of the folder that the object storage repository is mapped to.
	FolderName *string `json:"folderName,omitempty"`
	StorageConsumptionLimit *ObjectStorageConsumptionLimitModel `json:"storageConsumptionLimit,omitempty"`
}

// NewAmazonSnowballEdgeStorageBucketModel instantiates a new AmazonSnowballEdgeStorageBucketModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmazonSnowballEdgeStorageBucketModel() *AmazonSnowballEdgeStorageBucketModel {
	this := AmazonSnowballEdgeStorageBucketModel{}
	return &this
}

// NewAmazonSnowballEdgeStorageBucketModelWithDefaults instantiates a new AmazonSnowballEdgeStorageBucketModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmazonSnowballEdgeStorageBucketModelWithDefaults() *AmazonSnowballEdgeStorageBucketModel {
	this := AmazonSnowballEdgeStorageBucketModel{}
	return &this
}

// GetBucketName returns the BucketName field value if set, zero value otherwise.
func (o *AmazonSnowballEdgeStorageBucketModel) GetBucketName() string {
	if o == nil || isNil(o.BucketName) {
		var ret string
		return ret
	}
	return *o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonSnowballEdgeStorageBucketModel) GetBucketNameOk() (*string, bool) {
	if o == nil || isNil(o.BucketName) {
    return nil, false
	}
	return o.BucketName, true
}

// HasBucketName returns a boolean if a field has been set.
func (o *AmazonSnowballEdgeStorageBucketModel) HasBucketName() bool {
	if o != nil && !isNil(o.BucketName) {
		return true
	}

	return false
}

// SetBucketName gets a reference to the given string and assigns it to the BucketName field.
func (o *AmazonSnowballEdgeStorageBucketModel) SetBucketName(v string) {
	o.BucketName = &v
}

// GetFolderName returns the FolderName field value if set, zero value otherwise.
func (o *AmazonSnowballEdgeStorageBucketModel) GetFolderName() string {
	if o == nil || isNil(o.FolderName) {
		var ret string
		return ret
	}
	return *o.FolderName
}

// GetFolderNameOk returns a tuple with the FolderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonSnowballEdgeStorageBucketModel) GetFolderNameOk() (*string, bool) {
	if o == nil || isNil(o.FolderName) {
    return nil, false
	}
	return o.FolderName, true
}

// HasFolderName returns a boolean if a field has been set.
func (o *AmazonSnowballEdgeStorageBucketModel) HasFolderName() bool {
	if o != nil && !isNil(o.FolderName) {
		return true
	}

	return false
}

// SetFolderName gets a reference to the given string and assigns it to the FolderName field.
func (o *AmazonSnowballEdgeStorageBucketModel) SetFolderName(v string) {
	o.FolderName = &v
}

// GetStorageConsumptionLimit returns the StorageConsumptionLimit field value if set, zero value otherwise.
func (o *AmazonSnowballEdgeStorageBucketModel) GetStorageConsumptionLimit() ObjectStorageConsumptionLimitModel {
	if o == nil || isNil(o.StorageConsumptionLimit) {
		var ret ObjectStorageConsumptionLimitModel
		return ret
	}
	return *o.StorageConsumptionLimit
}

// GetStorageConsumptionLimitOk returns a tuple with the StorageConsumptionLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonSnowballEdgeStorageBucketModel) GetStorageConsumptionLimitOk() (*ObjectStorageConsumptionLimitModel, bool) {
	if o == nil || isNil(o.StorageConsumptionLimit) {
    return nil, false
	}
	return o.StorageConsumptionLimit, true
}

// HasStorageConsumptionLimit returns a boolean if a field has been set.
func (o *AmazonSnowballEdgeStorageBucketModel) HasStorageConsumptionLimit() bool {
	if o != nil && !isNil(o.StorageConsumptionLimit) {
		return true
	}

	return false
}

// SetStorageConsumptionLimit gets a reference to the given ObjectStorageConsumptionLimitModel and assigns it to the StorageConsumptionLimit field.
func (o *AmazonSnowballEdgeStorageBucketModel) SetStorageConsumptionLimit(v ObjectStorageConsumptionLimitModel) {
	o.StorageConsumptionLimit = &v
}

func (o AmazonSnowballEdgeStorageBucketModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BucketName) {
		toSerialize["bucketName"] = o.BucketName
	}
	if !isNil(o.FolderName) {
		toSerialize["folderName"] = o.FolderName
	}
	if !isNil(o.StorageConsumptionLimit) {
		toSerialize["storageConsumptionLimit"] = o.StorageConsumptionLimit
	}
	return json.Marshal(toSerialize)
}

type NullableAmazonSnowballEdgeStorageBucketModel struct {
	value *AmazonSnowballEdgeStorageBucketModel
	isSet bool
}

func (v NullableAmazonSnowballEdgeStorageBucketModel) Get() *AmazonSnowballEdgeStorageBucketModel {
	return v.value
}

func (v *NullableAmazonSnowballEdgeStorageBucketModel) Set(val *AmazonSnowballEdgeStorageBucketModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAmazonSnowballEdgeStorageBucketModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAmazonSnowballEdgeStorageBucketModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmazonSnowballEdgeStorageBucketModel(val *AmazonSnowballEdgeStorageBucketModel) *NullableAmazonSnowballEdgeStorageBucketModel {
	return &NullableAmazonSnowballEdgeStorageBucketModel{value: val, isSet: true}
}

func (v NullableAmazonSnowballEdgeStorageBucketModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmazonSnowballEdgeStorageBucketModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


