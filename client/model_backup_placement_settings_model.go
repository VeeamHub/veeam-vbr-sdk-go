/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev1
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BackupPlacementSettingsModel Settings of the performance placement policy.
type BackupPlacementSettingsModel struct {
	// Name of a performance extent.
	ExtentName string `json:"extentName"`
	AllowedBackups EAllowedBackupsType `json:"allowedBackups"`
}

// NewBackupPlacementSettingsModel instantiates a new BackupPlacementSettingsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupPlacementSettingsModel(extentName string, allowedBackups EAllowedBackupsType) *BackupPlacementSettingsModel {
	this := BackupPlacementSettingsModel{}
	this.ExtentName = extentName
	this.AllowedBackups = allowedBackups
	return &this
}

// NewBackupPlacementSettingsModelWithDefaults instantiates a new BackupPlacementSettingsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupPlacementSettingsModelWithDefaults() *BackupPlacementSettingsModel {
	this := BackupPlacementSettingsModel{}
	return &this
}

// GetExtentName returns the ExtentName field value
func (o *BackupPlacementSettingsModel) GetExtentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExtentName
}

// GetExtentNameOk returns a tuple with the ExtentName field value
// and a boolean to check if the value has been set.
func (o *BackupPlacementSettingsModel) GetExtentNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExtentName, true
}

// SetExtentName sets field value
func (o *BackupPlacementSettingsModel) SetExtentName(v string) {
	o.ExtentName = v
}

// GetAllowedBackups returns the AllowedBackups field value
func (o *BackupPlacementSettingsModel) GetAllowedBackups() EAllowedBackupsType {
	if o == nil {
		var ret EAllowedBackupsType
		return ret
	}

	return o.AllowedBackups
}

// GetAllowedBackupsOk returns a tuple with the AllowedBackups field value
// and a boolean to check if the value has been set.
func (o *BackupPlacementSettingsModel) GetAllowedBackupsOk() (*EAllowedBackupsType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AllowedBackups, true
}

// SetAllowedBackups sets field value
func (o *BackupPlacementSettingsModel) SetAllowedBackups(v EAllowedBackupsType) {
	o.AllowedBackups = v
}

func (o BackupPlacementSettingsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["extentName"] = o.ExtentName
	}
	if true {
		toSerialize["allowedBackups"] = o.AllowedBackups
	}
	return json.Marshal(toSerialize)
}

type NullableBackupPlacementSettingsModel struct {
	value *BackupPlacementSettingsModel
	isSet bool
}

func (v NullableBackupPlacementSettingsModel) Get() *BackupPlacementSettingsModel {
	return v.value
}

func (v *NullableBackupPlacementSettingsModel) Set(val *BackupPlacementSettingsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupPlacementSettingsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupPlacementSettingsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupPlacementSettingsModel(val *BackupPlacementSettingsModel) *NullableBackupPlacementSettingsModel {
	return &NullableBackupPlacementSettingsModel{value: val, isSet: true}
}

func (v NullableBackupPlacementSettingsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupPlacementSettingsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


