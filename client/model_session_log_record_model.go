/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev1
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// SessionLogRecordModel Record of the session log.
type SessionLogRecordModel struct {
	// ID of the log record.
	Id *int32 `json:"id,omitempty"`
	Status *ETaskLogRecordStatus `json:"status,omitempty"`
	// Date and time the operation was started.
	StartTime *time.Time `json:"startTime,omitempty"`
	// Date and time the log record was updated.
	UpdateTime *time.Time `json:"updateTime,omitempty"`
	// Title of the log record.
	Title *string `json:"title,omitempty"`
	// Description of the log record.
	Description *string `json:"description,omitempty"`
}

// NewSessionLogRecordModel instantiates a new SessionLogRecordModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionLogRecordModel() *SessionLogRecordModel {
	this := SessionLogRecordModel{}
	return &this
}

// NewSessionLogRecordModelWithDefaults instantiates a new SessionLogRecordModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionLogRecordModelWithDefaults() *SessionLogRecordModel {
	this := SessionLogRecordModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SessionLogRecordModel) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionLogRecordModel) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SessionLogRecordModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *SessionLogRecordModel) SetId(v int32) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SessionLogRecordModel) GetStatus() ETaskLogRecordStatus {
	if o == nil || o.Status == nil {
		var ret ETaskLogRecordStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionLogRecordModel) GetStatusOk() (*ETaskLogRecordStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SessionLogRecordModel) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ETaskLogRecordStatus and assigns it to the Status field.
func (o *SessionLogRecordModel) SetStatus(v ETaskLogRecordStatus) {
	o.Status = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *SessionLogRecordModel) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionLogRecordModel) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *SessionLogRecordModel) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *SessionLogRecordModel) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *SessionLogRecordModel) GetUpdateTime() time.Time {
	if o == nil || o.UpdateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionLogRecordModel) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || o.UpdateTime == nil {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *SessionLogRecordModel) HasUpdateTime() bool {
	if o != nil && o.UpdateTime != nil {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *SessionLogRecordModel) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SessionLogRecordModel) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionLogRecordModel) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SessionLogRecordModel) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *SessionLogRecordModel) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SessionLogRecordModel) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionLogRecordModel) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SessionLogRecordModel) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SessionLogRecordModel) SetDescription(v string) {
	o.Description = &v
}

func (o SessionLogRecordModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	if o.UpdateTime != nil {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableSessionLogRecordModel struct {
	value *SessionLogRecordModel
	isSet bool
}

func (v NullableSessionLogRecordModel) Get() *SessionLogRecordModel {
	return v.value
}

func (v *NullableSessionLogRecordModel) Set(val *SessionLogRecordModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionLogRecordModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionLogRecordModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionLogRecordModel(val *SessionLogRecordModel) *NullableSessionLogRecordModel {
	return &NullableSessionLogRecordModel{value: val, isSet: true}
}

func (v NullableSessionLogRecordModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionLogRecordModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


