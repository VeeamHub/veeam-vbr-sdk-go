/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PlacementPolicyModel Backup file placement policy.
type PlacementPolicyModel struct {
	Type EPlacementPolicyType `json:"type"`
	// Placement policy settings.
	Settings []BackupPlacementSettingsModel `json:"settings,omitempty"`
	// If *true*, the backup job fails in case the placement policy cannot be met.
	EnforceStrictPlacementPolicy *bool `json:"enforceStrictPlacementPolicy,omitempty"`
}

// NewPlacementPolicyModel instantiates a new PlacementPolicyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlacementPolicyModel(type_ EPlacementPolicyType) *PlacementPolicyModel {
	this := PlacementPolicyModel{}
	this.Type = type_
	return &this
}

// NewPlacementPolicyModelWithDefaults instantiates a new PlacementPolicyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlacementPolicyModelWithDefaults() *PlacementPolicyModel {
	this := PlacementPolicyModel{}
	return &this
}

// GetType returns the Type field value
func (o *PlacementPolicyModel) GetType() EPlacementPolicyType {
	if o == nil {
		var ret EPlacementPolicyType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PlacementPolicyModel) GetTypeOk() (*EPlacementPolicyType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PlacementPolicyModel) SetType(v EPlacementPolicyType) {
	o.Type = v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *PlacementPolicyModel) GetSettings() []BackupPlacementSettingsModel {
	if o == nil || isNil(o.Settings) {
		var ret []BackupPlacementSettingsModel
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementPolicyModel) GetSettingsOk() ([]BackupPlacementSettingsModel, bool) {
	if o == nil || isNil(o.Settings) {
    return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *PlacementPolicyModel) HasSettings() bool {
	if o != nil && !isNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given []BackupPlacementSettingsModel and assigns it to the Settings field.
func (o *PlacementPolicyModel) SetSettings(v []BackupPlacementSettingsModel) {
	o.Settings = v
}

// GetEnforceStrictPlacementPolicy returns the EnforceStrictPlacementPolicy field value if set, zero value otherwise.
func (o *PlacementPolicyModel) GetEnforceStrictPlacementPolicy() bool {
	if o == nil || isNil(o.EnforceStrictPlacementPolicy) {
		var ret bool
		return ret
	}
	return *o.EnforceStrictPlacementPolicy
}

// GetEnforceStrictPlacementPolicyOk returns a tuple with the EnforceStrictPlacementPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementPolicyModel) GetEnforceStrictPlacementPolicyOk() (*bool, bool) {
	if o == nil || isNil(o.EnforceStrictPlacementPolicy) {
    return nil, false
	}
	return o.EnforceStrictPlacementPolicy, true
}

// HasEnforceStrictPlacementPolicy returns a boolean if a field has been set.
func (o *PlacementPolicyModel) HasEnforceStrictPlacementPolicy() bool {
	if o != nil && !isNil(o.EnforceStrictPlacementPolicy) {
		return true
	}

	return false
}

// SetEnforceStrictPlacementPolicy gets a reference to the given bool and assigns it to the EnforceStrictPlacementPolicy field.
func (o *PlacementPolicyModel) SetEnforceStrictPlacementPolicy(v bool) {
	o.EnforceStrictPlacementPolicy = &v
}

func (o PlacementPolicyModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !isNil(o.EnforceStrictPlacementPolicy) {
		toSerialize["enforceStrictPlacementPolicy"] = o.EnforceStrictPlacementPolicy
	}
	return json.Marshal(toSerialize)
}

type NullablePlacementPolicyModel struct {
	value *PlacementPolicyModel
	isSet bool
}

func (v NullablePlacementPolicyModel) Get() *PlacementPolicyModel {
	return v.value
}

func (v *NullablePlacementPolicyModel) Set(val *PlacementPolicyModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePlacementPolicyModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePlacementPolicyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlacementPolicyModel(val *PlacementPolicyModel) *NullablePlacementPolicyModel {
	return &NullablePlacementPolicyModel{value: val, isSet: true}
}

func (v NullablePlacementPolicyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlacementPolicyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


