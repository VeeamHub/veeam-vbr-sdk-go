/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev1
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// LinuxHostSSHSettingsModel SSH settings.
type LinuxHostSSHSettingsModel struct {
	// SSH timeout, in ms. If a task targeted at the server is inactive after the timeout, the task is terminated.
	SshTimeOutMs *int32 `json:"sshTimeOutMs,omitempty"`
	// Start port used for data transfer.
	PortRangeStart *int32 `json:"portRangeStart,omitempty"`
	// End port used for data transfer.
	PortRangeEnd *int32 `json:"portRangeEnd,omitempty"`
	// If *true*, the server is run on this side.
	ServerThisSide *bool `json:"serverThisSide,omitempty"`
	// Port used as a control channel from the Veeam Backup & Replication console to the Linux server.
	ManagementPort *int32 `json:"managementPort,omitempty"`
}

// NewLinuxHostSSHSettingsModel instantiates a new LinuxHostSSHSettingsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinuxHostSSHSettingsModel() *LinuxHostSSHSettingsModel {
	this := LinuxHostSSHSettingsModel{}
	return &this
}

// NewLinuxHostSSHSettingsModelWithDefaults instantiates a new LinuxHostSSHSettingsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinuxHostSSHSettingsModelWithDefaults() *LinuxHostSSHSettingsModel {
	this := LinuxHostSSHSettingsModel{}
	return &this
}

// GetSshTimeOutMs returns the SshTimeOutMs field value if set, zero value otherwise.
func (o *LinuxHostSSHSettingsModel) GetSshTimeOutMs() int32 {
	if o == nil || o.SshTimeOutMs == nil {
		var ret int32
		return ret
	}
	return *o.SshTimeOutMs
}

// GetSshTimeOutMsOk returns a tuple with the SshTimeOutMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinuxHostSSHSettingsModel) GetSshTimeOutMsOk() (*int32, bool) {
	if o == nil || o.SshTimeOutMs == nil {
		return nil, false
	}
	return o.SshTimeOutMs, true
}

// HasSshTimeOutMs returns a boolean if a field has been set.
func (o *LinuxHostSSHSettingsModel) HasSshTimeOutMs() bool {
	if o != nil && o.SshTimeOutMs != nil {
		return true
	}

	return false
}

// SetSshTimeOutMs gets a reference to the given int32 and assigns it to the SshTimeOutMs field.
func (o *LinuxHostSSHSettingsModel) SetSshTimeOutMs(v int32) {
	o.SshTimeOutMs = &v
}

// GetPortRangeStart returns the PortRangeStart field value if set, zero value otherwise.
func (o *LinuxHostSSHSettingsModel) GetPortRangeStart() int32 {
	if o == nil || o.PortRangeStart == nil {
		var ret int32
		return ret
	}
	return *o.PortRangeStart
}

// GetPortRangeStartOk returns a tuple with the PortRangeStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinuxHostSSHSettingsModel) GetPortRangeStartOk() (*int32, bool) {
	if o == nil || o.PortRangeStart == nil {
		return nil, false
	}
	return o.PortRangeStart, true
}

// HasPortRangeStart returns a boolean if a field has been set.
func (o *LinuxHostSSHSettingsModel) HasPortRangeStart() bool {
	if o != nil && o.PortRangeStart != nil {
		return true
	}

	return false
}

// SetPortRangeStart gets a reference to the given int32 and assigns it to the PortRangeStart field.
func (o *LinuxHostSSHSettingsModel) SetPortRangeStart(v int32) {
	o.PortRangeStart = &v
}

// GetPortRangeEnd returns the PortRangeEnd field value if set, zero value otherwise.
func (o *LinuxHostSSHSettingsModel) GetPortRangeEnd() int32 {
	if o == nil || o.PortRangeEnd == nil {
		var ret int32
		return ret
	}
	return *o.PortRangeEnd
}

// GetPortRangeEndOk returns a tuple with the PortRangeEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinuxHostSSHSettingsModel) GetPortRangeEndOk() (*int32, bool) {
	if o == nil || o.PortRangeEnd == nil {
		return nil, false
	}
	return o.PortRangeEnd, true
}

// HasPortRangeEnd returns a boolean if a field has been set.
func (o *LinuxHostSSHSettingsModel) HasPortRangeEnd() bool {
	if o != nil && o.PortRangeEnd != nil {
		return true
	}

	return false
}

// SetPortRangeEnd gets a reference to the given int32 and assigns it to the PortRangeEnd field.
func (o *LinuxHostSSHSettingsModel) SetPortRangeEnd(v int32) {
	o.PortRangeEnd = &v
}

// GetServerThisSide returns the ServerThisSide field value if set, zero value otherwise.
func (o *LinuxHostSSHSettingsModel) GetServerThisSide() bool {
	if o == nil || o.ServerThisSide == nil {
		var ret bool
		return ret
	}
	return *o.ServerThisSide
}

// GetServerThisSideOk returns a tuple with the ServerThisSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinuxHostSSHSettingsModel) GetServerThisSideOk() (*bool, bool) {
	if o == nil || o.ServerThisSide == nil {
		return nil, false
	}
	return o.ServerThisSide, true
}

// HasServerThisSide returns a boolean if a field has been set.
func (o *LinuxHostSSHSettingsModel) HasServerThisSide() bool {
	if o != nil && o.ServerThisSide != nil {
		return true
	}

	return false
}

// SetServerThisSide gets a reference to the given bool and assigns it to the ServerThisSide field.
func (o *LinuxHostSSHSettingsModel) SetServerThisSide(v bool) {
	o.ServerThisSide = &v
}

// GetManagementPort returns the ManagementPort field value if set, zero value otherwise.
func (o *LinuxHostSSHSettingsModel) GetManagementPort() int32 {
	if o == nil || o.ManagementPort == nil {
		var ret int32
		return ret
	}
	return *o.ManagementPort
}

// GetManagementPortOk returns a tuple with the ManagementPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinuxHostSSHSettingsModel) GetManagementPortOk() (*int32, bool) {
	if o == nil || o.ManagementPort == nil {
		return nil, false
	}
	return o.ManagementPort, true
}

// HasManagementPort returns a boolean if a field has been set.
func (o *LinuxHostSSHSettingsModel) HasManagementPort() bool {
	if o != nil && o.ManagementPort != nil {
		return true
	}

	return false
}

// SetManagementPort gets a reference to the given int32 and assigns it to the ManagementPort field.
func (o *LinuxHostSSHSettingsModel) SetManagementPort(v int32) {
	o.ManagementPort = &v
}

func (o LinuxHostSSHSettingsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SshTimeOutMs != nil {
		toSerialize["sshTimeOutMs"] = o.SshTimeOutMs
	}
	if o.PortRangeStart != nil {
		toSerialize["portRangeStart"] = o.PortRangeStart
	}
	if o.PortRangeEnd != nil {
		toSerialize["portRangeEnd"] = o.PortRangeEnd
	}
	if o.ServerThisSide != nil {
		toSerialize["serverThisSide"] = o.ServerThisSide
	}
	if o.ManagementPort != nil {
		toSerialize["managementPort"] = o.ManagementPort
	}
	return json.Marshal(toSerialize)
}

type NullableLinuxHostSSHSettingsModel struct {
	value *LinuxHostSSHSettingsModel
	isSet bool
}

func (v NullableLinuxHostSSHSettingsModel) Get() *LinuxHostSSHSettingsModel {
	return v.value
}

func (v *NullableLinuxHostSSHSettingsModel) Set(val *LinuxHostSSHSettingsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLinuxHostSSHSettingsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLinuxHostSSHSettingsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinuxHostSSHSettingsModel(val *LinuxHostSSHSettingsModel) *NullableLinuxHostSSHSettingsModel {
	return &NullableLinuxHostSSHSettingsModel{value: val, isSet: true}
}

func (v NullableLinuxHostSSHSettingsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinuxHostSSHSettingsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


