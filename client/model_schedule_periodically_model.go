/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev2
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// SchedulePeriodicallyModel Periodic scheduling options.
type SchedulePeriodicallyModel struct {
	// If *true*, periodic schedule is enabled.
	IsEnabled bool `json:"isEnabled"`
	PeriodicallyKind *EPeriodicallyKinds `json:"periodicallyKind,omitempty"`
	// Number of time units that defines the time interval.
	Frequency *int32 `json:"frequency,omitempty"`
	BackupWindow *BackupWindowSettingModel `json:"backupWindow,omitempty"`
	StartTimeWithinAnHour *int32 `json:"startTimeWithinAnHour,omitempty"`
}

// NewSchedulePeriodicallyModel instantiates a new SchedulePeriodicallyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulePeriodicallyModel(isEnabled bool, ) *SchedulePeriodicallyModel {
	this := SchedulePeriodicallyModel{}
	this.IsEnabled = isEnabled
	return &this
}

// NewSchedulePeriodicallyModelWithDefaults instantiates a new SchedulePeriodicallyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulePeriodicallyModelWithDefaults() *SchedulePeriodicallyModel {
	this := SchedulePeriodicallyModel{}
	var isEnabled bool = false
	this.IsEnabled = isEnabled
	return &this
}

// GetIsEnabled returns the IsEnabled field value
func (o *SchedulePeriodicallyModel) GetIsEnabled() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *SchedulePeriodicallyModel) GetIsEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *SchedulePeriodicallyModel) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetPeriodicallyKind returns the PeriodicallyKind field value if set, zero value otherwise.
func (o *SchedulePeriodicallyModel) GetPeriodicallyKind() EPeriodicallyKinds {
	if o == nil || o.PeriodicallyKind == nil {
		var ret EPeriodicallyKinds
		return ret
	}
	return *o.PeriodicallyKind
}

// GetPeriodicallyKindOk returns a tuple with the PeriodicallyKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePeriodicallyModel) GetPeriodicallyKindOk() (*EPeriodicallyKinds, bool) {
	if o == nil || o.PeriodicallyKind == nil {
		return nil, false
	}
	return o.PeriodicallyKind, true
}

// HasPeriodicallyKind returns a boolean if a field has been set.
func (o *SchedulePeriodicallyModel) HasPeriodicallyKind() bool {
	if o != nil && o.PeriodicallyKind != nil {
		return true
	}

	return false
}

// SetPeriodicallyKind gets a reference to the given EPeriodicallyKinds and assigns it to the PeriodicallyKind field.
func (o *SchedulePeriodicallyModel) SetPeriodicallyKind(v EPeriodicallyKinds) {
	o.PeriodicallyKind = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *SchedulePeriodicallyModel) GetFrequency() int32 {
	if o == nil || o.Frequency == nil {
		var ret int32
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePeriodicallyModel) GetFrequencyOk() (*int32, bool) {
	if o == nil || o.Frequency == nil {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *SchedulePeriodicallyModel) HasFrequency() bool {
	if o != nil && o.Frequency != nil {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given int32 and assigns it to the Frequency field.
func (o *SchedulePeriodicallyModel) SetFrequency(v int32) {
	o.Frequency = &v
}

// GetBackupWindow returns the BackupWindow field value if set, zero value otherwise.
func (o *SchedulePeriodicallyModel) GetBackupWindow() BackupWindowSettingModel {
	if o == nil || o.BackupWindow == nil {
		var ret BackupWindowSettingModel
		return ret
	}
	return *o.BackupWindow
}

// GetBackupWindowOk returns a tuple with the BackupWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePeriodicallyModel) GetBackupWindowOk() (*BackupWindowSettingModel, bool) {
	if o == nil || o.BackupWindow == nil {
		return nil, false
	}
	return o.BackupWindow, true
}

// HasBackupWindow returns a boolean if a field has been set.
func (o *SchedulePeriodicallyModel) HasBackupWindow() bool {
	if o != nil && o.BackupWindow != nil {
		return true
	}

	return false
}

// SetBackupWindow gets a reference to the given BackupWindowSettingModel and assigns it to the BackupWindow field.
func (o *SchedulePeriodicallyModel) SetBackupWindow(v BackupWindowSettingModel) {
	o.BackupWindow = &v
}

// GetStartTimeWithinAnHour returns the StartTimeWithinAnHour field value if set, zero value otherwise.
func (o *SchedulePeriodicallyModel) GetStartTimeWithinAnHour() int32 {
	if o == nil || o.StartTimeWithinAnHour == nil {
		var ret int32
		return ret
	}
	return *o.StartTimeWithinAnHour
}

// GetStartTimeWithinAnHourOk returns a tuple with the StartTimeWithinAnHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePeriodicallyModel) GetStartTimeWithinAnHourOk() (*int32, bool) {
	if o == nil || o.StartTimeWithinAnHour == nil {
		return nil, false
	}
	return o.StartTimeWithinAnHour, true
}

// HasStartTimeWithinAnHour returns a boolean if a field has been set.
func (o *SchedulePeriodicallyModel) HasStartTimeWithinAnHour() bool {
	if o != nil && o.StartTimeWithinAnHour != nil {
		return true
	}

	return false
}

// SetStartTimeWithinAnHour gets a reference to the given int32 and assigns it to the StartTimeWithinAnHour field.
func (o *SchedulePeriodicallyModel) SetStartTimeWithinAnHour(v int32) {
	o.StartTimeWithinAnHour = &v
}

func (o SchedulePeriodicallyModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if o.PeriodicallyKind != nil {
		toSerialize["periodicallyKind"] = o.PeriodicallyKind
	}
	if o.Frequency != nil {
		toSerialize["frequency"] = o.Frequency
	}
	if o.BackupWindow != nil {
		toSerialize["backupWindow"] = o.BackupWindow
	}
	if o.StartTimeWithinAnHour != nil {
		toSerialize["startTimeWithinAnHour"] = o.StartTimeWithinAnHour
	}
	return json.Marshal(toSerialize)
}

type NullableSchedulePeriodicallyModel struct {
	value *SchedulePeriodicallyModel
	isSet bool
}

func (v NullableSchedulePeriodicallyModel) Get() *SchedulePeriodicallyModel {
	return v.value
}

func (v *NullableSchedulePeriodicallyModel) Set(val *SchedulePeriodicallyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulePeriodicallyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulePeriodicallyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulePeriodicallyModel(val *SchedulePeriodicallyModel) *NullableSchedulePeriodicallyModel {
	return &NullableSchedulePeriodicallyModel{value: val, isSet: true}
}

func (v NullableSchedulePeriodicallyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulePeriodicallyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


