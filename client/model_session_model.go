/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev2
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// SessionModel struct for SessionModel
type SessionModel struct {
	// ID of the session.
	Id string `json:"id"`
	// Name of the session.
	Name string `json:"name"`
	// ID of the activity.
	ActivityId string `json:"activityId"`
	SessionType ESessionType `json:"sessionType"`
	// Date and time the session was created.
	CreationTime time.Time `json:"creationTime"`
	// Date and time the session was ended.
	EndTime *time.Time `json:"endTime,omitempty"`
	State ESessionState `json:"state"`
	// Progress percentage of the session.
	ProgressPercent *int32 `json:"progressPercent,omitempty"`
	Result *SessionResultModel `json:"result,omitempty"`
	// ID of the resource.
	ResourceId *string `json:"resourceId,omitempty"`
	// URI of the resource.
	ResourceReference *string `json:"resourceReference,omitempty"`
	// ID of the parent session.
	ParentSessionId *string `json:"parentSessionId,omitempty"`
	// Update sequence number.
	Usn int64 `json:"usn"`
}

// NewSessionModel instantiates a new SessionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionModel(id string, name string, activityId string, sessionType ESessionType, creationTime time.Time, state ESessionState, usn int64, ) *SessionModel {
	this := SessionModel{}
	this.Id = id
	this.Name = name
	this.ActivityId = activityId
	this.SessionType = sessionType
	this.CreationTime = creationTime
	this.State = state
	this.Usn = usn
	return &this
}

// NewSessionModelWithDefaults instantiates a new SessionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionModelWithDefaults() *SessionModel {
	this := SessionModel{}
	return &this
}

// GetId returns the Id field value
func (o *SessionModel) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SessionModel) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SessionModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *SessionModel) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SessionModel) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SessionModel) SetName(v string) {
	o.Name = v
}

// GetActivityId returns the ActivityId field value
func (o *SessionModel) GetActivityId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ActivityId
}

// GetActivityIdOk returns a tuple with the ActivityId field value
// and a boolean to check if the value has been set.
func (o *SessionModel) GetActivityIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ActivityId, true
}

// SetActivityId sets field value
func (o *SessionModel) SetActivityId(v string) {
	o.ActivityId = v
}

// GetSessionType returns the SessionType field value
func (o *SessionModel) GetSessionType() ESessionType {
	if o == nil  {
		var ret ESessionType
		return ret
	}

	return o.SessionType
}

// GetSessionTypeOk returns a tuple with the SessionType field value
// and a boolean to check if the value has been set.
func (o *SessionModel) GetSessionTypeOk() (*ESessionType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SessionType, true
}

// SetSessionType sets field value
func (o *SessionModel) SetSessionType(v ESessionType) {
	o.SessionType = v
}

// GetCreationTime returns the CreationTime field value
func (o *SessionModel) GetCreationTime() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value
// and a boolean to check if the value has been set.
func (o *SessionModel) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreationTime, true
}

// SetCreationTime sets field value
func (o *SessionModel) SetCreationTime(v time.Time) {
	o.CreationTime = v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *SessionModel) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionModel) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *SessionModel) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *SessionModel) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetState returns the State field value
func (o *SessionModel) GetState() ESessionState {
	if o == nil  {
		var ret ESessionState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *SessionModel) GetStateOk() (*ESessionState, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *SessionModel) SetState(v ESessionState) {
	o.State = v
}

// GetProgressPercent returns the ProgressPercent field value if set, zero value otherwise.
func (o *SessionModel) GetProgressPercent() int32 {
	if o == nil || o.ProgressPercent == nil {
		var ret int32
		return ret
	}
	return *o.ProgressPercent
}

// GetProgressPercentOk returns a tuple with the ProgressPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionModel) GetProgressPercentOk() (*int32, bool) {
	if o == nil || o.ProgressPercent == nil {
		return nil, false
	}
	return o.ProgressPercent, true
}

// HasProgressPercent returns a boolean if a field has been set.
func (o *SessionModel) HasProgressPercent() bool {
	if o != nil && o.ProgressPercent != nil {
		return true
	}

	return false
}

// SetProgressPercent gets a reference to the given int32 and assigns it to the ProgressPercent field.
func (o *SessionModel) SetProgressPercent(v int32) {
	o.ProgressPercent = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *SessionModel) GetResult() SessionResultModel {
	if o == nil || o.Result == nil {
		var ret SessionResultModel
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionModel) GetResultOk() (*SessionResultModel, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *SessionModel) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given SessionResultModel and assigns it to the Result field.
func (o *SessionModel) SetResult(v SessionResultModel) {
	o.Result = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *SessionModel) GetResourceId() string {
	if o == nil || o.ResourceId == nil {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionModel) GetResourceIdOk() (*string, bool) {
	if o == nil || o.ResourceId == nil {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *SessionModel) HasResourceId() bool {
	if o != nil && o.ResourceId != nil {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *SessionModel) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetResourceReference returns the ResourceReference field value if set, zero value otherwise.
func (o *SessionModel) GetResourceReference() string {
	if o == nil || o.ResourceReference == nil {
		var ret string
		return ret
	}
	return *o.ResourceReference
}

// GetResourceReferenceOk returns a tuple with the ResourceReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionModel) GetResourceReferenceOk() (*string, bool) {
	if o == nil || o.ResourceReference == nil {
		return nil, false
	}
	return o.ResourceReference, true
}

// HasResourceReference returns a boolean if a field has been set.
func (o *SessionModel) HasResourceReference() bool {
	if o != nil && o.ResourceReference != nil {
		return true
	}

	return false
}

// SetResourceReference gets a reference to the given string and assigns it to the ResourceReference field.
func (o *SessionModel) SetResourceReference(v string) {
	o.ResourceReference = &v
}

// GetParentSessionId returns the ParentSessionId field value if set, zero value otherwise.
func (o *SessionModel) GetParentSessionId() string {
	if o == nil || o.ParentSessionId == nil {
		var ret string
		return ret
	}
	return *o.ParentSessionId
}

// GetParentSessionIdOk returns a tuple with the ParentSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionModel) GetParentSessionIdOk() (*string, bool) {
	if o == nil || o.ParentSessionId == nil {
		return nil, false
	}
	return o.ParentSessionId, true
}

// HasParentSessionId returns a boolean if a field has been set.
func (o *SessionModel) HasParentSessionId() bool {
	if o != nil && o.ParentSessionId != nil {
		return true
	}

	return false
}

// SetParentSessionId gets a reference to the given string and assigns it to the ParentSessionId field.
func (o *SessionModel) SetParentSessionId(v string) {
	o.ParentSessionId = &v
}

// GetUsn returns the Usn field value
func (o *SessionModel) GetUsn() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.Usn
}

// GetUsnOk returns a tuple with the Usn field value
// and a boolean to check if the value has been set.
func (o *SessionModel) GetUsnOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Usn, true
}

// SetUsn sets field value
func (o *SessionModel) SetUsn(v int64) {
	o.Usn = v
}

func (o SessionModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["activityId"] = o.ActivityId
	}
	if true {
		toSerialize["sessionType"] = o.SessionType
	}
	if true {
		toSerialize["creationTime"] = o.CreationTime
	}
	if o.EndTime != nil {
		toSerialize["endTime"] = o.EndTime
	}
	if true {
		toSerialize["state"] = o.State
	}
	if o.ProgressPercent != nil {
		toSerialize["progressPercent"] = o.ProgressPercent
	}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	if o.ResourceId != nil {
		toSerialize["resourceId"] = o.ResourceId
	}
	if o.ResourceReference != nil {
		toSerialize["resourceReference"] = o.ResourceReference
	}
	if o.ParentSessionId != nil {
		toSerialize["parentSessionId"] = o.ParentSessionId
	}
	if true {
		toSerialize["usn"] = o.Usn
	}
	return json.Marshal(toSerialize)
}

type NullableSessionModel struct {
	value *SessionModel
	isSet bool
}

func (v NullableSessionModel) Get() *SessionModel {
	return v.value
}

func (v *NullableSessionModel) Set(val *SessionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionModel(val *SessionModel) *NullableSessionModel {
	return &NullableSessionModel{value: val, isSet: true}
}

func (v NullableSessionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


