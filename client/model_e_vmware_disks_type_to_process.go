/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev1
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// EVmwareDisksTypeToProcess Type of disk selection.
type EVmwareDisksTypeToProcess string

// List of EVmwareDisksTypeToProcess
const (
	EVMWAREDISKSTYPETOPROCESS_ALL_DISKS EVmwareDisksTypeToProcess = "AllDisks"
	EVMWAREDISKSTYPETOPROCESS_SYSTEM_ONLY EVmwareDisksTypeToProcess = "SystemOnly"
	EVMWAREDISKSTYPETOPROCESS_SELECTED_DISKS EVmwareDisksTypeToProcess = "SelectedDisks"
)

func (v *EVmwareDisksTypeToProcess) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EVmwareDisksTypeToProcess(value)
	for _, existing := range []EVmwareDisksTypeToProcess{ "AllDisks", "SystemOnly", "SelectedDisks",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EVmwareDisksTypeToProcess", value)
}

// Ptr returns reference to EVmwareDisksTypeToProcess value
func (v EVmwareDisksTypeToProcess) Ptr() *EVmwareDisksTypeToProcess {
	return &v
}

type NullableEVmwareDisksTypeToProcess struct {
	value *EVmwareDisksTypeToProcess
	isSet bool
}

func (v NullableEVmwareDisksTypeToProcess) Get() *EVmwareDisksTypeToProcess {
	return v.value
}

func (v *NullableEVmwareDisksTypeToProcess) Set(val *EVmwareDisksTypeToProcess) {
	v.value = val
	v.isSet = true
}

func (v NullableEVmwareDisksTypeToProcess) IsSet() bool {
	return v.isSet
}

func (v *NullableEVmwareDisksTypeToProcess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEVmwareDisksTypeToProcess(val *EVmwareDisksTypeToProcess) *NullableEVmwareDisksTypeToProcess {
	return &NullableEVmwareDisksTypeToProcess{value: val, isSet: true}
}

func (v NullableEVmwareDisksTypeToProcess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEVmwareDisksTypeToProcess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

