/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev1
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BackupJobAdvancedSettingsModel Advanced settings of the backup job.
type BackupJobAdvancedSettingsModel struct {
	BackupModeType EBackupModeType `json:"backupModeType"`
	SynthenticFulls *SyntheticFullSettingsModel `json:"synthenticFulls,omitempty"`
	ActiveFulls *ActiveFullSettingsModel `json:"activeFulls,omitempty"`
	BackupHealth *BackupHealthCheckSettingsModels `json:"backupHealth,omitempty"`
	FullBackupMaintenance *FullBackupMaintenanceModel `json:"fullBackupMaintenance,omitempty"`
	StorageData *BackupStorageSettingModel `json:"storageData,omitempty"`
	Notifications *NotificationSettingsModel `json:"notifications,omitempty"`
	VSphere *BackupJobAdvancedSettingsVSphereModel `json:"vSphere,omitempty"`
	StorageIntegration *PrimaryStorageIntegrationSettingsModel `json:"storageIntegration,omitempty"`
	Scripts *JobScriptsSettingsModel `json:"scripts,omitempty"`
}

// NewBackupJobAdvancedSettingsModel instantiates a new BackupJobAdvancedSettingsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupJobAdvancedSettingsModel(backupModeType EBackupModeType) *BackupJobAdvancedSettingsModel {
	this := BackupJobAdvancedSettingsModel{}
	this.BackupModeType = backupModeType
	return &this
}

// NewBackupJobAdvancedSettingsModelWithDefaults instantiates a new BackupJobAdvancedSettingsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupJobAdvancedSettingsModelWithDefaults() *BackupJobAdvancedSettingsModel {
	this := BackupJobAdvancedSettingsModel{}
	return &this
}

// GetBackupModeType returns the BackupModeType field value
func (o *BackupJobAdvancedSettingsModel) GetBackupModeType() EBackupModeType {
	if o == nil {
		var ret EBackupModeType
		return ret
	}

	return o.BackupModeType
}

// GetBackupModeTypeOk returns a tuple with the BackupModeType field value
// and a boolean to check if the value has been set.
func (o *BackupJobAdvancedSettingsModel) GetBackupModeTypeOk() (*EBackupModeType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackupModeType, true
}

// SetBackupModeType sets field value
func (o *BackupJobAdvancedSettingsModel) SetBackupModeType(v EBackupModeType) {
	o.BackupModeType = v
}

// GetSynthenticFulls returns the SynthenticFulls field value if set, zero value otherwise.
func (o *BackupJobAdvancedSettingsModel) GetSynthenticFulls() SyntheticFullSettingsModel {
	if o == nil || o.SynthenticFulls == nil {
		var ret SyntheticFullSettingsModel
		return ret
	}
	return *o.SynthenticFulls
}

// GetSynthenticFullsOk returns a tuple with the SynthenticFulls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobAdvancedSettingsModel) GetSynthenticFullsOk() (*SyntheticFullSettingsModel, bool) {
	if o == nil || o.SynthenticFulls == nil {
		return nil, false
	}
	return o.SynthenticFulls, true
}

// HasSynthenticFulls returns a boolean if a field has been set.
func (o *BackupJobAdvancedSettingsModel) HasSynthenticFulls() bool {
	if o != nil && o.SynthenticFulls != nil {
		return true
	}

	return false
}

// SetSynthenticFulls gets a reference to the given SyntheticFullSettingsModel and assigns it to the SynthenticFulls field.
func (o *BackupJobAdvancedSettingsModel) SetSynthenticFulls(v SyntheticFullSettingsModel) {
	o.SynthenticFulls = &v
}

// GetActiveFulls returns the ActiveFulls field value if set, zero value otherwise.
func (o *BackupJobAdvancedSettingsModel) GetActiveFulls() ActiveFullSettingsModel {
	if o == nil || o.ActiveFulls == nil {
		var ret ActiveFullSettingsModel
		return ret
	}
	return *o.ActiveFulls
}

// GetActiveFullsOk returns a tuple with the ActiveFulls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobAdvancedSettingsModel) GetActiveFullsOk() (*ActiveFullSettingsModel, bool) {
	if o == nil || o.ActiveFulls == nil {
		return nil, false
	}
	return o.ActiveFulls, true
}

// HasActiveFulls returns a boolean if a field has been set.
func (o *BackupJobAdvancedSettingsModel) HasActiveFulls() bool {
	if o != nil && o.ActiveFulls != nil {
		return true
	}

	return false
}

// SetActiveFulls gets a reference to the given ActiveFullSettingsModel and assigns it to the ActiveFulls field.
func (o *BackupJobAdvancedSettingsModel) SetActiveFulls(v ActiveFullSettingsModel) {
	o.ActiveFulls = &v
}

// GetBackupHealth returns the BackupHealth field value if set, zero value otherwise.
func (o *BackupJobAdvancedSettingsModel) GetBackupHealth() BackupHealthCheckSettingsModels {
	if o == nil || o.BackupHealth == nil {
		var ret BackupHealthCheckSettingsModels
		return ret
	}
	return *o.BackupHealth
}

// GetBackupHealthOk returns a tuple with the BackupHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobAdvancedSettingsModel) GetBackupHealthOk() (*BackupHealthCheckSettingsModels, bool) {
	if o == nil || o.BackupHealth == nil {
		return nil, false
	}
	return o.BackupHealth, true
}

// HasBackupHealth returns a boolean if a field has been set.
func (o *BackupJobAdvancedSettingsModel) HasBackupHealth() bool {
	if o != nil && o.BackupHealth != nil {
		return true
	}

	return false
}

// SetBackupHealth gets a reference to the given BackupHealthCheckSettingsModels and assigns it to the BackupHealth field.
func (o *BackupJobAdvancedSettingsModel) SetBackupHealth(v BackupHealthCheckSettingsModels) {
	o.BackupHealth = &v
}

// GetFullBackupMaintenance returns the FullBackupMaintenance field value if set, zero value otherwise.
func (o *BackupJobAdvancedSettingsModel) GetFullBackupMaintenance() FullBackupMaintenanceModel {
	if o == nil || o.FullBackupMaintenance == nil {
		var ret FullBackupMaintenanceModel
		return ret
	}
	return *o.FullBackupMaintenance
}

// GetFullBackupMaintenanceOk returns a tuple with the FullBackupMaintenance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobAdvancedSettingsModel) GetFullBackupMaintenanceOk() (*FullBackupMaintenanceModel, bool) {
	if o == nil || o.FullBackupMaintenance == nil {
		return nil, false
	}
	return o.FullBackupMaintenance, true
}

// HasFullBackupMaintenance returns a boolean if a field has been set.
func (o *BackupJobAdvancedSettingsModel) HasFullBackupMaintenance() bool {
	if o != nil && o.FullBackupMaintenance != nil {
		return true
	}

	return false
}

// SetFullBackupMaintenance gets a reference to the given FullBackupMaintenanceModel and assigns it to the FullBackupMaintenance field.
func (o *BackupJobAdvancedSettingsModel) SetFullBackupMaintenance(v FullBackupMaintenanceModel) {
	o.FullBackupMaintenance = &v
}

// GetStorageData returns the StorageData field value if set, zero value otherwise.
func (o *BackupJobAdvancedSettingsModel) GetStorageData() BackupStorageSettingModel {
	if o == nil || o.StorageData == nil {
		var ret BackupStorageSettingModel
		return ret
	}
	return *o.StorageData
}

// GetStorageDataOk returns a tuple with the StorageData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobAdvancedSettingsModel) GetStorageDataOk() (*BackupStorageSettingModel, bool) {
	if o == nil || o.StorageData == nil {
		return nil, false
	}
	return o.StorageData, true
}

// HasStorageData returns a boolean if a field has been set.
func (o *BackupJobAdvancedSettingsModel) HasStorageData() bool {
	if o != nil && o.StorageData != nil {
		return true
	}

	return false
}

// SetStorageData gets a reference to the given BackupStorageSettingModel and assigns it to the StorageData field.
func (o *BackupJobAdvancedSettingsModel) SetStorageData(v BackupStorageSettingModel) {
	o.StorageData = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *BackupJobAdvancedSettingsModel) GetNotifications() NotificationSettingsModel {
	if o == nil || o.Notifications == nil {
		var ret NotificationSettingsModel
		return ret
	}
	return *o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobAdvancedSettingsModel) GetNotificationsOk() (*NotificationSettingsModel, bool) {
	if o == nil || o.Notifications == nil {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *BackupJobAdvancedSettingsModel) HasNotifications() bool {
	if o != nil && o.Notifications != nil {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given NotificationSettingsModel and assigns it to the Notifications field.
func (o *BackupJobAdvancedSettingsModel) SetNotifications(v NotificationSettingsModel) {
	o.Notifications = &v
}

// GetVSphere returns the VSphere field value if set, zero value otherwise.
func (o *BackupJobAdvancedSettingsModel) GetVSphere() BackupJobAdvancedSettingsVSphereModel {
	if o == nil || o.VSphere == nil {
		var ret BackupJobAdvancedSettingsVSphereModel
		return ret
	}
	return *o.VSphere
}

// GetVSphereOk returns a tuple with the VSphere field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobAdvancedSettingsModel) GetVSphereOk() (*BackupJobAdvancedSettingsVSphereModel, bool) {
	if o == nil || o.VSphere == nil {
		return nil, false
	}
	return o.VSphere, true
}

// HasVSphere returns a boolean if a field has been set.
func (o *BackupJobAdvancedSettingsModel) HasVSphere() bool {
	if o != nil && o.VSphere != nil {
		return true
	}

	return false
}

// SetVSphere gets a reference to the given BackupJobAdvancedSettingsVSphereModel and assigns it to the VSphere field.
func (o *BackupJobAdvancedSettingsModel) SetVSphere(v BackupJobAdvancedSettingsVSphereModel) {
	o.VSphere = &v
}

// GetStorageIntegration returns the StorageIntegration field value if set, zero value otherwise.
func (o *BackupJobAdvancedSettingsModel) GetStorageIntegration() PrimaryStorageIntegrationSettingsModel {
	if o == nil || o.StorageIntegration == nil {
		var ret PrimaryStorageIntegrationSettingsModel
		return ret
	}
	return *o.StorageIntegration
}

// GetStorageIntegrationOk returns a tuple with the StorageIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobAdvancedSettingsModel) GetStorageIntegrationOk() (*PrimaryStorageIntegrationSettingsModel, bool) {
	if o == nil || o.StorageIntegration == nil {
		return nil, false
	}
	return o.StorageIntegration, true
}

// HasStorageIntegration returns a boolean if a field has been set.
func (o *BackupJobAdvancedSettingsModel) HasStorageIntegration() bool {
	if o != nil && o.StorageIntegration != nil {
		return true
	}

	return false
}

// SetStorageIntegration gets a reference to the given PrimaryStorageIntegrationSettingsModel and assigns it to the StorageIntegration field.
func (o *BackupJobAdvancedSettingsModel) SetStorageIntegration(v PrimaryStorageIntegrationSettingsModel) {
	o.StorageIntegration = &v
}

// GetScripts returns the Scripts field value if set, zero value otherwise.
func (o *BackupJobAdvancedSettingsModel) GetScripts() JobScriptsSettingsModel {
	if o == nil || o.Scripts == nil {
		var ret JobScriptsSettingsModel
		return ret
	}
	return *o.Scripts
}

// GetScriptsOk returns a tuple with the Scripts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobAdvancedSettingsModel) GetScriptsOk() (*JobScriptsSettingsModel, bool) {
	if o == nil || o.Scripts == nil {
		return nil, false
	}
	return o.Scripts, true
}

// HasScripts returns a boolean if a field has been set.
func (o *BackupJobAdvancedSettingsModel) HasScripts() bool {
	if o != nil && o.Scripts != nil {
		return true
	}

	return false
}

// SetScripts gets a reference to the given JobScriptsSettingsModel and assigns it to the Scripts field.
func (o *BackupJobAdvancedSettingsModel) SetScripts(v JobScriptsSettingsModel) {
	o.Scripts = &v
}

func (o BackupJobAdvancedSettingsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["backupModeType"] = o.BackupModeType
	}
	if o.SynthenticFulls != nil {
		toSerialize["synthenticFulls"] = o.SynthenticFulls
	}
	if o.ActiveFulls != nil {
		toSerialize["activeFulls"] = o.ActiveFulls
	}
	if o.BackupHealth != nil {
		toSerialize["backupHealth"] = o.BackupHealth
	}
	if o.FullBackupMaintenance != nil {
		toSerialize["fullBackupMaintenance"] = o.FullBackupMaintenance
	}
	if o.StorageData != nil {
		toSerialize["storageData"] = o.StorageData
	}
	if o.Notifications != nil {
		toSerialize["notifications"] = o.Notifications
	}
	if o.VSphere != nil {
		toSerialize["vSphere"] = o.VSphere
	}
	if o.StorageIntegration != nil {
		toSerialize["storageIntegration"] = o.StorageIntegration
	}
	if o.Scripts != nil {
		toSerialize["scripts"] = o.Scripts
	}
	return json.Marshal(toSerialize)
}

type NullableBackupJobAdvancedSettingsModel struct {
	value *BackupJobAdvancedSettingsModel
	isSet bool
}

func (v NullableBackupJobAdvancedSettingsModel) Get() *BackupJobAdvancedSettingsModel {
	return v.value
}

func (v *NullableBackupJobAdvancedSettingsModel) Set(val *BackupJobAdvancedSettingsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupJobAdvancedSettingsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupJobAdvancedSettingsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupJobAdvancedSettingsModel(val *BackupJobAdvancedSettingsModel) *NullableBackupJobAdvancedSettingsModel {
	return &NullableBackupJobAdvancedSettingsModel{value: val, isSet: true}
}

func (v NullableBackupJobAdvancedSettingsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupJobAdvancedSettingsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


