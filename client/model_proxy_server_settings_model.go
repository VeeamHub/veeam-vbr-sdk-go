/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ProxyServerSettingsModel Server settings for the backup proxy.
type ProxyServerSettingsModel struct {
	// ID of the server.
	HostId string `json:"hostId"`
	TransportMode *EBackupProxyTransportMode `json:"transportMode,omitempty"`
	// (For the Direct storage access and Virtual appliance transport modes) If *true*, Veeam Backup & Replication failovers to the network transport mode in case the primary mode fails or is unavailable.
	FailoverToNetwork *bool `json:"failoverToNetwork,omitempty"`
	// (For the Network mode) If *true*, VM data is transferred over an encrypted TLS connection.
	HostToProxyEncryption *bool `json:"hostToProxyEncryption,omitempty"`
	ConnectedDatastores *ProxyDatastoreSettingsModel `json:"connectedDatastores,omitempty"`
	// Maximum number of concurrent tasks.
	MaxTaskCount *int32 `json:"maxTaskCount,omitempty"`
}

// NewProxyServerSettingsModel instantiates a new ProxyServerSettingsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProxyServerSettingsModel(hostId string) *ProxyServerSettingsModel {
	this := ProxyServerSettingsModel{}
	this.HostId = hostId
	return &this
}

// NewProxyServerSettingsModelWithDefaults instantiates a new ProxyServerSettingsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProxyServerSettingsModelWithDefaults() *ProxyServerSettingsModel {
	this := ProxyServerSettingsModel{}
	return &this
}

// GetHostId returns the HostId field value
func (o *ProxyServerSettingsModel) GetHostId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value
// and a boolean to check if the value has been set.
func (o *ProxyServerSettingsModel) GetHostIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HostId, true
}

// SetHostId sets field value
func (o *ProxyServerSettingsModel) SetHostId(v string) {
	o.HostId = v
}

// GetTransportMode returns the TransportMode field value if set, zero value otherwise.
func (o *ProxyServerSettingsModel) GetTransportMode() EBackupProxyTransportMode {
	if o == nil || isNil(o.TransportMode) {
		var ret EBackupProxyTransportMode
		return ret
	}
	return *o.TransportMode
}

// GetTransportModeOk returns a tuple with the TransportMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxyServerSettingsModel) GetTransportModeOk() (*EBackupProxyTransportMode, bool) {
	if o == nil || isNil(o.TransportMode) {
    return nil, false
	}
	return o.TransportMode, true
}

// HasTransportMode returns a boolean if a field has been set.
func (o *ProxyServerSettingsModel) HasTransportMode() bool {
	if o != nil && !isNil(o.TransportMode) {
		return true
	}

	return false
}

// SetTransportMode gets a reference to the given EBackupProxyTransportMode and assigns it to the TransportMode field.
func (o *ProxyServerSettingsModel) SetTransportMode(v EBackupProxyTransportMode) {
	o.TransportMode = &v
}

// GetFailoverToNetwork returns the FailoverToNetwork field value if set, zero value otherwise.
func (o *ProxyServerSettingsModel) GetFailoverToNetwork() bool {
	if o == nil || isNil(o.FailoverToNetwork) {
		var ret bool
		return ret
	}
	return *o.FailoverToNetwork
}

// GetFailoverToNetworkOk returns a tuple with the FailoverToNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxyServerSettingsModel) GetFailoverToNetworkOk() (*bool, bool) {
	if o == nil || isNil(o.FailoverToNetwork) {
    return nil, false
	}
	return o.FailoverToNetwork, true
}

// HasFailoverToNetwork returns a boolean if a field has been set.
func (o *ProxyServerSettingsModel) HasFailoverToNetwork() bool {
	if o != nil && !isNil(o.FailoverToNetwork) {
		return true
	}

	return false
}

// SetFailoverToNetwork gets a reference to the given bool and assigns it to the FailoverToNetwork field.
func (o *ProxyServerSettingsModel) SetFailoverToNetwork(v bool) {
	o.FailoverToNetwork = &v
}

// GetHostToProxyEncryption returns the HostToProxyEncryption field value if set, zero value otherwise.
func (o *ProxyServerSettingsModel) GetHostToProxyEncryption() bool {
	if o == nil || isNil(o.HostToProxyEncryption) {
		var ret bool
		return ret
	}
	return *o.HostToProxyEncryption
}

// GetHostToProxyEncryptionOk returns a tuple with the HostToProxyEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxyServerSettingsModel) GetHostToProxyEncryptionOk() (*bool, bool) {
	if o == nil || isNil(o.HostToProxyEncryption) {
    return nil, false
	}
	return o.HostToProxyEncryption, true
}

// HasHostToProxyEncryption returns a boolean if a field has been set.
func (o *ProxyServerSettingsModel) HasHostToProxyEncryption() bool {
	if o != nil && !isNil(o.HostToProxyEncryption) {
		return true
	}

	return false
}

// SetHostToProxyEncryption gets a reference to the given bool and assigns it to the HostToProxyEncryption field.
func (o *ProxyServerSettingsModel) SetHostToProxyEncryption(v bool) {
	o.HostToProxyEncryption = &v
}

// GetConnectedDatastores returns the ConnectedDatastores field value if set, zero value otherwise.
func (o *ProxyServerSettingsModel) GetConnectedDatastores() ProxyDatastoreSettingsModel {
	if o == nil || isNil(o.ConnectedDatastores) {
		var ret ProxyDatastoreSettingsModel
		return ret
	}
	return *o.ConnectedDatastores
}

// GetConnectedDatastoresOk returns a tuple with the ConnectedDatastores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxyServerSettingsModel) GetConnectedDatastoresOk() (*ProxyDatastoreSettingsModel, bool) {
	if o == nil || isNil(o.ConnectedDatastores) {
    return nil, false
	}
	return o.ConnectedDatastores, true
}

// HasConnectedDatastores returns a boolean if a field has been set.
func (o *ProxyServerSettingsModel) HasConnectedDatastores() bool {
	if o != nil && !isNil(o.ConnectedDatastores) {
		return true
	}

	return false
}

// SetConnectedDatastores gets a reference to the given ProxyDatastoreSettingsModel and assigns it to the ConnectedDatastores field.
func (o *ProxyServerSettingsModel) SetConnectedDatastores(v ProxyDatastoreSettingsModel) {
	o.ConnectedDatastores = &v
}

// GetMaxTaskCount returns the MaxTaskCount field value if set, zero value otherwise.
func (o *ProxyServerSettingsModel) GetMaxTaskCount() int32 {
	if o == nil || isNil(o.MaxTaskCount) {
		var ret int32
		return ret
	}
	return *o.MaxTaskCount
}

// GetMaxTaskCountOk returns a tuple with the MaxTaskCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxyServerSettingsModel) GetMaxTaskCountOk() (*int32, bool) {
	if o == nil || isNil(o.MaxTaskCount) {
    return nil, false
	}
	return o.MaxTaskCount, true
}

// HasMaxTaskCount returns a boolean if a field has been set.
func (o *ProxyServerSettingsModel) HasMaxTaskCount() bool {
	if o != nil && !isNil(o.MaxTaskCount) {
		return true
	}

	return false
}

// SetMaxTaskCount gets a reference to the given int32 and assigns it to the MaxTaskCount field.
func (o *ProxyServerSettingsModel) SetMaxTaskCount(v int32) {
	o.MaxTaskCount = &v
}

func (o ProxyServerSettingsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hostId"] = o.HostId
	}
	if !isNil(o.TransportMode) {
		toSerialize["transportMode"] = o.TransportMode
	}
	if !isNil(o.FailoverToNetwork) {
		toSerialize["failoverToNetwork"] = o.FailoverToNetwork
	}
	if !isNil(o.HostToProxyEncryption) {
		toSerialize["hostToProxyEncryption"] = o.HostToProxyEncryption
	}
	if !isNil(o.ConnectedDatastores) {
		toSerialize["connectedDatastores"] = o.ConnectedDatastores
	}
	if !isNil(o.MaxTaskCount) {
		toSerialize["maxTaskCount"] = o.MaxTaskCount
	}
	return json.Marshal(toSerialize)
}

type NullableProxyServerSettingsModel struct {
	value *ProxyServerSettingsModel
	isSet bool
}

func (v NullableProxyServerSettingsModel) Get() *ProxyServerSettingsModel {
	return v.value
}

func (v *NullableProxyServerSettingsModel) Set(val *ProxyServerSettingsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableProxyServerSettingsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableProxyServerSettingsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProxyServerSettingsModel(val *ProxyServerSettingsModel) *NullableProxyServerSettingsModel {
	return &NullableProxyServerSettingsModel{value: val, isSet: true}
}

func (v NullableProxyServerSettingsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProxyServerSettingsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


