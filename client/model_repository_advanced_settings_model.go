/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RepositoryAdvancedSettingsModel Advanced settings for the backup repository.
type RepositoryAdvancedSettingsModel struct {
	// If *true*, Veeam Backup & Replication aligns VM data saved to a backup file at a 4 KB block boundary.
	AlignDataBlocks *bool `json:"alignDataBlocks,omitempty"`
	// If *true*, Veeam Backup & Replication decompresses backup data blocks before storing to improve deduplication ratios.
	DecompressBeforeStoring *bool `json:"decompressBeforeStoring,omitempty"`
	// If *true*, the repository drive is rotated.
	RotatedDrives *bool `json:"rotatedDrives,omitempty"`
	// If *true*, Veeam Backup & Replication creates a separate backup file for every VM in the job.
	PerVmBackup *bool `json:"perVmBackup,omitempty"`
	RotatedDriveCleanupMode *ERotatedDriveCleanupMode `json:"RotatedDriveCleanupMode,omitempty"`
}

// NewRepositoryAdvancedSettingsModel instantiates a new RepositoryAdvancedSettingsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryAdvancedSettingsModel() *RepositoryAdvancedSettingsModel {
	this := RepositoryAdvancedSettingsModel{}
	return &this
}

// NewRepositoryAdvancedSettingsModelWithDefaults instantiates a new RepositoryAdvancedSettingsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryAdvancedSettingsModelWithDefaults() *RepositoryAdvancedSettingsModel {
	this := RepositoryAdvancedSettingsModel{}
	return &this
}

// GetAlignDataBlocks returns the AlignDataBlocks field value if set, zero value otherwise.
func (o *RepositoryAdvancedSettingsModel) GetAlignDataBlocks() bool {
	if o == nil || isNil(o.AlignDataBlocks) {
		var ret bool
		return ret
	}
	return *o.AlignDataBlocks
}

// GetAlignDataBlocksOk returns a tuple with the AlignDataBlocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryAdvancedSettingsModel) GetAlignDataBlocksOk() (*bool, bool) {
	if o == nil || isNil(o.AlignDataBlocks) {
    return nil, false
	}
	return o.AlignDataBlocks, true
}

// HasAlignDataBlocks returns a boolean if a field has been set.
func (o *RepositoryAdvancedSettingsModel) HasAlignDataBlocks() bool {
	if o != nil && !isNil(o.AlignDataBlocks) {
		return true
	}

	return false
}

// SetAlignDataBlocks gets a reference to the given bool and assigns it to the AlignDataBlocks field.
func (o *RepositoryAdvancedSettingsModel) SetAlignDataBlocks(v bool) {
	o.AlignDataBlocks = &v
}

// GetDecompressBeforeStoring returns the DecompressBeforeStoring field value if set, zero value otherwise.
func (o *RepositoryAdvancedSettingsModel) GetDecompressBeforeStoring() bool {
	if o == nil || isNil(o.DecompressBeforeStoring) {
		var ret bool
		return ret
	}
	return *o.DecompressBeforeStoring
}

// GetDecompressBeforeStoringOk returns a tuple with the DecompressBeforeStoring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryAdvancedSettingsModel) GetDecompressBeforeStoringOk() (*bool, bool) {
	if o == nil || isNil(o.DecompressBeforeStoring) {
    return nil, false
	}
	return o.DecompressBeforeStoring, true
}

// HasDecompressBeforeStoring returns a boolean if a field has been set.
func (o *RepositoryAdvancedSettingsModel) HasDecompressBeforeStoring() bool {
	if o != nil && !isNil(o.DecompressBeforeStoring) {
		return true
	}

	return false
}

// SetDecompressBeforeStoring gets a reference to the given bool and assigns it to the DecompressBeforeStoring field.
func (o *RepositoryAdvancedSettingsModel) SetDecompressBeforeStoring(v bool) {
	o.DecompressBeforeStoring = &v
}

// GetRotatedDrives returns the RotatedDrives field value if set, zero value otherwise.
func (o *RepositoryAdvancedSettingsModel) GetRotatedDrives() bool {
	if o == nil || isNil(o.RotatedDrives) {
		var ret bool
		return ret
	}
	return *o.RotatedDrives
}

// GetRotatedDrivesOk returns a tuple with the RotatedDrives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryAdvancedSettingsModel) GetRotatedDrivesOk() (*bool, bool) {
	if o == nil || isNil(o.RotatedDrives) {
    return nil, false
	}
	return o.RotatedDrives, true
}

// HasRotatedDrives returns a boolean if a field has been set.
func (o *RepositoryAdvancedSettingsModel) HasRotatedDrives() bool {
	if o != nil && !isNil(o.RotatedDrives) {
		return true
	}

	return false
}

// SetRotatedDrives gets a reference to the given bool and assigns it to the RotatedDrives field.
func (o *RepositoryAdvancedSettingsModel) SetRotatedDrives(v bool) {
	o.RotatedDrives = &v
}

// GetPerVmBackup returns the PerVmBackup field value if set, zero value otherwise.
func (o *RepositoryAdvancedSettingsModel) GetPerVmBackup() bool {
	if o == nil || isNil(o.PerVmBackup) {
		var ret bool
		return ret
	}
	return *o.PerVmBackup
}

// GetPerVmBackupOk returns a tuple with the PerVmBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryAdvancedSettingsModel) GetPerVmBackupOk() (*bool, bool) {
	if o == nil || isNil(o.PerVmBackup) {
    return nil, false
	}
	return o.PerVmBackup, true
}

// HasPerVmBackup returns a boolean if a field has been set.
func (o *RepositoryAdvancedSettingsModel) HasPerVmBackup() bool {
	if o != nil && !isNil(o.PerVmBackup) {
		return true
	}

	return false
}

// SetPerVmBackup gets a reference to the given bool and assigns it to the PerVmBackup field.
func (o *RepositoryAdvancedSettingsModel) SetPerVmBackup(v bool) {
	o.PerVmBackup = &v
}

// GetRotatedDriveCleanupMode returns the RotatedDriveCleanupMode field value if set, zero value otherwise.
func (o *RepositoryAdvancedSettingsModel) GetRotatedDriveCleanupMode() ERotatedDriveCleanupMode {
	if o == nil || isNil(o.RotatedDriveCleanupMode) {
		var ret ERotatedDriveCleanupMode
		return ret
	}
	return *o.RotatedDriveCleanupMode
}

// GetRotatedDriveCleanupModeOk returns a tuple with the RotatedDriveCleanupMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryAdvancedSettingsModel) GetRotatedDriveCleanupModeOk() (*ERotatedDriveCleanupMode, bool) {
	if o == nil || isNil(o.RotatedDriveCleanupMode) {
    return nil, false
	}
	return o.RotatedDriveCleanupMode, true
}

// HasRotatedDriveCleanupMode returns a boolean if a field has been set.
func (o *RepositoryAdvancedSettingsModel) HasRotatedDriveCleanupMode() bool {
	if o != nil && !isNil(o.RotatedDriveCleanupMode) {
		return true
	}

	return false
}

// SetRotatedDriveCleanupMode gets a reference to the given ERotatedDriveCleanupMode and assigns it to the RotatedDriveCleanupMode field.
func (o *RepositoryAdvancedSettingsModel) SetRotatedDriveCleanupMode(v ERotatedDriveCleanupMode) {
	o.RotatedDriveCleanupMode = &v
}

func (o RepositoryAdvancedSettingsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AlignDataBlocks) {
		toSerialize["alignDataBlocks"] = o.AlignDataBlocks
	}
	if !isNil(o.DecompressBeforeStoring) {
		toSerialize["decompressBeforeStoring"] = o.DecompressBeforeStoring
	}
	if !isNil(o.RotatedDrives) {
		toSerialize["rotatedDrives"] = o.RotatedDrives
	}
	if !isNil(o.PerVmBackup) {
		toSerialize["perVmBackup"] = o.PerVmBackup
	}
	if !isNil(o.RotatedDriveCleanupMode) {
		toSerialize["RotatedDriveCleanupMode"] = o.RotatedDriveCleanupMode
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryAdvancedSettingsModel struct {
	value *RepositoryAdvancedSettingsModel
	isSet bool
}

func (v NullableRepositoryAdvancedSettingsModel) Get() *RepositoryAdvancedSettingsModel {
	return v.value
}

func (v *NullableRepositoryAdvancedSettingsModel) Set(val *RepositoryAdvancedSettingsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryAdvancedSettingsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryAdvancedSettingsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryAdvancedSettingsModel(val *RepositoryAdvancedSettingsModel) *NullableRepositoryAdvancedSettingsModel {
	return &NullableRepositoryAdvancedSettingsModel{value: val, isSet: true}
}

func (v NullableRepositoryAdvancedSettingsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryAdvancedSettingsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


