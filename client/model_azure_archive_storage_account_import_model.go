/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AzureArchiveStorageAccountImportModel Account used to access the Azure Archive storage.
type AzureArchiveStorageAccountImportModel struct {
	Credentials CloudCredentialsImportModel `json:"credentials"`
	RegionType EAzureRegionType `json:"regionType"`
	ConnectionSettings *ObjectStorageConnectionImportSpec `json:"connectionSettings,omitempty"`
}

// NewAzureArchiveStorageAccountImportModel instantiates a new AzureArchiveStorageAccountImportModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureArchiveStorageAccountImportModel(credentials CloudCredentialsImportModel, regionType EAzureRegionType) *AzureArchiveStorageAccountImportModel {
	this := AzureArchiveStorageAccountImportModel{}
	this.Credentials = credentials
	this.RegionType = regionType
	return &this
}

// NewAzureArchiveStorageAccountImportModelWithDefaults instantiates a new AzureArchiveStorageAccountImportModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureArchiveStorageAccountImportModelWithDefaults() *AzureArchiveStorageAccountImportModel {
	this := AzureArchiveStorageAccountImportModel{}
	return &this
}

// GetCredentials returns the Credentials field value
func (o *AzureArchiveStorageAccountImportModel) GetCredentials() CloudCredentialsImportModel {
	if o == nil {
		var ret CloudCredentialsImportModel
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *AzureArchiveStorageAccountImportModel) GetCredentialsOk() (*CloudCredentialsImportModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Credentials, true
}

// SetCredentials sets field value
func (o *AzureArchiveStorageAccountImportModel) SetCredentials(v CloudCredentialsImportModel) {
	o.Credentials = v
}

// GetRegionType returns the RegionType field value
func (o *AzureArchiveStorageAccountImportModel) GetRegionType() EAzureRegionType {
	if o == nil {
		var ret EAzureRegionType
		return ret
	}

	return o.RegionType
}

// GetRegionTypeOk returns a tuple with the RegionType field value
// and a boolean to check if the value has been set.
func (o *AzureArchiveStorageAccountImportModel) GetRegionTypeOk() (*EAzureRegionType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RegionType, true
}

// SetRegionType sets field value
func (o *AzureArchiveStorageAccountImportModel) SetRegionType(v EAzureRegionType) {
	o.RegionType = v
}

// GetConnectionSettings returns the ConnectionSettings field value if set, zero value otherwise.
func (o *AzureArchiveStorageAccountImportModel) GetConnectionSettings() ObjectStorageConnectionImportSpec {
	if o == nil || isNil(o.ConnectionSettings) {
		var ret ObjectStorageConnectionImportSpec
		return ret
	}
	return *o.ConnectionSettings
}

// GetConnectionSettingsOk returns a tuple with the ConnectionSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureArchiveStorageAccountImportModel) GetConnectionSettingsOk() (*ObjectStorageConnectionImportSpec, bool) {
	if o == nil || isNil(o.ConnectionSettings) {
    return nil, false
	}
	return o.ConnectionSettings, true
}

// HasConnectionSettings returns a boolean if a field has been set.
func (o *AzureArchiveStorageAccountImportModel) HasConnectionSettings() bool {
	if o != nil && !isNil(o.ConnectionSettings) {
		return true
	}

	return false
}

// SetConnectionSettings gets a reference to the given ObjectStorageConnectionImportSpec and assigns it to the ConnectionSettings field.
func (o *AzureArchiveStorageAccountImportModel) SetConnectionSettings(v ObjectStorageConnectionImportSpec) {
	o.ConnectionSettings = &v
}

func (o AzureArchiveStorageAccountImportModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["credentials"] = o.Credentials
	}
	if true {
		toSerialize["regionType"] = o.RegionType
	}
	if !isNil(o.ConnectionSettings) {
		toSerialize["connectionSettings"] = o.ConnectionSettings
	}
	return json.Marshal(toSerialize)
}

type NullableAzureArchiveStorageAccountImportModel struct {
	value *AzureArchiveStorageAccountImportModel
	isSet bool
}

func (v NullableAzureArchiveStorageAccountImportModel) Get() *AzureArchiveStorageAccountImportModel {
	return v.value
}

func (v *NullableAzureArchiveStorageAccountImportModel) Set(val *AzureArchiveStorageAccountImportModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureArchiveStorageAccountImportModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureArchiveStorageAccountImportModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureArchiveStorageAccountImportModel(val *AzureArchiveStorageAccountImportModel) *NullableAzureArchiveStorageAccountImportModel {
	return &NullableAzureArchiveStorageAccountImportModel{value: val, isSet: true}
}

func (v NullableAzureArchiveStorageAccountImportModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureArchiveStorageAccountImportModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


