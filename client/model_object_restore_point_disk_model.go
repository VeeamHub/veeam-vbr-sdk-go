/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev1
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ObjectRestorePointDiskModel struct for ObjectRestorePointDiskModel
type ObjectRestorePointDiskModel struct {
	// ID of the disk.
	Uid string `json:"uid"`
	Type EDiskInfoType `json:"type"`
	// Name of the disk.
	Name string `json:"name"`
	// Capacity of the disk.
	Capacity int64 `json:"capacity"`
	State EDiskInfoProcessState `json:"state"`
}

// NewObjectRestorePointDiskModel instantiates a new ObjectRestorePointDiskModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectRestorePointDiskModel(uid string, type_ EDiskInfoType, name string, capacity int64, state EDiskInfoProcessState) *ObjectRestorePointDiskModel {
	this := ObjectRestorePointDiskModel{}
	this.Uid = uid
	this.Type = type_
	this.Name = name
	this.Capacity = capacity
	this.State = state
	return &this
}

// NewObjectRestorePointDiskModelWithDefaults instantiates a new ObjectRestorePointDiskModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectRestorePointDiskModelWithDefaults() *ObjectRestorePointDiskModel {
	this := ObjectRestorePointDiskModel{}
	return &this
}

// GetUid returns the Uid field value
func (o *ObjectRestorePointDiskModel) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *ObjectRestorePointDiskModel) GetUidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *ObjectRestorePointDiskModel) SetUid(v string) {
	o.Uid = v
}

// GetType returns the Type field value
func (o *ObjectRestorePointDiskModel) GetType() EDiskInfoType {
	if o == nil {
		var ret EDiskInfoType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ObjectRestorePointDiskModel) GetTypeOk() (*EDiskInfoType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ObjectRestorePointDiskModel) SetType(v EDiskInfoType) {
	o.Type = v
}

// GetName returns the Name field value
func (o *ObjectRestorePointDiskModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ObjectRestorePointDiskModel) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ObjectRestorePointDiskModel) SetName(v string) {
	o.Name = v
}

// GetCapacity returns the Capacity field value
func (o *ObjectRestorePointDiskModel) GetCapacity() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Capacity
}

// GetCapacityOk returns a tuple with the Capacity field value
// and a boolean to check if the value has been set.
func (o *ObjectRestorePointDiskModel) GetCapacityOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Capacity, true
}

// SetCapacity sets field value
func (o *ObjectRestorePointDiskModel) SetCapacity(v int64) {
	o.Capacity = v
}

// GetState returns the State field value
func (o *ObjectRestorePointDiskModel) GetState() EDiskInfoProcessState {
	if o == nil {
		var ret EDiskInfoProcessState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ObjectRestorePointDiskModel) GetStateOk() (*EDiskInfoProcessState, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ObjectRestorePointDiskModel) SetState(v EDiskInfoProcessState) {
	o.State = v
}

func (o ObjectRestorePointDiskModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uid"] = o.Uid
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["capacity"] = o.Capacity
	}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableObjectRestorePointDiskModel struct {
	value *ObjectRestorePointDiskModel
	isSet bool
}

func (v NullableObjectRestorePointDiskModel) Get() *ObjectRestorePointDiskModel {
	return v.value
}

func (v *NullableObjectRestorePointDiskModel) Set(val *ObjectRestorePointDiskModel) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectRestorePointDiskModel) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectRestorePointDiskModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectRestorePointDiskModel(val *ObjectRestorePointDiskModel) *NullableObjectRestorePointDiskModel {
	return &NullableObjectRestorePointDiskModel{value: val, isSet: true}
}

func (v NullableObjectRestorePointDiskModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectRestorePointDiskModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


