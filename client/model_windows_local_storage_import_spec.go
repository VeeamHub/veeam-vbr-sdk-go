/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// WindowsLocalStorageImportSpec struct for WindowsLocalStorageImportSpec
type WindowsLocalStorageImportSpec struct {
	// Name of the backup repository.
	Name string `json:"name"`
	// Description of the backup repository.
	Description string `json:"description"`
	// Tag that identifies the backup repository.
	Tag string `json:"tag"`
	// ID of the server that is used as a backup repository.
	HostName string `json:"hostName"`
	Type ERepositoryType `json:"type"`
	Repository WindowsLocalRepositorySettingsModel `json:"repository"`
	MountServer MountServerSettingsImportSpec `json:"mountServer"`
}

// NewWindowsLocalStorageImportSpec instantiates a new WindowsLocalStorageImportSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWindowsLocalStorageImportSpec(name string, description string, tag string, hostName string, type_ ERepositoryType, repository WindowsLocalRepositorySettingsModel, mountServer MountServerSettingsImportSpec) *WindowsLocalStorageImportSpec {
	this := WindowsLocalStorageImportSpec{}
	this.Name = name
	this.Description = description
	this.Tag = tag
	this.HostName = hostName
	this.Type = type_
	this.Repository = repository
	this.MountServer = mountServer
	return &this
}

// NewWindowsLocalStorageImportSpecWithDefaults instantiates a new WindowsLocalStorageImportSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWindowsLocalStorageImportSpecWithDefaults() *WindowsLocalStorageImportSpec {
	this := WindowsLocalStorageImportSpec{}
	return &this
}

// GetName returns the Name field value
func (o *WindowsLocalStorageImportSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WindowsLocalStorageImportSpec) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WindowsLocalStorageImportSpec) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *WindowsLocalStorageImportSpec) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *WindowsLocalStorageImportSpec) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *WindowsLocalStorageImportSpec) SetDescription(v string) {
	o.Description = v
}

// GetTag returns the Tag field value
func (o *WindowsLocalStorageImportSpec) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *WindowsLocalStorageImportSpec) GetTagOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *WindowsLocalStorageImportSpec) SetTag(v string) {
	o.Tag = v
}

// GetHostName returns the HostName field value
func (o *WindowsLocalStorageImportSpec) GetHostName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value
// and a boolean to check if the value has been set.
func (o *WindowsLocalStorageImportSpec) GetHostNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HostName, true
}

// SetHostName sets field value
func (o *WindowsLocalStorageImportSpec) SetHostName(v string) {
	o.HostName = v
}

// GetType returns the Type field value
func (o *WindowsLocalStorageImportSpec) GetType() ERepositoryType {
	if o == nil {
		var ret ERepositoryType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WindowsLocalStorageImportSpec) GetTypeOk() (*ERepositoryType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WindowsLocalStorageImportSpec) SetType(v ERepositoryType) {
	o.Type = v
}

// GetRepository returns the Repository field value
func (o *WindowsLocalStorageImportSpec) GetRepository() WindowsLocalRepositorySettingsModel {
	if o == nil {
		var ret WindowsLocalRepositorySettingsModel
		return ret
	}

	return o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value
// and a boolean to check if the value has been set.
func (o *WindowsLocalStorageImportSpec) GetRepositoryOk() (*WindowsLocalRepositorySettingsModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Repository, true
}

// SetRepository sets field value
func (o *WindowsLocalStorageImportSpec) SetRepository(v WindowsLocalRepositorySettingsModel) {
	o.Repository = v
}

// GetMountServer returns the MountServer field value
func (o *WindowsLocalStorageImportSpec) GetMountServer() MountServerSettingsImportSpec {
	if o == nil {
		var ret MountServerSettingsImportSpec
		return ret
	}

	return o.MountServer
}

// GetMountServerOk returns a tuple with the MountServer field value
// and a boolean to check if the value has been set.
func (o *WindowsLocalStorageImportSpec) GetMountServerOk() (*MountServerSettingsImportSpec, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MountServer, true
}

// SetMountServer sets field value
func (o *WindowsLocalStorageImportSpec) SetMountServer(v MountServerSettingsImportSpec) {
	o.MountServer = v
}

func (o WindowsLocalStorageImportSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["tag"] = o.Tag
	}
	if true {
		toSerialize["hostName"] = o.HostName
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["repository"] = o.Repository
	}
	if true {
		toSerialize["mountServer"] = o.MountServer
	}
	return json.Marshal(toSerialize)
}

type NullableWindowsLocalStorageImportSpec struct {
	value *WindowsLocalStorageImportSpec
	isSet bool
}

func (v NullableWindowsLocalStorageImportSpec) Get() *WindowsLocalStorageImportSpec {
	return v.value
}

func (v *NullableWindowsLocalStorageImportSpec) Set(val *WindowsLocalStorageImportSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableWindowsLocalStorageImportSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableWindowsLocalStorageImportSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWindowsLocalStorageImportSpec(val *WindowsLocalStorageImportSpec) *NullableWindowsLocalStorageImportSpec {
	return &NullableWindowsLocalStorageImportSpec{value: val, isSet: true}
}

func (v NullableWindowsLocalStorageImportSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWindowsLocalStorageImportSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


