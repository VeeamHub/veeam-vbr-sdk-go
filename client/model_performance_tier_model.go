/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev2
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PerformanceTierModel Performance tier.
type PerformanceTierModel struct {
	// Array of performance extents.
	PerformanceExtents *[]PerformanceExtentModel `json:"performanceExtents,omitempty"`
	AdvancedSettings *PerformanceTierAdvancedSettingsModel `json:"advancedSettings,omitempty"`
}

// NewPerformanceTierModel instantiates a new PerformanceTierModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerformanceTierModel() *PerformanceTierModel {
	this := PerformanceTierModel{}
	return &this
}

// NewPerformanceTierModelWithDefaults instantiates a new PerformanceTierModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerformanceTierModelWithDefaults() *PerformanceTierModel {
	this := PerformanceTierModel{}
	return &this
}

// GetPerformanceExtents returns the PerformanceExtents field value if set, zero value otherwise.
func (o *PerformanceTierModel) GetPerformanceExtents() []PerformanceExtentModel {
	if o == nil || o.PerformanceExtents == nil {
		var ret []PerformanceExtentModel
		return ret
	}
	return *o.PerformanceExtents
}

// GetPerformanceExtentsOk returns a tuple with the PerformanceExtents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceTierModel) GetPerformanceExtentsOk() (*[]PerformanceExtentModel, bool) {
	if o == nil || o.PerformanceExtents == nil {
		return nil, false
	}
	return o.PerformanceExtents, true
}

// HasPerformanceExtents returns a boolean if a field has been set.
func (o *PerformanceTierModel) HasPerformanceExtents() bool {
	if o != nil && o.PerformanceExtents != nil {
		return true
	}

	return false
}

// SetPerformanceExtents gets a reference to the given []PerformanceExtentModel and assigns it to the PerformanceExtents field.
func (o *PerformanceTierModel) SetPerformanceExtents(v []PerformanceExtentModel) {
	o.PerformanceExtents = &v
}

// GetAdvancedSettings returns the AdvancedSettings field value if set, zero value otherwise.
func (o *PerformanceTierModel) GetAdvancedSettings() PerformanceTierAdvancedSettingsModel {
	if o == nil || o.AdvancedSettings == nil {
		var ret PerformanceTierAdvancedSettingsModel
		return ret
	}
	return *o.AdvancedSettings
}

// GetAdvancedSettingsOk returns a tuple with the AdvancedSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceTierModel) GetAdvancedSettingsOk() (*PerformanceTierAdvancedSettingsModel, bool) {
	if o == nil || o.AdvancedSettings == nil {
		return nil, false
	}
	return o.AdvancedSettings, true
}

// HasAdvancedSettings returns a boolean if a field has been set.
func (o *PerformanceTierModel) HasAdvancedSettings() bool {
	if o != nil && o.AdvancedSettings != nil {
		return true
	}

	return false
}

// SetAdvancedSettings gets a reference to the given PerformanceTierAdvancedSettingsModel and assigns it to the AdvancedSettings field.
func (o *PerformanceTierModel) SetAdvancedSettings(v PerformanceTierAdvancedSettingsModel) {
	o.AdvancedSettings = &v
}

func (o PerformanceTierModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PerformanceExtents != nil {
		toSerialize["performanceExtents"] = o.PerformanceExtents
	}
	if o.AdvancedSettings != nil {
		toSerialize["advancedSettings"] = o.AdvancedSettings
	}
	return json.Marshal(toSerialize)
}

type NullablePerformanceTierModel struct {
	value *PerformanceTierModel
	isSet bool
}

func (v NullablePerformanceTierModel) Get() *PerformanceTierModel {
	return v.value
}

func (v *NullablePerformanceTierModel) Set(val *PerformanceTierModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePerformanceTierModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePerformanceTierModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerformanceTierModel(val *PerformanceTierModel) *NullablePerformanceTierModel {
	return &NullablePerformanceTierModel{value: val, isSet: true}
}

func (v NullablePerformanceTierModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerformanceTierModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


