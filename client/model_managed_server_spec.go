/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ManagedServerSpec struct for ManagedServerSpec
type ManagedServerSpec struct {
	// Full DNS name or IP address of the server.
	Name string `json:"name"`
	// Description of the server.
	Description string `json:"description"`
	Type EManagedServerType `json:"type"`
	// ID of the credentials used to connect to the server.
	CredentialsId string `json:"credentialsId"`
}

// NewManagedServerSpec instantiates a new ManagedServerSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedServerSpec(name string, description string, type_ EManagedServerType, credentialsId string) *ManagedServerSpec {
	this := ManagedServerSpec{}
	this.Name = name
	this.Description = description
	this.Type = type_
	this.CredentialsId = credentialsId
	return &this
}

// NewManagedServerSpecWithDefaults instantiates a new ManagedServerSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedServerSpecWithDefaults() *ManagedServerSpec {
	this := ManagedServerSpec{}
	return &this
}

// GetName returns the Name field value
func (o *ManagedServerSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ManagedServerSpec) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ManagedServerSpec) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *ManagedServerSpec) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ManagedServerSpec) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ManagedServerSpec) SetDescription(v string) {
	o.Description = v
}

// GetType returns the Type field value
func (o *ManagedServerSpec) GetType() EManagedServerType {
	if o == nil {
		var ret EManagedServerType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ManagedServerSpec) GetTypeOk() (*EManagedServerType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ManagedServerSpec) SetType(v EManagedServerType) {
	o.Type = v
}

// GetCredentialsId returns the CredentialsId field value
func (o *ManagedServerSpec) GetCredentialsId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CredentialsId
}

// GetCredentialsIdOk returns a tuple with the CredentialsId field value
// and a boolean to check if the value has been set.
func (o *ManagedServerSpec) GetCredentialsIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CredentialsId, true
}

// SetCredentialsId sets field value
func (o *ManagedServerSpec) SetCredentialsId(v string) {
	o.CredentialsId = v
}

func (o ManagedServerSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["credentialsId"] = o.CredentialsId
	}
	return json.Marshal(toSerialize)
}

type NullableManagedServerSpec struct {
	value *ManagedServerSpec
	isSet bool
}

func (v NullableManagedServerSpec) Get() *ManagedServerSpec {
	return v.value
}

func (v *NullableManagedServerSpec) Set(val *ManagedServerSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedServerSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedServerSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedServerSpec(val *ManagedServerSpec) *NullableManagedServerSpec {
	return &NullableManagedServerSpec{value: val, isSet: true}
}

func (v NullableManagedServerSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedServerSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


