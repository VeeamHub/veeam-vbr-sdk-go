/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev2
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ScheduleDailyModel Daily scheduling options.
type ScheduleDailyModel struct {
	// If *true*, daily schedule is enabled.
	IsEnabled bool `json:"isEnabled"`
	// Local time when the job must start.
	LocalTime *string `json:"localTime,omitempty"`
	DailyKind *EDailyKinds `json:"dailyKind,omitempty"`
	// Days of the week when the job must start.
	Days *[]EDayOfWeek `json:"days,omitempty"`
}

// NewScheduleDailyModel instantiates a new ScheduleDailyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleDailyModel(isEnabled bool, ) *ScheduleDailyModel {
	this := ScheduleDailyModel{}
	this.IsEnabled = isEnabled
	return &this
}

// NewScheduleDailyModelWithDefaults instantiates a new ScheduleDailyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleDailyModelWithDefaults() *ScheduleDailyModel {
	this := ScheduleDailyModel{}
	var isEnabled bool = true
	this.IsEnabled = isEnabled
	return &this
}

// GetIsEnabled returns the IsEnabled field value
func (o *ScheduleDailyModel) GetIsEnabled() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *ScheduleDailyModel) GetIsEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *ScheduleDailyModel) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetLocalTime returns the LocalTime field value if set, zero value otherwise.
func (o *ScheduleDailyModel) GetLocalTime() string {
	if o == nil || o.LocalTime == nil {
		var ret string
		return ret
	}
	return *o.LocalTime
}

// GetLocalTimeOk returns a tuple with the LocalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleDailyModel) GetLocalTimeOk() (*string, bool) {
	if o == nil || o.LocalTime == nil {
		return nil, false
	}
	return o.LocalTime, true
}

// HasLocalTime returns a boolean if a field has been set.
func (o *ScheduleDailyModel) HasLocalTime() bool {
	if o != nil && o.LocalTime != nil {
		return true
	}

	return false
}

// SetLocalTime gets a reference to the given string and assigns it to the LocalTime field.
func (o *ScheduleDailyModel) SetLocalTime(v string) {
	o.LocalTime = &v
}

// GetDailyKind returns the DailyKind field value if set, zero value otherwise.
func (o *ScheduleDailyModel) GetDailyKind() EDailyKinds {
	if o == nil || o.DailyKind == nil {
		var ret EDailyKinds
		return ret
	}
	return *o.DailyKind
}

// GetDailyKindOk returns a tuple with the DailyKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleDailyModel) GetDailyKindOk() (*EDailyKinds, bool) {
	if o == nil || o.DailyKind == nil {
		return nil, false
	}
	return o.DailyKind, true
}

// HasDailyKind returns a boolean if a field has been set.
func (o *ScheduleDailyModel) HasDailyKind() bool {
	if o != nil && o.DailyKind != nil {
		return true
	}

	return false
}

// SetDailyKind gets a reference to the given EDailyKinds and assigns it to the DailyKind field.
func (o *ScheduleDailyModel) SetDailyKind(v EDailyKinds) {
	o.DailyKind = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *ScheduleDailyModel) GetDays() []EDayOfWeek {
	if o == nil || o.Days == nil {
		var ret []EDayOfWeek
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleDailyModel) GetDaysOk() (*[]EDayOfWeek, bool) {
	if o == nil || o.Days == nil {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *ScheduleDailyModel) HasDays() bool {
	if o != nil && o.Days != nil {
		return true
	}

	return false
}

// SetDays gets a reference to the given []EDayOfWeek and assigns it to the Days field.
func (o *ScheduleDailyModel) SetDays(v []EDayOfWeek) {
	o.Days = &v
}

func (o ScheduleDailyModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if o.LocalTime != nil {
		toSerialize["localTime"] = o.LocalTime
	}
	if o.DailyKind != nil {
		toSerialize["dailyKind"] = o.DailyKind
	}
	if o.Days != nil {
		toSerialize["days"] = o.Days
	}
	return json.Marshal(toSerialize)
}

type NullableScheduleDailyModel struct {
	value *ScheduleDailyModel
	isSet bool
}

func (v NullableScheduleDailyModel) Get() *ScheduleDailyModel {
	return v.value
}

func (v *NullableScheduleDailyModel) Set(val *ScheduleDailyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleDailyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleDailyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleDailyModel(val *ScheduleDailyModel) *NullableScheduleDailyModel {
	return &NullableScheduleDailyModel{value: val, isSet: true}
}

func (v NullableScheduleDailyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleDailyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


