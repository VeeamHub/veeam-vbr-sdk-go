/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// ComputerRecoveryTokenModel struct for ComputerRecoveryTokenModel
type ComputerRecoveryTokenModel struct {
	// ID of the recovery token.
	Id string `json:"id"`
	// Friendly name of the recovery token.
	Name string `json:"name"`
	// Recovery token.
	RecoveryToken *string `json:"recoveryToken,omitempty"`
	// Date and time when the recovery token expires.
	ExpirationDate time.Time `json:"expirationDate"`
}

// NewComputerRecoveryTokenModel instantiates a new ComputerRecoveryTokenModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputerRecoveryTokenModel(id string, name string, expirationDate time.Time) *ComputerRecoveryTokenModel {
	this := ComputerRecoveryTokenModel{}
	this.Id = id
	this.Name = name
	this.ExpirationDate = expirationDate
	return &this
}

// NewComputerRecoveryTokenModelWithDefaults instantiates a new ComputerRecoveryTokenModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputerRecoveryTokenModelWithDefaults() *ComputerRecoveryTokenModel {
	this := ComputerRecoveryTokenModel{}
	return &this
}

// GetId returns the Id field value
func (o *ComputerRecoveryTokenModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ComputerRecoveryTokenModel) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ComputerRecoveryTokenModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ComputerRecoveryTokenModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ComputerRecoveryTokenModel) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ComputerRecoveryTokenModel) SetName(v string) {
	o.Name = v
}

// GetRecoveryToken returns the RecoveryToken field value if set, zero value otherwise.
func (o *ComputerRecoveryTokenModel) GetRecoveryToken() string {
	if o == nil || isNil(o.RecoveryToken) {
		var ret string
		return ret
	}
	return *o.RecoveryToken
}

// GetRecoveryTokenOk returns a tuple with the RecoveryToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerRecoveryTokenModel) GetRecoveryTokenOk() (*string, bool) {
	if o == nil || isNil(o.RecoveryToken) {
    return nil, false
	}
	return o.RecoveryToken, true
}

// HasRecoveryToken returns a boolean if a field has been set.
func (o *ComputerRecoveryTokenModel) HasRecoveryToken() bool {
	if o != nil && !isNil(o.RecoveryToken) {
		return true
	}

	return false
}

// SetRecoveryToken gets a reference to the given string and assigns it to the RecoveryToken field.
func (o *ComputerRecoveryTokenModel) SetRecoveryToken(v string) {
	o.RecoveryToken = &v
}

// GetExpirationDate returns the ExpirationDate field value
func (o *ComputerRecoveryTokenModel) GetExpirationDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value
// and a boolean to check if the value has been set.
func (o *ComputerRecoveryTokenModel) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ExpirationDate, true
}

// SetExpirationDate sets field value
func (o *ComputerRecoveryTokenModel) SetExpirationDate(v time.Time) {
	o.ExpirationDate = v
}

func (o ComputerRecoveryTokenModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.RecoveryToken) {
		toSerialize["recoveryToken"] = o.RecoveryToken
	}
	if true {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	return json.Marshal(toSerialize)
}

type NullableComputerRecoveryTokenModel struct {
	value *ComputerRecoveryTokenModel
	isSet bool
}

func (v NullableComputerRecoveryTokenModel) Get() *ComputerRecoveryTokenModel {
	return v.value
}

func (v *NullableComputerRecoveryTokenModel) Set(val *ComputerRecoveryTokenModel) {
	v.value = val
	v.isSet = true
}

func (v NullableComputerRecoveryTokenModel) IsSet() bool {
	return v.isSet
}

func (v *NullableComputerRecoveryTokenModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputerRecoveryTokenModel(val *ComputerRecoveryTokenModel) *NullableComputerRecoveryTokenModel {
	return &NullableComputerRecoveryTokenModel{value: val, isSet: true}
}

func (v NullableComputerRecoveryTokenModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputerRecoveryTokenModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


