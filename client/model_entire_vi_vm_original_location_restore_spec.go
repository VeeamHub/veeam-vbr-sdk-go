/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// EntireViVMOriginalLocationRestoreSpec Restore to the original location with initial settings.
type EntireViVMOriginalLocationRestoreSpec struct {
	EntireViVMRestoreSpec
	// If *true*, Veeam Backup & Replication performs incremental restore.
	QuickRollback *bool `json:"quickRollback,omitempty"`
}

// NewEntireViVMOriginalLocationRestoreSpec instantiates a new EntireViVMOriginalLocationRestoreSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntireViVMOriginalLocationRestoreSpec(objectRestorePointId string, type_ EEntireVMRestoreModeType) *EntireViVMOriginalLocationRestoreSpec {
	this := EntireViVMOriginalLocationRestoreSpec{}
	this.ObjectRestorePointId = objectRestorePointId
	this.Type = type_
	return &this
}

// NewEntireViVMOriginalLocationRestoreSpecWithDefaults instantiates a new EntireViVMOriginalLocationRestoreSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntireViVMOriginalLocationRestoreSpecWithDefaults() *EntireViVMOriginalLocationRestoreSpec {
	this := EntireViVMOriginalLocationRestoreSpec{}
	return &this
}

// GetQuickRollback returns the QuickRollback field value if set, zero value otherwise.
func (o *EntireViVMOriginalLocationRestoreSpec) GetQuickRollback() bool {
	if o == nil || isNil(o.QuickRollback) {
		var ret bool
		return ret
	}
	return *o.QuickRollback
}

// GetQuickRollbackOk returns a tuple with the QuickRollback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntireViVMOriginalLocationRestoreSpec) GetQuickRollbackOk() (*bool, bool) {
	if o == nil || isNil(o.QuickRollback) {
    return nil, false
	}
	return o.QuickRollback, true
}

// HasQuickRollback returns a boolean if a field has been set.
func (o *EntireViVMOriginalLocationRestoreSpec) HasQuickRollback() bool {
	if o != nil && !isNil(o.QuickRollback) {
		return true
	}

	return false
}

// SetQuickRollback gets a reference to the given bool and assigns it to the QuickRollback field.
func (o *EntireViVMOriginalLocationRestoreSpec) SetQuickRollback(v bool) {
	o.QuickRollback = &v
}

func (o EntireViVMOriginalLocationRestoreSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedEntireViVMRestoreSpec, errEntireViVMRestoreSpec := json.Marshal(o.EntireViVMRestoreSpec)
	if errEntireViVMRestoreSpec != nil {
		return []byte{}, errEntireViVMRestoreSpec
	}
	errEntireViVMRestoreSpec = json.Unmarshal([]byte(serializedEntireViVMRestoreSpec), &toSerialize)
	if errEntireViVMRestoreSpec != nil {
		return []byte{}, errEntireViVMRestoreSpec
	}
	if !isNil(o.QuickRollback) {
		toSerialize["quickRollback"] = o.QuickRollback
	}
	return json.Marshal(toSerialize)
}

type NullableEntireViVMOriginalLocationRestoreSpec struct {
	value *EntireViVMOriginalLocationRestoreSpec
	isSet bool
}

func (v NullableEntireViVMOriginalLocationRestoreSpec) Get() *EntireViVMOriginalLocationRestoreSpec {
	return v.value
}

func (v *NullableEntireViVMOriginalLocationRestoreSpec) Set(val *EntireViVMOriginalLocationRestoreSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableEntireViVMOriginalLocationRestoreSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableEntireViVMOriginalLocationRestoreSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntireViVMOriginalLocationRestoreSpec(val *EntireViVMOriginalLocationRestoreSpec) *NullableEntireViVMOriginalLocationRestoreSpec {
	return &NullableEntireViVMOriginalLocationRestoreSpec{value: val, isSet: true}
}

func (v NullableEntireViVMOriginalLocationRestoreSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntireViVMOriginalLocationRestoreSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


