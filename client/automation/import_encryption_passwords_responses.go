// Code generated by go-swagger; DO NOT EDIT.

package automation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// ImportEncryptionPasswordsReader is a Reader for the ImportEncryptionPasswords structure.
type ImportEncryptionPasswordsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportEncryptionPasswordsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewImportEncryptionPasswordsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportEncryptionPasswordsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImportEncryptionPasswordsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImportEncryptionPasswordsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImportEncryptionPasswordsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImportEncryptionPasswordsCreated creates a ImportEncryptionPasswordsCreated with default headers values
func NewImportEncryptionPasswordsCreated() *ImportEncryptionPasswordsCreated {
	return &ImportEncryptionPasswordsCreated{}
}

/* ImportEncryptionPasswordsCreated describes a response with status code 201, with default header values.

Automation session has been created to import the passwords. To check the progress, track the session `state`.
*/
type ImportEncryptionPasswordsCreated struct {
	Payload *models.SessionModel
}

func (o *ImportEncryptionPasswordsCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/encryptionPasswords/import][%d] importEncryptionPasswordsCreated  %+v", 201, o.Payload)
}
func (o *ImportEncryptionPasswordsCreated) GetPayload() *models.SessionModel {
	return o.Payload
}

func (o *ImportEncryptionPasswordsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportEncryptionPasswordsBadRequest creates a ImportEncryptionPasswordsBadRequest with default headers values
func NewImportEncryptionPasswordsBadRequest() *ImportEncryptionPasswordsBadRequest {
	return &ImportEncryptionPasswordsBadRequest{}
}

/* ImportEncryptionPasswordsBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type ImportEncryptionPasswordsBadRequest struct {
	Payload *models.Error
}

func (o *ImportEncryptionPasswordsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/encryptionPasswords/import][%d] importEncryptionPasswordsBadRequest  %+v", 400, o.Payload)
}
func (o *ImportEncryptionPasswordsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportEncryptionPasswordsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportEncryptionPasswordsUnauthorized creates a ImportEncryptionPasswordsUnauthorized with default headers values
func NewImportEncryptionPasswordsUnauthorized() *ImportEncryptionPasswordsUnauthorized {
	return &ImportEncryptionPasswordsUnauthorized{}
}

/* ImportEncryptionPasswordsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type ImportEncryptionPasswordsUnauthorized struct {
	Payload *models.Error
}

func (o *ImportEncryptionPasswordsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/encryptionPasswords/import][%d] importEncryptionPasswordsUnauthorized  %+v", 401, o.Payload)
}
func (o *ImportEncryptionPasswordsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportEncryptionPasswordsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportEncryptionPasswordsForbidden creates a ImportEncryptionPasswordsForbidden with default headers values
func NewImportEncryptionPasswordsForbidden() *ImportEncryptionPasswordsForbidden {
	return &ImportEncryptionPasswordsForbidden{}
}

/* ImportEncryptionPasswordsForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type ImportEncryptionPasswordsForbidden struct {
	Payload *models.Error
}

func (o *ImportEncryptionPasswordsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/encryptionPasswords/import][%d] importEncryptionPasswordsForbidden  %+v", 403, o.Payload)
}
func (o *ImportEncryptionPasswordsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportEncryptionPasswordsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportEncryptionPasswordsInternalServerError creates a ImportEncryptionPasswordsInternalServerError with default headers values
func NewImportEncryptionPasswordsInternalServerError() *ImportEncryptionPasswordsInternalServerError {
	return &ImportEncryptionPasswordsInternalServerError{}
}

/* ImportEncryptionPasswordsInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type ImportEncryptionPasswordsInternalServerError struct {
	Payload *models.Error
}

func (o *ImportEncryptionPasswordsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/encryptionPasswords/import][%d] importEncryptionPasswordsInternalServerError  %+v", 500, o.Payload)
}
func (o *ImportEncryptionPasswordsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportEncryptionPasswordsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
