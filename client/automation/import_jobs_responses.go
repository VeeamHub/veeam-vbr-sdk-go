// Code generated by go-swagger; DO NOT EDIT.

package automation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// ImportJobsReader is a Reader for the ImportJobs structure.
type ImportJobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportJobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewImportJobsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportJobsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImportJobsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImportJobsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImportJobsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImportJobsCreated creates a ImportJobsCreated with default headers values
func NewImportJobsCreated() *ImportJobsCreated {
	return &ImportJobsCreated{}
}

/* ImportJobsCreated describes a response with status code 201, with default header values.

Automation session has been created to import the jobs. To check the progress, track the session `state`.
*/
type ImportJobsCreated struct {
	Payload *models.SessionModel
}

func (o *ImportJobsCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/jobs/import][%d] importJobsCreated  %+v", 201, o.Payload)
}
func (o *ImportJobsCreated) GetPayload() *models.SessionModel {
	return o.Payload
}

func (o *ImportJobsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportJobsBadRequest creates a ImportJobsBadRequest with default headers values
func NewImportJobsBadRequest() *ImportJobsBadRequest {
	return &ImportJobsBadRequest{}
}

/* ImportJobsBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type ImportJobsBadRequest struct {
	Payload *models.Error
}

func (o *ImportJobsBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/jobs/import][%d] importJobsBadRequest  %+v", 400, o.Payload)
}
func (o *ImportJobsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportJobsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportJobsUnauthorized creates a ImportJobsUnauthorized with default headers values
func NewImportJobsUnauthorized() *ImportJobsUnauthorized {
	return &ImportJobsUnauthorized{}
}

/* ImportJobsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type ImportJobsUnauthorized struct {
	Payload *models.Error
}

func (o *ImportJobsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/jobs/import][%d] importJobsUnauthorized  %+v", 401, o.Payload)
}
func (o *ImportJobsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportJobsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportJobsForbidden creates a ImportJobsForbidden with default headers values
func NewImportJobsForbidden() *ImportJobsForbidden {
	return &ImportJobsForbidden{}
}

/* ImportJobsForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type ImportJobsForbidden struct {
	Payload *models.Error
}

func (o *ImportJobsForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/jobs/import][%d] importJobsForbidden  %+v", 403, o.Payload)
}
func (o *ImportJobsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportJobsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportJobsInternalServerError creates a ImportJobsInternalServerError with default headers values
func NewImportJobsInternalServerError() *ImportJobsInternalServerError {
	return &ImportJobsInternalServerError{}
}

/* ImportJobsInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type ImportJobsInternalServerError struct {
	Payload *models.Error
}

func (o *ImportJobsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/jobs/import][%d] importJobsInternalServerError  %+v", 500, o.Payload)
}
func (o *ImportJobsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportJobsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
