// Code generated by go-swagger; DO NOT EDIT.

package automation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// ImportProxiesReader is a Reader for the ImportProxies structure.
type ImportProxiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportProxiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewImportProxiesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportProxiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImportProxiesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImportProxiesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewImportProxiesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImportProxiesCreated creates a ImportProxiesCreated with default headers values
func NewImportProxiesCreated() *ImportProxiesCreated {
	return &ImportProxiesCreated{}
}

/* ImportProxiesCreated describes a response with status code 201, with default header values.

Automation session has been created to import the proxies. To check the progress, track the session `state`.
*/
type ImportProxiesCreated struct {
	Payload *models.SessionModel
}

func (o *ImportProxiesCreated) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/proxies/import][%d] importProxiesCreated  %+v", 201, o.Payload)
}
func (o *ImportProxiesCreated) GetPayload() *models.SessionModel {
	return o.Payload
}

func (o *ImportProxiesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportProxiesBadRequest creates a ImportProxiesBadRequest with default headers values
func NewImportProxiesBadRequest() *ImportProxiesBadRequest {
	return &ImportProxiesBadRequest{}
}

/* ImportProxiesBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type ImportProxiesBadRequest struct {
	Payload *models.Error
}

func (o *ImportProxiesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/proxies/import][%d] importProxiesBadRequest  %+v", 400, o.Payload)
}
func (o *ImportProxiesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportProxiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportProxiesUnauthorized creates a ImportProxiesUnauthorized with default headers values
func NewImportProxiesUnauthorized() *ImportProxiesUnauthorized {
	return &ImportProxiesUnauthorized{}
}

/* ImportProxiesUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type ImportProxiesUnauthorized struct {
	Payload *models.Error
}

func (o *ImportProxiesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/proxies/import][%d] importProxiesUnauthorized  %+v", 401, o.Payload)
}
func (o *ImportProxiesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportProxiesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportProxiesForbidden creates a ImportProxiesForbidden with default headers values
func NewImportProxiesForbidden() *ImportProxiesForbidden {
	return &ImportProxiesForbidden{}
}

/* ImportProxiesForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type ImportProxiesForbidden struct {
	Payload *models.Error
}

func (o *ImportProxiesForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/proxies/import][%d] importProxiesForbidden  %+v", 403, o.Payload)
}
func (o *ImportProxiesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportProxiesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportProxiesInternalServerError creates a ImportProxiesInternalServerError with default headers values
func NewImportProxiesInternalServerError() *ImportProxiesInternalServerError {
	return &ImportProxiesInternalServerError{}
}

/* ImportProxiesInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type ImportProxiesInternalServerError struct {
	Payload *models.Error
}

func (o *ImportProxiesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/proxies/import][%d] importProxiesInternalServerError  %+v", 500, o.Payload)
}
func (o *ImportProxiesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportProxiesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
