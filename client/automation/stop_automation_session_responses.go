// Code generated by go-swagger; DO NOT EDIT.

package automation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// StopAutomationSessionReader is a Reader for the StopAutomationSession structure.
type StopAutomationSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StopAutomationSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStopAutomationSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewStopAutomationSessionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStopAutomationSessionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStopAutomationSessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStopAutomationSessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStopAutomationSessionOK creates a StopAutomationSessionOK with default headers values
func NewStopAutomationSessionOK() *StopAutomationSessionOK {
	return &StopAutomationSessionOK{}
}

/* StopAutomationSessionOK describes a response with status code 200, with default header values.

OK
*/
type StopAutomationSessionOK struct {
	Payload models.EmptySuccessResponse
}

func (o *StopAutomationSessionOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/sessions/{id}/stop][%d] stopAutomationSessionOK  %+v", 200, o.Payload)
}
func (o *StopAutomationSessionOK) GetPayload() models.EmptySuccessResponse {
	return o.Payload
}

func (o *StopAutomationSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopAutomationSessionUnauthorized creates a StopAutomationSessionUnauthorized with default headers values
func NewStopAutomationSessionUnauthorized() *StopAutomationSessionUnauthorized {
	return &StopAutomationSessionUnauthorized{}
}

/* StopAutomationSessionUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type StopAutomationSessionUnauthorized struct {
	Payload *models.Error
}

func (o *StopAutomationSessionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/sessions/{id}/stop][%d] stopAutomationSessionUnauthorized  %+v", 401, o.Payload)
}
func (o *StopAutomationSessionUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *StopAutomationSessionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopAutomationSessionForbidden creates a StopAutomationSessionForbidden with default headers values
func NewStopAutomationSessionForbidden() *StopAutomationSessionForbidden {
	return &StopAutomationSessionForbidden{}
}

/* StopAutomationSessionForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type StopAutomationSessionForbidden struct {
	Payload *models.Error
}

func (o *StopAutomationSessionForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/sessions/{id}/stop][%d] stopAutomationSessionForbidden  %+v", 403, o.Payload)
}
func (o *StopAutomationSessionForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *StopAutomationSessionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopAutomationSessionNotFound creates a StopAutomationSessionNotFound with default headers values
func NewStopAutomationSessionNotFound() *StopAutomationSessionNotFound {
	return &StopAutomationSessionNotFound{}
}

/* StopAutomationSessionNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type StopAutomationSessionNotFound struct {
	Payload *models.Error
}

func (o *StopAutomationSessionNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/sessions/{id}/stop][%d] stopAutomationSessionNotFound  %+v", 404, o.Payload)
}
func (o *StopAutomationSessionNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *StopAutomationSessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopAutomationSessionInternalServerError creates a StopAutomationSessionInternalServerError with default headers values
func NewStopAutomationSessionInternalServerError() *StopAutomationSessionInternalServerError {
	return &StopAutomationSessionInternalServerError{}
}

/* StopAutomationSessionInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type StopAutomationSessionInternalServerError struct {
	Payload *models.Error
}

func (o *StopAutomationSessionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/automation/sessions/{id}/stop][%d] stopAutomationSessionInternalServerError  %+v", 500, o.Payload)
}
func (o *StopAutomationSessionInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *StopAutomationSessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
