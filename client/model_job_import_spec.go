/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// JobImportSpec struct for JobImportSpec
type JobImportSpec struct {
	// Name of the job.
	Name string `json:"name"`
	// Description of the job.
	Description string `json:"description"`
	// If *true*, the job has a high priority in getting backup infrastructure resources.
	IsHighPriority bool `json:"isHighPriority"`
	Type EJobType `json:"type"`
	VirtualMachines BackupJobVirtualMachinesSpec `json:"virtualMachines"`
	Storage BackupJobStorageImportModel `json:"storage"`
	GuestProcessing BackupJobGuestProcessingImportModel `json:"guestProcessing"`
	Schedule BackupScheduleModel `json:"schedule"`
}

// NewJobImportSpec instantiates a new JobImportSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobImportSpec(name string, description string, isHighPriority bool, type_ EJobType, virtualMachines BackupJobVirtualMachinesSpec, storage BackupJobStorageImportModel, guestProcessing BackupJobGuestProcessingImportModel, schedule BackupScheduleModel) *JobImportSpec {
	this := JobImportSpec{}
	this.Name = name
	this.Description = description
	this.IsHighPriority = isHighPriority
	this.Type = type_
	this.VirtualMachines = virtualMachines
	this.Storage = storage
	this.GuestProcessing = guestProcessing
	this.Schedule = schedule
	return &this
}

// NewJobImportSpecWithDefaults instantiates a new JobImportSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobImportSpecWithDefaults() *JobImportSpec {
	this := JobImportSpec{}
	return &this
}

// GetName returns the Name field value
func (o *JobImportSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *JobImportSpec) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *JobImportSpec) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *JobImportSpec) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *JobImportSpec) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *JobImportSpec) SetDescription(v string) {
	o.Description = v
}

// GetIsHighPriority returns the IsHighPriority field value
func (o *JobImportSpec) GetIsHighPriority() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsHighPriority
}

// GetIsHighPriorityOk returns a tuple with the IsHighPriority field value
// and a boolean to check if the value has been set.
func (o *JobImportSpec) GetIsHighPriorityOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsHighPriority, true
}

// SetIsHighPriority sets field value
func (o *JobImportSpec) SetIsHighPriority(v bool) {
	o.IsHighPriority = v
}

// GetType returns the Type field value
func (o *JobImportSpec) GetType() EJobType {
	if o == nil {
		var ret EJobType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *JobImportSpec) GetTypeOk() (*EJobType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *JobImportSpec) SetType(v EJobType) {
	o.Type = v
}

// GetVirtualMachines returns the VirtualMachines field value
func (o *JobImportSpec) GetVirtualMachines() BackupJobVirtualMachinesSpec {
	if o == nil {
		var ret BackupJobVirtualMachinesSpec
		return ret
	}

	return o.VirtualMachines
}

// GetVirtualMachinesOk returns a tuple with the VirtualMachines field value
// and a boolean to check if the value has been set.
func (o *JobImportSpec) GetVirtualMachinesOk() (*BackupJobVirtualMachinesSpec, bool) {
	if o == nil {
    return nil, false
	}
	return &o.VirtualMachines, true
}

// SetVirtualMachines sets field value
func (o *JobImportSpec) SetVirtualMachines(v BackupJobVirtualMachinesSpec) {
	o.VirtualMachines = v
}

// GetStorage returns the Storage field value
func (o *JobImportSpec) GetStorage() BackupJobStorageImportModel {
	if o == nil {
		var ret BackupJobStorageImportModel
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *JobImportSpec) GetStorageOk() (*BackupJobStorageImportModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *JobImportSpec) SetStorage(v BackupJobStorageImportModel) {
	o.Storage = v
}

// GetGuestProcessing returns the GuestProcessing field value
func (o *JobImportSpec) GetGuestProcessing() BackupJobGuestProcessingImportModel {
	if o == nil {
		var ret BackupJobGuestProcessingImportModel
		return ret
	}

	return o.GuestProcessing
}

// GetGuestProcessingOk returns a tuple with the GuestProcessing field value
// and a boolean to check if the value has been set.
func (o *JobImportSpec) GetGuestProcessingOk() (*BackupJobGuestProcessingImportModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GuestProcessing, true
}

// SetGuestProcessing sets field value
func (o *JobImportSpec) SetGuestProcessing(v BackupJobGuestProcessingImportModel) {
	o.GuestProcessing = v
}

// GetSchedule returns the Schedule field value
func (o *JobImportSpec) GetSchedule() BackupScheduleModel {
	if o == nil {
		var ret BackupScheduleModel
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *JobImportSpec) GetScheduleOk() (*BackupScheduleModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *JobImportSpec) SetSchedule(v BackupScheduleModel) {
	o.Schedule = v
}

func (o JobImportSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["isHighPriority"] = o.IsHighPriority
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["virtualMachines"] = o.VirtualMachines
	}
	if true {
		toSerialize["storage"] = o.Storage
	}
	if true {
		toSerialize["guestProcessing"] = o.GuestProcessing
	}
	if true {
		toSerialize["schedule"] = o.Schedule
	}
	return json.Marshal(toSerialize)
}

type NullableJobImportSpec struct {
	value *JobImportSpec
	isSet bool
}

func (v NullableJobImportSpec) Get() *JobImportSpec {
	return v.value
}

func (v *NullableJobImportSpec) Set(val *JobImportSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableJobImportSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableJobImportSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobImportSpec(val *JobImportSpec) *NullableJobImportSpec {
	return &NullableJobImportSpec{value: val, isSet: true}
}

func (v NullableJobImportSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobImportSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


