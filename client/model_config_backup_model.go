/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ConfigBackupModel struct for ConfigBackupModel
type ConfigBackupModel struct {
	// If *true*, configuration backup is enabled.
	IsEnabled bool `json:"isEnabled"`
	// ID of the backup repository on which the configuration backup is stored.
	BackupRepositoryId string `json:"backupRepositoryId"`
	// Number of restore points to keep in the backup repository.
	RestorePointsToKeep int32 `json:"restorePointsToKeep"`
	Notifications ConfigBackupNotificationsModel `json:"notifications"`
	Schedule ConfigBackupScheduleModel `json:"schedule"`
	LastSuccessfulBackup ConfigBackupLastSuccessfulModel `json:"lastSuccessfulBackup"`
	Encryption ConfigBackupEncryptionModel `json:"encryption"`
}

// NewConfigBackupModel instantiates a new ConfigBackupModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigBackupModel(isEnabled bool, backupRepositoryId string, restorePointsToKeep int32, notifications ConfigBackupNotificationsModel, schedule ConfigBackupScheduleModel, lastSuccessfulBackup ConfigBackupLastSuccessfulModel, encryption ConfigBackupEncryptionModel) *ConfigBackupModel {
	this := ConfigBackupModel{}
	this.IsEnabled = isEnabled
	this.BackupRepositoryId = backupRepositoryId
	this.RestorePointsToKeep = restorePointsToKeep
	this.Notifications = notifications
	this.Schedule = schedule
	this.LastSuccessfulBackup = lastSuccessfulBackup
	this.Encryption = encryption
	return &this
}

// NewConfigBackupModelWithDefaults instantiates a new ConfigBackupModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigBackupModelWithDefaults() *ConfigBackupModel {
	this := ConfigBackupModel{}
	return &this
}

// GetIsEnabled returns the IsEnabled field value
func (o *ConfigBackupModel) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *ConfigBackupModel) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *ConfigBackupModel) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetBackupRepositoryId returns the BackupRepositoryId field value
func (o *ConfigBackupModel) GetBackupRepositoryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupRepositoryId
}

// GetBackupRepositoryIdOk returns a tuple with the BackupRepositoryId field value
// and a boolean to check if the value has been set.
func (o *ConfigBackupModel) GetBackupRepositoryIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.BackupRepositoryId, true
}

// SetBackupRepositoryId sets field value
func (o *ConfigBackupModel) SetBackupRepositoryId(v string) {
	o.BackupRepositoryId = v
}

// GetRestorePointsToKeep returns the RestorePointsToKeep field value
func (o *ConfigBackupModel) GetRestorePointsToKeep() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RestorePointsToKeep
}

// GetRestorePointsToKeepOk returns a tuple with the RestorePointsToKeep field value
// and a boolean to check if the value has been set.
func (o *ConfigBackupModel) GetRestorePointsToKeepOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RestorePointsToKeep, true
}

// SetRestorePointsToKeep sets field value
func (o *ConfigBackupModel) SetRestorePointsToKeep(v int32) {
	o.RestorePointsToKeep = v
}

// GetNotifications returns the Notifications field value
func (o *ConfigBackupModel) GetNotifications() ConfigBackupNotificationsModel {
	if o == nil {
		var ret ConfigBackupNotificationsModel
		return ret
	}

	return o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value
// and a boolean to check if the value has been set.
func (o *ConfigBackupModel) GetNotificationsOk() (*ConfigBackupNotificationsModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Notifications, true
}

// SetNotifications sets field value
func (o *ConfigBackupModel) SetNotifications(v ConfigBackupNotificationsModel) {
	o.Notifications = v
}

// GetSchedule returns the Schedule field value
func (o *ConfigBackupModel) GetSchedule() ConfigBackupScheduleModel {
	if o == nil {
		var ret ConfigBackupScheduleModel
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *ConfigBackupModel) GetScheduleOk() (*ConfigBackupScheduleModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *ConfigBackupModel) SetSchedule(v ConfigBackupScheduleModel) {
	o.Schedule = v
}

// GetLastSuccessfulBackup returns the LastSuccessfulBackup field value
func (o *ConfigBackupModel) GetLastSuccessfulBackup() ConfigBackupLastSuccessfulModel {
	if o == nil {
		var ret ConfigBackupLastSuccessfulModel
		return ret
	}

	return o.LastSuccessfulBackup
}

// GetLastSuccessfulBackupOk returns a tuple with the LastSuccessfulBackup field value
// and a boolean to check if the value has been set.
func (o *ConfigBackupModel) GetLastSuccessfulBackupOk() (*ConfigBackupLastSuccessfulModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LastSuccessfulBackup, true
}

// SetLastSuccessfulBackup sets field value
func (o *ConfigBackupModel) SetLastSuccessfulBackup(v ConfigBackupLastSuccessfulModel) {
	o.LastSuccessfulBackup = v
}

// GetEncryption returns the Encryption field value
func (o *ConfigBackupModel) GetEncryption() ConfigBackupEncryptionModel {
	if o == nil {
		var ret ConfigBackupEncryptionModel
		return ret
	}

	return o.Encryption
}

// GetEncryptionOk returns a tuple with the Encryption field value
// and a boolean to check if the value has been set.
func (o *ConfigBackupModel) GetEncryptionOk() (*ConfigBackupEncryptionModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Encryption, true
}

// SetEncryption sets field value
func (o *ConfigBackupModel) SetEncryption(v ConfigBackupEncryptionModel) {
	o.Encryption = v
}

func (o ConfigBackupModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if true {
		toSerialize["backupRepositoryId"] = o.BackupRepositoryId
	}
	if true {
		toSerialize["restorePointsToKeep"] = o.RestorePointsToKeep
	}
	if true {
		toSerialize["notifications"] = o.Notifications
	}
	if true {
		toSerialize["schedule"] = o.Schedule
	}
	if true {
		toSerialize["lastSuccessfulBackup"] = o.LastSuccessfulBackup
	}
	if true {
		toSerialize["encryption"] = o.Encryption
	}
	return json.Marshal(toSerialize)
}

type NullableConfigBackupModel struct {
	value *ConfigBackupModel
	isSet bool
}

func (v NullableConfigBackupModel) Get() *ConfigBackupModel {
	return v.value
}

func (v *NullableConfigBackupModel) Set(val *ConfigBackupModel) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigBackupModel) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigBackupModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigBackupModel(val *ConfigBackupModel) *NullableConfigBackupModel {
	return &NullableConfigBackupModel{value: val, isSet: true}
}

func (v NullableConfigBackupModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigBackupModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


