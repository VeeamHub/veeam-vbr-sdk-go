/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ObjectStorageImmutabilityModel Object storage immutability.
type ObjectStorageImmutabilityModel struct {
	// If *true*, storage immutability is enabled.
	IsEnabled *bool `json:"isEnabled,omitempty"`
	// Immutability period.
	DaysCount *int32 `json:"daysCount,omitempty"`
}

// NewObjectStorageImmutabilityModel instantiates a new ObjectStorageImmutabilityModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageImmutabilityModel() *ObjectStorageImmutabilityModel {
	this := ObjectStorageImmutabilityModel{}
	return &this
}

// NewObjectStorageImmutabilityModelWithDefaults instantiates a new ObjectStorageImmutabilityModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageImmutabilityModelWithDefaults() *ObjectStorageImmutabilityModel {
	this := ObjectStorageImmutabilityModel{}
	return &this
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *ObjectStorageImmutabilityModel) GetIsEnabled() bool {
	if o == nil || isNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageImmutabilityModel) GetIsEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.IsEnabled) {
    return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *ObjectStorageImmutabilityModel) HasIsEnabled() bool {
	if o != nil && !isNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *ObjectStorageImmutabilityModel) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetDaysCount returns the DaysCount field value if set, zero value otherwise.
func (o *ObjectStorageImmutabilityModel) GetDaysCount() int32 {
	if o == nil || isNil(o.DaysCount) {
		var ret int32
		return ret
	}
	return *o.DaysCount
}

// GetDaysCountOk returns a tuple with the DaysCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageImmutabilityModel) GetDaysCountOk() (*int32, bool) {
	if o == nil || isNil(o.DaysCount) {
    return nil, false
	}
	return o.DaysCount, true
}

// HasDaysCount returns a boolean if a field has been set.
func (o *ObjectStorageImmutabilityModel) HasDaysCount() bool {
	if o != nil && !isNil(o.DaysCount) {
		return true
	}

	return false
}

// SetDaysCount gets a reference to the given int32 and assigns it to the DaysCount field.
func (o *ObjectStorageImmutabilityModel) SetDaysCount(v int32) {
	o.DaysCount = &v
}

func (o ObjectStorageImmutabilityModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.IsEnabled) {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if !isNil(o.DaysCount) {
		toSerialize["daysCount"] = o.DaysCount
	}
	return json.Marshal(toSerialize)
}

type NullableObjectStorageImmutabilityModel struct {
	value *ObjectStorageImmutabilityModel
	isSet bool
}

func (v NullableObjectStorageImmutabilityModel) Get() *ObjectStorageImmutabilityModel {
	return v.value
}

func (v *NullableObjectStorageImmutabilityModel) Set(val *ObjectStorageImmutabilityModel) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageImmutabilityModel) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageImmutabilityModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageImmutabilityModel(val *ObjectStorageImmutabilityModel) *NullableObjectStorageImmutabilityModel {
	return &NullableObjectStorageImmutabilityModel{value: val, isSet: true}
}

func (v NullableObjectStorageImmutabilityModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageImmutabilityModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


