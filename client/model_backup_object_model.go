/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BackupObjectModel struct for BackupObjectModel
type BackupObjectModel struct {
	// ID of the object.
	Id string `json:"id"`
	// Name of the object.
	Name *string `json:"name,omitempty"`
	// Type of the object.
	Type *string `json:"type,omitempty"`
	PlatformName EPlatformType `json:"platformName"`
	// Id of the platform where the object was created.
	PlatformId *string `json:"platformId,omitempty"`
	// Number of restore points.
	RestorePointsCount *int32 `json:"restorePointsCount,omitempty"`
}

// NewBackupObjectModel instantiates a new BackupObjectModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupObjectModel(id string, platformName EPlatformType) *BackupObjectModel {
	this := BackupObjectModel{}
	this.Id = id
	this.PlatformName = platformName
	return &this
}

// NewBackupObjectModelWithDefaults instantiates a new BackupObjectModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupObjectModelWithDefaults() *BackupObjectModel {
	this := BackupObjectModel{}
	return &this
}

// GetId returns the Id field value
func (o *BackupObjectModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BackupObjectModel) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BackupObjectModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BackupObjectModel) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupObjectModel) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BackupObjectModel) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BackupObjectModel) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BackupObjectModel) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupObjectModel) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BackupObjectModel) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BackupObjectModel) SetType(v string) {
	o.Type = &v
}

// GetPlatformName returns the PlatformName field value
func (o *BackupObjectModel) GetPlatformName() EPlatformType {
	if o == nil {
		var ret EPlatformType
		return ret
	}

	return o.PlatformName
}

// GetPlatformNameOk returns a tuple with the PlatformName field value
// and a boolean to check if the value has been set.
func (o *BackupObjectModel) GetPlatformNameOk() (*EPlatformType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PlatformName, true
}

// SetPlatformName sets field value
func (o *BackupObjectModel) SetPlatformName(v EPlatformType) {
	o.PlatformName = v
}

// GetPlatformId returns the PlatformId field value if set, zero value otherwise.
func (o *BackupObjectModel) GetPlatformId() string {
	if o == nil || isNil(o.PlatformId) {
		var ret string
		return ret
	}
	return *o.PlatformId
}

// GetPlatformIdOk returns a tuple with the PlatformId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupObjectModel) GetPlatformIdOk() (*string, bool) {
	if o == nil || isNil(o.PlatformId) {
    return nil, false
	}
	return o.PlatformId, true
}

// HasPlatformId returns a boolean if a field has been set.
func (o *BackupObjectModel) HasPlatformId() bool {
	if o != nil && !isNil(o.PlatformId) {
		return true
	}

	return false
}

// SetPlatformId gets a reference to the given string and assigns it to the PlatformId field.
func (o *BackupObjectModel) SetPlatformId(v string) {
	o.PlatformId = &v
}

// GetRestorePointsCount returns the RestorePointsCount field value if set, zero value otherwise.
func (o *BackupObjectModel) GetRestorePointsCount() int32 {
	if o == nil || isNil(o.RestorePointsCount) {
		var ret int32
		return ret
	}
	return *o.RestorePointsCount
}

// GetRestorePointsCountOk returns a tuple with the RestorePointsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupObjectModel) GetRestorePointsCountOk() (*int32, bool) {
	if o == nil || isNil(o.RestorePointsCount) {
    return nil, false
	}
	return o.RestorePointsCount, true
}

// HasRestorePointsCount returns a boolean if a field has been set.
func (o *BackupObjectModel) HasRestorePointsCount() bool {
	if o != nil && !isNil(o.RestorePointsCount) {
		return true
	}

	return false
}

// SetRestorePointsCount gets a reference to the given int32 and assigns it to the RestorePointsCount field.
func (o *BackupObjectModel) SetRestorePointsCount(v int32) {
	o.RestorePointsCount = &v
}

func (o BackupObjectModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["platformName"] = o.PlatformName
	}
	if !isNil(o.PlatformId) {
		toSerialize["platformId"] = o.PlatformId
	}
	if !isNil(o.RestorePointsCount) {
		toSerialize["restorePointsCount"] = o.RestorePointsCount
	}
	return json.Marshal(toSerialize)
}

type NullableBackupObjectModel struct {
	value *BackupObjectModel
	isSet bool
}

func (v NullableBackupObjectModel) Get() *BackupObjectModel {
	return v.value
}

func (v *NullableBackupObjectModel) Set(val *BackupObjectModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupObjectModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupObjectModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupObjectModel(val *BackupObjectModel) *NullableBackupObjectModel {
	return &NullableBackupObjectModel{value: val, isSet: true}
}

func (v NullableBackupObjectModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupObjectModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


