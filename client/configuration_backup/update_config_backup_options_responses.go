// Code generated by go-swagger; DO NOT EDIT.

package configuration_backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// UpdateConfigBackupOptionsReader is a Reader for the UpdateConfigBackupOptions structure.
type UpdateConfigBackupOptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateConfigBackupOptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateConfigBackupOptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateConfigBackupOptionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateConfigBackupOptionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateConfigBackupOptionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateConfigBackupOptionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateConfigBackupOptionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateConfigBackupOptionsOK creates a UpdateConfigBackupOptionsOK with default headers values
func NewUpdateConfigBackupOptionsOK() *UpdateConfigBackupOptionsOK {
	return &UpdateConfigBackupOptionsOK{}
}

/* UpdateConfigBackupOptionsOK describes a response with status code 200, with default header values.

Configuration backup settings have been updated.
*/
type UpdateConfigBackupOptionsOK struct {
	Payload *models.ConfigBackupModel
}

func (o *UpdateConfigBackupOptionsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/configBackup][%d] updateConfigBackupOptionsOK  %+v", 200, o.Payload)
}
func (o *UpdateConfigBackupOptionsOK) GetPayload() *models.ConfigBackupModel {
	return o.Payload
}

func (o *UpdateConfigBackupOptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigBackupModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigBackupOptionsBadRequest creates a UpdateConfigBackupOptionsBadRequest with default headers values
func NewUpdateConfigBackupOptionsBadRequest() *UpdateConfigBackupOptionsBadRequest {
	return &UpdateConfigBackupOptionsBadRequest{}
}

/* UpdateConfigBackupOptionsBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type UpdateConfigBackupOptionsBadRequest struct {
	Payload *models.Error
}

func (o *UpdateConfigBackupOptionsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/configBackup][%d] updateConfigBackupOptionsBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateConfigBackupOptionsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateConfigBackupOptionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigBackupOptionsUnauthorized creates a UpdateConfigBackupOptionsUnauthorized with default headers values
func NewUpdateConfigBackupOptionsUnauthorized() *UpdateConfigBackupOptionsUnauthorized {
	return &UpdateConfigBackupOptionsUnauthorized{}
}

/* UpdateConfigBackupOptionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type UpdateConfigBackupOptionsUnauthorized struct {
	Payload *models.Error
}

func (o *UpdateConfigBackupOptionsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/configBackup][%d] updateConfigBackupOptionsUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateConfigBackupOptionsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateConfigBackupOptionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigBackupOptionsForbidden creates a UpdateConfigBackupOptionsForbidden with default headers values
func NewUpdateConfigBackupOptionsForbidden() *UpdateConfigBackupOptionsForbidden {
	return &UpdateConfigBackupOptionsForbidden{}
}

/* UpdateConfigBackupOptionsForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type UpdateConfigBackupOptionsForbidden struct {
	Payload *models.Error
}

func (o *UpdateConfigBackupOptionsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/configBackup][%d] updateConfigBackupOptionsForbidden  %+v", 403, o.Payload)
}
func (o *UpdateConfigBackupOptionsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateConfigBackupOptionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigBackupOptionsNotFound creates a UpdateConfigBackupOptionsNotFound with default headers values
func NewUpdateConfigBackupOptionsNotFound() *UpdateConfigBackupOptionsNotFound {
	return &UpdateConfigBackupOptionsNotFound{}
}

/* UpdateConfigBackupOptionsNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type UpdateConfigBackupOptionsNotFound struct {
	Payload *models.Error
}

func (o *UpdateConfigBackupOptionsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/configBackup][%d] updateConfigBackupOptionsNotFound  %+v", 404, o.Payload)
}
func (o *UpdateConfigBackupOptionsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateConfigBackupOptionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateConfigBackupOptionsInternalServerError creates a UpdateConfigBackupOptionsInternalServerError with default headers values
func NewUpdateConfigBackupOptionsInternalServerError() *UpdateConfigBackupOptionsInternalServerError {
	return &UpdateConfigBackupOptionsInternalServerError{}
}

/* UpdateConfigBackupOptionsInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type UpdateConfigBackupOptionsInternalServerError struct {
	Payload *models.Error
}

func (o *UpdateConfigBackupOptionsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1/configBackup][%d] updateConfigBackupOptionsInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateConfigBackupOptionsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateConfigBackupOptionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
