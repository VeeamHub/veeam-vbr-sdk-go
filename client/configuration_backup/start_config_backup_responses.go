// Code generated by go-swagger; DO NOT EDIT.

package configuration_backup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// StartConfigBackupReader is a Reader for the StartConfigBackup structure.
type StartConfigBackupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartConfigBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartConfigBackupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartConfigBackupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStartConfigBackupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStartConfigBackupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartConfigBackupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStartConfigBackupOK creates a StartConfigBackupOK with default headers values
func NewStartConfigBackupOK() *StartConfigBackupOK {
	return &StartConfigBackupOK{}
}

/* StartConfigBackupOK describes a response with status code 200, with default header values.

Configuration backup has been started.
*/
type StartConfigBackupOK struct {
	Payload *models.SessionModel
}

func (o *StartConfigBackupOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/configBackup/backup][%d] startConfigBackupOK  %+v", 200, o.Payload)
}
func (o *StartConfigBackupOK) GetPayload() *models.SessionModel {
	return o.Payload
}

func (o *StartConfigBackupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SessionModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartConfigBackupBadRequest creates a StartConfigBackupBadRequest with default headers values
func NewStartConfigBackupBadRequest() *StartConfigBackupBadRequest {
	return &StartConfigBackupBadRequest{}
}

/* StartConfigBackupBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type StartConfigBackupBadRequest struct {
	Payload *models.Error
}

func (o *StartConfigBackupBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/configBackup/backup][%d] startConfigBackupBadRequest  %+v", 400, o.Payload)
}
func (o *StartConfigBackupBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartConfigBackupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartConfigBackupUnauthorized creates a StartConfigBackupUnauthorized with default headers values
func NewStartConfigBackupUnauthorized() *StartConfigBackupUnauthorized {
	return &StartConfigBackupUnauthorized{}
}

/* StartConfigBackupUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type StartConfigBackupUnauthorized struct {
	Payload *models.Error
}

func (o *StartConfigBackupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/configBackup/backup][%d] startConfigBackupUnauthorized  %+v", 401, o.Payload)
}
func (o *StartConfigBackupUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartConfigBackupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartConfigBackupForbidden creates a StartConfigBackupForbidden with default headers values
func NewStartConfigBackupForbidden() *StartConfigBackupForbidden {
	return &StartConfigBackupForbidden{}
}

/* StartConfigBackupForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type StartConfigBackupForbidden struct {
	Payload *models.Error
}

func (o *StartConfigBackupForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1/configBackup/backup][%d] startConfigBackupForbidden  %+v", 403, o.Payload)
}
func (o *StartConfigBackupForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartConfigBackupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartConfigBackupInternalServerError creates a StartConfigBackupInternalServerError with default headers values
func NewStartConfigBackupInternalServerError() *StartConfigBackupInternalServerError {
	return &StartConfigBackupInternalServerError{}
}

/* StartConfigBackupInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type StartConfigBackupInternalServerError struct {
	Payload *models.Error
}

func (o *StartConfigBackupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/configBackup/backup][%d] startConfigBackupInternalServerError  %+v", 500, o.Payload)
}
func (o *StartConfigBackupInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartConfigBackupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
