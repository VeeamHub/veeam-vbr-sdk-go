/*
 * Veeam Backup & Replication REST API
 *
 * This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br> Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Parameters, request bodies, and response bodies are defined inline or refer to schemas defined globally. Some schemas are polymorphic. 
 *
 * API version: 1.0-rev1
 * Contact: support@veeam.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BackupScheduleModel Job scheduling options.
type BackupScheduleModel struct {
	// If *true*, job scheduling is enabled.
	RunAutomatically bool `json:"runAutomatically"`
	Daily *ScheduleDailyModel `json:"daily,omitempty"`
	Monthly *ScheduleMonthlyModel `json:"monthly,omitempty"`
	Periodically *SchedulePeriodicallyModel `json:"periodically,omitempty"`
	Continuously *ScheduleBackupWindowModel `json:"continuously,omitempty"`
	AfterThisJob *ScheduleAfterThisJobModel `json:"afterThisJob,omitempty"`
	Retry *ScheduleRetryModel `json:"retry,omitempty"`
	BackupWindow *ScheduleBackupWindowModel `json:"backupWindow,omitempty"`
}

// NewBackupScheduleModel instantiates a new BackupScheduleModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupScheduleModel(runAutomatically bool) *BackupScheduleModel {
	this := BackupScheduleModel{}
	this.RunAutomatically = runAutomatically
	return &this
}

// NewBackupScheduleModelWithDefaults instantiates a new BackupScheduleModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupScheduleModelWithDefaults() *BackupScheduleModel {
	this := BackupScheduleModel{}
	var runAutomatically bool = false
	this.RunAutomatically = runAutomatically
	return &this
}

// GetRunAutomatically returns the RunAutomatically field value
func (o *BackupScheduleModel) GetRunAutomatically() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RunAutomatically
}

// GetRunAutomaticallyOk returns a tuple with the RunAutomatically field value
// and a boolean to check if the value has been set.
func (o *BackupScheduleModel) GetRunAutomaticallyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RunAutomatically, true
}

// SetRunAutomatically sets field value
func (o *BackupScheduleModel) SetRunAutomatically(v bool) {
	o.RunAutomatically = v
}

// GetDaily returns the Daily field value if set, zero value otherwise.
func (o *BackupScheduleModel) GetDaily() ScheduleDailyModel {
	if o == nil || o.Daily == nil {
		var ret ScheduleDailyModel
		return ret
	}
	return *o.Daily
}

// GetDailyOk returns a tuple with the Daily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleModel) GetDailyOk() (*ScheduleDailyModel, bool) {
	if o == nil || o.Daily == nil {
		return nil, false
	}
	return o.Daily, true
}

// HasDaily returns a boolean if a field has been set.
func (o *BackupScheduleModel) HasDaily() bool {
	if o != nil && o.Daily != nil {
		return true
	}

	return false
}

// SetDaily gets a reference to the given ScheduleDailyModel and assigns it to the Daily field.
func (o *BackupScheduleModel) SetDaily(v ScheduleDailyModel) {
	o.Daily = &v
}

// GetMonthly returns the Monthly field value if set, zero value otherwise.
func (o *BackupScheduleModel) GetMonthly() ScheduleMonthlyModel {
	if o == nil || o.Monthly == nil {
		var ret ScheduleMonthlyModel
		return ret
	}
	return *o.Monthly
}

// GetMonthlyOk returns a tuple with the Monthly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleModel) GetMonthlyOk() (*ScheduleMonthlyModel, bool) {
	if o == nil || o.Monthly == nil {
		return nil, false
	}
	return o.Monthly, true
}

// HasMonthly returns a boolean if a field has been set.
func (o *BackupScheduleModel) HasMonthly() bool {
	if o != nil && o.Monthly != nil {
		return true
	}

	return false
}

// SetMonthly gets a reference to the given ScheduleMonthlyModel and assigns it to the Monthly field.
func (o *BackupScheduleModel) SetMonthly(v ScheduleMonthlyModel) {
	o.Monthly = &v
}

// GetPeriodically returns the Periodically field value if set, zero value otherwise.
func (o *BackupScheduleModel) GetPeriodically() SchedulePeriodicallyModel {
	if o == nil || o.Periodically == nil {
		var ret SchedulePeriodicallyModel
		return ret
	}
	return *o.Periodically
}

// GetPeriodicallyOk returns a tuple with the Periodically field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleModel) GetPeriodicallyOk() (*SchedulePeriodicallyModel, bool) {
	if o == nil || o.Periodically == nil {
		return nil, false
	}
	return o.Periodically, true
}

// HasPeriodically returns a boolean if a field has been set.
func (o *BackupScheduleModel) HasPeriodically() bool {
	if o != nil && o.Periodically != nil {
		return true
	}

	return false
}

// SetPeriodically gets a reference to the given SchedulePeriodicallyModel and assigns it to the Periodically field.
func (o *BackupScheduleModel) SetPeriodically(v SchedulePeriodicallyModel) {
	o.Periodically = &v
}

// GetContinuously returns the Continuously field value if set, zero value otherwise.
func (o *BackupScheduleModel) GetContinuously() ScheduleBackupWindowModel {
	if o == nil || o.Continuously == nil {
		var ret ScheduleBackupWindowModel
		return ret
	}
	return *o.Continuously
}

// GetContinuouslyOk returns a tuple with the Continuously field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleModel) GetContinuouslyOk() (*ScheduleBackupWindowModel, bool) {
	if o == nil || o.Continuously == nil {
		return nil, false
	}
	return o.Continuously, true
}

// HasContinuously returns a boolean if a field has been set.
func (o *BackupScheduleModel) HasContinuously() bool {
	if o != nil && o.Continuously != nil {
		return true
	}

	return false
}

// SetContinuously gets a reference to the given ScheduleBackupWindowModel and assigns it to the Continuously field.
func (o *BackupScheduleModel) SetContinuously(v ScheduleBackupWindowModel) {
	o.Continuously = &v
}

// GetAfterThisJob returns the AfterThisJob field value if set, zero value otherwise.
func (o *BackupScheduleModel) GetAfterThisJob() ScheduleAfterThisJobModel {
	if o == nil || o.AfterThisJob == nil {
		var ret ScheduleAfterThisJobModel
		return ret
	}
	return *o.AfterThisJob
}

// GetAfterThisJobOk returns a tuple with the AfterThisJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleModel) GetAfterThisJobOk() (*ScheduleAfterThisJobModel, bool) {
	if o == nil || o.AfterThisJob == nil {
		return nil, false
	}
	return o.AfterThisJob, true
}

// HasAfterThisJob returns a boolean if a field has been set.
func (o *BackupScheduleModel) HasAfterThisJob() bool {
	if o != nil && o.AfterThisJob != nil {
		return true
	}

	return false
}

// SetAfterThisJob gets a reference to the given ScheduleAfterThisJobModel and assigns it to the AfterThisJob field.
func (o *BackupScheduleModel) SetAfterThisJob(v ScheduleAfterThisJobModel) {
	o.AfterThisJob = &v
}

// GetRetry returns the Retry field value if set, zero value otherwise.
func (o *BackupScheduleModel) GetRetry() ScheduleRetryModel {
	if o == nil || o.Retry == nil {
		var ret ScheduleRetryModel
		return ret
	}
	return *o.Retry
}

// GetRetryOk returns a tuple with the Retry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleModel) GetRetryOk() (*ScheduleRetryModel, bool) {
	if o == nil || o.Retry == nil {
		return nil, false
	}
	return o.Retry, true
}

// HasRetry returns a boolean if a field has been set.
func (o *BackupScheduleModel) HasRetry() bool {
	if o != nil && o.Retry != nil {
		return true
	}

	return false
}

// SetRetry gets a reference to the given ScheduleRetryModel and assigns it to the Retry field.
func (o *BackupScheduleModel) SetRetry(v ScheduleRetryModel) {
	o.Retry = &v
}

// GetBackupWindow returns the BackupWindow field value if set, zero value otherwise.
func (o *BackupScheduleModel) GetBackupWindow() ScheduleBackupWindowModel {
	if o == nil || o.BackupWindow == nil {
		var ret ScheduleBackupWindowModel
		return ret
	}
	return *o.BackupWindow
}

// GetBackupWindowOk returns a tuple with the BackupWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupScheduleModel) GetBackupWindowOk() (*ScheduleBackupWindowModel, bool) {
	if o == nil || o.BackupWindow == nil {
		return nil, false
	}
	return o.BackupWindow, true
}

// HasBackupWindow returns a boolean if a field has been set.
func (o *BackupScheduleModel) HasBackupWindow() bool {
	if o != nil && o.BackupWindow != nil {
		return true
	}

	return false
}

// SetBackupWindow gets a reference to the given ScheduleBackupWindowModel and assigns it to the BackupWindow field.
func (o *BackupScheduleModel) SetBackupWindow(v ScheduleBackupWindowModel) {
	o.BackupWindow = &v
}

func (o BackupScheduleModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["runAutomatically"] = o.RunAutomatically
	}
	if o.Daily != nil {
		toSerialize["daily"] = o.Daily
	}
	if o.Monthly != nil {
		toSerialize["monthly"] = o.Monthly
	}
	if o.Periodically != nil {
		toSerialize["periodically"] = o.Periodically
	}
	if o.Continuously != nil {
		toSerialize["continuously"] = o.Continuously
	}
	if o.AfterThisJob != nil {
		toSerialize["afterThisJob"] = o.AfterThisJob
	}
	if o.Retry != nil {
		toSerialize["retry"] = o.Retry
	}
	if o.BackupWindow != nil {
		toSerialize["backupWindow"] = o.BackupWindow
	}
	return json.Marshal(toSerialize)
}

type NullableBackupScheduleModel struct {
	value *BackupScheduleModel
	isSet bool
}

func (v NullableBackupScheduleModel) Get() *BackupScheduleModel {
	return v.value
}

func (v *NullableBackupScheduleModel) Set(val *BackupScheduleModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupScheduleModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupScheduleModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupScheduleModel(val *BackupScheduleModel) *NullableBackupScheduleModel {
	return &NullableBackupScheduleModel{value: val, isSet: true}
}

func (v NullableBackupScheduleModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupScheduleModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


