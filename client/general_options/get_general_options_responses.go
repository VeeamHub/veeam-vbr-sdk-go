// Code generated by go-swagger; DO NOT EDIT.

package general_options

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// GetGeneralOptionsReader is a Reader for the GetGeneralOptions structure.
type GetGeneralOptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGeneralOptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGeneralOptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGeneralOptionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGeneralOptionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGeneralOptionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGeneralOptionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGeneralOptionsOK creates a GetGeneralOptionsOK with default headers values
func NewGetGeneralOptionsOK() *GetGeneralOptionsOK {
	return &GetGeneralOptionsOK{}
}

/* GetGeneralOptionsOK describes a response with status code 200, with default header values.

OK
*/
type GetGeneralOptionsOK struct {
	Payload *models.GeneralOptionsModel
}

func (o *GetGeneralOptionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/generalOptions][%d] getGeneralOptionsOK  %+v", 200, o.Payload)
}
func (o *GetGeneralOptionsOK) GetPayload() *models.GeneralOptionsModel {
	return o.Payload
}

func (o *GetGeneralOptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralOptionsModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeneralOptionsUnauthorized creates a GetGeneralOptionsUnauthorized with default headers values
func NewGetGeneralOptionsUnauthorized() *GetGeneralOptionsUnauthorized {
	return &GetGeneralOptionsUnauthorized{}
}

/* GetGeneralOptionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type GetGeneralOptionsUnauthorized struct {
	Payload *models.Error
}

func (o *GetGeneralOptionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/generalOptions][%d] getGeneralOptionsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetGeneralOptionsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGeneralOptionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeneralOptionsForbidden creates a GetGeneralOptionsForbidden with default headers values
func NewGetGeneralOptionsForbidden() *GetGeneralOptionsForbidden {
	return &GetGeneralOptionsForbidden{}
}

/* GetGeneralOptionsForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type GetGeneralOptionsForbidden struct {
	Payload *models.Error
}

func (o *GetGeneralOptionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/generalOptions][%d] getGeneralOptionsForbidden  %+v", 403, o.Payload)
}
func (o *GetGeneralOptionsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGeneralOptionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeneralOptionsNotFound creates a GetGeneralOptionsNotFound with default headers values
func NewGetGeneralOptionsNotFound() *GetGeneralOptionsNotFound {
	return &GetGeneralOptionsNotFound{}
}

/* GetGeneralOptionsNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type GetGeneralOptionsNotFound struct {
	Payload *models.Error
}

func (o *GetGeneralOptionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/generalOptions][%d] getGeneralOptionsNotFound  %+v", 404, o.Payload)
}
func (o *GetGeneralOptionsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGeneralOptionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGeneralOptionsInternalServerError creates a GetGeneralOptionsInternalServerError with default headers values
func NewGetGeneralOptionsInternalServerError() *GetGeneralOptionsInternalServerError {
	return &GetGeneralOptionsInternalServerError{}
}

/* GetGeneralOptionsInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type GetGeneralOptionsInternalServerError struct {
	Payload *models.Error
}

func (o *GetGeneralOptionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/generalOptions][%d] getGeneralOptionsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetGeneralOptionsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGeneralOptionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
