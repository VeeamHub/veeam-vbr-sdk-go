// Code generated by go-swagger; DO NOT EDIT.

package general_options

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// UpdateGeneralOptionsReader is a Reader for the UpdateGeneralOptions structure.
type UpdateGeneralOptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateGeneralOptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateGeneralOptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateGeneralOptionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateGeneralOptionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateGeneralOptionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateGeneralOptionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateGeneralOptionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateGeneralOptionsOK creates a UpdateGeneralOptionsOK with default headers values
func NewUpdateGeneralOptionsOK() *UpdateGeneralOptionsOK {
	return &UpdateGeneralOptionsOK{}
}

/* UpdateGeneralOptionsOK describes a response with status code 200, with default header values.

General options have been updated.
*/
type UpdateGeneralOptionsOK struct {
	Payload *models.GeneralOptionsModel
}

func (o *UpdateGeneralOptionsOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/generalOptions][%d] updateGeneralOptionsOK  %+v", 200, o.Payload)
}
func (o *UpdateGeneralOptionsOK) GetPayload() *models.GeneralOptionsModel {
	return o.Payload
}

func (o *UpdateGeneralOptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralOptionsModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGeneralOptionsBadRequest creates a UpdateGeneralOptionsBadRequest with default headers values
func NewUpdateGeneralOptionsBadRequest() *UpdateGeneralOptionsBadRequest {
	return &UpdateGeneralOptionsBadRequest{}
}

/* UpdateGeneralOptionsBadRequest describes a response with status code 400, with default header values.

Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.
*/
type UpdateGeneralOptionsBadRequest struct {
	Payload *models.Error
}

func (o *UpdateGeneralOptionsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1/generalOptions][%d] updateGeneralOptionsBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateGeneralOptionsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGeneralOptionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGeneralOptionsUnauthorized creates a UpdateGeneralOptionsUnauthorized with default headers values
func NewUpdateGeneralOptionsUnauthorized() *UpdateGeneralOptionsUnauthorized {
	return &UpdateGeneralOptionsUnauthorized{}
}

/* UpdateGeneralOptionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type UpdateGeneralOptionsUnauthorized struct {
	Payload *models.Error
}

func (o *UpdateGeneralOptionsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1/generalOptions][%d] updateGeneralOptionsUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateGeneralOptionsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGeneralOptionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGeneralOptionsForbidden creates a UpdateGeneralOptionsForbidden with default headers values
func NewUpdateGeneralOptionsForbidden() *UpdateGeneralOptionsForbidden {
	return &UpdateGeneralOptionsForbidden{}
}

/* UpdateGeneralOptionsForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type UpdateGeneralOptionsForbidden struct {
	Payload *models.Error
}

func (o *UpdateGeneralOptionsForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/generalOptions][%d] updateGeneralOptionsForbidden  %+v", 403, o.Payload)
}
func (o *UpdateGeneralOptionsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGeneralOptionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGeneralOptionsNotFound creates a UpdateGeneralOptionsNotFound with default headers values
func NewUpdateGeneralOptionsNotFound() *UpdateGeneralOptionsNotFound {
	return &UpdateGeneralOptionsNotFound{}
}

/* UpdateGeneralOptionsNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type UpdateGeneralOptionsNotFound struct {
	Payload *models.Error
}

func (o *UpdateGeneralOptionsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/generalOptions][%d] updateGeneralOptionsNotFound  %+v", 404, o.Payload)
}
func (o *UpdateGeneralOptionsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGeneralOptionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGeneralOptionsInternalServerError creates a UpdateGeneralOptionsInternalServerError with default headers values
func NewUpdateGeneralOptionsInternalServerError() *UpdateGeneralOptionsInternalServerError {
	return &UpdateGeneralOptionsInternalServerError{}
}

/* UpdateGeneralOptionsInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type UpdateGeneralOptionsInternalServerError struct {
	Payload *models.Error
}

func (o *UpdateGeneralOptionsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1/generalOptions][%d] updateGeneralOptionsInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateGeneralOptionsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGeneralOptionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
