/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ScaleOutRepositorySpec struct for ScaleOutRepositorySpec
type ScaleOutRepositorySpec struct {
	// Name of the scale-out backup repository.
	Name string `json:"name"`
	// Description of the scale-out backup repository.
	Description string `json:"description"`
	// Tag assigned to the scale-out backup repository.
	Tag *string `json:"tag,omitempty"`
	PerformanceTier PerformanceTierSpec `json:"performanceTier"`
	PlacementPolicy *PlacementPolicyModel `json:"placementPolicy,omitempty"`
	CapacityTier *CapacityTierModel `json:"capacityTier,omitempty"`
	ArchiveTier *ArchiveTierModel `json:"archiveTier,omitempty"`
}

// NewScaleOutRepositorySpec instantiates a new ScaleOutRepositorySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScaleOutRepositorySpec(name string, description string, performanceTier PerformanceTierSpec) *ScaleOutRepositorySpec {
	this := ScaleOutRepositorySpec{}
	this.Name = name
	this.Description = description
	this.PerformanceTier = performanceTier
	return &this
}

// NewScaleOutRepositorySpecWithDefaults instantiates a new ScaleOutRepositorySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScaleOutRepositorySpecWithDefaults() *ScaleOutRepositorySpec {
	this := ScaleOutRepositorySpec{}
	return &this
}

// GetName returns the Name field value
func (o *ScaleOutRepositorySpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ScaleOutRepositorySpec) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ScaleOutRepositorySpec) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *ScaleOutRepositorySpec) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ScaleOutRepositorySpec) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ScaleOutRepositorySpec) SetDescription(v string) {
	o.Description = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *ScaleOutRepositorySpec) GetTag() string {
	if o == nil || isNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleOutRepositorySpec) GetTagOk() (*string, bool) {
	if o == nil || isNil(o.Tag) {
    return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *ScaleOutRepositorySpec) HasTag() bool {
	if o != nil && !isNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *ScaleOutRepositorySpec) SetTag(v string) {
	o.Tag = &v
}

// GetPerformanceTier returns the PerformanceTier field value
func (o *ScaleOutRepositorySpec) GetPerformanceTier() PerformanceTierSpec {
	if o == nil {
		var ret PerformanceTierSpec
		return ret
	}

	return o.PerformanceTier
}

// GetPerformanceTierOk returns a tuple with the PerformanceTier field value
// and a boolean to check if the value has been set.
func (o *ScaleOutRepositorySpec) GetPerformanceTierOk() (*PerformanceTierSpec, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PerformanceTier, true
}

// SetPerformanceTier sets field value
func (o *ScaleOutRepositorySpec) SetPerformanceTier(v PerformanceTierSpec) {
	o.PerformanceTier = v
}

// GetPlacementPolicy returns the PlacementPolicy field value if set, zero value otherwise.
func (o *ScaleOutRepositorySpec) GetPlacementPolicy() PlacementPolicyModel {
	if o == nil || isNil(o.PlacementPolicy) {
		var ret PlacementPolicyModel
		return ret
	}
	return *o.PlacementPolicy
}

// GetPlacementPolicyOk returns a tuple with the PlacementPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleOutRepositorySpec) GetPlacementPolicyOk() (*PlacementPolicyModel, bool) {
	if o == nil || isNil(o.PlacementPolicy) {
    return nil, false
	}
	return o.PlacementPolicy, true
}

// HasPlacementPolicy returns a boolean if a field has been set.
func (o *ScaleOutRepositorySpec) HasPlacementPolicy() bool {
	if o != nil && !isNil(o.PlacementPolicy) {
		return true
	}

	return false
}

// SetPlacementPolicy gets a reference to the given PlacementPolicyModel and assigns it to the PlacementPolicy field.
func (o *ScaleOutRepositorySpec) SetPlacementPolicy(v PlacementPolicyModel) {
	o.PlacementPolicy = &v
}

// GetCapacityTier returns the CapacityTier field value if set, zero value otherwise.
func (o *ScaleOutRepositorySpec) GetCapacityTier() CapacityTierModel {
	if o == nil || isNil(o.CapacityTier) {
		var ret CapacityTierModel
		return ret
	}
	return *o.CapacityTier
}

// GetCapacityTierOk returns a tuple with the CapacityTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleOutRepositorySpec) GetCapacityTierOk() (*CapacityTierModel, bool) {
	if o == nil || isNil(o.CapacityTier) {
    return nil, false
	}
	return o.CapacityTier, true
}

// HasCapacityTier returns a boolean if a field has been set.
func (o *ScaleOutRepositorySpec) HasCapacityTier() bool {
	if o != nil && !isNil(o.CapacityTier) {
		return true
	}

	return false
}

// SetCapacityTier gets a reference to the given CapacityTierModel and assigns it to the CapacityTier field.
func (o *ScaleOutRepositorySpec) SetCapacityTier(v CapacityTierModel) {
	o.CapacityTier = &v
}

// GetArchiveTier returns the ArchiveTier field value if set, zero value otherwise.
func (o *ScaleOutRepositorySpec) GetArchiveTier() ArchiveTierModel {
	if o == nil || isNil(o.ArchiveTier) {
		var ret ArchiveTierModel
		return ret
	}
	return *o.ArchiveTier
}

// GetArchiveTierOk returns a tuple with the ArchiveTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleOutRepositorySpec) GetArchiveTierOk() (*ArchiveTierModel, bool) {
	if o == nil || isNil(o.ArchiveTier) {
    return nil, false
	}
	return o.ArchiveTier, true
}

// HasArchiveTier returns a boolean if a field has been set.
func (o *ScaleOutRepositorySpec) HasArchiveTier() bool {
	if o != nil && !isNil(o.ArchiveTier) {
		return true
	}

	return false
}

// SetArchiveTier gets a reference to the given ArchiveTierModel and assigns it to the ArchiveTier field.
func (o *ScaleOutRepositorySpec) SetArchiveTier(v ArchiveTierModel) {
	o.ArchiveTier = &v
}

func (o ScaleOutRepositorySpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if true {
		toSerialize["performanceTier"] = o.PerformanceTier
	}
	if !isNil(o.PlacementPolicy) {
		toSerialize["placementPolicy"] = o.PlacementPolicy
	}
	if !isNil(o.CapacityTier) {
		toSerialize["capacityTier"] = o.CapacityTier
	}
	if !isNil(o.ArchiveTier) {
		toSerialize["archiveTier"] = o.ArchiveTier
	}
	return json.Marshal(toSerialize)
}

type NullableScaleOutRepositorySpec struct {
	value *ScaleOutRepositorySpec
	isSet bool
}

func (v NullableScaleOutRepositorySpec) Get() *ScaleOutRepositorySpec {
	return v.value
}

func (v *NullableScaleOutRepositorySpec) Set(val *ScaleOutRepositorySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableScaleOutRepositorySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableScaleOutRepositorySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScaleOutRepositorySpec(val *ScaleOutRepositorySpec) *NullableScaleOutRepositorySpec {
	return &NullableScaleOutRepositorySpec{value: val, isSet: true}
}

func (v NullableScaleOutRepositorySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScaleOutRepositorySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


