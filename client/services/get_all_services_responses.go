// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// GetAllServicesReader is a Reader for the GetAllServices structure.
type GetAllServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllServicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllServicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllServicesOK creates a GetAllServicesOK with default headers values
func NewGetAllServicesOK() *GetAllServicesOK {
	return &GetAllServicesOK{}
}

/* GetAllServicesOK describes a response with status code 200, with default header values.

OK
*/
type GetAllServicesOK struct {
	Payload *models.ServicesResult
}

func (o *GetAllServicesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/services][%d] getAllServicesOK  %+v", 200, o.Payload)
}
func (o *GetAllServicesOK) GetPayload() *models.ServicesResult {
	return o.Payload
}

func (o *GetAllServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServicesResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllServicesUnauthorized creates a GetAllServicesUnauthorized with default headers values
func NewGetAllServicesUnauthorized() *GetAllServicesUnauthorized {
	return &GetAllServicesUnauthorized{}
}

/* GetAllServicesUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type GetAllServicesUnauthorized struct {
	Payload *models.Error
}

func (o *GetAllServicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1/services][%d] getAllServicesUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAllServicesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllServicesForbidden creates a GetAllServicesForbidden with default headers values
func NewGetAllServicesForbidden() *GetAllServicesForbidden {
	return &GetAllServicesForbidden{}
}

/* GetAllServicesForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type GetAllServicesForbidden struct {
	Payload *models.Error
}

func (o *GetAllServicesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/services][%d] getAllServicesForbidden  %+v", 403, o.Payload)
}
func (o *GetAllServicesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllServicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllServicesInternalServerError creates a GetAllServicesInternalServerError with default headers values
func NewGetAllServicesInternalServerError() *GetAllServicesInternalServerError {
	return &GetAllServicesInternalServerError{}
}

/* GetAllServicesInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type GetAllServicesInternalServerError struct {
	Payload *models.Error
}

func (o *GetAllServicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/services][%d] getAllServicesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAllServicesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllServicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
