/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// GlobalNetworkTrafficRulesModel struct for GlobalNetworkTrafficRulesModel
type GlobalNetworkTrafficRulesModel struct {
	// If *true*, Veeam Backup & Replication uses multiple TCP/IP transfer connection for every job session.
	UseMultipleStreamsPerJob bool `json:"useMultipleStreamsPerJob"`
	// Number of TCP/IP connections per job.
	UploadStreamsCount *int32 `json:"uploadStreamsCount,omitempty"`
	// Array of traffic rules.
	TrafficRules []TrafficRuleModel `json:"trafficRules,omitempty"`
	PreferredNetworks *PreferredNetworksModel `json:"preferredNetworks,omitempty"`
}

// NewGlobalNetworkTrafficRulesModel instantiates a new GlobalNetworkTrafficRulesModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalNetworkTrafficRulesModel(useMultipleStreamsPerJob bool) *GlobalNetworkTrafficRulesModel {
	this := GlobalNetworkTrafficRulesModel{}
	this.UseMultipleStreamsPerJob = useMultipleStreamsPerJob
	return &this
}

// NewGlobalNetworkTrafficRulesModelWithDefaults instantiates a new GlobalNetworkTrafficRulesModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalNetworkTrafficRulesModelWithDefaults() *GlobalNetworkTrafficRulesModel {
	this := GlobalNetworkTrafficRulesModel{}
	return &this
}

// GetUseMultipleStreamsPerJob returns the UseMultipleStreamsPerJob field value
func (o *GlobalNetworkTrafficRulesModel) GetUseMultipleStreamsPerJob() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseMultipleStreamsPerJob
}

// GetUseMultipleStreamsPerJobOk returns a tuple with the UseMultipleStreamsPerJob field value
// and a boolean to check if the value has been set.
func (o *GlobalNetworkTrafficRulesModel) GetUseMultipleStreamsPerJobOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UseMultipleStreamsPerJob, true
}

// SetUseMultipleStreamsPerJob sets field value
func (o *GlobalNetworkTrafficRulesModel) SetUseMultipleStreamsPerJob(v bool) {
	o.UseMultipleStreamsPerJob = v
}

// GetUploadStreamsCount returns the UploadStreamsCount field value if set, zero value otherwise.
func (o *GlobalNetworkTrafficRulesModel) GetUploadStreamsCount() int32 {
	if o == nil || isNil(o.UploadStreamsCount) {
		var ret int32
		return ret
	}
	return *o.UploadStreamsCount
}

// GetUploadStreamsCountOk returns a tuple with the UploadStreamsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalNetworkTrafficRulesModel) GetUploadStreamsCountOk() (*int32, bool) {
	if o == nil || isNil(o.UploadStreamsCount) {
    return nil, false
	}
	return o.UploadStreamsCount, true
}

// HasUploadStreamsCount returns a boolean if a field has been set.
func (o *GlobalNetworkTrafficRulesModel) HasUploadStreamsCount() bool {
	if o != nil && !isNil(o.UploadStreamsCount) {
		return true
	}

	return false
}

// SetUploadStreamsCount gets a reference to the given int32 and assigns it to the UploadStreamsCount field.
func (o *GlobalNetworkTrafficRulesModel) SetUploadStreamsCount(v int32) {
	o.UploadStreamsCount = &v
}

// GetTrafficRules returns the TrafficRules field value if set, zero value otherwise.
func (o *GlobalNetworkTrafficRulesModel) GetTrafficRules() []TrafficRuleModel {
	if o == nil || isNil(o.TrafficRules) {
		var ret []TrafficRuleModel
		return ret
	}
	return o.TrafficRules
}

// GetTrafficRulesOk returns a tuple with the TrafficRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalNetworkTrafficRulesModel) GetTrafficRulesOk() ([]TrafficRuleModel, bool) {
	if o == nil || isNil(o.TrafficRules) {
    return nil, false
	}
	return o.TrafficRules, true
}

// HasTrafficRules returns a boolean if a field has been set.
func (o *GlobalNetworkTrafficRulesModel) HasTrafficRules() bool {
	if o != nil && !isNil(o.TrafficRules) {
		return true
	}

	return false
}

// SetTrafficRules gets a reference to the given []TrafficRuleModel and assigns it to the TrafficRules field.
func (o *GlobalNetworkTrafficRulesModel) SetTrafficRules(v []TrafficRuleModel) {
	o.TrafficRules = v
}

// GetPreferredNetworks returns the PreferredNetworks field value if set, zero value otherwise.
func (o *GlobalNetworkTrafficRulesModel) GetPreferredNetworks() PreferredNetworksModel {
	if o == nil || isNil(o.PreferredNetworks) {
		var ret PreferredNetworksModel
		return ret
	}
	return *o.PreferredNetworks
}

// GetPreferredNetworksOk returns a tuple with the PreferredNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalNetworkTrafficRulesModel) GetPreferredNetworksOk() (*PreferredNetworksModel, bool) {
	if o == nil || isNil(o.PreferredNetworks) {
    return nil, false
	}
	return o.PreferredNetworks, true
}

// HasPreferredNetworks returns a boolean if a field has been set.
func (o *GlobalNetworkTrafficRulesModel) HasPreferredNetworks() bool {
	if o != nil && !isNil(o.PreferredNetworks) {
		return true
	}

	return false
}

// SetPreferredNetworks gets a reference to the given PreferredNetworksModel and assigns it to the PreferredNetworks field.
func (o *GlobalNetworkTrafficRulesModel) SetPreferredNetworks(v PreferredNetworksModel) {
	o.PreferredNetworks = &v
}

func (o GlobalNetworkTrafficRulesModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["useMultipleStreamsPerJob"] = o.UseMultipleStreamsPerJob
	}
	if !isNil(o.UploadStreamsCount) {
		toSerialize["uploadStreamsCount"] = o.UploadStreamsCount
	}
	if !isNil(o.TrafficRules) {
		toSerialize["trafficRules"] = o.TrafficRules
	}
	if !isNil(o.PreferredNetworks) {
		toSerialize["preferredNetworks"] = o.PreferredNetworks
	}
	return json.Marshal(toSerialize)
}

type NullableGlobalNetworkTrafficRulesModel struct {
	value *GlobalNetworkTrafficRulesModel
	isSet bool
}

func (v NullableGlobalNetworkTrafficRulesModel) Get() *GlobalNetworkTrafficRulesModel {
	return v.value
}

func (v *NullableGlobalNetworkTrafficRulesModel) Set(val *GlobalNetworkTrafficRulesModel) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalNetworkTrafficRulesModel) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalNetworkTrafficRulesModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalNetworkTrafficRulesModel(val *GlobalNetworkTrafficRulesModel) *NullableGlobalNetworkTrafficRulesModel {
	return &NullableGlobalNetworkTrafficRulesModel{value: val, isSet: true}
}

func (v NullableGlobalNetworkTrafficRulesModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalNetworkTrafficRulesModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


