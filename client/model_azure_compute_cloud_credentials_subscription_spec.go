/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AzureComputeCloudCredentialsSubscriptionSpec Microsoft Azure compute account. For password-based authentication, specify client secret. For certificate-based authentication, specify certificate and password.
type AzureComputeCloudCredentialsSubscriptionSpec struct {
	// ID of a tenant where the Azure Active Directory application is registered in.
	TenantId string `json:"tenantId"`
	// Client ID assigned to the Azure Active Directory application.
	ApplicationId string `json:"applicationId"`
	// (For password-based authentication) Client secret assigned to the Azure Active Directory application.
	Secret *string `json:"secret,omitempty"`
	Certificate *CertificateUploadSpec `json:"certificate,omitempty"`
}

// NewAzureComputeCloudCredentialsSubscriptionSpec instantiates a new AzureComputeCloudCredentialsSubscriptionSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureComputeCloudCredentialsSubscriptionSpec(tenantId string, applicationId string) *AzureComputeCloudCredentialsSubscriptionSpec {
	this := AzureComputeCloudCredentialsSubscriptionSpec{}
	this.TenantId = tenantId
	this.ApplicationId = applicationId
	return &this
}

// NewAzureComputeCloudCredentialsSubscriptionSpecWithDefaults instantiates a new AzureComputeCloudCredentialsSubscriptionSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureComputeCloudCredentialsSubscriptionSpecWithDefaults() *AzureComputeCloudCredentialsSubscriptionSpec {
	this := AzureComputeCloudCredentialsSubscriptionSpec{}
	return &this
}

// GetTenantId returns the TenantId field value
func (o *AzureComputeCloudCredentialsSubscriptionSpec) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *AzureComputeCloudCredentialsSubscriptionSpec) GetTenantIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *AzureComputeCloudCredentialsSubscriptionSpec) SetTenantId(v string) {
	o.TenantId = v
}

// GetApplicationId returns the ApplicationId field value
func (o *AzureComputeCloudCredentialsSubscriptionSpec) GetApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *AzureComputeCloudCredentialsSubscriptionSpec) GetApplicationIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *AzureComputeCloudCredentialsSubscriptionSpec) SetApplicationId(v string) {
	o.ApplicationId = v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *AzureComputeCloudCredentialsSubscriptionSpec) GetSecret() string {
	if o == nil || isNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureComputeCloudCredentialsSubscriptionSpec) GetSecretOk() (*string, bool) {
	if o == nil || isNil(o.Secret) {
    return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *AzureComputeCloudCredentialsSubscriptionSpec) HasSecret() bool {
	if o != nil && !isNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *AzureComputeCloudCredentialsSubscriptionSpec) SetSecret(v string) {
	o.Secret = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *AzureComputeCloudCredentialsSubscriptionSpec) GetCertificate() CertificateUploadSpec {
	if o == nil || isNil(o.Certificate) {
		var ret CertificateUploadSpec
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureComputeCloudCredentialsSubscriptionSpec) GetCertificateOk() (*CertificateUploadSpec, bool) {
	if o == nil || isNil(o.Certificate) {
    return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *AzureComputeCloudCredentialsSubscriptionSpec) HasCertificate() bool {
	if o != nil && !isNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given CertificateUploadSpec and assigns it to the Certificate field.
func (o *AzureComputeCloudCredentialsSubscriptionSpec) SetCertificate(v CertificateUploadSpec) {
	o.Certificate = &v
}

func (o AzureComputeCloudCredentialsSubscriptionSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tenantId"] = o.TenantId
	}
	if true {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if !isNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !isNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	return json.Marshal(toSerialize)
}

type NullableAzureComputeCloudCredentialsSubscriptionSpec struct {
	value *AzureComputeCloudCredentialsSubscriptionSpec
	isSet bool
}

func (v NullableAzureComputeCloudCredentialsSubscriptionSpec) Get() *AzureComputeCloudCredentialsSubscriptionSpec {
	return v.value
}

func (v *NullableAzureComputeCloudCredentialsSubscriptionSpec) Set(val *AzureComputeCloudCredentialsSubscriptionSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureComputeCloudCredentialsSubscriptionSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureComputeCloudCredentialsSubscriptionSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureComputeCloudCredentialsSubscriptionSpec(val *AzureComputeCloudCredentialsSubscriptionSpec) *NullableAzureComputeCloudCredentialsSubscriptionSpec {
	return &NullableAzureComputeCloudCredentialsSubscriptionSpec{value: val, isSet: true}
}

func (v NullableAzureComputeCloudCredentialsSubscriptionSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureComputeCloudCredentialsSubscriptionSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


