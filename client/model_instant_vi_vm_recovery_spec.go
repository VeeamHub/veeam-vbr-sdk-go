/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InstantViVMRecoverySpec Instant Recovery settings.
type InstantViVMRecoverySpec struct {
	// ID of the restore point.
	ObjectRestorePointId string `json:"objectRestorePointId"`
	Type EInstantVMRecoveryModeType `json:"type"`
	// If *true*, Veeam Backup & Replication restores tags that were assigned to the original VM, and assign them to the restored VM.
	VmTagsRestoreEnabled *bool `json:"VmTagsRestoreEnabled,omitempty"`
	SecureRestore SecureRestoreSpec `json:"secureRestore"`
	// If *true*, the restored VM is connected to the network.
	NicsEnabled *bool `json:"nicsEnabled,omitempty"`
	// If *true*, Veeam Backup & Replication starts the restored VM on the target host.
	PowerUp *bool `json:"powerUp,omitempty"`
	// Reason for restoring the VM.
	Reason *string `json:"reason,omitempty"`
}

// NewInstantViVMRecoverySpec instantiates a new InstantViVMRecoverySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstantViVMRecoverySpec(objectRestorePointId string, type_ EInstantVMRecoveryModeType, secureRestore SecureRestoreSpec) *InstantViVMRecoverySpec {
	this := InstantViVMRecoverySpec{}
	this.ObjectRestorePointId = objectRestorePointId
	this.Type = type_
	this.SecureRestore = secureRestore
	return &this
}

// NewInstantViVMRecoverySpecWithDefaults instantiates a new InstantViVMRecoverySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstantViVMRecoverySpecWithDefaults() *InstantViVMRecoverySpec {
	this := InstantViVMRecoverySpec{}
	return &this
}

// GetObjectRestorePointId returns the ObjectRestorePointId field value
func (o *InstantViVMRecoverySpec) GetObjectRestorePointId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectRestorePointId
}

// GetObjectRestorePointIdOk returns a tuple with the ObjectRestorePointId field value
// and a boolean to check if the value has been set.
func (o *InstantViVMRecoverySpec) GetObjectRestorePointIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ObjectRestorePointId, true
}

// SetObjectRestorePointId sets field value
func (o *InstantViVMRecoverySpec) SetObjectRestorePointId(v string) {
	o.ObjectRestorePointId = v
}

// GetType returns the Type field value
func (o *InstantViVMRecoverySpec) GetType() EInstantVMRecoveryModeType {
	if o == nil {
		var ret EInstantVMRecoveryModeType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InstantViVMRecoverySpec) GetTypeOk() (*EInstantVMRecoveryModeType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InstantViVMRecoverySpec) SetType(v EInstantVMRecoveryModeType) {
	o.Type = v
}

// GetVmTagsRestoreEnabled returns the VmTagsRestoreEnabled field value if set, zero value otherwise.
func (o *InstantViVMRecoverySpec) GetVmTagsRestoreEnabled() bool {
	if o == nil || isNil(o.VmTagsRestoreEnabled) {
		var ret bool
		return ret
	}
	return *o.VmTagsRestoreEnabled
}

// GetVmTagsRestoreEnabledOk returns a tuple with the VmTagsRestoreEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstantViVMRecoverySpec) GetVmTagsRestoreEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.VmTagsRestoreEnabled) {
    return nil, false
	}
	return o.VmTagsRestoreEnabled, true
}

// HasVmTagsRestoreEnabled returns a boolean if a field has been set.
func (o *InstantViVMRecoverySpec) HasVmTagsRestoreEnabled() bool {
	if o != nil && !isNil(o.VmTagsRestoreEnabled) {
		return true
	}

	return false
}

// SetVmTagsRestoreEnabled gets a reference to the given bool and assigns it to the VmTagsRestoreEnabled field.
func (o *InstantViVMRecoverySpec) SetVmTagsRestoreEnabled(v bool) {
	o.VmTagsRestoreEnabled = &v
}

// GetSecureRestore returns the SecureRestore field value
func (o *InstantViVMRecoverySpec) GetSecureRestore() SecureRestoreSpec {
	if o == nil {
		var ret SecureRestoreSpec
		return ret
	}

	return o.SecureRestore
}

// GetSecureRestoreOk returns a tuple with the SecureRestore field value
// and a boolean to check if the value has been set.
func (o *InstantViVMRecoverySpec) GetSecureRestoreOk() (*SecureRestoreSpec, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SecureRestore, true
}

// SetSecureRestore sets field value
func (o *InstantViVMRecoverySpec) SetSecureRestore(v SecureRestoreSpec) {
	o.SecureRestore = v
}

// GetNicsEnabled returns the NicsEnabled field value if set, zero value otherwise.
func (o *InstantViVMRecoverySpec) GetNicsEnabled() bool {
	if o == nil || isNil(o.NicsEnabled) {
		var ret bool
		return ret
	}
	return *o.NicsEnabled
}

// GetNicsEnabledOk returns a tuple with the NicsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstantViVMRecoverySpec) GetNicsEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.NicsEnabled) {
    return nil, false
	}
	return o.NicsEnabled, true
}

// HasNicsEnabled returns a boolean if a field has been set.
func (o *InstantViVMRecoverySpec) HasNicsEnabled() bool {
	if o != nil && !isNil(o.NicsEnabled) {
		return true
	}

	return false
}

// SetNicsEnabled gets a reference to the given bool and assigns it to the NicsEnabled field.
func (o *InstantViVMRecoverySpec) SetNicsEnabled(v bool) {
	o.NicsEnabled = &v
}

// GetPowerUp returns the PowerUp field value if set, zero value otherwise.
func (o *InstantViVMRecoverySpec) GetPowerUp() bool {
	if o == nil || isNil(o.PowerUp) {
		var ret bool
		return ret
	}
	return *o.PowerUp
}

// GetPowerUpOk returns a tuple with the PowerUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstantViVMRecoverySpec) GetPowerUpOk() (*bool, bool) {
	if o == nil || isNil(o.PowerUp) {
    return nil, false
	}
	return o.PowerUp, true
}

// HasPowerUp returns a boolean if a field has been set.
func (o *InstantViVMRecoverySpec) HasPowerUp() bool {
	if o != nil && !isNil(o.PowerUp) {
		return true
	}

	return false
}

// SetPowerUp gets a reference to the given bool and assigns it to the PowerUp field.
func (o *InstantViVMRecoverySpec) SetPowerUp(v bool) {
	o.PowerUp = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *InstantViVMRecoverySpec) GetReason() string {
	if o == nil || isNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstantViVMRecoverySpec) GetReasonOk() (*string, bool) {
	if o == nil || isNil(o.Reason) {
    return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *InstantViVMRecoverySpec) HasReason() bool {
	if o != nil && !isNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *InstantViVMRecoverySpec) SetReason(v string) {
	o.Reason = &v
}

func (o InstantViVMRecoverySpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["objectRestorePointId"] = o.ObjectRestorePointId
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.VmTagsRestoreEnabled) {
		toSerialize["VmTagsRestoreEnabled"] = o.VmTagsRestoreEnabled
	}
	if true {
		toSerialize["secureRestore"] = o.SecureRestore
	}
	if !isNil(o.NicsEnabled) {
		toSerialize["nicsEnabled"] = o.NicsEnabled
	}
	if !isNil(o.PowerUp) {
		toSerialize["powerUp"] = o.PowerUp
	}
	if !isNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableInstantViVMRecoverySpec struct {
	value *InstantViVMRecoverySpec
	isSet bool
}

func (v NullableInstantViVMRecoverySpec) Get() *InstantViVMRecoverySpec {
	return v.value
}

func (v *NullableInstantViVMRecoverySpec) Set(val *InstantViVMRecoverySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableInstantViVMRecoverySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableInstantViVMRecoverySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstantViVMRecoverySpec(val *InstantViVMRecoverySpec) *NullableInstantViVMRecoverySpec {
	return &NullableInstantViVMRecoverySpec{value: val, isSet: true}
}

func (v NullableInstantViVMRecoverySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstantViVMRecoverySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


