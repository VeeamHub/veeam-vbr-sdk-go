/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AmazonS3StorageAccountImportModel Account used to access the Amazon S3 storage.
type AmazonS3StorageAccountImportModel struct {
	Credentials CloudCredentialsImportModel `json:"credentials"`
	RegionType EAmazonRegionType `json:"regionType"`
	ConnectionSettings ObjectStorageConnectionImportSpec `json:"connectionSettings"`
}

// NewAmazonS3StorageAccountImportModel instantiates a new AmazonS3StorageAccountImportModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmazonS3StorageAccountImportModel(credentials CloudCredentialsImportModel, regionType EAmazonRegionType, connectionSettings ObjectStorageConnectionImportSpec) *AmazonS3StorageAccountImportModel {
	this := AmazonS3StorageAccountImportModel{}
	this.Credentials = credentials
	this.RegionType = regionType
	this.ConnectionSettings = connectionSettings
	return &this
}

// NewAmazonS3StorageAccountImportModelWithDefaults instantiates a new AmazonS3StorageAccountImportModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmazonS3StorageAccountImportModelWithDefaults() *AmazonS3StorageAccountImportModel {
	this := AmazonS3StorageAccountImportModel{}
	return &this
}

// GetCredentials returns the Credentials field value
func (o *AmazonS3StorageAccountImportModel) GetCredentials() CloudCredentialsImportModel {
	if o == nil {
		var ret CloudCredentialsImportModel
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *AmazonS3StorageAccountImportModel) GetCredentialsOk() (*CloudCredentialsImportModel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Credentials, true
}

// SetCredentials sets field value
func (o *AmazonS3StorageAccountImportModel) SetCredentials(v CloudCredentialsImportModel) {
	o.Credentials = v
}

// GetRegionType returns the RegionType field value
func (o *AmazonS3StorageAccountImportModel) GetRegionType() EAmazonRegionType {
	if o == nil {
		var ret EAmazonRegionType
		return ret
	}

	return o.RegionType
}

// GetRegionTypeOk returns a tuple with the RegionType field value
// and a boolean to check if the value has been set.
func (o *AmazonS3StorageAccountImportModel) GetRegionTypeOk() (*EAmazonRegionType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RegionType, true
}

// SetRegionType sets field value
func (o *AmazonS3StorageAccountImportModel) SetRegionType(v EAmazonRegionType) {
	o.RegionType = v
}

// GetConnectionSettings returns the ConnectionSettings field value
func (o *AmazonS3StorageAccountImportModel) GetConnectionSettings() ObjectStorageConnectionImportSpec {
	if o == nil {
		var ret ObjectStorageConnectionImportSpec
		return ret
	}

	return o.ConnectionSettings
}

// GetConnectionSettingsOk returns a tuple with the ConnectionSettings field value
// and a boolean to check if the value has been set.
func (o *AmazonS3StorageAccountImportModel) GetConnectionSettingsOk() (*ObjectStorageConnectionImportSpec, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ConnectionSettings, true
}

// SetConnectionSettings sets field value
func (o *AmazonS3StorageAccountImportModel) SetConnectionSettings(v ObjectStorageConnectionImportSpec) {
	o.ConnectionSettings = v
}

func (o AmazonS3StorageAccountImportModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["credentials"] = o.Credentials
	}
	if true {
		toSerialize["regionType"] = o.RegionType
	}
	if true {
		toSerialize["connectionSettings"] = o.ConnectionSettings
	}
	return json.Marshal(toSerialize)
}

type NullableAmazonS3StorageAccountImportModel struct {
	value *AmazonS3StorageAccountImportModel
	isSet bool
}

func (v NullableAmazonS3StorageAccountImportModel) Get() *AmazonS3StorageAccountImportModel {
	return v.value
}

func (v *NullableAmazonS3StorageAccountImportModel) Set(val *AmazonS3StorageAccountImportModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAmazonS3StorageAccountImportModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAmazonS3StorageAccountImportModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmazonS3StorageAccountImportModel(val *AmazonS3StorageAccountImportModel) *NullableAmazonS3StorageAccountImportModel {
	return &NullableAmazonS3StorageAccountImportModel{value: val, isSet: true}
}

func (v NullableAmazonS3StorageAccountImportModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmazonS3StorageAccountImportModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


