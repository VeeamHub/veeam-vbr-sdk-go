/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AzureComputeCloudNativeApplicationModel struct for AzureComputeCloudNativeApplicationModel
type AzureComputeCloudNativeApplicationModel struct {
	CloudNativeApplicationModel
	// Client ID assigned to the Azure Active Directory application.
	ApplicationId string `json:"applicationId"`
	// Client secret assigned to the Azure Active Directory application.
	Secret string `json:"secret"`
	// ID of a tenant where the Azure Active Directory application is registered in.
	TenantId string `json:"tenantId"`
}

// NewAzureComputeCloudNativeApplicationModel instantiates a new AzureComputeCloudNativeApplicationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureComputeCloudNativeApplicationModel(applicationId string, secret string, tenantId string, type_ ECloudCredentialsType) *AzureComputeCloudNativeApplicationModel {
	this := AzureComputeCloudNativeApplicationModel{}
	this.Type = type_
	this.ApplicationId = applicationId
	this.Secret = secret
	this.TenantId = tenantId
	return &this
}

// NewAzureComputeCloudNativeApplicationModelWithDefaults instantiates a new AzureComputeCloudNativeApplicationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureComputeCloudNativeApplicationModelWithDefaults() *AzureComputeCloudNativeApplicationModel {
	this := AzureComputeCloudNativeApplicationModel{}
	return &this
}

// GetApplicationId returns the ApplicationId field value
func (o *AzureComputeCloudNativeApplicationModel) GetApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *AzureComputeCloudNativeApplicationModel) GetApplicationIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *AzureComputeCloudNativeApplicationModel) SetApplicationId(v string) {
	o.ApplicationId = v
}

// GetSecret returns the Secret field value
func (o *AzureComputeCloudNativeApplicationModel) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *AzureComputeCloudNativeApplicationModel) GetSecretOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *AzureComputeCloudNativeApplicationModel) SetSecret(v string) {
	o.Secret = v
}

// GetTenantId returns the TenantId field value
func (o *AzureComputeCloudNativeApplicationModel) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *AzureComputeCloudNativeApplicationModel) GetTenantIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *AzureComputeCloudNativeApplicationModel) SetTenantId(v string) {
	o.TenantId = v
}

func (o AzureComputeCloudNativeApplicationModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedCloudNativeApplicationModel, errCloudNativeApplicationModel := json.Marshal(o.CloudNativeApplicationModel)
	if errCloudNativeApplicationModel != nil {
		return []byte{}, errCloudNativeApplicationModel
	}
	errCloudNativeApplicationModel = json.Unmarshal([]byte(serializedCloudNativeApplicationModel), &toSerialize)
	if errCloudNativeApplicationModel != nil {
		return []byte{}, errCloudNativeApplicationModel
	}
	if true {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if true {
		toSerialize["secret"] = o.Secret
	}
	if true {
		toSerialize["tenantId"] = o.TenantId
	}
	return json.Marshal(toSerialize)
}

type NullableAzureComputeCloudNativeApplicationModel struct {
	value *AzureComputeCloudNativeApplicationModel
	isSet bool
}

func (v NullableAzureComputeCloudNativeApplicationModel) Get() *AzureComputeCloudNativeApplicationModel {
	return v.value
}

func (v *NullableAzureComputeCloudNativeApplicationModel) Set(val *AzureComputeCloudNativeApplicationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureComputeCloudNativeApplicationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureComputeCloudNativeApplicationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureComputeCloudNativeApplicationModel(val *AzureComputeCloudNativeApplicationModel) *NullableAzureComputeCloudNativeApplicationModel {
	return &NullableAzureComputeCloudNativeApplicationModel{value: val, isSet: true}
}

func (v NullableAzureComputeCloudNativeApplicationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureComputeCloudNativeApplicationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


