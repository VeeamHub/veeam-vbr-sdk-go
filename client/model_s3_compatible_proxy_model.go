/*
Veeam Backup & Replication REST API

This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.

API version: 1.1-rev0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// S3CompatibleProxyModel Proxy appliance for the S3 compatible storage.
type S3CompatibleProxyModel struct {
	// ID of a managed server used as a proxy appliance.
	ManagedServerId string `json:"managedServerId"`
}

// NewS3CompatibleProxyModel instantiates a new S3CompatibleProxyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3CompatibleProxyModel(managedServerId string) *S3CompatibleProxyModel {
	this := S3CompatibleProxyModel{}
	this.ManagedServerId = managedServerId
	return &this
}

// NewS3CompatibleProxyModelWithDefaults instantiates a new S3CompatibleProxyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3CompatibleProxyModelWithDefaults() *S3CompatibleProxyModel {
	this := S3CompatibleProxyModel{}
	return &this
}

// GetManagedServerId returns the ManagedServerId field value
func (o *S3CompatibleProxyModel) GetManagedServerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ManagedServerId
}

// GetManagedServerIdOk returns a tuple with the ManagedServerId field value
// and a boolean to check if the value has been set.
func (o *S3CompatibleProxyModel) GetManagedServerIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ManagedServerId, true
}

// SetManagedServerId sets field value
func (o *S3CompatibleProxyModel) SetManagedServerId(v string) {
	o.ManagedServerId = v
}

func (o S3CompatibleProxyModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["managedServerId"] = o.ManagedServerId
	}
	return json.Marshal(toSerialize)
}

type NullableS3CompatibleProxyModel struct {
	value *S3CompatibleProxyModel
	isSet bool
}

func (v NullableS3CompatibleProxyModel) Get() *S3CompatibleProxyModel {
	return v.value
}

func (v *NullableS3CompatibleProxyModel) Set(val *S3CompatibleProxyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableS3CompatibleProxyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableS3CompatibleProxyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3CompatibleProxyModel(val *S3CompatibleProxyModel) *NullableS3CompatibleProxyModel {
	return &NullableS3CompatibleProxyModel{value: val, isSet: true}
}

func (v NullableS3CompatibleProxyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3CompatibleProxyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


