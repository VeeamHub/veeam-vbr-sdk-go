// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/veeamhub/veeam-vbr-sdk-go/models"
)

// DeleteRepositoryReader is a Reader for the DeleteRepository structure.
type DeleteRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRepositoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteRepositoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRepositoryNoContent creates a DeleteRepositoryNoContent with default headers values
func NewDeleteRepositoryNoContent() *DeleteRepositoryNoContent {
	return &DeleteRepositoryNoContent{}
}

/* DeleteRepositoryNoContent describes a response with status code 204, with default header values.

Removed
*/
type DeleteRepositoryNoContent struct {
	Payload models.EmptySuccessResponse
}

func (o *DeleteRepositoryNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/backupInfrastructure/repositories/{id}][%d] deleteRepositoryNoContent  %+v", 204, o.Payload)
}
func (o *DeleteRepositoryNoContent) GetPayload() models.EmptySuccessResponse {
	return o.Payload
}

func (o *DeleteRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRepositoryUnauthorized creates a DeleteRepositoryUnauthorized with default headers values
func NewDeleteRepositoryUnauthorized() *DeleteRepositoryUnauthorized {
	return &DeleteRepositoryUnauthorized{}
}

/* DeleteRepositoryUnauthorized describes a response with status code 401, with default header values.

Unauthorized. The authorization header has been expected but not found (or found but is expired).
*/
type DeleteRepositoryUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/backupInfrastructure/repositories/{id}][%d] deleteRepositoryUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteRepositoryUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRepositoryForbidden creates a DeleteRepositoryForbidden with default headers values
func NewDeleteRepositoryForbidden() *DeleteRepositoryForbidden {
	return &DeleteRepositoryForbidden{}
}

/* DeleteRepositoryForbidden describes a response with status code 403, with default header values.

Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.
*/
type DeleteRepositoryForbidden struct {
	Payload *models.Error
}

func (o *DeleteRepositoryForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/backupInfrastructure/repositories/{id}][%d] deleteRepositoryForbidden  %+v", 403, o.Payload)
}
func (o *DeleteRepositoryForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRepositoryNotFound creates a DeleteRepositoryNotFound with default headers values
func NewDeleteRepositoryNotFound() *DeleteRepositoryNotFound {
	return &DeleteRepositoryNotFound{}
}

/* DeleteRepositoryNotFound describes a response with status code 404, with default header values.

Not found. No object was found with the path parameter specified in the request.
*/
type DeleteRepositoryNotFound struct {
	Payload *models.Error
}

func (o *DeleteRepositoryNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/backupInfrastructure/repositories/{id}][%d] deleteRepositoryNotFound  %+v", 404, o.Payload)
}
func (o *DeleteRepositoryNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRepositoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRepositoryInternalServerError creates a DeleteRepositoryInternalServerError with default headers values
func NewDeleteRepositoryInternalServerError() *DeleteRepositoryInternalServerError {
	return &DeleteRepositoryInternalServerError{}
}

/* DeleteRepositoryInternalServerError describes a response with status code 500, with default header values.

Internal server error. The request has been received but could not be completed because of an internal error at the server side.
*/
type DeleteRepositoryInternalServerError struct {
	Payload *models.Error
}

func (o *DeleteRepositoryInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1/backupInfrastructure/repositories/{id}][%d] deleteRepositoryInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteRepositoryInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRepositoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
