components:
  parameters:
    apiVersionParam:
      description: "Version and revision of the client REST API. Must be in the following format&#58; `<version>-<revision>`."
      in: "header"
      name: "x-api-version"
      required: true
      schema:
        default: "1.1-rev0"
        type: "string"
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: "Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid."
    Deleted:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmptySuccessResponse'
      description: "Removed."
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: "Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request."
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: "Internal server error. The request has been received but could not be completed because of an internal error at the server side."
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: "Not found. No object was found with the path parameter specified in the request."
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: "Unauthorized. The authorization header has been expected but not found (or found but is expired)."
  schemas:
    ActiveFullSettingsModel:
      description: "Active full backup settings."
      properties:
        isEnabled:
          description: "If *true*, active full backups are enabled."
          type: "boolean"
        monthly:
          $ref: '#/components/schemas/AdvancedStorageScheduleMonthlyModel'
        weekly:
          $ref: '#/components/schemas/AdvancedStorageScheduleWeeklyModel'
      required:
        - isEnabled
      type: "object"
    AdvancedSmtpOptionsModel:
      description: "Advanced global email notification settings."
      properties:
        SSLEnabled:
          description: "If *true*, secure connection for email operations is used."
          type: "boolean"
        authRequired:
          description: "If *true*, the `credentialsId` credentials are used to connect to the SMTP server."
          type: "boolean"
        credentialsId:
          description: "ID of the credentials used to connect to the server."
          format: "uuid"
          type: "string"
        port:
          description: "Port number for the SMTP server."
          format: "int32"
          type: "integer"
        timeoutMs:
          description: "Connection timeout for the SMTP server."
          format: "int32"
          type: "integer"
      required:
        - port
        - timeoutMs
        - SSLEnabled
        - authRequired
      type: "object"
    AdvancedStorageScheduleMonthlyModel:
      description: "Monthly schedule settings."
      properties:
        dayNumberInMonth:
          $ref: '#/components/schemas/EDayNumberInMonth'
        dayOfMonths:
          description: "Day of the month when the operation is performed."
          type: "integer"
        dayOfWeek:
          $ref: '#/components/schemas/EDayOfWeek'
        isEnabled:
          description: "If *true*, the monthly schedule is enabled."
          type: "boolean"
        months:
          description: "Months when the operation is performed."
          items:
            $ref: '#/components/schemas/EMonth'
          type: "array"
          uniqueItems: true
      required:
        - isEnabled
      type: "object"
    AdvancedStorageScheduleWeeklyModel:
      description: "Weekly schedule settings."
      properties:
        days:
          description: "Days of the week when the operation is performed."
          items:
            $ref: '#/components/schemas/EDayOfWeek'
          type: "array"
          uniqueItems: true
        isEnabled:
          default: false
          description: "If *true*, the weekly schedule is enabled."
          type: "boolean"
      required:
        - isEnabled
      type: "object"
    AmazonCloudCredentialsImportSpec:
      properties:
        accessKey:
          description: "ID of the access key."
          type: "string"
        description:
          description: "Description of the cloud credentials record."
          type: "string"
        secretKey:
          description: "Secret key."
          type: "string"
        tag:
          description: "Tag used to identify the cloud credentials record."
          type: "string"
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
        - type
        - tag
        - accessKey
        - secretKey
      type: "object"
    AmazonCloudCredentialsModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudCredentialsModel'
        - properties:
            accessKey:
              description: "ID of the access key."
              type: "string"
            tag:
              description: "Tag used to identify the cloud credentials record."
              type: "string"
          required:
            - accessKey
          type: "object"
    AmazonCloudCredentialsSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudCredentialsSpec'
        - properties:
            accessKey:
              description: "ID of the access key."
              type: "string"
            secretKey:
              description: "Secret key."
              type: "string"
            tag:
              description: "Tag used to identify the cloud credentials record."
              type: "string"
          required:
            - accessKey
            - secretKey
          type: "object"
    AmazonEC2BrowserFilters:
      description: "Amazon EC2 hierarchy filters."
      properties:
        regionId:
          description: "Filters Amazon EC2 resources by AWS region."
          type: "string"
      required:
        - regionId
      type: "object"
    AmazonEC2BrowserModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserModel'
        - properties:
            hostId:
              description: "ID of a server used to connect to the object storage."
              format: "uuid"
              type: "string"
            regionType:
              $ref: '#/components/schemas/EAmazonRegionType'
            regions:
              description: "Array of regions."
              items:
                $ref: '#/components/schemas/AmazonEC2RegionBrowserModel'
              type: "array"
          required:
            - hostId
            - regionType
            - regions
          type: "object"
    AmazonEC2BrowserSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserSpec'
        - properties:
            filters:
              $ref: '#/components/schemas/AmazonEC2BrowserFilters'
            regionType:
              $ref: '#/components/schemas/EAmazonRegionType'
          required:
            - regionType
          type: "object"
    AmazonEC2RegionBrowserModel:
      properties:
        instanceTypes:
          description: "Array of Amazon instance types."
          items:
            type: "string"
          type: "array"
        regionId:
          description: "Region ID."
          type: "string"
        vpcs:
          description: "Array of Amazon Virtual Private Cloud (Amazon VPC) networks."
          items:
            $ref: '#/components/schemas/AmazonVPCBrowserModel'
          type: "array"
      type: "object"
    AmazonS3BrowserDestinationSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserNewFolderSpec'
        - properties:
            bucketName:
              description: "Name of the bucket where you want to store your backup data."
              type: "string"
            folderType:
              $ref: '#/components/schemas/ECloudBrowserFolderType'
            hostId:
              description: "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionId:
              description: "AWS region where the Amazon S3 bucket is located."
              type: "string"
            regionType:
              $ref: '#/components/schemas/EAmazonRegionType'
          required:
            - regionType
            - regionId
            - bucketName
          type: "object"
    AmazonS3BrowserModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserModel'
        - properties:
            hostId:
              description: "ID of a server used to connect to the object storage."
              format: "uuid"
              type: "string"
            regionType:
              $ref: '#/components/schemas/EAmazonRegionType'
            regions:
              description: "Array of AWS regions belonged to the region type."
              items:
                $ref: '#/components/schemas/AmazonS3RegionBrowserModel'
              type: "array"
          required:
            - hostId
            - regionType
          type: "object"
    AmazonS3BrowserSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserSpec'
        - properties:
            filters:
              $ref: '#/components/schemas/AmazonS3CloudBrowserFilters'
            folderType:
              $ref: '#/components/schemas/ECloudBrowserFolderType'
            gatewayServerId:
              description: "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionType:
              $ref: '#/components/schemas/EAmazonRegionType'
          required:
            - regionType
          type: "object"
    AmazonS3BucketBrowserModel:
      properties:
        folders:
          description: "Array of folders located in the bucket."
          items:
            type: "string"
          type: "array"
        name:
          description: "Bucket name."
          type: "string"
      type: "object"
    AmazonS3CloudBrowserFilters:
      description: "Amazon S3 hierarchy filters."
      properties:
        bucketName:
          description: "Filters buckets by bucket name."
          type: "string"
        regionId:
          description: "Filters buckets by AWS region where an Amazon S3 data center is located."
          type: "string"
      required:
        - regionId
      type: "object"
    AmazonS3GlacierStorageBucketModel:
      description: "Amazon S3 Glacier bucket where backup data is stored."
      properties:
        bucketName:
          description: "Name of an Amazon S3 Glacier bucket."
          type: "string"
        folderName:
          description: "Name of the folder that the object storage repository is mapped to."
          type: "string"
        immutabilityEnabled:
          description: "If *true*, storage immutability is enabled."
          type: "boolean"
        regionId:
          description: "ID of a region where the Amazon S3 bucket is located."
          type: "string"
        useDeepArchive:
          description: "If *true*, Glacier Deep Archive is used for backups with the retention policy over 180 days."
          type: "boolean"
      required:
        - regionId
        - bucketName
        - folderName
      type: "object"
    AmazonS3GlacierStorageImportSpec:
      properties:
        account:
          $ref: '#/components/schemas/AmazonS3StorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/AmazonS3GlacierStorageBucketModel'
        description:
          description: "Description of the object storage repository."
          type: "string"
        name:
          description: "Name of the object storage repository."
          type: "string"
        proxyAppliance:
          $ref: '#/components/schemas/AmazonS3StorageProxyApplianceModel'
        tag:
          description: "Tag that identifies the object storage repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - name
        - description
        - tag
        - type
        - account
        - bucket
        - mountServer
      type: "object"
    AmazonS3GlacierStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            account:
              $ref: '#/components/schemas/AmazonS3StorageAccountModel'
            bucket:
              $ref: '#/components/schemas/AmazonS3GlacierStorageBucketModel'
            proxyAppliance:
              $ref: '#/components/schemas/AmazonS3StorageProxyApplianceModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "Amazon S3 Glacier storage."
    AmazonS3GlacierStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            account:
              $ref: '#/components/schemas/AmazonS3StorageAccountModel'
            bucket:
              $ref: '#/components/schemas/AmazonS3GlacierStorageBucketModel'
            proxyAppliance:
              $ref: '#/components/schemas/AmazonS3StorageProxyApplianceModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "Amazon S3 Glacier storage."
    AmazonS3IAStorageModel:
      description: "Standard Infrequent Access."
      properties:
        isEnabled:
          description: "If *true*, Standard Infrequent Access is enabled."
          type: "boolean"
        singleZoneEnabled:
          description: "If *true*, Amazon S3 One Zone-Infrequent Access is enabled."
          type: "boolean"
      type: "object"
    AmazonS3RegionBrowserModel:
      description: "AWS region."
      properties:
        buckets:
          description: "Array of buckets located in the region."
          items:
            $ref: '#/components/schemas/AmazonS3BucketBrowserModel'
          type: "array"
        id:
          description: "Region ID."
          type: "string"
        name:
          description: "Region name."
          type: "string"
      type: "object"
    AmazonS3StorageAccountImportModel:
      description: "Account used to access the Amazon S3 storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionType:
          $ref: '#/components/schemas/EAmazonRegionType'
      required:
        - credentials
        - regionType
        - connectionSettings
      type: "object"
    AmazonS3StorageAccountModel:
      description: "Account used to access the Amazon S3 storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
        credentialsId:
          description: "ID of the cloud credentials record."
          format: "uuid"
          type: "string"
        regionType:
          $ref: '#/components/schemas/EAmazonRegionType'
      required:
        - credentialsId
        - regionType
        - gatewayServer
      type: "object"
    AmazonS3StorageBucketModel:
      description: "Amazon S3 bucket where backup data is stored."
      properties:
        bucketName:
          description: "Name of an Amazon S3 bucket."
          type: "string"
        folderName:
          description: "Name of the folder that the object storage repository is mapped to."
          type: "string"
        immutability:
          $ref: '#/components/schemas/ObjectStorageImmutabilityModel'
        infrequentAccessStorage:
          $ref: '#/components/schemas/AmazonS3IAStorageModel'
        regionId:
          description: "ID of a region where the Amazon S3 bucket is located."
          type: "string"
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
      required:
        - regionId
        - bucketName
        - folderName
      type: "object"
    AmazonS3StorageImportSpec:
      properties:
        account:
          $ref: '#/components/schemas/AmazonS3StorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/AmazonS3StorageBucketModel'
        description:
          description: "Description of the object storage repository."
          type: "string"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the object storage repository."
          type: "string"
        proxyAppliance:
          $ref: '#/components/schemas/AmazonS3StorageProxyApplianceModel'
        tag:
          description: "Tag that identifies the object storage repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - name
        - description
        - tag
        - type
        - account
        - bucket
        - mountServer
      type: "object"
    AmazonS3StorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            account:
              $ref: '#/components/schemas/AmazonS3StorageAccountModel'
            bucket:
              $ref: '#/components/schemas/AmazonS3StorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            proxyAppliance:
              $ref: '#/components/schemas/AmazonS3StorageProxyApplianceModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "Amazon S3 storage."
    AmazonS3StorageProxyApplianceModel:
      description: "Amazon S3 proxy appliance."
      properties:
        ec2InstanceType:
          description: "EC2 instance type for the proxy appliance."
          type: "string"
        redirectorPort:
          description: "TCP port used to route requests between the proxy appliance and backup infrastructure components."
          type: "integer"
        securityGroup:
          description: "Security group associated with the proxy appliance."
          type: "string"
        subnet:
          description: "Subnet for the proxy appliance."
          type: "string"
        vpc:
          description: "Amazon VPC where Veeam Backup & Replication launches the target instance."
          type: "string"
      type: "object"
    AmazonS3StorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            account:
              $ref: '#/components/schemas/AmazonS3StorageAccountModel'
            bucket:
              $ref: '#/components/schemas/AmazonS3StorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            proxyAppliance:
              $ref: '#/components/schemas/AmazonS3StorageProxyApplianceModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "Amazon S3 storage."
    AmazonSnowballEdgeBrowserDestinationSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserNewFolderSpec'
        - properties:
            bucketName:
              description: "Name of the bucket where you want to store your backup data."
              type: "string"
            connectionPoint:
              description: "Service point address and port number of the AWS Snowball Edge device."
              type: "string"
            hostId:
              description: "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionId:
              description: "For AWS Snowball Edge, the region is *snow*."
              type: "string"
          required:
            - connectionPoint
            - regionId
            - bucketName
          type: "object"
    AmazonSnowballEdgeBrowserModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserModel'
        - properties:
            connectionPoint:
              description: "Service point address and port number of the AWS Snowball Edge device."
              type: "string"
            hostId:
              description: "ID of a server used to connect to the AWS Snowball Edge device."
              format: "uuid"
              type: "string"
            regions:
              description: "Array of regions."
              items:
                $ref: '#/components/schemas/AmazonSnowballEdgeRegionBrowserModel'
              type: "array"
          type: "object"
    AmazonSnowballEdgeBrowserSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserSpec'
        - properties:
            gatewayServerId:
              description: "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionId:
              description: "To connect to the AWS Snowball Edge device, specify the `snow` value."
              type: "string"
            servicePoint:
              description: "Service point address and port number of the AWS Snowball Edge device."
              type: "string"
          type: "object"
    AmazonSnowballEdgeBucketBrowserModel:
      properties:
        folders:
          description: "Array of folders located in the bucket."
          items:
            type: "string"
          type: "array"
        name:
          description: "Bucket name."
          type: "string"
      type: "object"
    AmazonSnowballEdgeRegionBrowserModel:
      properties:
        buckets:
          description: "Array of buckets located in the region."
          items:
            $ref: '#/components/schemas/AmazonSnowballEdgeBucketBrowserModel'
          type: "array"
        id:
          description: "Region ID."
          type: "string"
        name:
          description: "Region name."
          type: "string"
      type: "object"
    AmazonSnowballEdgeStorageAccountImportModel:
      description: "AWS account used to access the AWS Snowball Edge storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionId:
          description: "For AWS Snowball Edge, the region is *snow*."
          type: "string"
        servicePoint:
          description: "Service point address and port number of the AWS Snowball Edge device."
          type: "string"
      required:
        - servicePoint
        - regionId
        - credentials
        - connectionSettings
      type: "object"
    AmazonSnowballEdgeStorageAccountModel:
      description: "AWS account used to access the AWS Snowball Edge storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
        credentialsId:
          description: "ID of the cloud credentials record."
          format: "uuid"
          type: "string"
        regionId:
          description: "For AWS Snowball Edge, the region is `snow`."
          type: "string"
        servicePoint:
          description: "Service point address and port number of the AWS Snowball Edge device."
          type: "string"
      required:
        - servicePoint
        - regionId
        - credentialsId
        - gatewayServer
      type: "object"
    AmazonSnowballEdgeStorageBucketModel:
      description: "Amazon S3 bucket."
      properties:
        bucketName:
          description: "Name of the Amazon S3 bucket."
          type: "string"
        folderName:
          description: "Name of the folder that the object storage repository is mapped to."
          type: "string"
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
      type: "object"
    AmazonSnowballEdgeStorageImportSpec:
      properties:
        account:
          $ref: '#/components/schemas/AmazonSnowballEdgeStorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/AmazonSnowballEdgeStorageBucketModel'
        description:
          description: "Description of the object storage repository."
          type: "string"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the object storage repository."
          type: "string"
        tag:
          description: "Tag that identifies the object storage repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - name
        - description
        - tag
        - type
        - account
        - bucket
        - mountServer
      type: "object"
    AmazonSnowballEdgeStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            account:
              $ref: '#/components/schemas/AmazonSnowballEdgeStorageAccountModel'
            bucket:
              $ref: '#/components/schemas/AmazonSnowballEdgeStorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "AWS Snowball Edge storage."
    AmazonSnowballEdgeStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            account:
              $ref: '#/components/schemas/AmazonSnowballEdgeStorageAccountModel'
            bucket:
              $ref: '#/components/schemas/AmazonSnowballEdgeStorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "AWS Snowball Edge storage."
    AmazonVPCBrowserModel:
      properties:
        securityGroups:
          description: "Array of security groups."
          items:
            type: "string"
          type: "array"
        subnets:
          description: "Array of VPC subnets."
          items:
            type: "string"
          type: "array"
        vpcName:
          description: "VPC name."
          type: "string"
      type: "object"
    ArchiveTierAdvancedSettingsModel:
      description: "Advanced settings of the archive tier."
      properties:
        archiveDeduplicationEnabled:
          description: "If *true*, each backup is stored as a delta to the previous one."
          type: "boolean"
        costOptimizedArchiveEnabled:
          description: "If *true*, backups are archived as soon as the remaining retention time is above minimum storage period for the repository."
          type: "boolean"
      type: "object"
    ArchiveTierModel:
      description: "Archive tier."
      properties:
        advancedSettings:
          $ref: '#/components/schemas/ArchiveTierAdvancedSettingsModel'
        archivePeriodDays:
          description: "Number of days after which backup chains on the capacity extent are moved to the archive extent. Specify *0* to offload inactive backup chains on the same day they are created."
          type: "integer"
        extentId:
          description: "ID of an object storage repository added as an archive extent."
          format: "uuid"
          type: "string"
        isEnabled:
          description: "If *true*, the archive tier is enabled."
          type: "boolean"
      required:
        - isEnabled
      type: "object"
    AuthorizationCodeModel:
      properties:
        code:
          description: "String that is used to obtain an access token. Lifetime of the authorization code is 60 seconds."
          type: "string"
      required:
        - code
      type: "object"
    AzureArchiveStorageAccountImportModel:
      description: "Account used to access the Azure Archive storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionType:
          $ref: '#/components/schemas/EAzureRegionType'
      required:
        - credentials
        - regionType
        - gatewayServer
      type: "object"
    AzureArchiveStorageAccountModel:
      description: "Account used to access the Azure Archive storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
        credentialsId:
          description: "ID of a cloud credentials record used to access the storage."
          format: "uuid"
          type: "string"
        regionType:
          $ref: '#/components/schemas/EAzureRegionType'
      required:
        - credentialsId
        - regionType
        - connectionSettings
      type: "object"
    AzureArchiveStorageContainerModel:
      description: "Azure Archive container where backup data is stored."
      properties:
        containerName:
          description: "Name of an Azure Archive container."
          type: "string"
        folderName:
          description: "Name of the folder that the object storage repository is mapped to."
          type: "string"
      required:
        - containerName
        - folderName
      type: "object"
    AzureArchiveStorageImportSpec:
      properties:
        account:
          $ref: '#/components/schemas/AzureArchiveStorageAccountImportModel'
        container:
          $ref: '#/components/schemas/AzureArchiveStorageContainerModel'
        description:
          description: "Description of the object storage repository."
          type: "string"
        name:
          description: "Name of the object storage repository."
          type: "string"
        proxyAppliance:
          $ref: '#/components/schemas/AzureStorageProxyModel'
        tag:
          description: "Tag that identifies the object storage repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - name
        - description
        - tag
        - type
        - account
        - container
        - mountServer
      type: "object"
    AzureArchiveStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            account:
              $ref: '#/components/schemas/AzureArchiveStorageAccountModel'
            container:
              $ref: '#/components/schemas/AzureArchiveStorageContainerModel'
            proxyAppliance:
              $ref: '#/components/schemas/AzureStorageProxyModel'
          required:
            - account
            - container
            - proxyAppliance
          type: "object"
      description: "Microsoft Azure Archive storage."
    AzureArchiveStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            account:
              $ref: '#/components/schemas/AzureArchiveStorageAccountModel'
            container:
              $ref: '#/components/schemas/AzureArchiveStorageContainerModel'
            proxyAppliance:
              $ref: '#/components/schemas/AzureStorageProxyModel'
          required:
            - account
            - container
            - proxyAppliance
          type: "object"
      description: "Microsoft Azure Archive storage."
    AzureBlobBrowserDestinationSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserNewFolderSpec'
        - properties:
            containerName:
              description: "Name of the container where you want to store your backup data."
              type: "string"
            folderType:
              $ref: '#/components/schemas/ECloudBrowserFolderType'
            hostId:
              description: "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionType:
              $ref: '#/components/schemas/EAzureRegionType'
          required:
            - regionType
            - containerName
          type: "object"
    AzureBlobBrowserModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserModel'
        - properties:
            containers:
              description: "Array of containers that reside in the Azure storage account."
              items:
                $ref: '#/components/schemas/AzureBlobContainerBrowserModel'
              type: "array"
            hostId:
              description: "ID of a server used to connect to the object storage."
              format: "uuid"
              type: "string"
            regionType:
              $ref: '#/components/schemas/EAzureRegionType'
          type: "object"
    AzureBlobBrowserSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserSpec'
        - properties:
            folderType:
              $ref: '#/components/schemas/ECloudBrowserFolderType'
            gatewayServerId:
              description: "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionType:
              $ref: '#/components/schemas/EAzureRegionType'
          type: "object"
    AzureBlobContainerBrowserModel:
      properties:
        folders:
          description: "Array of folders loated in the container."
          items:
            type: "string"
          type: "array"
        name:
          description: "Container name."
          type: "string"
      type: "object"
    AzureBlobStorageAccountImportModel:
      description: "Account used to access the Azure Blob storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionType:
          $ref: '#/components/schemas/EAzureRegionType'
      required:
        - credentials
        - regionType
        - gatewayServer
      type: "object"
    AzureBlobStorageAccountModel:
      description: "Account used to access the Azure Blob storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
        credentialsId:
          description: "ID of the cloud credentials record."
          format: "uuid"
          type: "string"
        regionType:
          $ref: '#/components/schemas/EAzureRegionType'
      required:
        - credentialsId
        - regionType
        - connectionSettings
      type: "object"
    AzureBlobStorageContainerModel:
      description: "Azure Blob storage container."
      properties:
        containerName:
          description: "Container name."
          type: "string"
        folderName:
          description: "Name of the folder that the object storage repository is mapped to."
          type: "string"
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
      required:
        - containerName
        - folderName
      type: "object"
    AzureBlobStorageImportSpec:
      properties:
        account:
          $ref: '#/components/schemas/AzureBlobStorageAccountImportModel'
        container:
          $ref: '#/components/schemas/AzureBlobStorageContainerModel'
        description:
          description: "Description of the object storage repository."
          type: "string"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the object storage repository."
          type: "string"
        proxyAppliance:
          $ref: '#/components/schemas/AzureStorageProxyModel'
        tag:
          description: "Tag that identifies the object storage repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - name
        - description
        - tag
        - type
        - account
        - container
        - mountServer
      type: "object"
    AzureBlobStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            account:
              $ref: '#/components/schemas/AzureBlobStorageAccountModel'
            container:
              $ref: '#/components/schemas/AzureBlobStorageContainerModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            proxyAppliance:
              $ref: '#/components/schemas/AzureStorageProxyModel'
          required:
            - account
            - container
            - mountServer
          type: "object"
      description: "Microsoft Azure Blob storage."
    AzureBlobStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            account:
              $ref: '#/components/schemas/AzureBlobStorageAccountModel'
            container:
              $ref: '#/components/schemas/AzureBlobStorageContainerModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            proxyAppliance:
              $ref: '#/components/schemas/AzureStorageProxyModel'
          required:
            - account
            - container
            - mountServer
          type: "object"
      description: "Microsoft Azure Blob storage."
    AzureComputeBrowserFilters:
      description: "Azure Compute hierarchy filters."
      properties:
        hasNetworks:
          default: false
          description: "If *true*, the result contains Azure resource groups with virtual networks only."
          type: "boolean"
        location:
          description: "Filters compute resorces by Azure location name."
          type: "string"
        showAllStorageAccounts:
          default: false
          description: "If *true*, the result contains compute resorces for all storage accounts. If *false*, the result contains compute resorces available for the specified storage account only."
          type: "boolean"
        subscriptionId:
          description: "Filters compute resorces by ID that Veeam Backup & Replication assigned to the Azure subscription."
          type: "string"
      type: "object"
    AzureComputeBrowserModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserModel'
        - properties:
            regionType:
              description: "Azure region type."
              type: "string"
            subscriptions:
              description: "Array of Azure subscriptions associated with the account."
              items:
                $ref: '#/components/schemas/AzureSubscriptionBrowserModel'
              type: "array"
          type: "object"
    AzureComputeBrowserSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserSpec'
        - properties:
            filters:
              $ref: '#/components/schemas/AzureComputeBrowserFilters'
          type: "object"
    AzureComputeCloudCredentialsDeploymentModel:
      description: "Environment to restore workloads to."
      properties:
        deploymentType:
          $ref: '#/components/schemas/EAzureComputeCredentialsDeploymentType'
        region:
          $ref: '#/components/schemas/EAzureRegionType'
      required:
        - deploymentType
      type: "object"
    AzureComputeCloudCredentialsImportSpec:
      properties:
        connectionName:
          description: "Name under which the cloud credentials record is shown in Veeam Backup & Replication."
          type: "string"
        description:
          description: "Description of the cloud credentials record."
          type: "string"
        existingAccount:
          $ref: '#/components/schemas/AzureComputeCredentialsExistingAccountSpec'
        tag:
          description: "Tag used to identify the cloud credentials record."
          type: "string"
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
        - type
        - tag
        - connectionName
        - existingAccount
      type: "object"
    AzureComputeCloudCredentialsModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudCredentialsModel'
        - properties:
            connectionName:
              description: "Name under which the cloud credentials record is shown in Veeam Backup & Replication."
              type: "string"
            deployment:
              $ref: '#/components/schemas/AzureComputeCloudCredentialsDeploymentModel'
            subscription:
              $ref: '#/components/schemas/AzureComputeCloudCredentialsSubscriptionModel'
            tag:
              description: "Tag used to identify the cloud credentials record."
              type: "string"
          required:
            - connectionName
            - deployment
            - subscription
          type: "object"
      description: "Microsoft Azure compute account."
    AzureComputeCloudCredentialsSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudCredentialsSpec'
        - properties:
            connectionName:
              description: "Name under which the cloud credentials record will be shown in Veeam Backup & Replication."
              type: "string"
            creationMode:
              $ref: '#/components/schemas/EAzureComputeCredentialsCreationMode'
            existingAccount:
              $ref: '#/components/schemas/AzureComputeCredentialsExistingAccountSpec'
            newAccount:
              $ref: '#/components/schemas/AzureComputeCredentialsNewAccountSpec'
            tag:
              description: "Tag used to identify the cloud credentials record."
              type: "string"
          required:
            - connectionName
            - creationMode
          type: "object"
    AzureComputeCloudCredentialsSubscriptionInfo:
      properties:
        azureSubscriptionId:
          description: "Original Azure subscription ID."
          type: "string"
        azureSubscriptionName:
          description: "Azure subscription name."
          type: "string"
        id:
          description: "ID that Veeam Backup & Replication assigned to the Azure subscription."
          format: "uuid"
          type: "string"
      required:
        - id
        - azureSubscriptionId
      type: "object"
    AzureComputeCloudCredentialsSubscriptionModel:
      description: "Microsoft Azure tenant settings."
      properties:
        applicationId:
          description: "Client ID assigned to the Azure Active Directory application."
          type: "string"
        secret:
          description: "(For password-based authentication) Client secret assigned to the Azure Active Directory application."
          type: "string"
        subscriptions:
          description: "Array of Azure subscriptions associated with the account."
          items:
            $ref: '#/components/schemas/AzureComputeCloudCredentialsSubscriptionInfo'
          type: "array"
        tenantId:
          description: "ID of a tenant where the Azure Active Directory application is registered in."
          type: "string"
      required:
        - tenantId
        - applicationId
      type: "object"
    AzureComputeCloudCredentialsSubscriptionSpec:
      description: "Microsoft Azure compute account. For password-based authentication, specify client secret. For certificate-based authentication, specify certificate and password."
      properties:
        applicationId:
          description: "Client ID assigned to the Azure Active Directory application."
          type: "string"
        certificate:
          $ref: '#/components/schemas/CertificateUploadSpec'
        secret:
          description: "(For password-based authentication) Client secret assigned to the Azure Active Directory application."
          type: "string"
        tenantId:
          description: "ID of a tenant where the Azure Active Directory application is registered in."
          type: "string"
      required:
        - tenantId
        - applicationId
      type: "object"
    AzureComputeCloudDeviceCodeModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudDeviceCodeModel'
        - properties:
            expirationTime:
              description: "Expiration date and time of the verification code. By default, the code is valid for 15 minutes."
              format: "date-time"
              type: "string"
            url:
              description: "Verification URI."
              type: "string"
            verificationCode:
              description: "Verification code."
              type: "string"
          required:
            - url
            - verificationCode
            - expirationTime
          type: "object"
    AzureComputeCloudDeviceCodeSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudDeviceCodeSpec'
        - properties:
            region:
              $ref: '#/components/schemas/EAzureRegionType'
          required:
            - region
          type: "object"
    AzureComputeCloudNativeApplicationModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudNativeApplicationModel'
        - properties:
            applicationId:
              description: "Client ID assigned to the Azure Active Directory application."
              type: "string"
            secret:
              description: "Client secret assigned to the Azure Active Directory application."
              type: "string"
            tenantId:
              description: "ID of a tenant where the Azure Active Directory application is registered in."
              type: "string"
          required:
            - applicationId
            - secret
            - tenantId
          type: "object"
    AzureComputeCredentialsExistingAccountSpec:
      description: "Existing Azure Active Directory application."
      properties:
        deployment:
          $ref: '#/components/schemas/AzureComputeCloudCredentialsDeploymentModel'
        subscription:
          $ref: '#/components/schemas/AzureComputeCloudCredentialsSubscriptionSpec'
      required:
        - deployment
        - subscription
      type: "object"
    AzureComputeCredentialsNewAccountSpec:
      description: "New Azure Active Directory application."
      properties:
        region:
          $ref: '#/components/schemas/EAzureRegionType'
        verificationCode:
          description: "Single-use verification code. Use this code to sign in on the https://microsoft.com/devicelogin page."
          type: "string"
      required:
        - region
        - verificationCode
      type: "object"
    AzureDataBoxBrowserDestinationSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserNewFolderSpec'
        - properties:
            containerName:
              description: "Name of the container where you want to store your backup data."
              type: "string"
            hostId:
              description: "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            servicePoint:
              description: "Service endpoint address of the Azure Data Box device."
              type: "string"
          required:
            - servicePoint
            - containerName
          type: "object"
    AzureDataBoxBrowserModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserModel'
        - properties:
            containers:
              description: "Array of containers that reside in the Azure storage account."
              items:
                $ref: '#/components/schemas/AzureDataBoxContainerBrowserModel'
              type: "array"
            hostId:
              description: "ID of a server used to connect to the object storage."
              format: "uuid"
              type: "string"
          type: "object"
    AzureDataBoxBrowserSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserSpec'
        - properties:
            gatewayServerId:
              description: "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            servicePoint:
              description: "Service endpoint used to connect to the Azure Data Box object storage."
              type: "string"
          type: "object"
    AzureDataBoxContainerBrowserModel:
      properties:
        folders:
          description: "Array of folders located in the container."
          items:
            type: "string"
          type: "array"
        name:
          description: "Container name."
          type: "string"
      type: "object"
    AzureDataBoxStorageAccountImportModel:
      description: "Account used to access the Azure Data Box storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        serviceEndpoint:
          description: "Service endpoint address of the Azure Data Box device."
          type: "string"
      required:
        - serviceEndpoint
        - credentials
        - connectionSettings
      type: "object"
    AzureDataBoxStorageAccountModel:
      description: "Account used to access the Azure Data Box storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
        credentialsId:
          description: "ID of the cloud credentials record."
          format: "uuid"
          type: "string"
        serviceEndpoint:
          description: "Service endpoint address of the Azure Data Box device."
          type: "string"
      required:
        - serviceEndpoint
        - credentialsId
      type: "object"
    AzureDataBoxStorageContainerModel:
      description: "Azure Data Box container where backup data is stored."
      properties:
        containerName:
          description: "Container name."
          type: "string"
        folderName:
          description: "Name of the folder that the object storage repository is mapped to."
          type: "string"
      type: "object"
    AzureDataBoxStorageImportSpec:
      properties:
        account:
          $ref: '#/components/schemas/AzureDataBoxStorageAccountImportModel'
        container:
          $ref: '#/components/schemas/AzureDataBoxStorageContainerModel'
        description:
          description: "Description of the object storage repository."
          type: "string"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the object storage repository."
          type: "string"
        tag:
          description: "Tag that identifies the object storage repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - name
        - description
        - tag
        - type
        - account
        - container
        - mountServer
      type: "object"
    AzureDataBoxStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            account:
              $ref: '#/components/schemas/AzureDataBoxStorageAccountModel'
            container:
              $ref: '#/components/schemas/AzureDataBoxStorageContainerModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
          required:
            - account
            - container
          type: "object"
      description: "Microsoft Azure Data Box storage."
    AzureDataBoxStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            account:
              $ref: '#/components/schemas/AzureDataBoxStorageAccountModel'
            container:
              $ref: '#/components/schemas/AzureDataBoxStorageContainerModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
          required:
            - account
            - container
          type: "object"
      description: "Microsoft Azure Data Box storage."
    AzureLinuxHelperApplianceModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudHelperApplianceModel'
        - description: "Lunux-based helper appliance for Microsoft Azure account."
          properties:
            SSHPort:
              description: "Port over which Veeam Backup & Replication communicates with the helper appliance."
              type: "integer"
            id:
              description: "Helper appliance ID."
              format: "uuid"
              type: "string"
            location:
              description: "Storage account location where the helper appliance is configured."
              type: "string"
            resourceGroup:
              description: "Resource group associated with the helper appliance."
              type: "string"
            storageAccount:
              description: "Azure storage account whose resources are used to store disks of the helper appliance."
              type: "string"
            subnet:
              description: "Subnet for the helper appliance."
              type: "string"
            subscriptionId:
              description: "ID that Veeam Backup & Replication assigned to the Azure subscription."
              format: "uuid"
              type: "string"
            virtualNetwork:
              description: "Network to which the helper appliance is connected."
              type: "string"
            vmName:
              description: "VM name of the helper appliance."
              type: "string"
          required:
            - id
            - subscriptionId
          type: "object"
    AzureLinuxHelperApplianceSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudHelperApplianceSpec'
      properties:
        SSHPort:
          description: "Port over which Veeam Backup & Replication communicates with the helper appliance."
          type: "integer"
        location:
          description: "Storage account location where you want to configure the helper appliance."
          type: "string"
        resourceGroup:
          description: "Resource group associated with the helper appliance."
          type: "string"
        storageAccount:
          description: "Name of the Azure storage account whose resources are used to store the helper appliance."
          type: "string"
        subnet:
          description: "Subnet for the helper appliance."
          type: "string"
        subscriptionId:
          description: "ID that Veeam Backup & Replication assigned to the Azure subscription."
          format: "uuid"
          type: "string"
        virtualNetwork:
          description: "Network to which the helper appliance is connected."
          type: "string"
      required:
        - subscriptionId
      type: "object"
    AzureLocationBrowserModel:
      properties:
        location:
          description: "Location name."
          type: "string"
        resourceGroups:
          description: "Array of Azure resource groups."
          items:
            $ref: '#/components/schemas/AzureResourceGroupBrowserModel'
          type: "array"
        storageAccounts:
          description: "Array of storage accounts associated with the location."
          items:
            $ref: '#/components/schemas/AzureStorageAccountBrowserModel'
          type: "array"
      required:
        - location
        - storageAccounts
        - resourceGroups
      type: "object"
    AzureResourceGroupBrowserModel:
      properties:
        resourceGroup:
          description: "Resource group name."
          type: "string"
        virtualNetworks:
          description: "Array of virtual networks available in the resource group."
          items:
            $ref: '#/components/schemas/AzureVirtualNetworkBrowserModel'
          type: "array"
      required:
        - resourceGroup
        - virtualNetworks
      type: "object"
    AzureStorageAccountBrowserModel:
      properties:
        instanceSizes:
          description: "Array of available instance sizes."
          items:
            type: "string"
          type: "array"
        storageAccountName:
          description: "Account name."
          type: "string"
      type: "object"
    AzureStorageCloudCredentialsImportSpec:
      properties:
        account:
          description: "Name of the Azure storage account."
          type: "string"
        description:
          description: "Description of the cloud credentials record."
          type: "string"
        sharedKey:
          description: "Shared key of the Azure storage account."
          type: "string"
        tag:
          description: "Tag used to identify the cloud credentials record."
          type: "string"
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
        - type
        - tag
        - account
        - sharedKey
      type: "object"
    AzureStorageCloudCredentialsModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudCredentialsModel'
        - properties:
            account:
              description: "Name of the Azure storage account."
              type: "string"
            tag:
              description: "Tag used to identify the cloud credentials record."
              type: "string"
          required:
            - account
          type: "object"
    AzureStorageCloudCredentialsSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudCredentialsSpec'
        - example:
            account: williamfox
            tag: createdbysheiladcory
            description: Azure storage account
            sharedKey: 0sF53pZ/c8cVk+sEMby1lGZzA4SJezapyrFysdjlfLlUwMESTW6dEnkC3x62USr4cwHgPxarsBCE+ASt1Zjmwg==
            type: AzureStorage
          properties:
            account:
              description: "Name of the Azure storage account."
              type: "string"
            sharedKey:
              description: "Shared key of the Azure storage account."
              type: "string"
            tag:
              description: "Tag used to identify the cloud credentials record."
              type: "string"
          required:
            - account
            - sharedKey
          type: "object"
    AzureStorageProxyModel:
      description: "Azure storage proxy appliance."
      properties:
        instanceSize:
          description: "Size of the appliance."
          type: "string"
        redirectorPort:
          description: "TCP port used to route requests between the proxy appliance and backup infrastructure components."
          type: "integer"
        resourceGroup:
          description: "Resource group associated with the proxy appliance."
          type: "string"
        subnet:
          description: "Subnet for the proxy appliance."
          type: "string"
        subscriptionId:
          description: "ID that Veeam Backup & Replication assigned to the Azure subscription."
          format: "uuid"
          type: "string"
        virtualNetwork:
          description: "Network to which the helper appliance is connected."
          type: "string"
      required:
        - subscriptionId
      type: "object"
    AzureSubscriptionBrowserModel:
      properties:
        azureSubscriptionId:
          description: "Original Azure subscription ID."
          type: "string"
        id:
          description: "ID that Veeam Backup & Replication assigned to the Azure subscription."
          format: "uuid"
          type: "string"
        locations:
          description: "Array of Azure geographic regions."
          items:
            $ref: '#/components/schemas/AzureLocationBrowserModel'
          type: "array"
      required:
        - id
        - resourceGroups
        - virtualNetworks
        - storageAccounts
      type: "object"
    AzureVirtualNetworkBrowserModel:
      properties:
        subnets:
          description: "Array of subnets."
          items:
            type: "string"
          type: "array"
        virtualNetworkName:
          description: "Virtual network name."
          type: "string"
      type: "object"
    BackupApplicationAwareProcessingImportModel:
      description: "Application-aware processing settings."
      properties:
        appSettings:
          description: "Array of VMware vSphere objects and their application settings."
          items:
            $ref: '#/components/schemas/BackupApplicationSettingsImportModel'
          type: "array"
        isEnabled:
          description: "If *true*, application-aware processing is enabled."
          type: "boolean"
      required:
        - isEnabled
      type: "object"
    BackupApplicationAwareProcessingModel:
      description: "Application-aware processing settings."
      properties:
        appSettings:
          description: "Array of VMware vSphere objects and their application settings."
          items:
            $ref: '#/components/schemas/BackupApplicationSettingsModel'
          type: "array"
        isEnabled:
          description: "If *true*, application-aware processing is enabled."
          type: "boolean"
      required:
        - isEnabled
      type: "object"
    BackupApplicationSettingsImportModel:
      properties:
        exclusions:
          $ref: '#/components/schemas/BackupFSExclusionsModel'
        oracle:
          $ref: '#/components/schemas/BackupOracleSettingsImportModel'
        scripts:
          $ref: '#/components/schemas/BackupScriptSettingsModel'
        sql:
          $ref: '#/components/schemas/BackupSQLSettingsImportModel'
        transactionLogs:
          $ref: '#/components/schemas/ETransactionLogsSettings'
        usePersistentGuestAgent:
          description: "If *true*, persistent guest agent is used."
          type: "boolean"
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
        vss:
          $ref: '#/components/schemas/EApplicationSettingsVSS'
      required:
        - vmObject
        - vss
      type: "object"
    BackupApplicationSettingsModel:
      properties:
        exclusions:
          $ref: '#/components/schemas/BackupFSExclusionsModel'
        oracle:
          $ref: '#/components/schemas/BackupOracleSettingsModel'
        scripts:
          $ref: '#/components/schemas/BackupScriptSettingsModel'
        sql:
          $ref: '#/components/schemas/BackupSQLSettingsModel'
        transactionLogs:
          $ref: '#/components/schemas/ETransactionLogsSettings'
        usePersistentGuestAgent:
          description: "If *true*, persistent guest agent is used."
          type: "boolean"
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
        vss:
          $ref: '#/components/schemas/EApplicationSettingsVSS'
      required:
        - vmObject
        - vss
      type: "object"
    BackupFSExclusionsModel:
      description: "VM guest OS file exclusion."
      properties:
        exclusionPolicy:
          $ref: '#/components/schemas/EBackupExclusionPolicy'
        itemsList:
          description: "Array of files and folders. Full paths to files and folders, environmental variables and file masks with the asterisk (*) and question mark (?) characters can be used."
          items:
            type: "string"
          type: "array"
      required:
        - exclusionPolicy
      type: "object"
    BackupHealthCheckSettingsModels:
      description: "Health check settings for the for the latest restore point in the backup chain."
      properties:
        isEnabled:
          description: "If *true*, the health check is enabled."
          type: "boolean"
        monthly:
          $ref: '#/components/schemas/AdvancedStorageScheduleMonthlyModel'
        weekly:
          $ref: '#/components/schemas/AdvancedStorageScheduleWeeklyModel'
      required:
        - isEnabled
      type: "object"
    BackupIndexingSettingsModel:
      properties:
        LinuxIndexing:
          $ref: '#/components/schemas/BackupObjectIndexingModel'
        WindowsIndexing:
          $ref: '#/components/schemas/BackupObjectIndexingModel'
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
      required:
        - vmObject
      type: "object"
    BackupJobAdvancedSettingsModel:
      description: "Advanced settings of the backup job."
      properties:
        activeFulls:
          $ref: '#/components/schemas/ActiveFullSettingsModel'
        backupHealth:
          $ref: '#/components/schemas/BackupHealthCheckSettingsModels'
        backupModeType:
          $ref: '#/components/schemas/EBackupModeType'
        fullBackupMaintenance:
          $ref: '#/components/schemas/FullBackupMaintenanceModel'
        notifications:
          $ref: '#/components/schemas/NotificationSettingsModel'
        scripts:
          $ref: '#/components/schemas/JobScriptsSettingsModel'
        storageData:
          $ref: '#/components/schemas/BackupStorageSettingModel'
        storageIntegration:
          $ref: '#/components/schemas/PrimaryStorageIntegrationSettingsModel'
        synthenticFulls:
          $ref: '#/components/schemas/SyntheticFullSettingsModel'
        vSphere:
          $ref: '#/components/schemas/BackupJobAdvancedSettingsVSphereModel'
      required:
        - backupModeType
      type: "object"
    BackupJobAdvancedSettingsVSphereModel:
      description: "VMware vSphere settings for the backup job."
      properties:
        changedBlockTracking:
          $ref: '#/components/schemas/VSphereChangedBlockTrackingSettingsModel'
        enableVMWareToolsQuiescence:
          description: "If *true*, VMware Tools quiescence is enabled for freezing the VM file system and application data."
          type: "boolean"
      type: "object"
    BackupJobExclusions:
      description: "Objects excluded from the backup."
      properties:
        disks:
          description: "Array of VM disks excluded from the backup."
          items:
            $ref: '#/components/schemas/VmwareObjectDiskModel'
          type: "array"
        templates:
          $ref: '#/components/schemas/BackupJobExclusionsTemplates'
        vms:
          description: "Array of VMs excluded from the backup."
          items:
            $ref: '#/components/schemas/VmwareObjectSizeModel'
          type: "array"
      type: "object"
    BackupJobExclusionsSpec:
      description: "Objects that you want to exclude from the backup."
      properties:
        disks:
          description: "Array of disks."
          items:
            $ref: '#/components/schemas/VmwareObjectDiskModel'
          type: "array"
        templates:
          $ref: '#/components/schemas/BackupJobExclusionsTemplates'
        vms:
          description: "Array of VMs."
          items:
            $ref: '#/components/schemas/VmwareObjectModel'
          type: "array"
      type: "object"
    BackupJobExclusionsTemplates:
      description: "VM templates exclusion."
      properties:
        excludeFromIncremental:
          description: "If *true*, VM templates are excluded from the incremental backup."
          type: "boolean"
        isEnabled:
          description: "If *true*, VM templates are excluded from the backup."
          type: "boolean"
      type: "object"
    BackupJobGuestProcessingImportModel:
      description: "Guest processing settings."
      properties:
        applicationAwareProcessing:
          $ref: '#/components/schemas/BackupApplicationAwareProcessingImportModel'
        guestCredentials:
          $ref: '#/components/schemas/GuestOsCredentialsImportModel'
        guestFileSystemIndexing:
          $ref: '#/components/schemas/GuestFileSystemIndexingModel'
        guestInteractionProxies:
          $ref: '#/components/schemas/GuestInteractionProxiesSettingsImportModel'
      required:
        - applicationAwareProcessing
        - guestFileSystemIndexing
      type: "object"
    BackupJobGuestProcessingModel:
      description: "Guest processing settings."
      properties:
        appAwareProcessing:
          $ref: '#/components/schemas/BackupApplicationAwareProcessingModel'
        guestCredentials:
          $ref: '#/components/schemas/GuestOsCredentialsModel'
        guestFSIndexing:
          $ref: '#/components/schemas/GuestFileSystemIndexingModel'
        guestInteractionProxies:
          $ref: '#/components/schemas/GuestInteractionProxiesSettingsModel'
      required:
        - appAwareProcessing
        - guestFSIndexing
      type: "object"
    BackupJobImportProxiesModel:
      description: "Backup proxies."
      properties:
        automaticSelection:
          default: true
          description: "If *true*, backup proxies are detected and assigned automatically."
          type: "boolean"
        proxies:
          description: "Array of backup proxies."
          items:
            $ref: '#/components/schemas/BackupProxyImportModel'
          type: "array"
      required:
        - automaticSelection
      type: "object"
    BackupJobModel:
      allOf:
        - $ref: '#/components/schemas/BaseJobModel'
        - properties:
            guestProcessing:
              $ref: '#/components/schemas/BackupJobGuestProcessingModel'
            isHighPriority:
              description: "If *true*, the job has a high priority in getting backup infrastructure resources."
              type: "boolean"
            schedule:
              $ref: '#/components/schemas/BackupScheduleModel'
            storage:
              $ref: '#/components/schemas/BackupJobStorageModel'
            virtualMachines:
              $ref: '#/components/schemas/BackupJobVirtualMachinesModel'
          required:
            - guestProcessing
            - isHighPriority
            - schedule
            - storage
            - virtualMachines
          type: "object"
    BackupJobRetentionPolicySettingsModel:
      description: "Retention policy settings."
      properties:
        quantity:
          description: "Number of restore points or days to keep."
          type: "integer"
        type:
          $ref: '#/components/schemas/ERetentionPolicyType'
      required:
        - quantity
        - type
      type: "object"
    BackupJobSpec:
      allOf:
        - $ref: '#/components/schemas/BaseJobSpec'
        - properties:
            guestProcessing:
              $ref: '#/components/schemas/BackupJobGuestProcessingModel'
            isHighPriority:
              default: false
              description: "If *true*, the job has a high priority in getting backup infrastructure resources."
              type: "boolean"
            schedule:
              $ref: '#/components/schemas/BackupScheduleModel'
            storage:
              $ref: '#/components/schemas/BackupJobStorageModel'
            virtualMachines:
              $ref: '#/components/schemas/BackupJobVirtualMachinesSpec'
          required:
            - guestProcessing
            - isHighPriority
            - schedule
            - storage
            - virtualMachines
          type: "object"
    BackupJobStorageImportModel:
      description: "Backup storage settings."
      properties:
        advancedSettings:
          $ref: '#/components/schemas/BackupJobAdvancedSettingsModel'
        backupProxies:
          $ref: '#/components/schemas/BackupJobImportProxiesModel'
        backupRepository:
          $ref: '#/components/schemas/BackupRepositoryImportModel'
        gfsPolicy:
          $ref: '#/components/schemas/GFSPolicySettingsModel'
        retentionPolicy:
          $ref: '#/components/schemas/BackupJobRetentionPolicySettingsModel'
      required:
        - backupProxies
        - backupRepository
        - retentionPolicy
      type: "object"
    BackupJobStorageModel:
      description: "Backup storage settings."
      properties:
        advancedSettings:
          $ref: '#/components/schemas/BackupJobAdvancedSettingsModel'
        backupProxies:
          $ref: '#/components/schemas/BackupProxiesSettingsModel'
        backupRepositoryId:
          description: "ID of the backup repository."
          format: "uuid"
          type: "string"
        gfsPolicy:
          $ref: '#/components/schemas/GFSPolicySettingsModel'
        retentionPolicy:
          $ref: '#/components/schemas/BackupJobRetentionPolicySettingsModel'
      required:
        - backupProxies
        - backupRepositoryId
        - retentionPolicy
      type: "object"
    BackupJobVirtualMachinesModel:
      description: "Included and excluded objects."
      properties:
        excludes:
          $ref: '#/components/schemas/BackupJobExclusions'
        includes:
          description: "Array of VMs and VM containers processed by the job."
          items:
            $ref: '#/components/schemas/VmwareObjectSizeModel'
          type: "array"
      required:
        - includes
      type: "object"
    BackupJobVirtualMachinesSpec:
      description: "Arrays of objects that you want to back up or exclude from the backup."
      properties:
        excludes:
          $ref: '#/components/schemas/BackupJobExclusionsSpec'
        includes:
          description: "Array of objects that you want to back up."
          items:
            $ref: '#/components/schemas/VmwareObjectModel'
          type: "array"
      required:
        - includes
      type: "object"
    BackupLinuxScriptModel:
      description: "Paths to pre-freeze and post-thaw scripts for Linux VMs."
      properties:
        postThawScript:
          description: "Path to a post-thaw script."
          type: "string"
        preFreezeScript:
          description: "Path to a pre-freeze script."
          type: "string"
      type: "object"
    BackupLogShippingServersImportModel:
      description: "Log shipping server used to transport logs."
      properties:
        autoSelection:
          description: "If *true*, Veeam Backup & Replication chooses an optimal log shipping server automatically."
          type: "boolean"
        shippingServerNames:
          description: "Array of servers that are explicitly selected for log shipping."
          items:
            type: "string"
          type: "array"
      required:
        - autoSelection
      type: "object"
    BackupLogShippingServersModel:
      description: "Log shipping server used to transport logs."
      properties:
        autoSelection:
          description: "If *true*, Veeam Backup & Replication chooses an optimal log shipping server automatically."
          type: "boolean"
        shippingServerIds:
          description: "Array of servers that are explicitly selected for log shipping."
          items:
            format: "uuid"
            type: "string"
          type: "array"
      required:
        - autoSelection
      type: "object"
    BackupModel:
      properties:
        creationTime:
          description: "Date and time when the backup was created."
          format: "date-time"
          type: "string"
        id:
          description: "ID of the backup."
          format: "uuid"
          type: "string"
        jobId:
          description: "ID of the job that created the backup."
          format: "uuid"
          type: "string"
        name:
          description: "Name of the job that created the backup."
          type: "string"
        platformId:
          description: "ID of the platform of the backup resource."
          format: "uuid"
          type: "string"
        platformName:
          $ref: '#/components/schemas/EPlatformType'
        policyTag:
          description: "Tag that identifies retention policy."
          type: "string"
        repositoryId:
          description: "ID of the backup repository where the backup is stored."
          format: "uuid"
          type: "string"
      required:
        - id
        - name
        - type
        - platformName
        - platformId
        - creationTime
        - repositoryId
      type: "object"
    BackupObjectIndexingModel:
      description: "Guest OS indexing options for the VM."
      properties:
        guestFSIndexingMode:
          $ref: '#/components/schemas/EGuestFSIndexingMode'
        indexingList:
          description: "Array of folders. Environmental variables and full paths to folders can be used."
          items:
            type: "string"
          type: "array"
      required:
        - guestFSIndexingMode
      type: "object"
    BackupObjectModel:
      allOf:
        - discriminator:
            mapping:
              VMware: '#/components/schemas/ViBackupObjectModel'
            propertyName: "platformName"
          oneOf:
            - $ref: '#/components/schemas/ViBackupObjectModel'
        - $ref: '#/components/schemas/BaseBackupObjectModel'
    BackupObjectsFilters:
      properties:
        limit:
          format: "int32"
          type: "integer"
        nameFilter:
          type: "string"
        orderAsc:
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EBackupObjectsFiltersOrderColumn'
        platformIdFilter:
          format: "uuid"
          type: "string"
        platformNameFilter:
          $ref: '#/components/schemas/EPlatformType'
        skip:
          format: "int32"
          type: "integer"
        typeFilter:
          type: "string"
        viTypeFilter:
          type: "string"
      type: "object"
    BackupObjectsResult:
      properties:
        data:
          description: "Array of backup objects."
          items:
            $ref: '#/components/schemas/BackupObjectModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    BackupOracleSettingsImportModel:
      description: "Oracle archived log settings."
      properties:
        archiveLogs:
          $ref: '#/components/schemas/EBackupOracleLogsSettings'
        backupLogs:
          description: "If *true*, archived logs are backed up."
          type: "boolean"
        backupMinsCount:
          description: "Frequency of archived log backup, in minutes."
          type: "integer"
        credentials:
          $ref: '#/components/schemas/CredentialsImportModel'
        deleteGBsCount:
          description: "Maximum size for archived logs in GB. This parameter should be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredGBs*."
          type: "integer"
        deleteHoursCount:
          description: "Time period in hours to keep archived logs. This parameter should be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredHours*."
          type: "integer"
        keepDaysCount:
          description: "Number of days to keep archived logs."
          type: "integer"
        logShippingServers:
          $ref: '#/components/schemas/BackupLogShippingServersImportModel'
        retainLogBackups:
          $ref: '#/components/schemas/ERetainLogBackupsType'
        useGuestCredentials:
          description: "If *true*, Veeam Backup & Replication uses credentials specified in the guest processing settings."
          type: "boolean"
      required:
        - archiveLogs
        - useGuestCredentials
      type: "object"
    BackupOracleSettingsModel:
      description: "Oracle archived log settings."
      properties:
        archiveLogs:
          $ref: '#/components/schemas/EBackupOracleLogsSettings'
        backupLogs:
          description: "If *true*, archived logs are backed up."
          type: "boolean"
        backupMinsCount:
          description: "Frequency of archived log backup, in minutes."
          type: "integer"
        credentialsId:
          description: "ID of the credentials record that is used if `useGuestCredentials` is *false*."
          format: "uuid"
          type: "string"
        deleteGBsCount:
          description: "Maximum size for archived logs in GB. This parameter should be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredGBs*."
          type: "integer"
        deleteHoursCount:
          description: "Time period in hours to keep archived logs. This parameter should be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredHours*."
          type: "integer"
        keepDaysCount:
          description: "Number of days to keep archived logs."
          type: "integer"
        logShippingServers:
          $ref: '#/components/schemas/BackupLogShippingServersModel'
        retainLogBackups:
          $ref: '#/components/schemas/ERetainLogBackupsType'
        useGuestCredentials:
          description: "If *true*, Veeam Backup & Replication uses credentials specified in the guest processing settings."
          type: "boolean"
      required:
        - archiveLogs
        - useGuestCredentials
      type: "object"
    BackupPlacementSettingsModel:
      properties:
        allowedBackups:
          $ref: '#/components/schemas/EAllowedBackupsType'
        extentId:
          description: "ID of a performance extent."
          format: "uuid"
          type: "string"
      required:
        - extentId
        - allowedBackups
      type: "object"
    BackupProxiesSettingsModel:
      description: "Backup proxy settings."
      properties:
        autoSelection:
          default: true
          description: "If *true*, backup proxies are detected and assigned automatically."
          type: "boolean"
        proxyIds:
          description: "Array of proxy IDs."
          items:
            format: "uuid"
            type: "string"
          type: "array"
          uniqueItems: true
      required:
        - autoSelection
      type: "object"
    BackupProxyImportModel:
      properties:
        name:
          description: "Name of the backup proxy."
          type: "string"
        tag:
          description: "Tag assigned to the backup proxy."
          type: "string"
        type:
          $ref: '#/components/schemas/EBackupProxyImportType'
      required:
        - name
        - type
      type: "object"
    BackupRepositoryImportModel:
      description: "Backup repository."
      properties:
        name:
          description: "Name of the backup repository."
          type: "string"
        tag:
          description: "Tag that identifies the backup repository."
          type: "string"
      required:
        - name
      type: "object"
    BackupSQLSettingsImportModel:
      description: "Microsoft SQL Server transaction log settings."
      properties:
        backupMinsCount:
          description: "Frequency of transaction log backup, in minutes."
          type: "integer"
        keepDaysCount:
          description: "Number of days to keep transaction logs in the backup repository."
          type: "integer"
        logShippingServers:
          $ref: '#/components/schemas/BackupLogShippingServersImportModel'
        logsProcessing:
          $ref: '#/components/schemas/ESQLLogsProcessing'
        retainLogBackups:
          $ref: '#/components/schemas/ERetainLogBackupsType'
      required:
        - logsProcessing
      type: "object"
    BackupSQLSettingsModel:
      description: "Microsoft SQL Server transaction log settings."
      properties:
        backupMinsCount:
          description: "Frequency of transaction log backup, in minutes."
          type: "integer"
        keepDaysCount:
          description: "Number of days to keep transaction logs in the backup repository."
          type: "integer"
        logShippingServers:
          $ref: '#/components/schemas/BackupLogShippingServersModel'
        logsProcessing:
          $ref: '#/components/schemas/ESQLLogsProcessing'
        retainLogBackups:
          $ref: '#/components/schemas/ERetainLogBackupsType'
      required:
        - logsProcessing
      type: "object"
    BackupScheduleModel:
      description: "Job scheduling options."
      properties:
        afterThisJob:
          $ref: '#/components/schemas/ScheduleAfterThisJobModel'
        backupWindow:
          $ref: '#/components/schemas/ScheduleBackupWindowModel'
        continuously:
          $ref: '#/components/schemas/ScheduleBackupWindowModel'
        daily:
          $ref: '#/components/schemas/ScheduleDailyModel'
        monthly:
          $ref: '#/components/schemas/ScheduleMonthlyModel'
        periodically:
          $ref: '#/components/schemas/SchedulePeriodicallyModel'
        retry:
          $ref: '#/components/schemas/ScheduleRetryModel'
        runAutomatically:
          default: false
          description: "If *true*, job scheduling is enabled."
          type: "boolean"
      required:
        - runAutomatically
      type: "object"
    BackupScriptSettingsModel:
      description: "Pre-freeze and post-thaw scripts."
      properties:
        linuxScripts:
          $ref: '#/components/schemas/BackupLinuxScriptModel'
        scriptProcessingMode:
          $ref: '#/components/schemas/EBackupScriptProcessingMode'
        windowsScripts:
          $ref: '#/components/schemas/BackupWindowsScriptModel'
      required:
        - scriptProcessingMode
      type: "object"
    BackupStorageSettingModel:
      description: "Storage settings."
      properties:
        compressionLevel:
          $ref: '#/components/schemas/ECompressionLevel'
        enableInlineDataDedup:
          description: "If *true*, Veeam Backup & Replication deduplicates VM data before storing it in the backup repository."
          type: "boolean"
        encryption:
          $ref: '#/components/schemas/BackupStorageSettingsEncryptionModel'
        excludeDeletedFileBlocks:
          description: "If *true*, Veeam Backup & Replication does not copy deleted file blocks."
          type: "boolean"
        excludeSwapFileBlocks:
          description: "If *true*, Veeam Backup & Replication excludes swap file blocks from processing."
          type: "boolean"
        storageOptimization:
          $ref: '#/components/schemas/EStorageOptimization'
      type: "object"
    BackupStorageSettingsEncryptionModel:
      description: "Encryption of backup files."
      properties:
        encryptionPasswordIdOrNull:
          description: "ID of the password used for encryption. The value is *null* for exported objects."
          format: "uuid"
          type: "string"
        encryptionPasswordTag:
          description: "Tag used to identify the password."
          type: "string"
        isEnabled:
          description: "If *true*, the content of backup files is encrypted."
          type: "boolean"
      required:
        - isEnabled
      type: "object"
    BackupWindowDayHoursModel:
      description: "Hourly scheme for a day."
      properties:
        day:
          $ref: '#/components/schemas/EDayOfWeek'
        hours:
          description: "String of 24 hours in the following format:<br>*1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1*<br>where *1* means permitted, *0* means denied."
          type: "string"
      required:
        - day
        - hours
      type: "object"
    BackupWindowSettingModel:
      description: "Time scheme that defines permitted days and hours for the job to start."
      properties:
        days:
          description: "Array of per-day schemes."
          items:
            $ref: '#/components/schemas/BackupWindowDayHoursModel'
          type: "array"
      required:
        - days
      type: "object"
    BackupWindowsScriptModel:
      description: "Paths to pre-freeze and post-thaw scripts for Microsoft Windows VMs."
      properties:
        postThawScript:
          description: "Path to a post-thaw script."
          type: "string"
        preFreezeScript:
          description: "Path to a pre-freeze script."
          type: "string"
      type: "object"
    BackupsFilters:
      properties:
        createdAfterFilter:
          format: "date-time"
          type: "string"
        createdBeforeFilter:
          format: "date-time"
          type: "string"
        jobIdFilter:
          format: "uuid"
          type: "string"
        limit:
          format: "int32"
          type: "integer"
        nameFilter:
          type: "string"
        orderAsc:
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EBackupsFiltersOrderColumn'
        platformIdFilter:
          format: "uuid"
          type: "string"
        policyTagFilter:
          type: "string"
        skip:
          format: "int32"
          type: "integer"
      type: "object"
    BackupsResult:
      properties:
        data:
          description: "Array of backups."
          items:
            $ref: '#/components/schemas/BackupModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    BaseBackupObjectModel:
      properties:
        id:
          description: "ID of the object."
          format: "uuid"
          type: "string"
        name:
          description: "Name of the object."
          type: "string"
        platformId:
          description: "Id of the platform where the object was created."
          format: "uuid"
          type: "string"
        platformName:
          $ref: '#/components/schemas/EPlatformType'
        restorePointsCount:
          description: "Number of restore points."
          type: "integer"
        type:
          description: "Type of the object."
          type: "string"
      type: "object"
    BaseCloudBrowserModel:
      properties:
        credentialsId:
          description: "ID of the cloud credentials record."
          format: "uuid"
          type: "string"
        serviceType:
          $ref: '#/components/schemas/ECloudServiceType'
      type: "object"
    BaseCloudBrowserNewFolderSpec:
      properties:
        credentialsId:
          description: "ID of a cloud credentials record requiered to connect to the object storage."
          format: "uuid"
          type: "string"
        newFolderName:
          description: "Name of the new folder."
          type: "string"
        serviceType:
          $ref: '#/components/schemas/ECloudServiceType'
      type: "object"
    BaseCloudBrowserSpec:
      properties:
        credentialsId:
          description: "ID of the object storage account (for browsing either storage or compute infrastructure)."
          format: "uuid"
          type: "string"
        serviceType:
          $ref: '#/components/schemas/ECloudServiceType'
      type: "object"
    BaseCloudCredentialsModel:
      properties:
        description:
          description: "Description of the cloud credentials record."
          type: "string"
        id:
          description: "ID of the cloud credentials record."
          format: "uuid"
          type: "string"
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      type: "object"
    BaseCloudCredentialsSpec:
      properties:
        description:
          description: "Description of the cloud credentials record."
          type: "string"
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      type: "object"
    BaseCloudDeviceCodeModel:
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      type: "object"
    BaseCloudDeviceCodeSpec:
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      type: "object"
    BaseCloudHelperApplianceModel:
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      type: "object"
    BaseCloudHelperApplianceSpec:
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      type: "object"
    BaseCloudNativeApplicationModel:
      properties:
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      type: "object"
    BaseCredentialsModel:
      properties:
        creationTime:
          description: "Date and time when the credentials were created."
          format: "date-time"
          type: "string"
        description:
          description: "Description of the credentials record."
          type: "string"
        id:
          description: "ID of the credentials record."
          format: "uuid"
          type: "string"
        type:
          $ref: '#/components/schemas/ECredentialsType'
        username:
          description: "User name."
          type: "string"
      type: "object"
    BaseCredentialsSpec:
      properties:
        description:
          description: "Description of the credentials record."
          type: "string"
        password:
          description: "Password."
          type: "string"
        type:
          $ref: '#/components/schemas/ECredentialsType'
        username:
          description: "User name."
          type: "string"
      type: "object"
    BaseEntireViVMRestoreSpec:
      properties:
        objectRestorePointId:
          description: "ID of the restore point."
          format: "uuid"
          type: "string"
        powerUp:
          description: "If *true*, Veeam Backup & Replication starts the restored VM on the target host."
          type: "boolean"
        reason:
          description: "Reason for restoring the VM."
          type: "string"
        restoreProxies:
          $ref: '#/components/schemas/RestoreProxySpec'
        secureRestore:
          $ref: '#/components/schemas/SecureRestoreSpec'
        type:
          $ref: '#/components/schemas/EEntireVMRestoreModeType'
      type: "object"
    BaseInstantViVMRecoverySpec:
      properties:
        VmTagsRestoreEnabled:
          description: "If *true*, Veeam Backup & Replication restores tags that were assigned to the original VM, and assign them to the restored VM."
          type: "boolean"
        nicsEnabled:
          description: "If *true*, the restored VM is connected to the network."
          type: "boolean"
        objectRestorePointId:
          description: "ID of the restore point."
          format: "uuid"
          type: "string"
        powerUp:
          description: "If *true*, Veeam Backup & Replication starts the restored VM on the target host."
          type: "boolean"
        reason:
          description: "Reason for restoring the VM."
          type: "string"
        secureRestore:
          $ref: '#/components/schemas/SecureRestoreSpec'
        type:
          $ref: '#/components/schemas/EInstantVMRecoveryModeType'
      type: "object"
    BaseJobModel:
      properties:
        description:
          description: "Description of the job."
          type: "string"
        id:
          description: "ID of the job."
          format: "uuid"
          type: "string"
        isDisabled:
          description: "If *true*, the job is disabled."
          type: "boolean"
        name:
          description: "Name of the job."
          type: "string"
        type:
          $ref: '#/components/schemas/EJobType'
      type: "object"
    BaseJobSpec:
      properties:
        description:
          description: "Job description specified at the time of the job creation."
          type: "string"
        name:
          description: "Name of the job."
          type: "string"
        type:
          $ref: '#/components/schemas/EJobType'
      type: "object"
    BaseManagedServerModel:
      properties:
        credentialsId:
          description: "ID of a credentials record used to connect to the server."
          format: "uuid"
          type: "string"
        description:
          description: "Description of the server."
          type: "string"
        id:
          description: "ID of the server."
          format: "uuid"
          type: "string"
        name:
          description: "Full DNS name or IP address of the server."
          type: "string"
        type:
          $ref: '#/components/schemas/EManagedServerType'
      type: "object"
    BaseManagedServerSpec:
      properties:
        credentialsId:
          description: "ID of the credentials used to connect to the server."
          format: "uuid"
          type: "string"
        description:
          description: "Description of the server."
          type: "string"
        name:
          description: "Full DNS name or IP address of the server."
          type: "string"
        type:
          $ref: '#/components/schemas/EManagedServerType'
      type: "object"
    BaseProxyModel:
      properties:
        description:
          description: "Description of the backup proxy."
          type: "string"
        id:
          description: "ID of the backup proxy."
          format: "uuid"
          type: "string"
        name:
          description: "Name of the backup proxy."
          type: "string"
        type:
          $ref: '#/components/schemas/EProxyType'
      type: "object"
    BaseProxySpec:
      properties:
        description:
          description: "Description of the backup proxy."
          type: "string"
        type:
          $ref: '#/components/schemas/EProxyType'
      type: "object"
    BaseRepositoryModel:
      properties:
        description:
          description: "Description of the backup repository."
          type: "string"
        id:
          description: "ID of the backup repository."
          format: "uuid"
          type: "string"
        name:
          description: "Name of the backup repository."
          type: "string"
        tag:
          description: "Tag that identifies the backup repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      type: "object"
    BaseRepositorySpec:
      properties:
        description:
          description: "Description of the backup repository."
          type: "string"
        name:
          description: "Name of the backup repository."
          type: "string"
        tag:
          description: "Tag that identifies the backup repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      type: "object"
    CapacityExtentModel:
      properties:
        id:
          description: "ID of an object storage repository added as a capacity extent."
          format: "uuid"
          type: "string"
      required:
        - id
      type: "object"
    CapacityTierModel:
      description: "Capacity tier."
      properties:
        copyPolicyEnabled:
          description: "If *true*, Veeam Backup & Replication copies backups from the performance extents to the capacity extent as soon as the backups are created."
          type: "boolean"
        enabled:
          description: "If *true*, the capacity tier is enabled."
          type: "boolean"
        encryption:
          $ref: '#/components/schemas/BackupStorageSettingsEncryptionModel'
        extents:
          description: "Array of capacity extents."
          items:
            $ref: '#/components/schemas/CapacityExtentModel'
          type: "array"
        movePolicyEnabled:
          description: "If *true*, Veeam Backup & Replication moves backup files that belong to inactive backup chains from the performance extents to the capacity extent."
          type: "boolean"
        offloadWindow:
          $ref: '#/components/schemas/BackupWindowSettingModel'
        operationalRestorePeriodDays:
          description: "Number of days after which inactive backup chains on the performance extents are moved to the capacity extent. Specify *0* to offload inactive backup chains on the same day they are created."
          type: "integer"
        overridePolicy:
          $ref: '#/components/schemas/CapacityTierOverridePolicyModel'
      required:
        - enabled
      type: "object"
    CapacityTierOverridePolicyModel:
      description: "Policy that overrides the move policy if the scale-out backup repository is reaching its capacity."
      properties:
        isEnabled:
          description: "If *true*, Veeam Backup & Replication moves oldest backup files sooner if the scale-out backup repository is reaching the threshold."
          type: "boolean"
        overrideSpaceThresholdPercents:
          description: "Space threshold of the scale-out backup repository, in percent."
          type: "integer"
      required:
        - isEnabled
      type: "object"
    CertificateModel:
      description: "Certificate settings."
      properties:
        issuedBy:
          description: "Issuer of the certificate."
          type: "string"
        issuedTo:
          description: "Acquirer of the certificate."
          type: "string"
        keyAlgorithm:
          description: "Key algorithm of the certificate."
          type: "string"
        keySize:
          description: "Key size of the certificate."
          type: "string"
        serialNumber:
          description: "Serial number of the certificate."
          type: "string"
        subject:
          description: "Subject of the certificate."
          type: "string"
        thumbprint:
          description: "Thumbprint of the certificate."
          type: "string"
        validBy:
          description: "Expiration date and time of the certificate."
          format: "date-time"
          type: "string"
        validFrom:
          description: "Date and time the certificate is valid from."
          format: "date-time"
          type: "string"
      required:
        - issuedBy
        - issuedTo
        - keyAlgorithm
        - keySize
        - serialNumber
        - subject
        - thumbprint
        - validBy
        - validFrom
      type: "object"
    CertificateUploadSpec:
      description: "Certificate settings (for certificate-based authentication)."
      properties:
        certificate:
          description: "Base64-encoded string of the content of a PFX certificate file."
          type: "string"
        formatType:
          $ref: '#/components/schemas/ECertificateFileFormatType'
        password:
          description: "Decryption password for the certificate file."
          type: "string"
      required:
        - certificate
        - formatType
      type: "object"
    CloudBrowserModel:
      allOf:
        - discriminator:
            mapping:
              AmazonEC2: '#/components/schemas/AmazonEC2BrowserModel'
              AmazonS3: '#/components/schemas/AmazonS3BrowserModel'
              AmazonSnowballEdge: '#/components/schemas/AmazonSnowballEdgeBrowserModel'
              AzureBlob: '#/components/schemas/AzureBlobBrowserModel'
              AzureCompute: '#/components/schemas/AzureComputeBrowserModel'
              AzureDataBox: '#/components/schemas/AzureDataBoxBrowserModel'
              GoogleCloud: '#/components/schemas/GoogleCloudStorageBrowserModel'
              IBMCloud: '#/components/schemas/IBMCloudStorageBrowserModel'
              S3Compatible: '#/components/schemas/S3CompatibleBrowserModel'
              WasabiCloud: '#/components/schemas/WasabiCloudStorageBrowserModel'
            propertyName: "serviceType"
          oneOf:
            - $ref: '#/components/schemas/AzureBlobBrowserModel'
            - $ref: '#/components/schemas/AzureDataBoxBrowserModel'
            - $ref: '#/components/schemas/AmazonS3BrowserModel'
            - $ref: '#/components/schemas/AmazonSnowballEdgeBrowserModel'
            - $ref: '#/components/schemas/S3CompatibleBrowserModel'
            - $ref: '#/components/schemas/GoogleCloudStorageBrowserModel'
            - $ref: '#/components/schemas/IBMCloudStorageBrowserModel'
            - $ref: '#/components/schemas/AzureComputeBrowserModel'
            - $ref: '#/components/schemas/AmazonEC2BrowserModel'
            - $ref: '#/components/schemas/WasabiCloudStorageBrowserModel'
        - $ref: '#/components/schemas/BaseCloudBrowserModel'
    CloudBrowserNewFolderSpec:
      allOf:
        - discriminator:
            mapping:
              AmazonS3: '#/components/schemas/AmazonS3BrowserDestinationSpec'
              AmazonSnowballEdge: '#/components/schemas/AmazonSnowballEdgeBrowserDestinationSpec'
              AzureBlob: '#/components/schemas/AzureBlobBrowserDestinationSpec'
              AzureDataBox: '#/components/schemas/AzureDataBoxBrowserDestinationSpec'
              GoogleCloud: '#/components/schemas/GoogleCloudStorageBrowserDestinationSpec'
              IBMCloud: '#/components/schemas/IBMCloudStorageBrowserDestinationSpec'
              S3Compatible: '#/components/schemas/S3CompatibleBrowserDestinationSpec'
              WasabiCloud: '#/components/schemas/WasabiCloudStorageBrowserDestinationSpec'
            propertyName: "serviceType"
          oneOf:
            - $ref: '#/components/schemas/AzureBlobBrowserDestinationSpec'
            - $ref: '#/components/schemas/AzureDataBoxBrowserDestinationSpec'
            - $ref: '#/components/schemas/AmazonS3BrowserDestinationSpec'
            - $ref: '#/components/schemas/S3CompatibleBrowserDestinationSpec'
            - $ref: '#/components/schemas/AmazonSnowballEdgeBrowserDestinationSpec'
            - $ref: '#/components/schemas/GoogleCloudStorageBrowserDestinationSpec'
            - $ref: '#/components/schemas/IBMCloudStorageBrowserDestinationSpec'
            - $ref: '#/components/schemas/WasabiCloudStorageBrowserDestinationSpec'
        - $ref: '#/components/schemas/BaseCloudBrowserNewFolderSpec'
    CloudBrowserSpec:
      allOf:
        - discriminator:
            mapping:
              AmazonEC2: '#/components/schemas/AmazonEC2BrowserSpec'
              AmazonS3: '#/components/schemas/AmazonS3BrowserSpec'
              AmazonSnowballEdge: '#/components/schemas/AmazonSnowballEdgeBrowserSpec'
              AzureBlob: '#/components/schemas/AzureBlobBrowserSpec'
              AzureCompute: '#/components/schemas/AzureComputeBrowserSpec'
              AzureDataBox: '#/components/schemas/AzureDataBoxBrowserSpec'
              GoogleCloud: '#/components/schemas/GoogleCloudStorageBrowserSpec'
              IBMCloud: '#/components/schemas/IBMCloudStorageBrowserSpec'
              S3Compatible: '#/components/schemas/S3CompatibleBrowserSpec'
              WasabiCloud: '#/components/schemas/WasabiCloudStorageBrowserSpec'
            propertyName: "serviceType"
          oneOf:
            - $ref: '#/components/schemas/AzureBlobBrowserSpec'
            - $ref: '#/components/schemas/AzureDataBoxBrowserSpec'
            - $ref: '#/components/schemas/AmazonS3BrowserSpec'
            - $ref: '#/components/schemas/S3CompatibleBrowserSpec'
            - $ref: '#/components/schemas/AmazonSnowballEdgeBrowserSpec'
            - $ref: '#/components/schemas/GoogleCloudStorageBrowserSpec'
            - $ref: '#/components/schemas/IBMCloudStorageBrowserSpec'
            - $ref: '#/components/schemas/AzureComputeBrowserSpec'
            - $ref: '#/components/schemas/AmazonEC2BrowserSpec'
            - $ref: '#/components/schemas/WasabiCloudStorageBrowserSpec'
        - $ref: '#/components/schemas/BaseCloudBrowserSpec'
    CloudCredentialsExportSpec:
      properties:
        ids:
          description: "Array of cloud credentials IDs that you want to export."
          items:
            format: "uuid"
            type: "string"
          type: "array"
          uniqueItems: true
        names:
          description: "Array of cloud credentials user names. Wildcard characters are supported."
          items:
            type: "string"
          type: "array"
          uniqueItems: true
        types:
          description: "Array of cloud credentials types that you want to export."
          items:
            $ref: '#/components/schemas/ECloudCredentialsType'
          type: "array"
          uniqueItems: true
      type: "object"
    CloudCredentialsFilters:
      properties:
        limit:
          description: "Maximum number of cloud credentials records to return."
          format: "int32"
          type: "integer"
        nameFilter:
          description: "Filters cloud credentials by the `nameFilter` pattern. The pattern can match any cloud credentials parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          type: "string"
        orderAsc:
          description: "Sorts cloud credentials in the ascending order by the `orderColumn` parameter."
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/ECloudCredentialsFiltersOrderColumn'
        skip:
          description: "Number of cloud credentials records to skip."
          format: "int32"
          type: "integer"
        typeFilter:
          $ref: '#/components/schemas/ECloudCredentialsType'
      type: "object"
    CloudCredentialsImportModel:
      description: "Cloud credentials used for connection."
      properties:
        name:
          description: "User name, account name or access key."
          type: "string"
        tag:
          description: "Tag used to identify the cloud credentials record."
          type: "string"
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
        - name
        - tag
        - type
      type: "object"
    CloudCredentialsImportSpecCollection:
      properties:
        amazon:
          description: "Array of AWS accounts."
          items:
            $ref: '#/components/schemas/AmazonCloudCredentialsImportSpec'
          type: "array"
          uniqueItems: true
        azureCompute:
          description: "Array of Azure compute accounts."
          items:
            $ref: '#/components/schemas/AzureComputeCloudCredentialsImportSpec'
          type: "array"
          uniqueItems: true
        azureStorage:
          description: "Array of Azure storage accounts."
          items:
            $ref: '#/components/schemas/AzureStorageCloudCredentialsImportSpec'
          type: "array"
          uniqueItems: true
        google:
          description: "Array of Google accounts."
          items:
            $ref: '#/components/schemas/GoogleCloudCredentialsImportSpec'
          type: "array"
          uniqueItems: true
      required:
        - credentials
      type: "object"
    CloudCredentialsModel:
      allOf:
        - discriminator:
            mapping:
              Amazon: '#/components/schemas/AmazonCloudCredentialsModel'
              AzureCompute: '#/components/schemas/AzureComputeCloudCredentialsModel'
              AzureStorage: '#/components/schemas/AzureStorageCloudCredentialsModel'
              Google: '#/components/schemas/GoogleCloudCredentialsModel'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/AmazonCloudCredentialsModel'
            - $ref: '#/components/schemas/AzureStorageCloudCredentialsModel'
            - $ref: '#/components/schemas/AzureComputeCloudCredentialsModel'
            - $ref: '#/components/schemas/GoogleCloudCredentialsModel'
        - $ref: '#/components/schemas/BaseCloudCredentialsModel'
    CloudCredentialsPasswordSpec:
      properties:
        newSecretKey:
          description: "New secret key."
          type: "string"
      required:
        - newSecretKey
      type: "object"
    CloudCredentialsResult:
      properties:
        data:
          description: "Array of cloud credentials."
          items:
            $ref: '#/components/schemas/CloudCredentialsModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    CloudCredentialsSpec:
      allOf:
        - discriminator:
            mapping:
              Amazon: '#/components/schemas/AmazonCloudCredentialsSpec'
              AzureCompute: '#/components/schemas/AzureComputeCloudCredentialsSpec'
              AzureStorage: '#/components/schemas/AzureStorageCloudCredentialsSpec'
              Google: '#/components/schemas/GoogleCloudCredentialsSpec'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/AmazonCloudCredentialsSpec'
            - $ref: '#/components/schemas/AzureStorageCloudCredentialsSpec'
            - $ref: '#/components/schemas/AzureComputeCloudCredentialsSpec'
            - $ref: '#/components/schemas/GoogleCloudCredentialsSpec'
        - $ref: '#/components/schemas/BaseCloudCredentialsSpec'
    CloudDeviceCodeModel:
      allOf:
        - discriminator:
            mapping:
              AzureCompute: '#/components/schemas/AzureComputeCloudDeviceCodeModel'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/AzureComputeCloudDeviceCodeModel'
        - $ref: '#/components/schemas/BaseCloudDeviceCodeModel'
    CloudDeviceCodeSpec:
      allOf:
        - discriminator:
            mapping:
              AzureCompute: '#/components/schemas/AzureComputeCloudDeviceCodeSpec'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/AzureComputeCloudDeviceCodeSpec'
        - $ref: '#/components/schemas/BaseCloudDeviceCodeSpec'
    CloudHelperApplianceModel:
      allOf:
        - discriminator:
            mapping:
              AzureCompute: '#/components/schemas/AzureLinuxHelperApplianceModel'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/AzureLinuxHelperApplianceModel'
        - $ref: '#/components/schemas/BaseCloudHelperApplianceModel'
    CloudHelperApplianceResult:
      properties:
        data:
          description: "Array of Lunux-based helper appliances."
          items:
            $ref: '#/components/schemas/CloudHelperApplianceModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    CloudHelperApplianceSpec:
      allOf:
        - discriminator:
            mapping:
              AzureCompute: '#/components/schemas/AzureLinuxHelperApplianceSpec'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/AzureLinuxHelperApplianceSpec'
        - $ref: '#/components/schemas/BaseCloudHelperApplianceSpec'
    CloudNativeApplicationModel:
      allOf:
        - discriminator:
            mapping:
              AzureCompute: '#/components/schemas/AzureComputeCloudNativeApplicationModel'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/AzureComputeCloudNativeApplicationModel'
        - $ref: '#/components/schemas/BaseCloudNativeApplicationModel'
    ComputerRecoveryTokenFilters:
      properties:
        expirationDateAfter:
          format: "date-time"
          type: "string"
        expirationDateBefore:
          format: "date-time"
          type: "string"
        limit:
          format: "int32"
          type: "integer"
        nameFilter:
          type: "string"
        orderAsc:
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EComputerRecoveryTokenFiltersOrderColumn'
        skip:
          format: "int32"
          type: "integer"
      type: "object"
    ComputerRecoveryTokenModel:
      properties:
        expirationDate:
          description: "Date and time when the recovery token expires."
          format: "date-time"
          type: "string"
        id:
          description: "ID of the recovery token."
          format: "uuid"
          type: "string"
        name:
          description: "Friendly name of the recovery token."
          type: "string"
        recoveryToken:
          description: "Recovery token."
          type: "string"
      required:
        - id
        - name
        - expirationDate
      type: "object"
    ComputerRecoveryTokenResult:
      properties:
        data:
          description: "Array of recovery tokens."
          items:
            $ref: '#/components/schemas/ComputerRecoveryTokenModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    ComputerRecoveryTokenSpec:
      properties:
        backupIds:
          description: "Array of backup IDs whose data you want to restore with the recovery token."
          items:
            format: "uuid"
            type: "string"
          type: "array"
        expirationDate:
          description: "Date and time when the access token expires."
          format: "date-time"
          type: "string"
      required:
        - backupIds
        - expirationDate
      type: "object"
    ConfigBackupEncryptionModel:
      description: "Encryption settings."
      properties:
        isEnabled:
          description: "If *true*, backup encryption is enabled."
          type: "boolean"
        passwordId:
          description: "ID of the password used for encryption."
          format: "uuid"
          type: "string"
      required:
        - isEnabled
        - passwordId
      type: "object"
    ConfigBackupLastSuccessfulModel:
      description: "Last successful backup."
      properties:
        lastSuccessfulTime:
          description: "Date and time when the last successful backup was created."
          format: "date-time"
          type: "string"
        sessionId:
          description: "ID of the job session."
          format: "uuid"
          type: "string"
      type: "object"
    ConfigBackupModel:
      properties:
        backupRepositoryId:
          description: "ID of the backup repository on which the configuration backup is stored."
          format: "uuid"
          type: "string"
        encryption:
          $ref: '#/components/schemas/ConfigBackupEncryptionModel'
        isEnabled:
          description: "If *true*, configuration backup is enabled."
          type: "boolean"
        lastSuccessfulBackup:
          $ref: '#/components/schemas/ConfigBackupLastSuccessfulModel'
        notifications:
          $ref: '#/components/schemas/ConfigBackupNotificationsModel'
        restorePointsToKeep:
          description: "Number of restore points to keep in the backup repository."
          format: "int32"
          type: "integer"
        schedule:
          $ref: '#/components/schemas/ConfigBackupScheduleModel'
      required:
        - isEnabled
        - backupRepositoryId
        - restorePointsToKeep
        - notifications
        - schedule
        - lastSuccessfulBackup
        - encryption
      type: "object"
    ConfigBackupNotificationsModel:
      description: "Notification settings."
      properties:
        SMTPSettings:
          $ref: '#/components/schemas/ConfigBackupSMTPSettigsModel'
        SNMPEnabled:
          description: "If *true*, SNMP traps are enabled for this job."
          type: "boolean"
      required:
        - SNMPEnabled
      type: "object"
    ConfigBackupSMTPSettigsModel:
      description: "Email notification settings."
      properties:
        isEnabled:
          description: "If *true*, email notifications are enabled for this job."
          type: "boolean"
        notifyOnError:
          description: "If *true*, email notifications are sent when the job fails."
          type: "boolean"
        notifyOnSuccess:
          description: "If *true*, email notifications are sent when the job completes successfully."
          type: "boolean"
        notifyOnWarning:
          description: "If *true*, email notifications are sent when the job completes with a warning."
          type: "boolean"
        recipients:
          description: "Array of recipients' email addresses."
          items:
            type: "string"
          type: "array"
        settingsType:
          $ref: '#/components/schemas/EConfigBackupSMTPSettingsType'
        subject:
          description: "Notification subject. Use the following variables in the subject:<ul> <li>*%Time%* — completion time</li> <li>*%JobName%* — job name</li> <li>*%JobResult%* — job result</li></ul>"
          type: "string"
      required:
        - isEnabled
        - recipients
        - settingsType
        - subject
        - notifyOnSuccess
        - notifyOnWarning
        - notifyOnError
      type: "object"
    ConfigBackupScheduleModel:
      description: "Scheduling settings."
      properties:
        daily:
          $ref: '#/components/schemas/ScheduleDailyModel'
        isEnabled:
          description: "If *true*, backup scheduling is enabled."
          type: "boolean"
        monthly:
          $ref: '#/components/schemas/ScheduleMonthlyModel'
      required:
        - isEnabled
      type: "object"
    ConnectionCertificateModel:
      properties:
        certificate:
          $ref: '#/components/schemas/CertificateModel'
        fingerprint:
          description: "SSH key fingerprint used to verify the server identity."
          type: "string"
      type: "object"
    CredentialsExportSpec:
      properties:
        ids:
          description: "Array of credentials IDs."
          items:
            format: "uuid"
            type: "string"
          type: "array"
          uniqueItems: true
        names:
          description: "Array of credentials user names. Wildcard characters are supported."
          items:
            type: "string"
          type: "array"
          uniqueItems: true
        showHiddenCreds:
          description: "If *true*, service credentials are exported."
          type: "boolean"
        types:
          description: "Array of credentials types."
          items:
            $ref: '#/components/schemas/ECredentialsType'
          type: "array"
          uniqueItems: true
      type: "object"
    CredentialsFilters:
      properties:
        limit:
          description: "Maximum number of credentials records to return."
          format: "int32"
          type: "integer"
        nameFilter:
          description: "Filters credentials by the `nameFilter` pattern. The pattern can match any credentials parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          type: "string"
        orderAsc:
          description: "Sorts credentials in the ascending order by the `orderColumn` parameter."
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/ECredentialsFiltersOrderColumn'
        skip:
          description: "Number of credentials records to skip."
          format: "int32"
          type: "integer"
      type: "object"
    CredentialsImportModel:
      description: "Credentials used for connection."
      properties:
        credentialsName:
          description: "User name, account name or access key."
          type: "string"
        credentialsTag:
          description: "Tag used to identify the credentials record."
          type: "string"
      required:
        - credentialsName
      type: "object"
    CredentialsImportSpec:
      properties:
        description:
          description: "Description of the credentials record."
          type: "string"
        linuxAdditionalSettings:
          $ref: '#/components/schemas/CredentialsLinuxSettingsImportModel'
        password:
          description: "Password."
          type: "string"
        tag:
          description: "Tag used to identify the credentials record."
          type: "string"
        type:
          $ref: '#/components/schemas/ECredentialsType'
        username:
          description: "User name."
          type: "string"
      required:
        - tag
        - type
        - username
      type: "object"
    CredentialsImportSpecCollection:
      properties:
        credentials:
          description: "Array of credentials."
          items:
            $ref: '#/components/schemas/CredentialsImportSpec'
          type: "array"
          uniqueItems: true
      required:
        - credentials
      type: "object"
    CredentialsLinuxSettingsImportModel:
      description: "Additional Linux account settings."
      properties:
        SSHPort:
          description: "SSH port used to connect to a Linux server."
          type: "integer"
        addToSudoers:
          description: "If *true*, the account is automatically added to the sudoers file."
          type: "boolean"
        autoElevated:
          description: "If *true*, the permissions of the account are automatically elevated to the root user."
          type: "boolean"
        passphrase:
          description: "Passphrase that protects the private key."
          type: "string"
        privateKey:
          description: "Private key."
          type: "string"
        rootPassword:
          description: "Password for the root account."
          type: "string"
        useSu:
          description: "If *true*, the `su` command is used for Linux distributions where the `sudo` command is not available."
          type: "boolean"
      type: "object"
    CredentialsModel:
      allOf:
        - discriminator:
            mapping:
              Linux: '#/components/schemas/LinuxCredentialsModel'
              Standard: '#/components/schemas/StandardCredentialsModel'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/StandardCredentialsModel'
            - $ref: '#/components/schemas/LinuxCredentialsModel'
        - $ref: '#/components/schemas/BaseCredentialsModel'
    CredentialsPasswordChangeSpec:
      properties:
        password:
          description: "New password."
          type: "string"
      required:
        - password
      type: "object"
    CredentialsResult:
      properties:
        data:
          description: "Array of credentials."
          items:
            $ref: '#/components/schemas/CredentialsModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    CredentialsSpec:
      allOf:
        - discriminator:
            mapping:
              Linux: '#/components/schemas/LinuxCredentialsSpec'
              Standard: '#/components/schemas/StandardCredentialsSpec'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/StandardCredentialsSpec'
            - $ref: '#/components/schemas/LinuxCredentialsSpec'
        - $ref: '#/components/schemas/BaseCredentialsSpec'
    DeleteRepositoryFilters:
      properties:
        deleteBackups:
          type: "boolean"
      type: "object"
    EAllowedBackupsType:
      description: "Type of backup files that can be stored on the extent."
      enum:
        - All
        - FullsOnly
        - IncrementsOnly
        - None
      type: "string"
    EAmazonRegionType:
      description: "AWS region type."
      enum:
        - China
        - Global
        - Government
      type: "string"
    EAmazonS3Region:
      description: "Amazon S3 region code."
      enum:
        - unknown
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - af-south-1
        - ap-east-1
        - ap-south-1
        - ap-northeast-1
        - ap-northeast-2
        - ap-southeast-1
        - ap-southeast-2
        - ca-central-1
        - eu-central-1
        - eu-west-1
        - eu-west-2
        - eu-south-1
        - eu-west-3
        - eu-north-1
        - me-south-1
        - sa-east-1
      type: "string"
    EApplicationSettingsVSS:
      description: "Behavior scenario for application-aware processing."
      enum:
        - requireSuccess
        - ignoreFailures
        - disabled
      type: "string"
    EAzureComputeCredentialsCreationMode:
      description: "Mode that defines whether you want to connect to Azure Active Directory using an existing or a newly created Azure Active Directory application."
      enum:
        - NewAccount
        - ExistingAccount
      type: "string"
    EAzureComputeCredentialsDeploymentType:
      description: "Deployment type (global Microsoft Azure or Microsoft Azure Stack Hub)."
      enum:
        - MicrosoftAzure
        - MicrosoftAzureStack
      type: "string"
    EAzureRegionType:
      description: "Region where your Microsoft Azure container is located."
      enum:
        - China
        - Germany
        - Global
        - Government
      type: "string"
    EBackupExclusionPolicy:
      description: "Exclusion policy."
      enum:
        - disabled
        - excludeOnly
        - includeOnly
      type: "string"
    EBackupModeType:
      description: "Type of the backup method used to create a restore point."
      enum:
        - Full
        - Incremental
        - ReverseIncremental
        - Transofrm
        - TransformForeverIncremental
      type: "string"
    EBackupObjectsFiltersOrderColumn:
      enum:
        - Name
        - ObjectId
        - PlatformId
        - Type
      type: "string"
    EBackupOracleLogsSettings:
      description: "Type of archived logs processing."
      enum:
        - preserve
        - deleteExpiredHours
        - deleteExpiredGBs
      type: "string"
    EBackupProxyImportType:
      enum:
        - vmware
      type: "string"
    EBackupProxyTransportMode:
      description: "Transport mode of the backup proxy."
      enum:
        - auto
        - directAccess
        - virtualAppliance
        - network
      type: "string"
    EBackupScriptProcessingMode:
      description: "Scenario for scripts execution."
      enum:
        - disableExec
        - ignoreExecFailures
        - requireSuccess
      type: "string"
    EBackupsFiltersOrderColumn:
      enum:
        - Name
        - CreationTime
        - PlatformId
        - JobId
        - PolicyTag
      type: "string"
    ECertificateFileFormatType:
      description: "Certificate file format."
      enum:
        - pfx
      type: "string"
    ECloudBrowserFolderType:
      description: "Folder type."
      enum:
        - backup
        - archive
      type: "string"
    ECloudCredentialsFiltersOrderColumn:
      description: "Sorts cloud credentials by one of the cloud credentials parameters."
      enum:
        - Name
        - Description
      type: "string"
    ECloudCredentialsType:
      description: "Cloud credentials type."
      enum:
        - AzureStorage
        - AzureCompute
        - Amazon
        - Google
      type: "string"
    ECloudServiceType:
      description: "Type of cloud service."
      enum:
        - AzureBlob
        - AzureDataBox
        - AmazonS3
        - AmazonEC2
        - S3Compatible
        - AmazonSnowballEdge
        - GoogleCloud
        - IBMCloud
        - AzureCompute
        - WasabiCloud
      type: "string"
    ECompressionLevel:
      description: "Compression level."
      enum:
        - None
        - DedupFriendly
        - Optimal
        - High
        - Extreme
      type: "string"
    EComputerRecoveryTokenFiltersOrderColumn:
      enum:
        - Name
        - ExpirationDate
      type: "string"
    EConfigBackupSMTPSettingsType:
      description: "Type of notification settings."
      enum:
        - Global
        - Custom
      type: "string"
    EConsumptionLimitKind:
      description: "Measurement unit."
      enum:
        - TB
        - PB
      type: "string"
    ECredentialsFiltersOrderColumn:
      enum:
        - Username
        - Description
      type: "string"
    ECredentialsStorageType:
      description: "Credentials type used to connect to the Linux server."
      enum:
        - Permanent
        - SingleUse
      type: "string"
    ECredentialsType:
      description: "Credentials type."
      enum:
        - Standard
        - Linux
      type: "string"
    EDailyKinds:
      description: "Kind of daily scheduling scheme."
      enum:
        - Everyday
        - WeekDays
        - SelectedDays
      type: "string"
    EDayNumberInMonth:
      description: "Week day number in the month."
      enum:
        - First
        - Second
        - Third
        - Fourth
        - Last
        - OnDay
      type: "string"
    EDayOfWeek:
      description: "Day of the week."
      enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      type: "string"
    EDiskCreationMode:
      description: "Disk format of the restored VM."
      enum:
        - Source
        - Thick
        - Thin
        - ThickEagerZeroed
      type: "string"
      x-enumDescriptions:
        Source: Same as source.
        Thick: Thick provision lazy zeroed.
        ThickEagerZeroed: Thick provision eager zeroed.
        Thin: Thin provision.
    EDiskInfoProcessState:
      description: "Process state of the disk."
      enum:
        - NotProcessed
        - InProcessing
        - PartiallyProcessed
        - Processed
      type: "string"
    EDiskInfoType:
      description: "Type of the disk."
      enum:
        - Unknown
        - Simple
        - Vi
        - Hv
        - HvRawDiskFile
        - EndPoint
      type: "string"
    EEmailNotificationType:
      description: "Type of email notification settings (global notification settings specified for the backup server, or custom notification settings specified for this job)."
      enum:
        - UseGlobalNotificationSettings
        - UseCustomNotificationSettings
      type: "string"
    EEncryptionPasswordsFiltersOrderColumn:
      enum:
        - Hint
        - ModificationTime
      type: "string"
    EEntireVMRestoreModeType:
      description: "Restore mode."
      enum:
        - OriginalLocation
        - Customized
      type: "string"
    EGuestFSIndexingMode:
      description: "Indexing mode."
      enum:
        - disable
        - indexAll
        - indexAllExcept
        - indexOnly
      type: "string"
    EGuestOSType:
      description: "Type of the guest OS."
      enum:
        - Windows
        - Linux
      type: "string"
    EHierarchyType:
      description: "Hierarchy type."
      enum:
        - HostsAndClusters
        - DatastoresAndVms
        - HostsAndDatastores
        - VmsAndTemplates
        - VmsAndTags
        - Network
      type: "string"
    EInstantRecoveryMountState:
      description: "Mount state."
      enum:
        - Failed
        - Mounting
        - Mounted
        - Dismounting
      type: "string"
    EInstantVMRecoveryModeType:
      description: "Restore mode."
      enum:
        - OriginalLocation
        - Customized
      type: "string"
    EInstantViVMRecoveryMountsFiltersOrderColumn:
      description: "Sorts mounts by one of the mount parameters."
      enum:
        - state
        - name
      type: "string"
    EInstantViVmRecoveryBiosUuidPolicyType:
      description: "BIOS UUID policy for the restored VM."
      enum:
        - preserve
        - generateNew
      type: "string"
    EJobFiltersOrderColumn:
      description: "Orders jobs by the specified column."
      enum:
        - Name
        - Type
        - Description
      type: "string"
    EJobStatesFiltersOrderColumn:
      description: "Orders job states by the specified column."
      enum:
        - Name
        - Type
        - Status
        - LastRun
        - LastResult
        - NextRun
        - Description
        - RepositoryId
        - ObjectsCount
      type: "string"
    EJobStatus:
      description: "Current status of the job."
      enum:
        - running
        - inactive
        - disabled
      type: "string"
    EJobType:
      description: "Type of the job."
      enum:
        - Backup
      type: "string"
    EJobWorkload:
      description: "Workload which the job must process."
      enum:
        - application
        - cloudVm
        - file
        - server
        - workstation
        - vm
      type: "string"
    ELoginGrantType:
      default: "password"
      description: "Authorization grant type.<br>Available values:<ul> <li>`password` — used to obtain an access token by providing a user name and password.</li> <li>`refresh_token` — used to refresh an expired or lost access token by providing a refresh token.</li> <li>`authorization_code` — used to obtain an access token by providing an authorization code.</li> <li>`vbr_token` — used to obtain an access token by providing a Veeam Backup & Replication token. This grant type is only used in a restricted mode for integration with Veeam Backup & Replication.</li></ul>"
      enum:
        - password
        - refresh_token
        - authorization_code
        - vbr_token
      type: "string"
    EManagedServerType:
      description: "Type of the server."
      enum:
        - WindowsHost
        - LinuxHost
        - ViHost
      type: "string"
    EManagedServersFiltersOrderColumn:
      enum:
        - Name
        - Type
        - Description
      type: "string"
    EMonth:
      description: "Month."
      enum:
        - January
        - February
        - March
        - April
        - May
        - June
        - July
        - August
        - September
        - October
        - November
        - December
      type: "string"
    EObjectRestorePointOperation:
      enum:
        - VmwareInstantRecoveryFcd
      type: "string"
    EObjectRestorePointsFiltersOrderColumn:
      enum:
        - CreationTime
        - PlatformId
        - BackupId
      type: "string"
    EPeriodicallyKinds:
      description: "Time unit for periodic job scheduling."
      enum:
        - Hours
        - Minutes
        - Seconds
        - Days
      type: "string"
    EPlacementPolicyType:
      description: "Type of placement policy."
      enum:
        - DataLocality
        - Performance
      type: "string"
      x-enumDescriptions:
        DataLocality: Veeam Backup & Replication stores full and incremental backup files to the same performance extent of the scale-out backup repository.
        Performance: Veeam Backup & Replication stores full and incremental backup files to different performance extents of the scale-out backup repository.
    EPlatform:
      enum:
        - VMware
        - HyperV
        - Test
        - Vcd
        - Tape
        - EndPoint
        - LinuxPhysical
        - CustomPlatform
        - Conf
        - NasBackup
        - EmulatedVMware
        - Extension0
        - Extension1
        - Extension
      type: "string"
    EPlatformType:
      description: "Platform name."
      enum:
        - VMware
        - HyperV
        - Vcd
        - WindowsPhysical
        - LinuxPhysical
        - Tape
        - NasBackup
        - CustomPlatform
      type: "string"
    EProxiesFiltersOrderColumn:
      enum:
        - Name
        - Type
        - Description
      type: "string"
    EProxyType:
      description: "Type of the backup proxy."
      enum:
        - ViProxy
      type: "string"
    ERepositoryAccessType:
      description: "Access type."
      enum:
        - DenyAll
        - AllowAll
        - AllowExplicit
      type: "string"
    ERepositoryConnectionType:
      description: "Repository connection type (direct or through a gateway server)."
      enum:
        - Direct
        - SelectedGateway
      type: "string"
    ERepositoryExtentStatusType:
      description: "Performance extent status."
      enum:
        - Normal
        - Evacuate
        - Pending
        - Sealed
        - Maintenance
        - ResyncRequired
        - TenantEvacuating
      type: "string"
    ERepositoryFiltersOrderColumn:
      description: "Sorts repositories by one of the repository parameters."
      enum:
        - Name
        - Description
        - Type
        - Host
        - Path
      type: "string"
    ERepositoryStatesFiltersOrderColumn:
      description: "Orders repositories by the specified column."
      enum:
        - Name
        - Type
        - Host
        - Path
        - CapacityGB
        - FreeGB
        - UsedSpaceGB
        - Description
      type: "string"
    ERepositoryType:
      description: "Repository type."
      enum:
        - WinLocal
        - LinuxLocal
        - Smb
        - Nfs
        - AzureBlob
        - AzureDataBox
        - AzureArchive
        - AmazonS3
        - AmazonSnowballEdge
        - AmazonS3Glacier
        - S3Compatible
        - GoogleCloud
        - IBMCloud
        - ExtendableRepository
        - DDBoost
        - ExaGrid
        - HPStoreOnceIntegration
        - Quantum
        - WasabiCloud
        - LinuxHardened
        - Infinidat
        - Fujitsu
      type: "string"
    ERetainLogBackupsType:
      description: "Retention policy for the logs stored in the backup repository."
      enum:
        - untilBackupDeleted
        - KeepOnlyDays
      type: "string"
    ERetentionPolicyType:
      description: "Type of the retention policy."
      enum:
        - RestorePoints
        - Days
      type: "string"
    ERotatedDriveCleanupMode:
      description: "Cleanup mode:<ul> <li>`Disabled` — continue the backup chain on an inserted drive.</li> <li>`ClearBackupFolder` — delete existing backups belonging to the job.</li> <li>`ClearRepositoryFolder` — delete all existing backups from repository.</li></ul>"
      enum:
        - Disabled
        - ClearBackupFolder
        - ClearRepositoryFolder
      type: "string"
    ESQLLogsProcessing:
      description: "Type of transaction logs processing."
      enum:
        - truncate
        - preserve
        - backup
        - neverTruncate
      type: "string"
    EScaleOutRepositoryFiltersOrderColumn:
      enum:
        - Name
        - Description
        - Type
        - Host
        - Path
      type: "string"
    EScriptPeriodicityType:
      description: "Type of script periodicity."
      enum:
        - Days
        - BackupSessions
      type: "string"
    ESennightOfMonth:
      description: "Sennight of the month."
      enum:
        - First
        - Second
        - Third
        - Fourth
        - Fifth
        - Last
      type: "string"
    EServicesFiltersOrderColumn:
      enum:
        - Name
        - Port
      type: "string"
    ESessionResult:
      description: "Result status."
      enum:
        - None
        - Success
        - Warning
        - Failed
      type: "string"
    ESessionState:
      description: "State of the session."
      enum:
        - Stopped
        - Starting
        - Stopping
        - Working
        - Pausing
        - Resuming
        - WaitingTape
        - Idle
        - Postprocessing
        - WaitingRepository
        - WaitingSlot
      type: "string"
    ESessionType:
      description: "Type of the session."
      enum:
        - Infrastructure
        - Job
        - Automation
        - ConfigurationBackup
        - RepositoryMaintenance
        - RepositoryEvacuate
        - InfrastructureItemDeletion
        - RestoreVm
        - InstantRecovery
        - FirstClassDiskInstantRestore
        - AzureApplianceDeploy
        - QuickMigration
      type: "string"
    ESessionsFiltersOrderColumn:
      enum:
        - Name
        - SessionType
        - CreationTime
        - EndTime
        - State
        - Result
      type: "string"
    ESpeedUnit:
      description: "Traffic speed unit."
      enum:
        - KbytePerSec
        - MbitPerSpec
        - MbytePerSec
      type: "string"
    EStorageOptimization:
      description: "Storage optimization that depends on the target type."
      enum:
        - LocalTargetLarge
        - LocalTarget
        - LANTarget
        - WANTarget
        - LocalTargetLarge8192
        - LocalTargetLarge4096
      type: "string"
    ETaskLogRecordStatus:
      enum:
        - None
        - Succeeded
        - Warning
        - Failed
      type: "string"
    ETransactionLogsSettings:
      description: "Transaction logs settings that define whether copy-only backups must be created, or transaction logs for Microsoft Exchange, Microsoft SQL and Oracle VMs must be processed.<br> If transaction log processing is selected, specify the following parameters:<ul> <li>[For Microsoft SQL Server VMs] Microsoft SQL Server transaction log settings</li> <li>[For Oracle VMs] Oracle archived log settings</li></ul>"
      enum:
        - process
        - copyOnly
      type: "string"
    EViHostType:
      description: "Type of the VMware vSphere server."
      enum:
        - ESX
        - ESXi
        - VC
      type: "string"
    EViRootFiltersOrderColumn:
      description: "Sorts VMware vSphere servers by one of the VMware vSphere server parameters."
      enum:
        - Name
        - Type
      type: "string"
    EVirusDetectionAction:
      description: "Action that Veeam Backup & Replication takes if the antivirus software finds a threat."
      enum:
        - DisableNetwork
        - AbortRecovery
        - Ignore
      type: "string"
    EVmwareDisksTypeToProcess:
      description: "Type of disk selection."
      enum:
        - AllDisks
        - SystemOnly
        - SelectedDisks
      type: "string"
    EVmwareFcdInstantRecoveryMountsFiltersOrderColumn:
      enum:
        - state
        - name
      type: "string"
    EVmwareInventoryType:
      description: "Type of the VMware vSphere object."
      enum:
        - Unknown
        - VirtualMachine
        - vCenterServer
        - Datacenter
        - Cluster
        - Host
        - ResourcePool
        - Folder
        - Datastore
        - DatastoreCluster
        - StoragePolicy
        - Template
        - ComputeResource
        - VirtualApp
        - Tag
        - Category
        - Multitag
        - Network
      type: "string"
    EWindowsHostComponentType:
      description: "Veeam Backup & Replication component."
      enum:
        - Transport
        - Nfs
        - HvIntegration
        - DeployerSvc
        - WanAccelerator
        - Tape
        - CloudGate
        - CloudServiceInvoker
        - CloudServiceRemoting
        - RestoreProxy
        - EpAgent
        - EpAgentSqlLocalDB
        - EpAgentSharedManagementObjects
        - EpAgentSqlSysClrTypes
        - AgentConfigureService
        - VawRedist
        - ValRedist
        - GuestControl
        - FileSystemVssIntegration
        - VssHwSnapshotProvider
        - Cdp
        - VamRedist
      type: "string"
    EmailCustomNotificationType:
      description: "Custom notification settings."
      properties:
        SuppressNotificationUntilLastRetry:
          description: "If *true*, email notifications are sent about the final job status only (not per every job retry)."
          type: "boolean"
        notifyOnError:
          description: "If *true*, email notifications are sent when the job fails."
          type: "boolean"
        notifyOnSuccess:
          description: "If *true*, email notifications are sent when the job completes successfully."
          type: "boolean"
        notifyOnWarning:
          description: "If *true*, email notifications are sent when the job completes with a warning."
          type: "boolean"
        subject:
          description: "Notification subject. Use the following variables in the subject:<ul> <li>*%Time%* — completion time</li> <li>*%JobName%* — job name</li> <li>*%JobResult%* — job result</li> <li>*%ObjectCount%* — number of VMs in the job</li> <li>*%Issues%* — number of VMs in the job that have finished with the Warning or Failed status</li></ul>"
          type: "string"
      type: "object"
    EmailNotificationSettingsModel:
      description: "Email notification settings for the backup job."
      properties:
        customNotificationSettings:
          $ref: '#/components/schemas/EmailCustomNotificationType'
        isEnabled:
          description: "If *true*, email notifications are enabled for this job."
          type: "boolean"
        notificationType:
          $ref: '#/components/schemas/EEmailNotificationType'
        recipients:
          description: "Array of recipient’s email addresses."
          items:
            type: "string"
          type: "array"
          uniqueItems: true
      required:
        - isEnabled
      type: "object"
    EmptySuccessResponse:
      description: "Empty success response (200, 201, 204)."
      type: "object"
    EncryptionPasswordExportSpec:
      properties:
        hints:
          description: "Array of password hints."
          items:
            type: "string"
          type: "array"
          uniqueItems: true
        ids:
          description: "Array of password IDs."
          items:
            format: "uuid"
            type: "string"
          type: "array"
          uniqueItems: true
        modificationTimeFrom:
          description: "Date and time when the password was last modified."
          format: "date-time"
          type: "string"
        tags:
          description: "Array of password tags."
          items:
            type: "string"
          type: "array"
          uniqueItems: true
      type: "object"
    EncryptionPasswordImportSpec:
      properties:
        hint:
          description: "Hint for the encryption password."
          type: "string"
        password:
          description: "Password."
          type: "string"
        tag:
          description: "Tag for the encryption password."
          type: "string"
      required:
        - hint
        - password
      type: "object"
    EncryptionPasswordImportSpecCollection:
      properties:
        encryptionPasswords:
          description: "Array of encryption passwords."
          items:
            $ref: '#/components/schemas/EncryptionPasswordImportSpec'
          type: "array"
          uniqueItems: true
      type: "object"
    EncryptionPasswordModel:
      properties:
        hint:
          description: "Hint for the encryption password."
          type: "string"
        id:
          description: "ID of the encryption password."
          format: "uuid"
          type: "string"
        modificationTime:
          description: "Date and time when the password was last modified."
          format: "date-time"
          type: "string"
        tag:
          description: "Tag for the encryption password."
          type: "string"
      required:
        - hint
        - id
      type: "object"
    EncryptionPasswordSpec:
      properties:
        hint:
          description: "Hint for the encryption password. Provide a meaningful hint that will help you recall the password."
          type: "string"
        password:
          description: "Password for data encryption. If you lose the password, you will not be able to restore it."
          type: "string"
        tag:
          description: "Tag for the encryption password."
          type: "string"
      required:
        - hint
        - password
      type: "object"
    EncryptionPasswordsFilters:
      properties:
        limit:
          format: "int32"
          type: "integer"
        orderAsc:
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EEncryptionPasswordsFiltersOrderColumn'
        skip:
          format: "int32"
          type: "integer"
      type: "object"
    EncryptionPasswordsResult:
      properties:
        data:
          description: "Array of encryption passwords."
          items:
            $ref: '#/components/schemas/EncryptionPasswordModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    EntireViVMCustomizedRestoreSpec:
      allOf:
        - $ref: '#/components/schemas/BaseEntireViVMRestoreSpec'
        - properties:
            datastore:
              $ref: '#/components/schemas/RestoreTargetDatastoreSpec'
            destinationHost:
              $ref: '#/components/schemas/VmwareObjectModel'
            folder:
              $ref: '#/components/schemas/RestoreTargetFolderSpec'
            network:
              $ref: '#/components/schemas/RestoreTargetNetworkSpec'
            resourcePool:
              $ref: '#/components/schemas/VmwareObjectModel'
          type: "object"
      description: "Restore to a new location or with different settings. To get models of the destination host and resource pool, use the [Get VMware vSphere Server Objects](#tag/Inventory-Browser/operation/GetVmwareHostObject) request."
    EntireViVMOriginalLocationRestoreSpec:
      allOf:
        - $ref: '#/components/schemas/BaseEntireViVMRestoreSpec'
        - properties:
            quickRollback:
              description: "If *true*, Veeam Backup & Replication performs incremental restore."
              type: "boolean"
          type: "object"
      description: "Restore to the original location with initial settings."
    EntireViVMRestoreSpec:
      allOf:
        - discriminator:
            mapping:
              Customized: '#/components/schemas/EntireViVMCustomizedRestoreSpec'
              OriginalLocation: '#/components/schemas/EntireViVMOriginalLocationRestoreSpec'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/EntireViVMOriginalLocationRestoreSpec'
            - $ref: '#/components/schemas/EntireViVMCustomizedRestoreSpec'
        - $ref: '#/components/schemas/BaseEntireViVMRestoreSpec'
    Error:
      properties:
        errorCode:
          description: "The error code is a string that uniquely identifies an error condition and should be understood by programs that detect and handle errors by type"
          enum:
            - AccessDenied
            - ExpiredToken
            - InvalidToken
            - InvalidURI
            - MethodNotAllowed
            - NotFound
            - NotImplemented
            - ServiceUnavailable
            - UnexpectedContent
            - UnknownError
          type: "string"
        message:
          description: "The error message contains a generic description of the error condition in English. It is intended for a human audience"
          type: "string"
        resourceId:
          description: "ID of the object that is involved in the error (or empty)"
          type: "string"
      required:
        - errorCode
        - message
      type: "object"
    EvCentersInventoryFiltersOrderColumn:
      description: "Sorts vCenter Servers by one of the job parameters."
      enum:
        - Name
        - ObjectId
        - Type
      type: "string"
    FullBackupMaintenanceDefragmentAndCompactModel:
      description: "Compact operation settings."
      properties:
        isEnabled:
          description: "If *true*, Veeam Backup & Replication compacts full backup files."
          type: "boolean"
        monthly:
          $ref: '#/components/schemas/AdvancedStorageScheduleMonthlyModel'
        weekly:
          $ref: '#/components/schemas/AdvancedStorageScheduleWeeklyModel'
      required:
        - isEnabled
      type: "object"
    FullBackupMaintenanceModel:
      description: "Maintenance settings for full backup files."
      properties:
        RemoveData:
          $ref: '#/components/schemas/FullBackupMaintenanceRemoveDataModel'
        defragmentAndCompact:
          $ref: '#/components/schemas/FullBackupMaintenanceDefragmentAndCompactModel'
      type: "object"
    FullBackupMaintenanceRemoveDataModel:
      description: "Backup data setting for deleted VMs."
      properties:
        afterDays:
          description: "Number of days."
          type: "integer"
        isEnabled:
          description: "If *true*, Veeam Backup & Replication keeps the backup data of deleted VMs for the `afterDays` number of days."
          type: "boolean"
      required:
        - isEnabled
      type: "object"
    GFSPolicySettingsModel:
      description: "GFS retention policy settings."
      properties:
        isEnabled:
          description: "If *true*, the long-term (GFS) retention policy is enabled."
          type: "boolean"
        monthly:
          $ref: '#/components/schemas/GFSPolicySettingsMonthlyModel'
        weekly:
          $ref: '#/components/schemas/GFSPolicySettingsWeeklyModel'
        yearly:
          $ref: '#/components/schemas/GFSPolicySettingsYearlyModel'
      required:
        - isEnabled
      type: "object"
    GFSPolicySettingsMonthlyModel:
      description: "Monthly GFS retention policy."
      properties:
        desiredTime:
          $ref: '#/components/schemas/ESennightOfMonth'
        isEnabled:
          description: "If *true*, the monthly GFS retention policy is enabled."
          type: "boolean"
        keepForNumberOfMonths:
          description: "Number of months to keep full backups for archival purposes. Possible values are from 1 through 999."
          type: "integer"
      required:
        - isEnabled
      type: "object"
    GFSPolicySettingsWeeklyModel:
      description: "Weekly GFS retention policy."
      properties:
        desiredTime:
          $ref: '#/components/schemas/EDayOfWeek'
        isEnabled:
          description: "If *true*, the weekly GFS retention policy is enabled."
          type: "boolean"
        keepForNumberOfWeeks:
          description: "Number of weeks to keep full backups for archival purposes. Possible values are from 1 through 9999."
          type: "integer"
      required:
        - isEnabled
      type: "object"
    GFSPolicySettingsYearlyModel:
      description: "Yearly GFS retention policy."
      properties:
        desiredTime:
          $ref: '#/components/schemas/EMonth'
        isEnabled:
          description: "If *true*, the yearly GFS retention policy is enabled."
          type: "boolean"
        keepForNumberOfYears:
          description: "Number of years to keep full backups for archival purposes. Possible values are from 1 through 999."
          type: "integer"
      required:
        - isEnabled
      type: "object"
    GeneralOptionsEmailNotificationsModel:
      description: "Global email notification settings and job notifications."
      properties:
        advancedSmtpOptions:
          $ref: '#/components/schemas/AdvancedSmtpOptionsModel'
        from:
          description: "Email address from which email notifications must be sent."
          type: "string"
        isEnabled:
          description: "If *true*, global email notification settings are enabled."
          type: "boolean"
        notifyOnFailure:
          description: "If *true*, email notifications are sent when the job fails."
          type: "boolean"
        notifyOnLastRetry:
          description: "If *true*, email notifications are sent about the final job status only (not per every job retry)."
          type: "boolean"
        notifyOnSuccess:
          description: "If *true*, email notifications are sent when the job completes successfully."
          type: "boolean"
        notifyOnWarning:
          description: "If *true*, email notifications are sent when the job completes with a warning."
          type: "boolean"
        sendDailyReportsAt:
          description: "Time when Veeam Backup & Replication sends daily email reports."
          format: "date-time"
          type: "string"
        smtpServerName:
          description: "Full DNS name or IP address of the SMTP server."
          type: "string"
        subject:
          description: "Notification subject. Use the following variables in the subject:<ul> <li>%Time% — completion time</li> <li>%JobName% — job name</li> <li>%JobResult% — job result</li> <li>%ObjectCount% — number of VMs in the job</li> <li>%Issues% — number of VMs in the job that have been processed with the Warning or Failed status</li></ul>"
          type: "string"
        to:
          description: "Recipient email addresses. Use a semicolon to separate multiple addresses."
          type: "string"
      required:
        - isEnabled
        - smtpServerName
        - advancedSmtpOptions
        - from
        - to
        - subject
        - sendDailyReportsAt
        - notifyOnSuccess
        - notifyOnWarning
        - notifyOnFailure
        - notifyOnLastRetry
      type: "object"
    GeneralOptionsModel:
      properties:
        emailSettings:
          $ref: '#/components/schemas/GeneralOptionsEmailNotificationsModel'
        notifications:
          $ref: '#/components/schemas/GeneralOptionsNotificationsModel'
      type: "object"
    GeneralOptionsNotificationsModel:
      description: "Other notifications such as notifications on low disk space, support contract expiration, and available updates."
      properties:
        datastoreSpaceThreshold:
          description: "Space threshold of production datastore, in percent."
          format: "int32"
          type: "integer"
        datastoreSpaceThresholdEnabled:
          description: "If *true*, notifications about critical amount of free space in production datastore are enabled."
          type: "boolean"
        notifyOnSupportExpiration:
          description: "If *true*, notifications about support contract expiration are enabled."
          type: "boolean"
        notifyOnUpdates:
          description: "If *true*, notifications about updates are enabled."
          type: "boolean"
        skipVMSpaceThreshold:
          description: "Space threshold of production datastore, in percent."
          format: "int32"
          type: "integer"
        skipVMSpaceThresholdEnabled:
          description: "If *true* and the `skipVMSpaceThreshold` threshold is reached, Veeam Backup & Replication terminates backup and replication jobs working with production datastores before VM snapshots are taken."
          type: "boolean"
        storageSpaceThreshold:
          description: "Space threshold of backup storage, in percent."
          format: "int32"
          type: "integer"
        storageSpaceThresholdEnabled:
          description: "If *true*, notifications about critical amount of free space in backup storage are enabled."
          type: "boolean"
      required:
        - storageSpaceThresholdEnabled
        - storageSpaceThreshold
        - datastoreSpaceThresholdEnabled
        - datastoreSpaceThreshold
        - skipVMSpaceThresholdEnabled
        - skipVMSpaceThreshold
        - notifyOnSupportExpiration
        - notifyOnUpdates
      type: "object"
    GlobalNetworkTrafficRulesModel:
      properties:
        preferredNetworks:
          $ref: '#/components/schemas/PreferredNetworksModel'
        trafficRules:
          description: "Array of traffic rules."
          items:
            $ref: '#/components/schemas/TrafficRuleModel'
          type: "array"
        uploadStreamsCount:
          description: "Number of TCP/IP connections per job."
          format: "integer"
          type: "integer"
        useMultipleStreamsPerJob:
          description: "If *true*, Veeam Backup & Replication uses multiple TCP/IP transfer connection for every job session."
          type: "boolean"
      required:
        - useMultipleStreamsPerJob
      type: "object"
    GoogleCloudCredentialsImportSpec:
      properties:
        accessKey:
          description: "Access ID of a Google HMAC key."
          type: "string"
        description:
          description: "Description of the cloud credentials record."
          type: "string"
        secretKey:
          description: "Secret linked to the access ID."
          type: "string"
        tag:
          description: "Tag used to identify the cloud credentials record."
          type: "string"
        type:
          $ref: '#/components/schemas/ECloudCredentialsType'
      required:
        - type
        - tag
        - accessKey
        - secretKey
      type: "object"
    GoogleCloudCredentialsModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudCredentialsModel'
        - properties:
            accessKey:
              description: "Access ID of a Google HMAC key."
              type: "string"
            tag:
              description: "Tag used to identify the cloud credentials record."
              type: "string"
          required:
            - accessKey
          type: "object"
    GoogleCloudCredentialsSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudCredentialsSpec'
        - properties:
            accessKey:
              description: "Access ID of a Google HMAC key."
              type: "string"
            secretKey:
              description: "Secret linked to the access ID."
              type: "string"
            tag:
              description: "Tag used to identify the cloud credentials record."
              type: "string"
          required:
            - accessKey
            - secretKey
          type: "object"
    GoogleCloudStorageAccountImportModel:
      description: "Account used to access the Google Cloud storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionId:
          description: "ID of a region where the storage bucket is located."
          type: "string"
      required:
        - credentials
        - regionId
        - connectionSettings
      type: "object"
    GoogleCloudStorageAccountModel:
      description: "Account used to access the Google Cloud storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
        credentialsId:
          description: "ID of a cloud credentials record used to access the storage."
          format: "uuid"
          type: "string"
        regionId:
          description: "ID of a region where the storage bucket is located."
          type: "string"
      required:
        - credentialsId
        - regionId
        - connectionSettings
      type: "object"
    GoogleCloudStorageBrowserDestinationSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserNewFolderSpec'
        - properties:
            bucketName:
              description: "Name of the bucket where you want to store your backup data."
              type: "string"
            hostId:
              description: "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionId:
              description: "Data center region where the bucket is located."
              type: "string"
          required:
            - regionId
            - bucketName
          type: "object"
    GoogleCloudStorageBrowserFilters:
      description: "Google Cloud hierarchy filters."
      properties:
        bucketName:
          description: "Bucket name."
          type: "string"
        regionId:
          description: "Google Cloud data center region."
          type: "string"
      required:
        - regionId
      type: "object"
    GoogleCloudStorageBrowserModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserModel'
        - properties:
            hostId:
              description: "ID of a server used to connect to the object storage."
              format: "uuid"
              type: "string"
            regions:
              description: "Array of regions."
              items:
                $ref: '#/components/schemas/GoogleCloudStorageRegionBrowserModel'
              type: "array"
          type: "object"
    GoogleCloudStorageBrowserSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserSpec'
        - properties:
            filters:
              $ref: '#/components/schemas/GoogleCloudStorageBrowserFilters'
            gatewayServerId:
              description: "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
          type: "object"
    GoogleCloudStorageBucketBrowserModel:
      properties:
        folders:
          description: "Array of folders located in the bucket."
          items:
            type: "string"
          type: "array"
        name:
          description: "Bucket name."
          type: "string"
      type: "object"
    GoogleCloudStorageBucketModel:
      description: "Google Cloud object storage bucket where backup data is stored."
      properties:
        bucketName:
          description: "Name of a Google Cloud bucket."
          type: "string"
        folderName:
          description: "Name of the folder that the object storage repository is mapped to."
          type: "string"
        nearlineStorageEnabled:
          description: "If *true*, the nearline storage class is used."
          type: "boolean"
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
      required:
        - bucketName
        - folderName
      type: "object"
    GoogleCloudStorageImportSpec:
      properties:
        account:
          $ref: '#/components/schemas/GoogleCloudStorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/GoogleCloudStorageBucketModel'
        description:
          description: "Description of the object storage repository."
          type: "string"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the object storage repository."
          type: "string"
        tag:
          description: "Tag that identifies the object storage repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - name
        - description
        - tag
        - type
        - account
        - bucket
        - mountServer
      type: "object"
    GoogleCloudStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            account:
              $ref: '#/components/schemas/GoogleCloudStorageAccountModel'
            bucket:
              $ref: '#/components/schemas/GoogleCloudStorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "Google Cloud storage."
    GoogleCloudStorageRegionBrowserModel:
      properties:
        buckets:
          description: "Array of buckets located in the region."
          items:
            $ref: '#/components/schemas/GoogleCloudStorageBucketBrowserModel'
          type: "array"
        id:
          description: "Region ID."
          type: "string"
        name:
          description: "Region name."
          type: "string"
      type: "object"
    GoogleCloudStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            account:
              $ref: '#/components/schemas/GoogleCloudStorageAccountModel'
            bucket:
              $ref: '#/components/schemas/GoogleCloudStorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "Google Cloud storage."
    GuestFileSystemIndexingModel:
      description: "VM guest OS file indexing."
      properties:
        indexingSettings:
          description: "Array of VMs with guest OS file indexing options."
          items:
            $ref: '#/components/schemas/BackupIndexingSettingsModel'
          type: "array"
        isEnabled:
          description: "If *true*, file indexing is enabled."
          type: "boolean"
      required:
        - isEnabled
      type: "object"
    GuestInteractionProxiesSettingsImportModel:
      description: "Guest interaction proxy used to deploy the runtime process on the VM guest OS."
      properties:
        automaticSelection:
          default: true
          description: "If *true*, Veeam Backup & Replication automatically selects the guest interaction proxy."
          type: "boolean"
        proxies:
          description: "Array of proxies specified explicitly. The array must contain Microsoft Windows servers added to the backup infrastructure only."
          items:
            type: "string"
          type: "array"
          uniqueItems: true
      required:
        - automaticSelection
      type: "object"
    GuestInteractionProxiesSettingsModel:
      description: "Guest interaction proxy used to deploy the runtime process on the VM guest OS."
      properties:
        autoSelection:
          default: true
          description: "If *true*, Veeam Backup & Replication automatically selects the guest interaction proxy."
          type: "boolean"
        proxyIds:
          description: "Array of proxies specified explicitly. The array must contain Microsoft Windows servers added to the backup infrastructure only."
          items:
            format: "uuid"
            type: "string"
          type: "array"
          uniqueItems: true
      required:
        - autoSelection
      type: "object"
    GuestOsCredentialsImportModel:
      description: "VM custom credentials."
      properties:
        credentialsPerMachine:
          description: "Individual credentials for VMs."
          items:
            $ref: '#/components/schemas/GuestOsCredentialsPerMachineImportModel'
          type: "array"
          uniqueItems: true
        creds:
          $ref: '#/components/schemas/CredentialsImportModel'
      type: "object"
    GuestOsCredentialsModel:
      description: "VM custom credentials."
      properties:
        credentialsPerMachine:
          description: "Individual credentials for VMs."
          items:
            $ref: '#/components/schemas/GuestOsCredentialsPerMachineModel'
          type: "array"
          uniqueItems: true
        credsId:
          description: "Credentials ID for Microsoft Windows VMs."
          format: "uuid"
          type: "string"
        credsType:
          $ref: '#/components/schemas/ECredentialsType'
      required:
        - credsId
        - credsType
      type: "object"
    GuestOsCredentialsPerMachineImportModel:
      properties:
        linuxCreds:
          $ref: '#/components/schemas/CredentialsImportModel'
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
        windowsCreds:
          $ref: '#/components/schemas/CredentialsImportModel'
      required:
        - vmObject
      type: "object"
    GuestOsCredentialsPerMachineModel:
      properties:
        linuxCredsId:
          description: "Credentials ID for a Linux VM."
          format: "uuid"
          type: "string"
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
        windowsCredsId:
          description: "Credentials ID for a Microsoft Windows VM."
          format: "uuid"
          type: "string"
      required:
        - vmObject
      type: "object"
    HostConnectionSpec:
      properties:
        credentialsId:
          description: "ID of a credentials record used to connect to the server."
          format: "uuid"
          type: "string"
        port:
          description: "Port used to communicate with the server."
          type: "integer"
        serverName:
          description: "Full DNS name or IP address of the server."
          type: "string"
        type:
          $ref: '#/components/schemas/EManagedServerType'
      required:
        - serverName
        - credentialsId
        - type
      type: "object"
    IBMCloudStorageAccountImportModel:
      description: "Account used to access the IBM Cloud storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionId:
          description: "ID of a region where the storage is located."
          type: "string"
        servicePoint:
          description: "Endpoint address of the storage."
          type: "string"
      required:
        - servicePoint
        - regionId
        - credentials
        - connectionSettings
      type: "object"
    IBMCloudStorageAccountModel:
      description: "Account used to access the IBM Cloud storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
        credentialsId:
          description: "ID of a cloud credentials record used to access the storage."
          format: "uuid"
          type: "string"
        regionId:
          description: "ID of a region where the storage is located."
          type: "string"
        servicePoint:
          description: "Endpoint address and port number of the storage."
          type: "string"
      required:
        - servicePoint
        - regionId
        - credentialsId
        - connectionSettings
      type: "object"
    IBMCloudStorageBrowserDestinationSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserNewFolderSpec'
        - properties:
            bucketName:
              description: "Name of the bucket where you want to store your backup data."
              type: "string"
            connectionPoint:
              description: "Endpoint address and port number of the IBM Cloud object storage."
              type: "string"
            hostId:
              description: "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionId:
              description: "Region where the bucket is located."
              type: "string"
          required:
            - connectionPoint
            - regionId
            - bucketName
          type: "object"
    IBMCloudStorageBrowserModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserModel'
        - properties:
            hostId:
              description: "ID of a server used to connect to the object storage."
              format: "uuid"
              type: "string"
            regions:
              description: "Array of regions."
              items:
                $ref: '#/components/schemas/IBMCloudStorageRegionBrowserModel'
              type: "array"
          type: "object"
    IBMCloudStorageBrowserSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserSpec'
        - properties:
            gatewayServerId:
              description: "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionId:
              description: "Region of the IBM Cloud object storage."
              type: "string"
            servicePoint:
              description: "Endpoint address and port number of the IBM Cloud object storage."
              type: "string"
          required:
            - regionId
            - servicePoint
          type: "object"
    IBMCloudStorageBucketBrowserModel:
      properties:
        folders:
          description: "Array of folders located in the bucket."
          items:
            type: "string"
          type: "array"
        name:
          description: "Bucket name."
          type: "string"
      type: "object"
    IBMCloudStorageBucketModel:
      description: "IBM Cloud bucket where backup data is stored."
      properties:
        bucketName:
          description: "Name of an IBM Cloud bucket."
          type: "string"
        folderName:
          description: "Name of the folder that the object storage repository is mapped to."
          type: "string"
        immutability:
          $ref: '#/components/schemas/ObjectStorageImmutabilityModel'
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
      required:
        - bucketName
        - folderName
      type: "object"
    IBMCloudStorageImportSpec:
      properties:
        account:
          $ref: '#/components/schemas/IBMCloudStorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/IBMCloudStorageBucketModel'
        description:
          description: "Description of the object storage repository."
          type: "string"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the object storage repository."
          type: "string"
        proxyAppliance:
          $ref: '#/components/schemas/S3CompatibleProxyModel'
        tag:
          description: "Tag that identifies the object storage repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - name
        - description
        - tag
        - type
        - account
        - bucket
        - mountServer
      type: "object"
    IBMCloudStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            account:
              $ref: '#/components/schemas/IBMCloudStorageAccountModel'
            bucket:
              $ref: '#/components/schemas/IBMCloudStorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            proxyAppliance:
              $ref: '#/components/schemas/S3CompatibleProxyModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "IBM Cloud storage."
    IBMCloudStorageRegionBrowserModel:
      properties:
        buckets:
          description: "Array of buckets located in the region."
          items:
            $ref: '#/components/schemas/IBMCloudStorageBucketBrowserModel'
          type: "array"
        id:
          description: "Region ID."
          type: "string"
        name:
          description: "Region name."
          type: "string"
      type: "object"
    IBMCloudStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            account:
              $ref: '#/components/schemas/IBMCloudStorageAccountModel'
            bucket:
              $ref: '#/components/schemas/IBMCloudStorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            proxyAppliance:
              $ref: '#/components/schemas/S3CompatibleProxyModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "IBM Cloud storage."
    InstantViVMCustomizedRecoveryDatastoreSpec:
      description: "Datastore that keeps redo logs with changes that take place while a VM is running from a backup."
      properties:
        cacheDatastore:
          $ref: '#/components/schemas/VmwareObjectModel'
        redirectIsEnabled:
          description: "If *true*, redo logs are redirected to `cacheDatastore`."
          type: "boolean"
      required:
        - redirectIsEnabled
      type: "object"
    InstantViVMCustomizedRecoveryDestinationSpec:
      description: "Destination where the recovered VM resides. To get models of the destination host, folder and resource pool, use the [Get VMware vSphere Server Objects](#tag/Inventory-Browser/operation/GetVmwareHostObject) request."
      properties:
        biosUuidPolicy:
          $ref: '#/components/schemas/EInstantViVmRecoveryBiosUuidPolicyType'
        destinationHost:
          $ref: '#/components/schemas/VmwareObjectModel'
        folder:
          $ref: '#/components/schemas/VmwareObjectModel'
        resourcePool:
          $ref: '#/components/schemas/VmwareObjectModel'
        restoredVmName:
          description: "Restored VM name."
          type: "string"
      required:
        - restoredVmName
        - destinationHost
        - folder
        - resourcePool
        - biosUuidPolicy
      type: "object"
    InstantViVMCustomizedRecoverySpec:
      allOf:
        - $ref: '#/components/schemas/BaseInstantViVMRecoverySpec'
        - properties:
            datastore:
              $ref: '#/components/schemas/InstantViVMCustomizedRecoveryDatastoreSpec'
            destination:
              $ref: '#/components/schemas/InstantViVMCustomizedRecoveryDestinationSpec'
            overwrite:
              description: "If *true*, Veeam Backup & Replication overwrites the existing VM that has the same name."
              type: "boolean"
          required:
            - destination
            - datastore
          type: "object"
      description: "Instant Recovery to a new location or with different settings."
    InstantViVMOriginalLocationRecoverySpec:
      allOf:
        - $ref: '#/components/schemas/BaseInstantViVMRecoverySpec'
      description: "Instant Recovery to the original location with initial settings."
    InstantViVMRecoveryMount:
      description: "VM mount."
      properties:
        errorMessage:
          description: "Error message."
          type: "string"
        id:
          description: "Mount ID."
          format: "uuid"
          type: "string"
        sessionId:
          description: "ID of the restore session. Use the ID to track the progress. For details, see [Get Session](#tag/Sessions/operation/GetSession)."
          format: "uuid"
          type: "string"
        spec:
          $ref: '#/components/schemas/InstantViVMRecoverySpec'
        state:
          $ref: '#/components/schemas/EInstantRecoveryMountState'
        vmName:
          description: "Name of the recovered VM."
          type: "string"
      required:
        - id
        - sessionId
        - state
        - spec
        - vmName
      type: "object"
    InstantViVMRecoveryMountsFilters:
      properties:
        limit:
          description: "Maximum number of mounts to return."
          format: "int32"
          type: "integer"
        nameFilter:
          description: "Filters mounts by the `nameFilter` pattern. The pattern can match any mount parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          type: "string"
        orderAsc:
          description: "Sorts mounts in the ascending order by the `orderColumn` parameter."
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EInstantViVMRecoveryMountsFiltersOrderColumn'
        skip:
          description: "Number of mounts to skip."
          format: "int32"
          type: "integer"
        stateFilter:
          $ref: '#/components/schemas/EInstantRecoveryMountState'
      type: "object"
    InstantViVMRecoveryMountsResult:
      properties:
        data:
          description: "Array of VM mounts."
          items:
            $ref: '#/components/schemas/InstantViVMRecoveryMount'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    InstantViVMRecoverySpec:
      allOf:
        - discriminator:
            mapping:
              Customized: '#/components/schemas/InstantViVMCustomizedRecoverySpec'
              OriginalLocation: '#/components/schemas/InstantViVMOriginalLocationRecoverySpec'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/InstantViVMOriginalLocationRecoverySpec'
            - $ref: '#/components/schemas/InstantViVMCustomizedRecoverySpec'
        - $ref: '#/components/schemas/BaseInstantViVMRecoverySpec'
    JobExportSpec:
      properties:
        ids:
          description: "Array of job IDs."
          items:
            format: "uuid"
            type: "string"
          type: "array"
          uniqueItems: true
        names:
          description: "Array of job names. Wildcard characters are supported."
          items:
            type: "string"
          type: "array"
          uniqueItems: true
        types:
          description: "Array of job types."
          items:
            type: "string"
          type: "array"
          uniqueItems: true
      type: "object"
    JobImportSpec:
      properties:
        description:
          description: "Description of the job."
          type: "string"
        guestProcessing:
          $ref: '#/components/schemas/BackupJobGuestProcessingImportModel'
        isHighPriority:
          description: "If *true*, the job has a high priority in getting backup infrastructure resources."
          type: "boolean"
        name:
          description: "Name of the job."
          type: "string"
        schedule:
          $ref: '#/components/schemas/BackupScheduleModel'
        storage:
          $ref: '#/components/schemas/BackupJobStorageImportModel'
        type:
          $ref: '#/components/schemas/EJobType'
        virtualMachines:
          $ref: '#/components/schemas/BackupJobVirtualMachinesSpec'
      required:
        - description
        - guestProcessing
        - isHighPriority
        - name
        - schedule
        - storage
        - type
        - virtualMachines
      type: "object"
    JobImportSpecCollection:
      properties:
        jobs:
          description: "Array of jobs."
          items:
            $ref: '#/components/schemas/JobImportSpec'
          type: "array"
          uniqueItems: true
      required:
        - jobs
      type: "object"
    JobModel:
      allOf:
        - discriminator:
            mapping:
              Backup: '#/components/schemas/BackupJobModel'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/BackupJobModel'
        - $ref: '#/components/schemas/BaseJobModel'
    JobScriptsSettingsModel:
      description: "Script settings."
      properties:
        dayOfWeek:
          description: "Days of the week when the scripts must be executed."
          items:
            $ref: '#/components/schemas/EDayOfWeek'
          type: "array"
          uniqueItems: true
        periodicityType:
          $ref: '#/components/schemas/EScriptPeriodicityType'
        postCommand:
          $ref: '#/components/schemas/ScriptCommand'
        preCommand:
          $ref: '#/components/schemas/ScriptCommand'
        runScriptEvery:
          description: "Number of the backup job session after which the scripts must be executed."
          type: "integer"
      type: "object"
    JobSpec:
      allOf:
        - discriminator:
            mapping:
              Backup: '#/components/schemas/BackupJobSpec'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/BackupJobSpec'
        - $ref: '#/components/schemas/BaseJobSpec'
    JobStartSpec:
      properties:
        performActiveFull:
          default: false
          description: "If *true*, Veeam Backup & Replication will perform an active full backup."
          type: "boolean"
        startChainedJobs:
          default: false
          description: "If *true*, Veeam Backup & Replication will start chained jobs as well."
          type: "boolean"
      required:
        - performActiveFull
      type: "object"
    JobStateModel:
      properties:
        description:
          description: "Description of the job."
          type: "string"
        id:
          description: "ID of the job."
          format: "uuid"
          type: "string"
        lastResult:
          $ref: '#/components/schemas/ESessionResult'
        lastRun:
          description: "Last run of the job."
          format: "date-time"
          type: "string"
        name:
          description: "Name of the job."
          type: "string"
        nextRun:
          description: "Next run of the job."
          format: "date-time"
          type: "string"
        objectsCount:
          description: "Number of objects processed by the job."
          type: "integer"
        repositoryId:
          description: "ID of the backup repository."
          format: "uuid"
          type: "string"
        repositoryName:
          description: "Name of the backup repository."
          type: "string"
        sessionId:
          description: "ID of the last job session."
          format: "uuid"
          type: "string"
        status:
          $ref: '#/components/schemas/EJobStatus'
        type:
          $ref: '#/components/schemas/EJobType'
        workload:
          $ref: '#/components/schemas/EJobWorkload'
      required:
        - id
        - name
        - type
        - description
        - status
        - lastResult
        - workload
        - objectsCount
      type: "object"
    JobStatesFilters:
      description: "Filters jobs by the specified parameters."
      properties:
        idFilter:
          format: "uuid"
          type: "string"
        isHighPriorityJobFilter:
          type: "boolean"
        lastResultFilter:
          $ref: '#/components/schemas/ESessionResult'
        lastRunAfterFilter:
          format: "date-time"
          type: "string"
        lastRunBeforeFilter:
          format: "date-time"
          type: "string"
        limit:
          description: "Returns the specified number of jobs."
          format: "int32"
          type: "integer"
        nameFilter:
          description: "Filters jobs by the `nameFilter` pattern. The pattern can match any job state parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          type: "string"
        objectsCountFilter:
          type: "integer"
        orderAsc:
          description: "Sorts jobs in the ascending order by the `orderColumn` parameter."
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EJobStatesFiltersOrderColumn'
        repositoryIdFilter:
          format: "uuid"
          type: "string"
        skip:
          description: "Skips the specified number of jobs."
          format: "int32"
          type: "integer"
        statusFilter:
          $ref: '#/components/schemas/EJobStatus'
        typeFilter:
          $ref: '#/components/schemas/EJobType'
        workloadFilter:
          $ref: '#/components/schemas/EJobWorkload'
      type: "object"
    JobStatesResult:
      properties:
        data:
          description: "Array of job states."
          items:
            $ref: '#/components/schemas/JobStateModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    JobStopSpec:
      properties:
        gracefullStop:
          default: true
          description: "If *true*, Veeam Backup & Replication will produce a new restore point for those VMs that have already been processed and for VMs that are being processed at the moment."
          type: "boolean"
      required:
        - gracefullStop
      type: "object"
    JobsFilters:
      description: "Filters jobs by the specified parameters."
      properties:
        limit:
          description: "Returns the specified number of jobs."
          format: "int32"
          type: "integer"
        nameFilter:
          description: "Filters jobs by the `nameFilter` pattern. The pattern can match any job parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          type: "string"
        orderAsc:
          description: "Sorts jobs in the ascending order by the `orderColumn` parameter."
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EJobFiltersOrderColumn'
        skip:
          description: "Skips the specified number of jobs."
          format: "int32"
          type: "integer"
        typeFilter:
          $ref: '#/components/schemas/EJobType'
      type: "object"
    JobsResult:
      properties:
        data:
          description: "Array of jobs."
          items:
            $ref: '#/components/schemas/JobModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    LinuxCredentialsModel:
      allOf:
        - $ref: '#/components/schemas/BaseCredentialsModel'
        - properties:
            SSHPort:
              description: "SSH port used to connect to a Linux server."
              type: "integer"
            addToSudoers:
              description: "If *true*, the account is automatically added to the sudoers file."
              type: "boolean"
            autoElevated:
              description: "If *true*, the permissions of the account are automatically elevated to the root user."
              type: "boolean"
            passphrase:
              description: "Passphrase that protects the private key."
              type: "string"
            privateKey:
              description: "Private key."
              type: "string"
            tag:
              description: "Tag used to identify the credentials record."
              type: "string"
            useSu:
              description: "If *true*, the `su` command is used for Linux distributions where the `sudo` command is not available."
              type: "boolean"
          type: "object"
    LinuxCredentialsSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCredentialsSpec'
        - properties:
            SSHPort:
              description: "SSH port used to connect to a Linux server."
              type: "integer"
            addToSudoers:
              description: "If *true*, the account is automatically added to the sudoers file."
              type: "boolean"
            autoElevated:
              description: "If *true*, the permissions of the account are automatically elevated to the root user."
              type: "boolean"
            passphrase:
              description: "Passphrase that protects the private key."
              type: "string"
            privateKey:
              description: "Private key."
              type: "string"
            rootPassword:
              description: "Password for the root account."
              type: "string"
            tag:
              description: "Tag used to identify the credentials record."
              type: "string"
            useSu:
              description: "If *true*, the `su` command is used for Linux distributions where the `sudo` command is not available."
              type: "boolean"
          type: "object"
    LinuxHardenedRepositorySettingsModel:
      description: "Repository settings."
      properties:
        advancedSettings:
          $ref: '#/components/schemas/RepositoryAdvancedSettingsModel'
        enableReadWriteLimit:
          description: "If *true*, reading and writing speed is limited."
          type: "boolean"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        makeRecentBackupsImmutableDays:
          description: "Number of days to keep immutable backups."
          type: "integer"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        path:
          description: "Path to the folder where backup files are stored."
          type: "string"
        readWriteRate:
          description: "Maximum rate that restricts the total speed of reading and writing data to the backup repository disk."
          type: "integer"
        useFastCloningOnXFSVolumes:
          description: "If *true*, fast cloning on XFS volumes is used."
          type: "boolean"
      type: "object"
    LinuxHardenedStorageImportSpec:
      properties:
        description:
          description: "Description of the backup repository."
          type: "string"
        hostName:
          description: "ID of the server that is used as a backup repository."
          type: "string"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the backup repository."
          type: "string"
        repository:
          $ref: '#/components/schemas/LinuxHardenedRepositorySettingsModel'
        tag:
          description: "Tag that identifies the backup repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - description
        - hostName
        - kind
        - mountServer
        - name
        - repository
        - tag
        - type
      type: "object"
    LinuxHardenedStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            hostId:
              description: "ID of the server that is used as a backup repository."
              format: "uuid"
              type: "string"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            repository:
              $ref: '#/components/schemas/LinuxHardenedRepositorySettingsModel'
          required:
            - hostId
            - mountServer
            - repository
          type: "object"
      description: "Linux hardened repository."
    LinuxHardenedStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            hostId:
              description: "ID of the server that is used as a backup repository."
              format: "uuid"
              type: "string"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            repository:
              $ref: '#/components/schemas/LinuxHardenedRepositorySettingsModel'
          required:
            - hostId
            - mountServer
            - repository
          type: "object"
      description: "Linux hardened repository."
    LinuxHostImportSpec:
      properties:
        credentials:
          $ref: '#/components/schemas/CredentialsImportModel'
        description:
          description: "Description of the server."
          type: "string"
        name:
          description: "Full DNS name or IP address of the server."
          type: "string"
        sshFingerprint:
          description: "SSH key fingerprint used to verify the server identity."
          type: "string"
        sshSettings:
          $ref: '#/components/schemas/LinuxHostSSHSettingsModel'
        type:
          $ref: '#/components/schemas/EManagedServerType'
      required:
        - credentials
        - description
        - name
        - type
        - sshFingerprint
      type: "object"
    LinuxHostModel:
      allOf:
        - $ref: '#/components/schemas/BaseManagedServerModel'
        - properties:
            credentialsStorageType:
              $ref: '#/components/schemas/ECredentialsStorageType'
            sshSettings:
              $ref: '#/components/schemas/LinuxHostSSHSettingsModel'
          type: "object"
    LinuxHostSSHSettingsModel:
      description: "SSH settings."
      properties:
        managementPort:
          description: "Port used as a control channel from the Veeam Backup & Replication console to the Linux server."
          type: "integer"
        portRangeEnd:
          description: "End port used for data transfer."
          type: "integer"
        portRangeStart:
          description: "Start port used for data transfer."
          type: "integer"
        serverThisSide:
          description: "If *true*, the server is run on this side."
          type: "boolean"
        sshTimeOutMs:
          description: "SSH timeout, in ms. If a task targeted at the server is inactive after the timeout, the task is terminated."
          type: "integer"
      type: "object"
    LinuxHostSpec:
      allOf:
        - $ref: '#/components/schemas/BaseManagedServerSpec'
      properties:
        sshFingerprint:
          description: "SSH key fingerprint used to verify the server identity. For details on how to get the fingerprint, see [Request TLS Certificate or SSH Fingerprint](#tag/Connection/operation/GetConnectionCertificate)."
          type: "string"
        sshSettings:
          $ref: '#/components/schemas/LinuxHostSSHSettingsModel'
      required:
        - sshFingerprint
      type: "object"
    LinuxLocalRepositorySettingsModel:
      description: "Repository settings."
      properties:
        advancedSettings:
          $ref: '#/components/schemas/RepositoryAdvancedSettingsModel'
        enableReadWriteLimit:
          description: "If *true*, reading and writing speed is limited."
          type: "boolean"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        path:
          description: "Path to the folder where backup files are stored."
          type: "string"
        readWriteRate:
          description: "Maximum rate that restricts the total speed of reading and writing data to the backup repository disk."
          type: "integer"
        useFastCloningOnXFSVolumes:
          description: "If *true*, fast cloning on XFS volumes is used."
          type: "boolean"
      type: "object"
    LinuxLocalStorageImportSpec:
      properties:
        description:
          description: "Description of the backup repository."
          type: "string"
        hostName:
          description: "ID of the server that is used as a backup repository."
          type: "string"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the backup repository."
          type: "string"
        repository:
          $ref: '#/components/schemas/LinuxLocalRepositorySettingsModel'
        tag:
          description: "Tag that identifies the backup repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - description
        - hostName
        - kind
        - mountServer
        - name
        - repository
        - tag
        - type
      type: "object"
    LinuxLocalStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            hostId:
              description: "ID of the server that is used as a backup repository."
              format: "uuid"
              type: "string"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            repository:
              $ref: '#/components/schemas/LinuxLocalRepositorySettingsModel'
          required:
            - hostId
            - mountServer
            - repository
          type: "object"
      description: "Linux-based repository."
    LinuxLocalStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            hostId:
              description: "ID of the server that is used as a backup repository."
              format: "uuid"
              type: "string"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            repository:
              $ref: '#/components/schemas/LinuxLocalRepositorySettingsModel'
          required:
            - hostId
            - mountServer
            - repository
          type: "object"
      description: "Linux-based repository."
    ManageServerExportSpec:
      properties:
        ids:
          description: "Array of server IDs."
          items:
            format: "uuid"
            type: "string"
          type: "array"
          uniqueItems: true
        names:
          description: "Array of server names. Wildcard characters are supported."
          items:
            type: "string"
          type: "array"
          uniqueItems: true
        types:
          description: "Array of server types."
          items:
            $ref: '#/components/schemas/EManagedServerType'
          type: "array"
          uniqueItems: true
      type: "object"
    ManageServerImportSpecCollection:
      properties:
        linuxHosts:
          description: "Array of managed Linux servers."
          items:
            $ref: '#/components/schemas/LinuxHostImportSpec'
          type: "array"
          uniqueItems: true
        viHosts:
          description: "Array of VMware vSphere servers."
          items:
            $ref: '#/components/schemas/ViHostImportSpec'
          type: "array"
          uniqueItems: true
        windowsHosts:
          description: "Array of managed Microsoft Windows servers."
          items:
            $ref: '#/components/schemas/WindowsHostImportSpec'
          type: "array"
          uniqueItems: true
      type: "object"
    ManagedServerModel:
      allOf:
        - discriminator:
            mapping:
              LinuxHost: '#/components/schemas/LinuxHostModel'
              ViHost: '#/components/schemas/ViHostModel'
              WindowsHost: '#/components/schemas/WindowsHostModel'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/WindowsHostModel'
            - $ref: '#/components/schemas/LinuxHostModel'
            - $ref: '#/components/schemas/ViHostModel'
        - $ref: '#/components/schemas/BaseManagedServerModel'
    ManagedServerSpec:
      allOf:
        - discriminator:
            mapping:
              LinuxHost: '#/components/schemas/LinuxHostSpec'
              ViHost: '#/components/schemas/ViHostSpec'
              WindowsHost: '#/components/schemas/WindowsHostSpec'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/WindowsHostSpec'
            - $ref: '#/components/schemas/LinuxHostSpec'
            - $ref: '#/components/schemas/ViHostSpec'
        - $ref: '#/components/schemas/BaseManagedServerSpec'
    ManagedServersFilters:
      properties:
        limit:
          format: "int32"
          type: "integer"
        nameFilter:
          type: "string"
        orderAsc:
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EManagedServersFiltersOrderColumn'
        skip:
          format: "int32"
          type: "integer"
        typeFilter:
          $ref: '#/components/schemas/EManagedServerType'
        viTypeFilter:
          $ref: '#/components/schemas/EViHostType'
      type: "object"
    ManagedServersResult:
      properties:
        data:
          description: "Array of managed servers."
          items:
            $ref: '#/components/schemas/ManagedServerModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    MountServerSettingsImportSpec:
      description: "Settings for the mount server that is used for file-level and application items restore."
      properties:
        mountServerName:
          description: "Name of the mount server."
          type: "string"
        vPowerNFSEnabled:
          description: "If *true*, the vPower NFS Service is enabled on the mount server."
          type: "boolean"
        vPowerNFSPortSettings:
          $ref: '#/components/schemas/VPowerNFSPortSettingsModel'
        writeCacheFolder:
          description: "Path to the folder used for writing cache during mount operations."
          type: "string"
      required:
        - mountServerName
        - vPowerNFSEnabled
        - writeCacheFolder
      type: "object"
    MountServerSettingsModel:
      description: "Settings for the mount server that is used for file-level and application items restore."
      properties:
        mountServerId:
          description: "ID of the mount server."
          format: "uuid"
          type: "string"
        vPowerNFSEnabled:
          description: "If *true*, the vPower NFS Service is enabled on the mount server."
          type: "boolean"
        vPowerNFSPortSettings:
          $ref: '#/components/schemas/VPowerNFSPortSettingsModel'
        writeCacheFolder:
          description: "Path to the folder used for writing cache during mount operations."
          type: "string"
      required:
        - mountServerId
        - vPowerNFSEnabled
        - writeCacheFolder
      type: "object"
    NetworkRepositorySettingsModel:
      description: "Repository settings."
      properties:
        advancedSettings:
          $ref: '#/components/schemas/RepositoryAdvancedSettingsModel'
        enableReadWriteLimit:
          description: "If *true*, reading and writing speed is limited."
          type: "boolean"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        readWriteRate:
          description: "Maximum rate that restricts the total speed of reading and writing data to the backup repository disk."
          type: "integer"
      type: "object"
    NfsRepositoryShareSettingsModel:
      description: "Share settings."
      properties:
        gatewayServer:
          $ref: '#/components/schemas/RepositoryShareGatewayModel'
        sharePath:
          description: "Path to the shared folder that is used as a backup repository."
          type: "string"
      required:
        - sharePath
      type: "object"
    NfsRepositoryShareSettingsSpec:
      properties:
        gatewayServer:
          $ref: '#/components/schemas/RepositoryShareGatewayImportSpec'
        sharePath:
          description: "Path to the shared folder that is used as a backup repository."
          type: "string"
      required:
        - sharePath
      type: "object"
    NfsStorageImportSpec:
      properties:
        description:
          description: "Description of the backup repository."
          type: "string"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the backup repository."
          type: "string"
        repository:
          $ref: '#/components/schemas/NetworkRepositorySettingsModel'
        share:
          $ref: '#/components/schemas/NfsRepositoryShareSettingsSpec'
        tag:
          description: "Tag that identifies the backup repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - description
        - kind
        - mountServer
        - name
        - repository
        - share
        - tag
        - type
      type: "object"
    NfsStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            repository:
              $ref: '#/components/schemas/NetworkRepositorySettingsModel'
            share:
              $ref: '#/components/schemas/NfsRepositoryShareSettingsModel'
          required:
            - mountServer
            - repository
            - share
          type: "object"
      description: "NFS backup repository."
    NfsStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            repository:
              $ref: '#/components/schemas/NetworkRepositorySettingsModel'
            share:
              $ref: '#/components/schemas/NfsRepositoryShareSettingsModel'
          required:
            - mountServer
            - repository
            - share
          type: "object"
      description: "NFS backup repository."
    NotificationSettingsModel:
      description: "Notification settings for the backup job."
      properties:
        emailNotifications:
          $ref: '#/components/schemas/EmailNotificationSettingsModel'
        sendSNMPNotifications:
          description: "If *true*, SNMP notifications are enabled for this job."
          type: "boolean"
        vmAttribute:
          $ref: '#/components/schemas/NotificationVmAttributeSettingsModel'
      type: "object"
    NotificationVmAttributeSettingsModel:
      description: "VM attribute settings."
      properties:
        appendToExisitingValue:
          description: "If *true*, information about successfully performed backup is appended to the existing value of the attribute added by the user."
          type: "boolean"
        isEnabled:
          description: "If *true*, information about successfully performed backup is written to a VM attribute."
          type: "boolean"
        notes:
          description: "Name of the VM attribute."
          type: "string"
      required:
        - isEnabled
      type: "object"
    ObjectRestorePointDiskModel:
      properties:
        capacity:
          description: "Capacity of the disk."
          format: "int64"
          type: "integer"
        name:
          description: "Name of the disk."
          type: "string"
        state:
          $ref: '#/components/schemas/EDiskInfoProcessState'
        type:
          $ref: '#/components/schemas/EDiskInfoType'
        uid:
          description: "ID of the disk."
          type: "string"
      required:
        - uid
        - type
        - name
        - capacity
        - state
      type: "object"
    ObjectRestorePointDisksResult:
      properties:
        data:
          description: "Array of disks."
          items:
            $ref: '#/components/schemas/ObjectRestorePointDiskModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    ObjectRestorePointModel:
      properties:
        allowedOperations:
          description: "Array of operations allowed for the restore point."
          items:
            $ref: '#/components/schemas/EObjectRestorePointOperation'
          type: "array"
        backupId:
          description: "ID of a backup that contains the restore point."
          format: "uuid"
          type: "string"
        creationTime:
          description: "Date and time when the restore point was created."
          format: "date-time"
          type: "string"
        id:
          description: "ID of the restore point."
          format: "uuid"
          type: "string"
        name:
          description: "Object name."
          type: "string"
        platformId:
          description: "ID of a platform on which the object was created."
          format: "uuid"
          type: "string"
        platformName:
          $ref: '#/components/schemas/EPlatformType'
      required:
        - id
        - name
        - paltformName
        - platformId
        - creationTime
        - backupId
        - allowedOperations
      type: "object"
    ObjectRestorePointsFilters:
      properties:
        backupIdFilter:
          format: "uuid"
          type: "string"
        backupObjectIdFilter:
          format: "uuid"
          type: "string"
        createdAfterFilter:
          format: "date-time"
          type: "string"
        createdBeforeFilter:
          format: "date-time"
          type: "string"
        limit:
          format: "int32"
          type: "integer"
        nameFilter:
          type: "string"
        orderAsc:
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EObjectRestorePointsFiltersOrderColumn'
        platformIdFilter:
          format: "uuid"
          type: "string"
        platformNameFilter:
          $ref: '#/components/schemas/EPlatformType'
        skip:
          format: "int32"
          type: "integer"
      type: "object"
    ObjectRestorePointsResult:
      properties:
        data:
          description: "Array of restore points."
          items:
            $ref: '#/components/schemas/ObjectRestorePointModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    ObjectStorageConnectionImportSpec:
      description: "Object storage connection settings."
      properties:
        connectionType:
          $ref: '#/components/schemas/ERepositoryConnectionType'
        gatewayServers:
          description: "Array of gateway server IDs. The value is *null* if the connection type is *Direct*."
          items:
            type: "string"
          type: "array"
      required:
        - connectionType
      type: "object"
    ObjectStorageConnectionModel:
      description: "Object storage connection settings."
      properties:
        connectionType:
          $ref: '#/components/schemas/ERepositoryConnectionType'
        gatewayServerIds:
          description: "Array of gateway server IDs. The value is *null* if the connection type is *Direct*."
          items:
            format: "uuid"
            type: "string"
          type: "array"
      required:
        - connectionType
      type: "object"
    ObjectStorageConsumptionLimitModel:
      description: "Soft consumption limit for the storage. The limit can be exceeded temporarily."
      properties:
        consumptionLimitCount:
          description: "Limit value."
          type: "integer"
        consumptionLimitKind:
          $ref: '#/components/schemas/EConsumptionLimitKind'
        isEnabled:
          description: "If *true*, the consumption limit is enabled."
          type: "boolean"
      type: "object"
    ObjectStorageImmutabilityModel:
      description: "Object storage immutability."
      properties:
        daysCount:
          description: "Immutability period."
          type: "integer"
        isEnabled:
          description: "If *true*, storage immutability is enabled."
          type: "boolean"
      type: "object"
    PaginationResult:
      description: "Pagination settings."
      properties:
        count:
          description: "Number of returned results."
          format: "int32"
          type: "integer"
        limit:
          description: "Maximum number of results to return."
          format: "int32"
          type: "integer"
        skip:
          description: "Number of skipped results."
          format: "int32"
          type: "integer"
        total:
          description: "Total number of results."
          format: "int32"
          type: "integer"
      required:
        - total
        - count
      type: "object"
    PerformanceExtentModel:
      properties:
        id:
          description: "ID of the backup repository added as a performance extent."
          format: "uuid"
          type: "string"
        name:
          description: "Name of the backup repository added as a performance extent."
          type: "string"
        status:
          $ref: '#/components/schemas/ERepositoryExtentStatusType'
      required:
        - id
        - name
      type: "object"
    PerformanceExtentSpec:
      properties:
        id:
          description: "ID of a backup repository added as a performance extent."
          format: "uuid"
          type: "string"
      required:
        - id
      type: "object"
    PerformanceTierAdvancedSettingsModel:
      description: "Advanced settings of the performance tier."
      properties:
        fullWhenExtentOffline:
          description: "If *true*, Veeam Backup & Replication creates a full backup file instead of an incremental backup file in case the required extent is offline."
          type: "boolean"
        perVmBackup:
          description: "If *true*, Veeam Backup & Replication creates a separate backup file for every VM in the job."
          type: "boolean"
      type: "object"
    PerformanceTierModel:
      description: "Performance tier."
      properties:
        advancedSettings:
          $ref: '#/components/schemas/PerformanceTierAdvancedSettingsModel'
        performanceExtents:
          description: "Array of performance extents."
          items:
            $ref: '#/components/schemas/PerformanceExtentModel'
          type: "array"
      required:
        - performanceExtents
      type: "object"
    PerformanceTierSpec:
      description: "Performance tier."
      properties:
        advancedSettings:
          $ref: '#/components/schemas/PerformanceTierAdvancedSettingsModel'
        performanceExtents:
          description: "Array of performance extents."
          items:
            $ref: '#/components/schemas/PerformanceExtentSpec'
          type: "array"
      required:
        - performanceExtents
      type: "object"
    PlacementPolicyModel:
      description: "Backup file placement policy."
      properties:
        enforceStrictPlacementPolicy:
          description: "If *true*, the backup job fails in case the placement policy cannot be met."
          type: "boolean"
        settings:
          description: "Placement policy settings."
          items:
            $ref: '#/components/schemas/BackupPlacementSettingsModel'
          type: "array"
        type:
          $ref: '#/components/schemas/EPlacementPolicyType'
      required:
        - type
      type: "object"
    PreferredNetworkModel:
      properties:
        cidrNotation:
          description: "CIDR notation."
          type: "string"
        ipAddress:
          description: "IP address."
          type: "string"
        subnetMask:
          description: "Subnet mask."
          type: "string"
      type: "object"
    PreferredNetworksModel:
      description: "Preferred networks used for backup and replication traffic."
      properties:
        isEnabled:
          description: "If *true*, prefered networks are enabled."
          type: "boolean"
        networks:
          description: "Array of networks."
          items:
            $ref: '#/components/schemas/PreferredNetworkModel'
          type: "array"
      required:
        - isEnabled
      type: "object"
    PrimaryStorageIntegrationSettingsModel:
      description: "Primary storage integration settings for the backup job."
      properties:
        failoverToStandardBackup:
          description: "If *true*, failover to the regular VM processing mode is enabled. In this case, if backup from storage snapshot fails, VM snapshots are used."
          type: "boolean"
        isEnabled:
          description: "If *true*, the primary storage integration is enabled. In this case, storage snapshots (instead of VM snapshots) are used for VM data processing."
          type: "boolean"
        limitProcessedVm:
          description: "If *true*, the number of processed VMs per storage snapshot is limited."
          type: "boolean"
        limitProcessedVmCount:
          description: "Number of processed VMs per storage snapshot."
          type: "integer"
      required:
        - isEnabled
      type: "object"
    PrivateKeyChangeSpec:
      properties:
        passphrase:
          description: "Passphrase that protects the private key."
          type: "string"
        privateKey:
          description: "New private key."
          type: "string"
      required:
        - privateKey
      type: "object"
    ProxiesFilters:
      properties:
        hostIdFilter:
          format: "uuid"
          type: "string"
        limit:
          format: "int32"
          type: "integer"
        nameFilter:
          type: "string"
        orderAsc:
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EProxiesFiltersOrderColumn'
        skip:
          format: "int32"
          type: "integer"
        typeFilter:
          $ref: '#/components/schemas/EProxyType'
      type: "object"
    ProxiesResult:
      properties:
        data:
          description: "Array of backup proxies."
          items:
            $ref: '#/components/schemas/ProxyModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    ProxyDatastoreModel:
      properties:
        datastore:
          $ref: '#/components/schemas/VmwareObjectModel'
        vmCount:
          description: "Number of VMs."
          type: "integer"
      type: "object"
    ProxyDatastoreSettingsModel:
      description: "Datastores to which the backup proxy has a direct SAN or NFS connection."
      properties:
        autoSelect:
          description: "If *true*, all datastores that the backup proxy can access are detected automatically."
          type: "boolean"
        datastores:
          description: "Array of datastores to which the backup proxy has a direct SAN or NFS connection."
          items:
            $ref: '#/components/schemas/ProxyDatastoreModel'
          type: "array"
      required:
        - autoSelect
      type: "object"
    ProxyExportSpec:
      properties:
        ids:
          description: "Array of backup proxy IDs."
          items:
            format: "uuid"
            type: "string"
          type: "array"
          uniqueItems: true
        names:
          description: "Array of backup proxy names. Wildcard characters are supported."
          items:
            type: "string"
          type: "array"
          uniqueItems: true
        types:
          description: "Array of backup proxy types."
          items:
            $ref: '#/components/schemas/EProxyType'
          type: "array"
          uniqueItems: true
      type: "object"
    ProxyImportSpec:
      properties:
        description:
          description: "Description of the backup proxy."
          type: "string"
        server:
          $ref: '#/components/schemas/ProxyServerSettingsImportSpec'
        type:
          $ref: '#/components/schemas/EProxyType'
      required:
        - description
        - server
        - type
      type: "object"
    ProxyImportSpecCollection:
      properties:
        proxies:
          description: "Array of backup proxies."
          items:
            $ref: '#/components/schemas/ProxyImportSpec'
          type: "array"
          uniqueItems: true
      required:
        - proxies
      type: "object"
    ProxyModel:
      allOf:
        - discriminator:
            mapping:
              ViProxy: '#/components/schemas/ViProxyModel'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/ViProxyModel'
        - $ref: '#/components/schemas/BaseProxyModel'
    ProxyServerSettingsImportSpec:
      description: "Settings of the server that is used as a backup proxy."
      properties:
        connectedDatastores:
          $ref: '#/components/schemas/ProxyDatastoreSettingsModel'
        failoverToNetwork:
          description: "(For the Direct storage access and Virtual appliance transport modes) If *true*, Veeam Backup & Replication failovers to the network transport mode in case the primary mode fails or is unavailable."
          type: "boolean"
        hostName:
          description: "Name of the server."
          type: "string"
        hostTag:
          description: "Tag assigned to the server."
          type: "string"
        hostToProxyEncryption:
          description: "(For the Network mode) If *true*, VM data is transferred over an encrypted TLS connection."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        transportMode:
          $ref: '#/components/schemas/EBackupProxyTransportMode'
      required:
        - hostName
      type: "object"
    ProxyServerSettingsModel:
      description: "Server settings for the backup proxy."
      properties:
        connectedDatastores:
          $ref: '#/components/schemas/ProxyDatastoreSettingsModel'
        failoverToNetwork:
          description: "(For the Direct storage access and Virtual appliance transport modes) If *true*, Veeam Backup & Replication failovers to the network transport mode in case the primary mode fails or is unavailable."
          type: "boolean"
        hostId:
          description: "ID of the server."
          format: "uuid"
          type: "string"
        hostToProxyEncryption:
          description: "(For the Network mode) If *true*, VM data is transferred over an encrypted TLS connection."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        transportMode:
          $ref: '#/components/schemas/EBackupProxyTransportMode'
      required:
        - hostId
      type: "object"
    ProxySpec:
      allOf:
        - discriminator:
            mapping:
              ViProxy: '#/components/schemas/ViProxySpec'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/ViProxySpec'
        - $ref: '#/components/schemas/BaseProxySpec'
    RepositoriesFilters:
      properties:
        hostIdFilter:
          description: "Filters repositories by ID of the backup server."
          format: "uuid"
          type: "string"
        limit:
          description: "Maximum number of repositories to return."
          format: "int32"
          type: "integer"
        nameFilter:
          description: "Filters repositories by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          type: "string"
        orderAsc:
          description: "Sorts repositories in the ascending order by the `orderColumn` parameter."
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/ERepositoryFiltersOrderColumn'
        pathFilter:
          description: "Filters repositories by path to the folder where backup files are stored."
          type: "string"
        skip:
          description: "Number of repositories to skip."
          format: "int32"
          type: "integer"
        typeFilter:
          $ref: '#/components/schemas/ERepositoryType'
        vmbApiFilter:
          description: "Filters repositories by VM Backup API parameters converted to the base64 string. To obtain the string, call the `GetApiProductInfoString` method of VM Backup API."
          type: "string"
        vmbApiPlatform:
          description: "Filters repositories by ID of a platform that you use to communicate with VM Backup API."
          format: "uuid"
          type: "string"
      type: "object"
    RepositoriesResult:
      properties:
        data:
          description: "Array of backup repositories."
          items:
            $ref: '#/components/schemas/RepositoryModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    RepositoryAccessPermissionsModel:
      description: "Repository access permissions."
      properties:
        accessPolicy:
          $ref: '#/components/schemas/ERepositoryAccessType'
        accounts:
          description: "(For *AllowExplicit* access policy) Array of accounts that have access to the backup repository."
          items:
            type: "string"
          type: "array"
        encryptBackups:
          description: "If *true*, Veeam Backup & Replication encrypts Veeam Agent backup files stored in the backup repository."
          type: "boolean"
        passwordId:
          description: "ID of the password used for encryption."
          format: "uuid"
          type: "string"
      required:
        - accessPolicy
        - encryptBackups
      type: "object"
    RepositoryAdvancedSettingsModel:
      description: "Advanced settings for the backup repository."
      properties:
        RotatedDriveCleanupMode:
          $ref: '#/components/schemas/ERotatedDriveCleanupMode'
        alignDataBlocks:
          description: "If *true*, Veeam Backup & Replication aligns VM data saved to a backup file at a 4 KB block boundary."
          type: "boolean"
        decompressBeforeStoring:
          description: "If *true*, Veeam Backup & Replication decompresses backup data blocks before storing to improve deduplication ratios."
          type: "boolean"
        perVmBackup:
          description: "If *true*, Veeam Backup & Replication creates a separate backup file for every VM in the job."
          type: "boolean"
        rotatedDrives:
          description: "If *true*, the repository drive is rotated."
          type: "boolean"
      type: "object"
    RepositoryBehaviorFilters:
      properties:
        overwriteOwner:
          type: "boolean"
      type: "object"
    RepositoryExportSpec:
      properties:
        ids:
          description: "Array of repository IDs."
          items:
            format: "uuid"
            type: "string"
          type: "array"
          uniqueItems: true
        names:
          description: "Array of repository names. Wildcard characters are supported."
          items:
            type: "string"
          type: "array"
          uniqueItems: true
        types:
          description: "Array of repository types."
          items:
            $ref: '#/components/schemas/ERepositoryType'
          type: "array"
          uniqueItems: true
      type: "object"
    RepositoryImportSpecCollection:
      properties:
        AmazonS3GlacierStorages:
          description: "Array of Amazon S3 Glacier storages."
          items:
            $ref: '#/components/schemas/AmazonS3GlacierStorageImportSpec'
          type: "array"
          uniqueItems: true
        AmazonS3Storages:
          description: "Array of Amazon S3 storages."
          items:
            $ref: '#/components/schemas/AmazonS3StorageImportSpec'
          type: "array"
          uniqueItems: true
        AmazonSnowballEdgeStorages:
          description: "Array of AWS Snowball Edge storages."
          items:
            $ref: '#/components/schemas/AmazonSnowballEdgeStorageImportSpec'
          type: "array"
          uniqueItems: true
        AzureArchiveStorages:
          description: "Array of Microsoft Azure Archive storages."
          items:
            $ref: '#/components/schemas/AzureArchiveStorageImportSpec'
          type: "array"
          uniqueItems: true
        AzureBlobStorages:
          description: "Array of Microsoft Azure Blob storages."
          items:
            $ref: '#/components/schemas/AzureBlobStorageImportSpec'
          type: "array"
          uniqueItems: true
        AzureDataBoxStorages:
          description: "Array of Microsoft Azure Data Box storages."
          items:
            $ref: '#/components/schemas/AzureDataBoxStorageImportSpec'
          type: "array"
          uniqueItems: true
        GoogleCloudStorages:
          description: "Array of Google Cloud storages."
          items:
            $ref: '#/components/schemas/GoogleCloudStorageImportSpec'
          type: "array"
          uniqueItems: true
        IBMCloudStorages:
          description: "Array of IBM Cloud storages."
          items:
            $ref: '#/components/schemas/IBMCloudStorageImportSpec'
          type: "array"
          uniqueItems: true
        LinuxHardenedRepositories:
          description: "Array of Linux hardened repositories."
          items:
            $ref: '#/components/schemas/LinuxHardenedStorageImportSpec'
          type: "array"
          uniqueItems: true
        LinuxLocalRepositories:
          description: "Array of Linux-based repositories."
          items:
            $ref: '#/components/schemas/LinuxLocalStorageImportSpec'
          type: "array"
          uniqueItems: true
        NfsRepositories:
          description: "Array of NFS backup repositories."
          items:
            $ref: '#/components/schemas/NfsStorageImportSpec'
          type: "array"
          uniqueItems: true
        S3CompatibleStorages:
          description: "Array of S3 compatible storages."
          items:
            $ref: '#/components/schemas/S3CompatibleStorageImportSpec'
          type: "array"
          uniqueItems: true
        SmbRepositories:
          description: "Array of SMB backup repositories."
          items:
            $ref: '#/components/schemas/SmbStorageImportSpec'
          type: "array"
          uniqueItems: true
        WasabiCloudStorages:
          description: "Array of Wasabi Cloud storages."
          items:
            $ref: '#/components/schemas/WasabiCloudStorageImportSpec'
          type: "array"
          uniqueItems: true
        WindowsLocalRepositories:
          description: "Array of Microsoft Windows-based repositories."
          items:
            $ref: '#/components/schemas/WindowsLocalStorageImportSpec'
          type: "array"
          uniqueItems: true
      type: "object"
    RepositoryModel:
      allOf:
        - discriminator:
            mapping:
              AmazonS3: '#/components/schemas/AmazonS3StorageModel'
              AmazonS3Glacier: '#/components/schemas/AmazonS3GlacierStorageModel'
              AmazonSnowballEdge: '#/components/schemas/AmazonSnowballEdgeStorageModel'
              AzureArchive: '#/components/schemas/AzureArchiveStorageModel'
              AzureBlob: '#/components/schemas/AzureBlobStorageModel'
              AzureDataBox: '#/components/schemas/AzureDataBoxStorageModel'
              GoogleCloud: '#/components/schemas/GoogleCloudStorageModel'
              IBMCloud: '#/components/schemas/IBMCloudStorageModel'
              LinuxHardened: '#/components/schemas/LinuxHardenedStorageModel'
              LinuxLocal: '#/components/schemas/LinuxLocalStorageModel'
              Nfs: '#/components/schemas/NfsStorageModel'
              S3Compatible: '#/components/schemas/S3CompatibleStorageModel'
              Smb: '#/components/schemas/SmbStorageModel'
              WasabiCloud: '#/components/schemas/WasabiCloudStorageModel'
              WinLocal: '#/components/schemas/WindowsLocalStorageModel'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/WindowsLocalStorageModel'
            - $ref: '#/components/schemas/LinuxLocalStorageModel'
            - $ref: '#/components/schemas/NfsStorageModel'
            - $ref: '#/components/schemas/SmbStorageModel'
            - $ref: '#/components/schemas/AzureBlobStorageModel'
            - $ref: '#/components/schemas/AzureDataBoxStorageModel'
            - $ref: '#/components/schemas/AmazonS3StorageModel'
            - $ref: '#/components/schemas/AmazonSnowballEdgeStorageModel'
            - $ref: '#/components/schemas/S3CompatibleStorageModel'
            - $ref: '#/components/schemas/GoogleCloudStorageModel'
            - $ref: '#/components/schemas/IBMCloudStorageModel'
            - $ref: '#/components/schemas/AmazonS3GlacierStorageModel'
            - $ref: '#/components/schemas/AzureArchiveStorageModel'
            - $ref: '#/components/schemas/WasabiCloudStorageModel'
            - $ref: '#/components/schemas/LinuxHardenedStorageModel'
        - $ref: '#/components/schemas/BaseRepositoryModel'
    RepositoryShareGatewayImportSpec:
      description: "Settings for the gateway server."
      properties:
        autoSelect:
          description: "If *true*, Veeam Backup & Replication automatically selects a gateway server."
          type: "boolean"
        gatewayServerName:
          description: "Name of the gateway server."
          type: "string"
      type: "object"
    RepositoryShareGatewayModel:
      description: "Settings for the gateway server."
      properties:
        autoSelect:
          description: "If *true*, Veeam Backup & Replication automatically selects a gateway server."
          type: "boolean"
        gatewayServerIds:
          description: "Array of gateway server IDs."
          items:
            format: "uuid"
            type: "string"
          type: "array"
      required:
        - autoSelect
      type: "object"
    RepositorySpec:
      allOf:
        - discriminator:
            mapping:
              AmazonS3: '#/components/schemas/AmazonS3StorageSpec'
              AmazonS3Glacier: '#/components/schemas/AmazonS3GlacierStorageSpec'
              AmazonSnowballEdge: '#/components/schemas/AmazonSnowballEdgeStorageSpec'
              AzureArchive: '#/components/schemas/AzureArchiveStorageSpec'
              AzureBlob: '#/components/schemas/AzureBlobStorageSpec'
              AzureDataBox: '#/components/schemas/AzureDataBoxStorageSpec'
              GoogleCloud: '#/components/schemas/GoogleCloudStorageSpec'
              IBMCloud: '#/components/schemas/IBMCloudStorageSpec'
              LinuxHardened: '#/components/schemas/LinuxHardenedStorageSpec'
              LinuxLocal: '#/components/schemas/LinuxLocalStorageSpec'
              Nfs: '#/components/schemas/NfsStorageSpec'
              S3Compatible: '#/components/schemas/S3CompatibleStorageSpec'
              Smb: '#/components/schemas/SmbStorageSpec'
              WasabiCloud: '#/components/schemas/WasabiCloudStorageSpec'
              WinLocal: '#/components/schemas/WindowsLocalStorageSpec'
            propertyName: "type"
          oneOf:
            - $ref: '#/components/schemas/WindowsLocalStorageSpec'
            - $ref: '#/components/schemas/LinuxLocalStorageSpec'
            - $ref: '#/components/schemas/NfsStorageSpec'
            - $ref: '#/components/schemas/SmbStorageSpec'
            - $ref: '#/components/schemas/AzureBlobStorageSpec'
            - $ref: '#/components/schemas/AzureDataBoxStorageSpec'
            - $ref: '#/components/schemas/AmazonS3StorageSpec'
            - $ref: '#/components/schemas/AmazonSnowballEdgeStorageSpec'
            - $ref: '#/components/schemas/S3CompatibleStorageSpec'
            - $ref: '#/components/schemas/GoogleCloudStorageSpec'
            - $ref: '#/components/schemas/IBMCloudStorageSpec'
            - $ref: '#/components/schemas/AmazonS3GlacierStorageSpec'
            - $ref: '#/components/schemas/AzureArchiveStorageSpec'
            - $ref: '#/components/schemas/WasabiCloudStorageSpec'
            - $ref: '#/components/schemas/LinuxHardenedStorageSpec'
        - $ref: '#/components/schemas/BaseRepositorySpec'
    RepositoryStateModel:
      properties:
        capacityGB:
          description: "Repository capacity in GB."
          format: "double"
          type: "number"
        description:
          description: "Description of the backup repository."
          type: "string"
        freeGB:
          description: "Repository free space in GB."
          format: "double"
          type: "number"
        hostId:
          description: "ID of the server that is used as a backup repository."
          format: "uuid"
          type: "string"
        hostName:
          description: "Name of the server that is used as a backup repository."
          type: "string"
        id:
          description: "ID of the backup repository."
          format: "uuid"
          type: "string"
        name:
          description: "Name of the backup repository."
          type: "string"
        path:
          description: "Path to the folder where backup files are stored."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
        usedSpaceGB:
          description: "Repository used space in GB."
          format: "double"
          type: "number"
      required:
        - id
        - name
        - type
        - description
        - capacityGB
        - freeGB
        - usedSpaceGB
      type: "object"
    RepositoryStatesFilters:
      description: "Filters repositories by the specified parameters."
      properties:
        capacityFilter:
          description: "Filters repositories by repository capacity."
          format: "double"
          type: "number"
        freeSpaceFilter:
          description: "Filters repositories by repository free space."
          format: "double"
          type: "number"
        idFilter:
          format: "uuid"
          type: "string"
        limit:
          description: "Returns the specified number of repositories."
          format: "int32"
          type: "integer"
        nameFilter:
          description: "Filters repositories by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          type: "string"
        orderAsc:
          description: "Sorts repositories in the ascending order by the `orderColumn` parameter."
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/ERepositoryStatesFiltersOrderColumn'
        skip:
          description: "Skips the specified number of repositories."
          format: "int32"
          type: "integer"
        typeFilter:
          $ref: '#/components/schemas/ERepositoryType'
        usedSpaceFilter:
          description: "Filters repositories by repository used space."
          format: "double"
          type: "number"
      type: "object"
    RepositoryStatesResult:
      properties:
        data:
          description: "Array of repository states."
          items:
            $ref: '#/components/schemas/RepositoryStateModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    RestoreProxySpec:
      description: "Backup proxies for VM data transport."
      properties:
        autoSelection:
          description: "If *true*, Veeam Backup & Replication detects backup proxies that are connected to the source datastore and automatically assigns optimal proxy resources for processing VM data."
          type: "boolean"
        proxyIds:
          description: "Array of backup proxy IDs."
          items:
            format: "uuid"
            type: "string"
          type: "array"
      required:
        - autoSelection
      type: "object"
    RestoreTargetDatastoreSpec:
      description: "Destination datastore."
      properties:
        datastore:
          $ref: '#/components/schemas/VmwareObjectModel'
        diskType:
          $ref: '#/components/schemas/EDiskCreationMode'
      type: "object"
    RestoreTargetFolderSpec:
      description: "Destination VM folder."
      properties:
        folder:
          $ref: '#/components/schemas/VmwareObjectModel'
        restoreVmTags:
          description: "If *true*, Veeam Backup & Replication restores tags that were assigned to the original VMs, and assigns them to the restored VMs."
          type: "boolean"
        vmName:
          description: "VM name."
          type: "string"
      required:
        - folder
      type: "object"
    RestoreTargetNetworkSpec:
      description: "Network to which the restored VM is connected."
      properties:
        disconnected:
          description: "If *true*, the restored VMs is not connected to any virtual network."
          type: "boolean"
        network:
          $ref: '#/components/schemas/VmwareObjectModel'
      required:
        - network
      type: "object"
    S3CompatibleBrowserDestinationSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserNewFolderSpec'
        - properties:
            bucketName:
              description: "Name of the bucket where you want to store your backup data."
              type: "string"
            connectionPoint:
              description: "Endpoint address and port number of the S3 compatible storage."
              type: "string"
            hostId:
              description: "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionId:
              description: "Region where the bucket is located."
              type: "string"
          required:
            - connectionPoint
            - regionId
            - bucketName
          type: "object"
    S3CompatibleBrowserModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserModel'
        - properties:
            connectionPoint:
              description: "Service point address and port number of the S3 compatible storage."
              type: "string"
            hostId:
              description: "ID of a server used to connect to the S3 compatible storage."
              format: "uuid"
              type: "string"
            regions:
              description: "Array of regions."
              items:
                $ref: '#/components/schemas/S3CompatibleRegionBrowserModel'
              type: "array"
          type: "object"
    S3CompatibleBrowserSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserSpec'
        - properties:
            gatewayServerId:
              description: "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionId:
              description: "Region where the S3 compatible storage is located."
              type: "string"
            servicePoint:
              description: "Service point address of the S3 compatible storage."
              type: "string"
          type: "object"
    S3CompatibleBucketBrowserModel:
      properties:
        folders:
          description: "Array of folders located in the bucket."
          items:
            type: "string"
          type: "array"
        name:
          description: "Bucket name."
          type: "string"
      type: "object"
    S3CompatibleProxyModel:
      description: "Proxy appliance for the S3 compatible storage."
      properties:
        managedServerId:
          description: "ID of a managed server used as a proxy appliance."
          format: "uuid"
          type: "string"
      required:
        - managedServerId
      type: "object"
    S3CompatibleRegionBrowserModel:
      properties:
        buckets:
          description: "Array of buckets located in the region."
          items:
            $ref: '#/components/schemas/S3CompatibleBucketBrowserModel'
          type: "array"
        id:
          description: "Region ID."
          type: "string"
        name:
          description: "Region name."
          type: "string"
      type: "object"
    S3CompatibleStorageAccountImportModel:
      description: "Account used to access the S3 compatible storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionId:
          description: "ID of a region where the storage is located."
          type: "string"
        servicePoint:
          description: "Endpoint address of the storage."
          type: "string"
      required:
        - servicePoint
        - regionId
        - credentials
        - connectionSettings
      type: "object"
    S3CompatibleStorageAccountModel:
      description: "Account used to access the S3 compatible storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
        credentialsId:
          description: "ID of a cloud credentials record used to access the storage."
          format: "uuid"
          type: "string"
        regionId:
          description: "ID of a region where the storage is located."
          type: "string"
        servicePoint:
          description: "Endpoint address and port number of the storage."
          type: "string"
      required:
        - servicePoint
        - regionId
        - credentialsId
        - gatewayServer
      type: "object"
    S3CompatibleStorageBucketModel:
      description: "Bucket where backup data is stored."
      properties:
        bucketName:
          description: "Bucket name."
          type: "string"
        folderName:
          description: "Name of the folder that the object storage repository is mapped to."
          type: "string"
        immutability:
          $ref: '#/components/schemas/ObjectStorageImmutabilityModel'
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
      required:
        - bucketName
        - folderName
      type: "object"
    S3CompatibleStorageImportSpec:
      properties:
        account:
          $ref: '#/components/schemas/S3CompatibleStorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/S3CompatibleStorageBucketModel'
        description:
          description: "Description of the object storage repository."
          type: "string"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the object storage repository."
          type: "string"
        proxyAppliance:
          $ref: '#/components/schemas/S3CompatibleProxyModel'
        tag:
          description: "Tag that identifies the object storage repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - name
        - description
        - tag
        - type
        - account
        - bucket
        - mountServer
      type: "object"
    S3CompatibleStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            account:
              $ref: '#/components/schemas/S3CompatibleStorageAccountModel'
            bucket:
              $ref: '#/components/schemas/S3CompatibleStorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            proxyAppliance:
              $ref: '#/components/schemas/S3CompatibleProxyModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "S3 compatible storage."
    S3CompatibleStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            account:
              $ref: '#/components/schemas/S3CompatibleStorageAccountModel'
            bucket:
              $ref: '#/components/schemas/S3CompatibleStorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            proxyAppliance:
              $ref: '#/components/schemas/S3CompatibleProxyModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "S3 compatible storage."
    ScaleOutExtentMaintenanceSpec:
      properties:
        repositoryIds:
          description: "Array of repository IDs added as scale-out backup repository extents."
          items:
            format: "uuid"
            type: "string"
          type: "array"
      required:
        - repositoryIds
      type: "object"
    ScaleOutRepositoriesFilters:
      properties:
        limit:
          description: "Maximum number of repositories to return."
          format: "int32"
          type: "integer"
        nameFilter:
          description: "Filters repositories by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          type: "string"
        orderAsc:
          description: "Sorts repositories in the ascending order by the `orderColumn` parameter."
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EScaleOutRepositoryFiltersOrderColumn'
        skip:
          description: "Number of repositories to skip."
          format: "int32"
          type: "integer"
      type: "object"
    ScaleOutRepositoriesResult:
      properties:
        data:
          description: "Array of scale-out backup repositories."
          items:
            $ref: '#/components/schemas/ScaleOutRepositoryModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    ScaleOutRepositoryModel:
      properties:
        archiveTier:
          $ref: '#/components/schemas/ArchiveTierModel'
        capacityTier:
          $ref: '#/components/schemas/CapacityTierModel'
        description:
          description: "Description of the scale-out backup repository."
          type: "string"
        id:
          description: "ID of the scale-out backup repository."
          format: "uuid"
          type: "string"
        name:
          description: "Name of the scale-out backup repository."
          type: "string"
        performanceTier:
          $ref: '#/components/schemas/PerformanceTierModel'
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicyModel'
        tag:
          description: "Tag assigned to the scale-out backup repository."
          type: "string"
      required:
        - id
        - name
        - description
        - performanceTier
      type: "object"
    ScaleOutRepositorySpec:
      properties:
        archiveTier:
          $ref: '#/components/schemas/ArchiveTierModel'
        capacityTier:
          $ref: '#/components/schemas/CapacityTierModel'
        description:
          description: "Description of the scale-out backup repository."
          type: "string"
        name:
          description: "Name of the scale-out backup repository."
          type: "string"
        performanceTier:
          $ref: '#/components/schemas/PerformanceTierSpec'
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicyModel'
        tag:
          description: "Tag assigned to the scale-out backup repository."
          type: "string"
      required:
        - name
        - description
        - performanceTier
      type: "object"
    ScheduleAfterThisJobModel:
      description: "Job chaining options."
      properties:
        isEnabled:
          description: "If *true*, job chaining is enabled."
          type: "boolean"
        jobName:
          description: "Name of the preceding job."
          type: "string"
      required:
        - isEnabled
      type: "object"
    ScheduleBackupWindowModel:
      description: "Backup window settings."
      properties:
        backupWindow:
          $ref: '#/components/schemas/BackupWindowSettingModel'
        isEnabled:
          default: false
          description: "If *true*, backup window is enabled."
          type: "boolean"
      required:
        - isEnabled
      type: "object"
    ScheduleDailyModel:
      description: "Daily scheduling options."
      properties:
        dailyKind:
          $ref: '#/components/schemas/EDailyKinds'
        days:
          description: "Days of the week when the job must start."
          items:
            $ref: '#/components/schemas/EDayOfWeek'
          type: "array"
          uniqueItems: true
        isEnabled:
          default: true
          description: "If *true*, daily schedule is enabled."
          type: "boolean"
        localTime:
          description: "Local time when the job must start."
          format: "time"
          type: "string"
      required:
        - isEnabled
      type: "object"
    ScheduleMonthlyModel:
      description: "Monthly scheduling options."
      properties:
        dayNumberInMonth:
          $ref: '#/components/schemas/EDayNumberInMonth'
        dayOfMonth:
          description: "Day of the month when the job must start."
          type: "integer"
        dayOfWeek:
          $ref: '#/components/schemas/EDayOfWeek'
        isEnabled:
          default: false
          description: "If *true*, monthly schedule is enabled."
          type: "boolean"
        localTime:
          description: "Local time when the job must start."
          format: "time"
          type: "string"
        months:
          description: "Months when the job must start."
          items:
            $ref: '#/components/schemas/EMonth'
          type: "array"
          uniqueItems: true
      required:
        - isEnabled
      type: "object"
    SchedulePeriodicallyModel:
      description: "Periodic scheduling options."
      properties:
        backupWindow:
          $ref: '#/components/schemas/BackupWindowSettingModel'
        frequency:
          description: "Number of time units that defines the time interval."
          type: "integer"
        isEnabled:
          default: false
          description: "If *true*, periodic schedule is enabled."
          type: "boolean"
        periodicallyKind:
          $ref: '#/components/schemas/EPeriodicallyKinds'
        startTimeWithinAnHour:
          description: "Start time within an hour, in minutes."
          type: "integer"
      required:
        - isEnabled
      type: "object"
    ScheduleRetryModel:
      description: "Retry options."
      properties:
        awaitMinutes:
          default: 10
          description: "Time interval between job retries in minutes. Must be greater than zero."
          type: "integer"
        isEnabled:
          default: false
          description: "If *true*, retry options are enabled."
          type: "boolean"
        retryCount:
          default: 3
          description: "Number of retries set for the job. Must be greater than zero."
          type: "integer"
      type: "object"
    ScriptCommand:
      description: "Script settings."
      properties:
        command:
          description: "Path to the script."
          type: "string"
        isEnabled:
          description: "If *true*, script execution is enabled."
          type: "boolean"
      required:
        - isEnabled
      type: "object"
    SecureRestoreSpec:
      description: "Secure restore settings."
      properties:
        enableAntivirusScan:
          description: "If *true*, Veeam Backup & Replication scans machine data with antivirus software before restoring the machine to the production environment."
          type: "boolean"
        enableEntireVolumeScan:
          description: "If *true*, the antivirus continues machine scan after the first malware is found."
          type: "boolean"
        virusDetectionAction:
          $ref: '#/components/schemas/EVirusDetectionAction'
      required:
        - enableAntivirusScan
      type: "object"
    ServerInfoModel:
      properties:
        buildVersion:
          description: "Veeam Backup & Replication build number."
          type: "string"
        name:
          description: "Full DNS name or IP address of the backup server."
          type: "string"
        patches:
          description: "Array of Veeam Backup & Replication cumulative patches installed on the backup server."
          items:
            type: "string"
          type: "array"
        vbrId:
          description: "Veeam Backup & Replication installation ID."
          type: "string"
      required:
        - vbrInstallationId
        - name
        - buildVersion
        - patches
      type: "object"
    ServerTimeModel:
      properties:
        serverTime:
          description: "Current date and time on the backup server."
          format: "date-time"
          type: "string"
        timeZone:
          description: "Time zone where the backup server is located."
          type: "string"
      required:
        - serverTime
      type: "object"
    ServicesFilters:
      properties:
        limit:
          format: "int32"
          type: "integer"
        nameFilter:
          type: "string"
        orderAsc:
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EServicesFiltersOrderColumn'
        skip:
          format: "int32"
          type: "integer"
      type: "object"
    ServicesModel:
      properties:
        name:
          description: "Name of the service."
          type: "string"
        port:
          description: "Port used to communicate with the service."
          type: "integer"
      required:
        - name
        - port
      type: "object"
    ServicesResult:
      properties:
        data:
          description: "Array of services."
          items:
            $ref: '#/components/schemas/ServicesModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    SessionLogRecordModel:
      description: "Record of the session log."
      properties:
        description:
          description: "Description of the log record."
          type: "string"
        id:
          description: "ID of the log record."
          type: "integer"
        startTime:
          description: "Date and time when the operation was started."
          format: "date-time"
          type: "string"
        status:
          $ref: '#/components/schemas/ETaskLogRecordStatus'
        title:
          description: "Title of the log record."
          type: "string"
        updateTime:
          description: "Date and time when the log record was updated."
          format: "date-time"
          type: "string"
      type: "object"
    SessionLogResult:
      description: "Log of the session."
      properties:
        records:
          description: "Array of log records."
          items:
            $ref: '#/components/schemas/SessionLogRecordModel'
          type: "array"
        totalRecords:
          description: "Total number of records."
          type: "integer"
      type: "object"
    SessionModel:
      properties:
        activityId:
          description: "ID of the activity."
          format: "uuid"
          type: "string"
        creationTime:
          description: "Date and time when the session was created."
          format: "date-time"
          type: "string"
        endTime:
          description: "Date and time when the session was ended."
          format: "date-time"
          type: "string"
        id:
          description: "ID of the session."
          format: "uuid"
          type: "string"
        name:
          description: "Name of the session."
          type: "string"
        parentSessionId:
          description: "ID of the parent session."
          format: "uuid"
          type: "string"
        progressPercent:
          description: "Progress percentage of the session."
          type: "integer"
        resourceId:
          description: "ID of the resource."
          format: "uuid"
          type: "string"
        resourceReference:
          description: "URI of the resource."
          type: "string"
        result:
          $ref: '#/components/schemas/SessionResultModel'
        sessionType:
          $ref: '#/components/schemas/ESessionType'
        state:
          $ref: '#/components/schemas/ESessionState'
        usn:
          description: "Update sequence number."
          format: "int64"
          type: "integer"
      required:
        - activityId
        - creationTime
        - id
        - name
        - sessionType
        - state
        - usn
      type: "object"
    SessionResultModel:
      description: "Session result."
      properties:
        isCanceled:
          description: "If *true*, the session has been canceled."
          type: "boolean"
        message:
          description: "Message that explains the session result."
          type: "string"
        result:
          $ref: '#/components/schemas/ESessionResult'
      required:
        - result
      type: "object"
    SessionsFilters:
      properties:
        createdAfterFilter:
          format: "date-time"
          type: "string"
        createdBeforeFilter:
          format: "date-time"
          type: "string"
        endedAfterFilter:
          format: "date-time"
          type: "string"
        endedBeforeFilter:
          format: "date-time"
          type: "string"
        jobIdFilter:
          format: "uuid"
          type: "string"
        limit:
          format: "int32"
          type: "integer"
        nameFilter:
          type: "string"
        orderAsc:
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/ESessionsFiltersOrderColumn'
        resultFilter:
          $ref: '#/components/schemas/ESessionResult'
        skip:
          format: "int32"
          type: "integer"
        stateFilter:
          $ref: '#/components/schemas/ESessionState'
        typeFilter:
          $ref: '#/components/schemas/ESessionType'
      type: "object"
    SessionsResult:
      properties:
        data:
          description: "Array of sessions."
          items:
            $ref: '#/components/schemas/SessionModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    SmbRepositoryShareSettingsModel:
      description: "Share settings."
      properties:
        credentialsId:
          description: "ID of the credentials record used to access the shared folder."
          format: "uuid"
          type: "string"
        gatewayServer:
          $ref: '#/components/schemas/RepositoryShareGatewayModel'
        sharePath:
          description: "Path to the shared folder that is used as a backup repository."
          type: "string"
      required:
        - credentialsId
        - sharePath
      type: "object"
    SmbRepositoryShareSettingsSpec:
      description: "Share settings."
      properties:
        credentials:
          $ref: '#/components/schemas/CredentialsImportModel'
        gatewayServer:
          $ref: '#/components/schemas/RepositoryShareGatewayImportSpec'
        sharePath:
          description: "Path to the shared folder that is used as a backup repository."
          type: "string"
      required:
        - credentials
        - sharePath
      type: "object"
    SmbStorageImportSpec:
      properties:
        description:
          description: "Description of the backup repository."
          type: "string"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the backup repository."
          type: "string"
        repository:
          $ref: '#/components/schemas/NetworkRepositorySettingsModel'
        share:
          $ref: '#/components/schemas/SmbRepositoryShareSettingsSpec'
        tag:
          description: "Tag that identifies the backup repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - description
        - kind
        - mountServer
        - name
        - repository
        - share
        - tag
        - type
      type: "object"
    SmbStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            repository:
              $ref: '#/components/schemas/NetworkRepositorySettingsModel'
            share:
              $ref: '#/components/schemas/SmbRepositoryShareSettingsModel'
          required:
            - mountServer
            - repository
            - share
          type: "object"
      description: "SMB backup repository."
    SmbStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            repository:
              $ref: '#/components/schemas/NetworkRepositorySettingsModel'
            share:
              $ref: '#/components/schemas/SmbRepositoryShareSettingsModel'
          required:
            - mountServer
            - repository
            - share
          type: "object"
      description: "SMB backup repository."
    StandardCredentialsModel:
      allOf:
        - $ref: '#/components/schemas/BaseCredentialsModel'
        - properties:
            tag:
              description: "Tag used to identify the credentials record."
              type: "string"
          type: "object"
    StandardCredentialsSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCredentialsSpec'
        - properties:
            tag:
              description: "Tag used to identify the credentials record."
              type: "string"
          type: "object"
    SyntheticFullSettingsModel:
      description: "Synthetic full backup settings."
      properties:
        isEnabled:
          description: "If *true*, active full backups are enabled."
          type: "boolean"
        monthly:
          $ref: '#/components/schemas/AdvancedStorageScheduleMonthlyModel'
        weekly:
          $ref: '#/components/schemas/AdvancedStorageScheduleWeeklyModel'
      required:
        - isEnabled
      type: "object"
    TokenLoginSpec:
      properties:
        code:
          description: "Authorization code. Required if the `grant_type` value is `authorization_code`."
          type: "string"
        grant_type:
          $ref: '#/components/schemas/ELoginGrantType'
        password:
          description: "Password. Required if the `grant_type` value is `password`."
          format: "password"
          type: "string"
        refresh_token:
          description: "Refresh token. Required if the `grant_type` value is `refresh_token`."
          type: "string"
        use_short_term_refresh:
          description: "If *true*, a short-term refresh token is used. Lifetime of the short-term refresh token is the access token lifetime plus 15 minutes."
          type: "boolean"
        username:
          description: "User name. Required if the `grant_type` value is `password`."
          type: "string"
        vbr_token:
          description: "Veeam Backup & Replication platform service token."
          type: "string"
      required:
        - grant_type
      type: "object"
    TokenModel:
      properties:
        .expires:
          description: "Date and time when the access token expires."
          format: "date-time"
          type: "string"
        .issued:
          description: "Date and time when the access token is issued."
          format: "date-time"
          type: "string"
        access_token:
          description: "String that represents authorization issued to the client. It must be specified in all requests. An access token can be used multiple times, but its lifetime is 15 minutes."
          type: "string"
        expires_in:
          description: "Lifetime of the access token, in seconds."
          format: "int32"
          type: "integer"
        refresh_token:
          description: "String that is used to obtain a new access token if the current access token expires or becomes lost. A refresh token can be used only once, and its default lifetime is 14 days."
          type: "string"
        token_type:
          description: "Type of the access token."
          type: "string"
      required:
        - .expires
        - .issued
        - access_token
        - expires_in
        - refresh_token
        - token_type
      type: "object"
    TrafficRuleModel:
      properties:
        encryptionEnabled:
          description: "If *true*, traffic encryption is enabled."
          type: "boolean"
        id:
          description: "ID of the rule."
          format: "uuid"
          type: "string"
        name:
          description: "Name of the rule."
          type: "string"
        sourceIPEnd:
          description: "End IP address of the range for the backup infrastructure components on the source side."
          type: "string"
        sourceIPStart:
          description: "Start IP address of the range for the backup infrastructure components on the source side."
          type: "string"
        targetIPEnd:
          description: "End IP address of the range for the backup infrastructure components on the target side."
          type: "string"
        targetIPStart:
          description: "Start IP address of the range for the backup infrastructure components on the target side."
          type: "string"
        throttlingEnabled:
          description: "If *true*, traffic throttling is enabled."
          type: "boolean"
        throttlingUnit:
          $ref: '#/components/schemas/ESpeedUnit'
        throttlingValue:
          description: "Maximum speed that must be used to transfer data from source to target."
          format: "int32"
          type: "integer"
        throttlingWindowEnabled:
          description: "If *true*, throttling window during which the speed must be limited is enabled."
          type: "boolean"
        throttlingWindowOptions:
          $ref: '#/components/schemas/BackupWindowSettingModel'
      required:
        - name
        - sourceIPStart
        - sourceIPEnd
        - targetIPStart
        - targetIPEnd
      type: "object"
    VCenterInventoryFilters:
      properties:
        hierarchyTypeFilter:
          $ref: '#/components/schemas/EHierarchyType'
        limit:
          description: "Maximum number of objects to return."
          format: "int32"
          type: "integer"
        nameFilter:
          description: "Filters objects by the `nameFilter` pattern. The pattern can match any object parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          type: "string"
        objectIdFilter:
          description: "Filters objects by object ID."
          type: "string"
        orderAsc:
          description: "Sorts objects in the ascending order by the `orderColumn` parameter."
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EvCentersInventoryFiltersOrderColumn'
        parentContainerNameFilter:
          description: "Filters objects by name of the parent container."
          type: "string"
        skip:
          description: "Number of objects to skip."
          format: "int32"
          type: "integer"
        typeFilter:
          $ref: '#/components/schemas/EVmwareInventoryType'
      type: "object"
    VCenterInventoryResult:
      properties:
        data:
          description: "Array of vCenter Servers."
          items:
            $ref: '#/components/schemas/VmwareObjectSizeModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    VPowerNFSPortSettingsModel:
      description: "Network ports used by the vPower NFS Service."
      properties:
        mountPort:
          description: "Mount port."
          type: "integer"
        vPowerNFSPort:
          description: "vPower NFS port."
          type: "integer"
      type: "object"
    VSphereChangedBlockTrackingSettingsModel:
      description: "CBT settings for the backup job."
      properties:
        enableCBTautomatically:
          description: "If *true*, CBT is enabled for all processed VMs even if CBT is disabled in VM configuration. CBT is used for VMs with virtual hardware version 7 or later. These VMs must not have existing snapshots."
          type: "boolean"
        isEnabled:
          description: "If *true*, CBT data is used."
          type: "boolean"
        resetCBTonActiveFull:
          description: "If *true*, CBT is reset before creating active full backups."
          type: "boolean"
      required:
        - isEnabled
      type: "object"
    ViBackupObjectModel:
      allOf:
        - $ref: '#/components/schemas/BaseBackupObjectModel'
        - properties:
            objectId:
              description: "ID of the virtual infrastructure object (mo-ref or ID, depending on the virtualization platform)."
              type: "string"
            path:
              description: "Path to the object."
              type: "string"
            viType:
              $ref: '#/components/schemas/EVmwareInventoryType'
          required:
            - objectId
          type: "object"
    ViHostImportSpec:
      properties:
        certificateThumbprint:
          description: "Certificate thumbprint used to verify the server identity."
          type: "string"
        credentials:
          $ref: '#/components/schemas/CredentialsImportModel'
        description:
          description: "Description of the server."
          type: "string"
        name:
          description: "Full DNS name or IP address of the server."
          type: "string"
        port:
          description: "Port used to communicate with the server."
          type: "integer"
        type:
          $ref: '#/components/schemas/EManagedServerType'
        viHostType:
          $ref: '#/components/schemas/EViHostType'
      required:
        - credentials
        - description
        - name
        - type
        - viHostType
      type: "object"
    ViHostModel:
      allOf:
        - $ref: '#/components/schemas/BaseManagedServerModel'
        - properties:
            port:
              description: "Port used to communicate with the server."
              type: "integer"
            viHostType:
              $ref: '#/components/schemas/EViHostType'
          required:
            - port
          type: "object"
    ViHostSpec:
      allOf:
        - $ref: '#/components/schemas/BaseManagedServerSpec'
        - properties:
            certificateThumbprint:
              description: "Certificate thumbprint used to verify the server identity. For details on how to get the thumbprint, see [Request TLS Certificate or SSH Fingerprint](#tag/Connection/operation/GetConnectionCertificate)."
              type: "string"
            port:
              description: "Port used to communicate with the server."
              type: "integer"
          type: "object"
    ViProxyModel:
      allOf:
        - $ref: '#/components/schemas/BaseProxyModel'
        - properties:
            server:
              $ref: '#/components/schemas/ProxyServerSettingsModel'
          required:
            - server
          type: "object"
    ViProxySpec:
      allOf:
        - $ref: '#/components/schemas/BaseProxySpec'
        - properties:
            server:
              $ref: '#/components/schemas/ProxyServerSettingsModel'
          required:
            - server
          type: "object"
    ViRootFilters:
      properties:
        limit:
          description: "Maximum number of VMware vSphere servers to return."
          format: "int32"
          type: "integer"
        nameFilter:
          description: "Filters VMware vSphere servers by the `nameFilter` pattern. The pattern can match any VMware vSphere server parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          type: "string"
        orderAsc:
          description: "Sorts VMware vSphere servers in the ascending order by the `orderColumn` parameter."
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EViRootFiltersOrderColumn'
        skip:
          description: "Number of VMware vSphere servers to skip."
          format: "int32"
          type: "integer"
      type: "object"
    ViRootsResult:
      properties:
        data:
          description: "Array of VMware vSphere servers."
          items:
            $ref: '#/components/schemas/VmwareObjectSizeModel'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    ViVMQuickMigrationSpec:
      properties:
        DeleteSourceVmsFiles:
          description: "If *true*, Veeam Backup & Replication will delete source VM files upon successful migration."
          type: "boolean"
        VeeamQMEnabled:
          description: "If *true*, the Veeam Quick Migration mechanism is used. Otherwise, Veeam Backup & Replication will use VMware vMotion for migration."
          type: "boolean"
        datastore:
          $ref: '#/components/schemas/VmwareObjectModel'
        destinationHost:
          $ref: '#/components/schemas/VmwareObjectModel'
        folder:
          $ref: '#/components/schemas/VmwareObjectModel'
        resourcePool:
          $ref: '#/components/schemas/VmwareObjectModel'
        sourceProxyIds:
          description: "Array of source backup proxies."
          items:
            format: "uuid"
            type: "string"
          type: "array"
        targetProxyIds:
          description: "Array of target backup proxies."
          items:
            format: "uuid"
            type: "string"
          type: "array"
      required:
        - destinationHost
      type: "object"
    VmbApiFilterModel:
      properties:
        assemblyVersion:
          type: "string"
        productId:
          format: "uuid"
          type: "string"
        protocolVersion:
          type: "integer"
        versionFlags:
          type: "integer"
      required:
        - protocolVersion
        - assemblyVersion
        - productId
        - versionFlags
      type: "object"
    VmwareFcdInstantRecoveryDiskInfo:
      properties:
        mountedDiskName:
          description: "Name of the VMDK file that is stored in the datastore."
          type: "string"
        nameInBackup:
          description: "Disk name displayed in the backup."
          type: "string"
        objectId:
          description: "FCD ID."
          type: "string"
        registeredFcdName:
          description: "Name under which the disk is registered as an FCD in the vCenter Managed Object Browser."
          type: "string"
      required:
        - nameInBackup
        - mountedDiskName
        - registeredFcdName
        - objectId
      type: "object"
    VmwareFcdInstantRecoveryDiskSpec:
      properties:
        mountedDiskName:
          description: "Name of the VMDK file that will be stored in the datastore."
          type: "string"
        nameInBackup:
          description: "Disk name displayed in the backup."
          type: "string"
        registeredFcdName:
          description: "Name under which the disk will be registered as an FCD in the vCenter Managed Object Browser."
          type: "string"
      required:
        - nameInBackup
        - mountedDiskName
        - registeredFcdName
      type: "object"
    VmwareFcdInstantRecoveryMount:
      properties:
        errorMessage:
          description: "Error message."
          type: "string"
        id:
          description: "Mount ID."
          format: "uuid"
          type: "string"
        mountedDisks:
          description: "Array of mounted disks."
          items:
            $ref: '#/components/schemas/VmwareFcdInstantRecoveryDiskInfo'
          type: "array"
        sessionId:
          description: "ID of the restore session. Use the ID to track the progress. For details, see [Get Session](#tag/Sessions/operation/GetSession)."
          format: "uuid"
          type: "string"
        spec:
          $ref: '#/components/schemas/VmwareFcdInstantRecoverySpec'
        state:
          $ref: '#/components/schemas/EInstantRecoveryMountState'
      required:
        - id
        - sessionId
        - state
        - spec
      type: "object"
    VmwareFcdInstantRecoveryMountsFilters:
      properties:
        limit:
          format: "int32"
          type: "integer"
        nameFilter:
          type: "string"
        orderAsc:
          type: "boolean"
        orderColumn:
          $ref: '#/components/schemas/EVmwareFcdInstantRecoveryMountsFiltersOrderColumn'
        skip:
          format: "int32"
          type: "integer"
        stateFilter:
          $ref: '#/components/schemas/EInstantRecoveryMountState'
      type: "object"
    VmwareFcdInstantRecoveryMountsResult:
      properties:
        data:
          description: "Array of FCD mounts."
          items:
            $ref: '#/components/schemas/VmwareFcdInstantRecoveryMount'
          type: "array"
        pagination:
          $ref: '#/components/schemas/PaginationResult'
      required:
        - data
        - pagination
      type: "object"
    VmwareFcdInstantRecoverySpec:
      description: "Instant FCD Recovery configuration:<ul> <li>Restore point ID</li> <li>Destination cluster</li> <li>Disks for restore</li> <li>Write cache</li></ul>"
      properties:
        destinationCluster:
          $ref: '#/components/schemas/VmwareObjectModel'
        disksMapping:
          description: "Array of disks for restore."
          items:
            $ref: '#/components/schemas/VmwareFcdInstantRecoveryDiskSpec'
          type: "array"
        objectRestorePointId:
          description: "ID of the restore point."
          format: "uuid"
          type: "string"
        writeCache:
          $ref: '#/components/schemas/VmwareFcdWriteCacheSpec'
      required:
        - objectRestorePointId
        - destinationCluster
        - disksMapping
      type: "object"
    VmwareFcdQuickMigrationSpec:
      properties:
        mountedDiskNames:
          description: "Array of disks that will be migrated to the `targetDatastore` associated with the `storagePolicy`."
          items:
            type: "string"
          type: "array"
        storagePolicy:
          $ref: '#/components/schemas/VmwareObjectModel'
        targetDatastore:
          $ref: '#/components/schemas/VmwareObjectModel'
      required:
        - targetDatastore
      type: "object"
    VmwareFcdWriteCacheSpec:
      description: "Write cache for recovered disks."
      properties:
        cacheDatastore:
          $ref: '#/components/schemas/VmwareObjectModel'
        redirectIsEnabled:
          description: "If *true*, cache redirection is enabled. In this case, all changes made to the recovered disks while the Instant FCD Recovery is active are redirected to the specified `cacheDatastore` associated with the `storagePolicy`."
          type: "boolean"
        storagePolicy:
          $ref: '#/components/schemas/VmwareObjectModel'
      required:
        - redirectIsEnabled
      type: "object"
    VmwareObjectDiskModel:
      properties:
        disks:
          description: "Array of disks."
          items:
            description: "ID of the disk."
            type: "string"
          type: "array"
        disksToProcess:
          $ref: '#/components/schemas/EVmwareDisksTypeToProcess'
        removeFromVMConfiguration:
          description: "If *true*, the disk is removed from VM configuration."
          type: "boolean"
        vmObject:
          $ref: '#/components/schemas/VmwareObjectModel'
      required:
        - disks
        - disksToProcess
        - vmObject
      type: "object"
    VmwareObjectModel:
      description: "VMware vSphere object."
      properties:
        hostName:
          description: "Name of the VMware vSphere server that hosts the object."
          type: "string"
        name:
          description: "Name of the VMware vSphere object."
          type: "string"
        objectId:
          description: "ID of the VMware vSphere object. The parameter is required for all VMware vSphere objects except vCenter Servers and standalone ESXi hosts."
          type: "string"
        type:
          $ref: '#/components/schemas/EVmwareInventoryType'
      required:
        - name
        - type
        - hostName
      type: "object"
    VmwareObjectSizeModel:
      properties:
        inventoryObject:
          $ref: '#/components/schemas/VmwareObjectModel'
        size:
          description: "Size used by the VMware vSphere object."
          type: "string"
      required:
        - inventoryObject
      type: "object"
    WasabiCloudStorageAccountImportModel:
      description: "Account used to access the Wasabi Cloud storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionImportSpec'
        credentials:
          $ref: '#/components/schemas/CloudCredentialsImportModel'
        regionId:
          description: "ID of a region where the storage is located."
          type: "string"
      required:
        - regionId
        - credentials
        - connectionSettings
      type: "object"
    WasabiCloudStorageAccountModel:
      description: "Account used to access the Wasabi Cloud storage."
      properties:
        connectionSettings:
          $ref: '#/components/schemas/ObjectStorageConnectionModel'
        credentialsId:
          description: "ID of a cloud credentials record used to access the storage."
          format: "uuid"
          type: "string"
        regionId:
          description: "ID of a region where the storage is located."
          type: "string"
      required:
        - regionId
        - credentialsId
        - connectionSettings
      type: "object"
    WasabiCloudStorageBrowserDestinationSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserNewFolderSpec'
        - properties:
            bucketName:
              description: "Name of the bucket where you want to store your backup data."
              type: "string"
            hostId:
              description: "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionId:
              description: "Region where the bucket is located."
              type: "string"
          required:
            - regionId
            - bucketName
          type: "object"
    WasabiCloudStorageBrowserModel:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserModel'
        - properties:
            hostId:
              description: "ID of a server used to connect to the object storage."
              format: "uuid"
              type: "string"
            regions:
              description: "Array of regions."
              items:
                $ref: '#/components/schemas/WasabiCloudStorageRegionBrowserModel'
              type: "array"
          type: "object"
    WasabiCloudStorageBrowserSpec:
      allOf:
        - $ref: '#/components/schemas/BaseCloudBrowserSpec'
        - properties:
            gatewayServerId:
              description: "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used."
              format: "uuid"
              type: "string"
            regionId:
              description: "Region ID."
              type: "string"
          required:
            - regionId
          type: "object"
    WasabiCloudStorageBucketBrowserModel:
      properties:
        folders:
          description: "Array of folders located in the bucket."
          items:
            type: "string"
          type: "array"
        name:
          description: "Bucket name."
          type: "string"
      type: "object"
    WasabiCloudStorageBucketModel:
      description: "Wasabi bucket where backup data is stored."
      properties:
        bucketName:
          description: "Name of a Wasabi bucket."
          type: "string"
        folderName:
          description: "Name of the folder that the object storage repository is mapped to."
          type: "string"
        immutability:
          $ref: '#/components/schemas/ObjectStorageImmutabilityModel'
        storageConsumptionLimit:
          $ref: '#/components/schemas/ObjectStorageConsumptionLimitModel'
      required:
        - bucketName
        - folderName
      type: "object"
    WasabiCloudStorageImportSpec:
      properties:
        account:
          $ref: '#/components/schemas/WasabiCloudStorageAccountImportModel'
        bucket:
          $ref: '#/components/schemas/WasabiCloudStorageBucketModel'
        description:
          description: "Description of the object storage repository."
          type: "string"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the object storage repository."
          type: "string"
        proxyAppliance:
          $ref: '#/components/schemas/S3CompatibleProxyModel'
        tag:
          description: "Tag that identifies the object storage repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - name
        - description
        - tag
        - type
        - account
        - bucket
        - mountServer
      type: "object"
    WasabiCloudStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            account:
              $ref: '#/components/schemas/WasabiCloudStorageAccountModel'
            bucket:
              $ref: '#/components/schemas/WasabiCloudStorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            proxyAppliance:
              $ref: '#/components/schemas/S3CompatibleProxyModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "Wasabi Cloud storage."
    WasabiCloudStorageRegionBrowserModel:
      properties:
        buckets:
          description: "Array of buckets located in the region."
          items:
            $ref: '#/components/schemas/WasabiCloudStorageBucketBrowserModel'
          type: "array"
        id:
          description: "Region ID."
          type: "string"
        name:
          description: "Region name."
          type: "string"
      type: "object"
    WasabiCloudStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            account:
              $ref: '#/components/schemas/WasabiCloudStorageAccountModel'
            bucket:
              $ref: '#/components/schemas/WasabiCloudStorageBucketModel'
            enableTaskLimit:
              description: "If *true*, the maximum number of concurrent tasks is limited."
              type: "boolean"
            maxTaskCount:
              description: "Maximum number of concurrent tasks."
              type: "integer"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            proxyAppliance:
              $ref: '#/components/schemas/S3CompatibleProxyModel'
          required:
            - account
            - bucket
            - mountServer
          type: "object"
      description: "Wasabi Cloud storage."
    WindowsHostComponentPortModel:
      description: "Ports used by Veeam Backup & Replication components."
      properties:
        componentName:
          $ref: '#/components/schemas/EWindowsHostComponentType'
        port:
          description: "Port used by the component."
          type: "integer"
      required:
        - componentName
        - port
      type: "object"
    WindowsHostImportSpec:
      properties:
        credentials:
          $ref: '#/components/schemas/CredentialsImportModel'
        description:
          description: "Description of the server."
          type: "string"
        name:
          description: "Full DNS name or IP address of the server."
          type: "string"
        networkSettings:
          $ref: '#/components/schemas/WindowsHostPortsModel'
        type:
          $ref: '#/components/schemas/EManagedServerType'
      required:
        - description
        - name
        - type
      type: "object"
    WindowsHostModel:
      allOf:
        - $ref: '#/components/schemas/BaseManagedServerModel'
        - properties:
            networkSettings:
              $ref: '#/components/schemas/WindowsHostPortsModel'
          type: "object"
    WindowsHostPortsModel:
      description: "Veeam Backup & Replication components installed on the server and ports used by the components."
      properties:
        components:
          description: "Array of Veeam Backup & Replication components."
          items:
            $ref: '#/components/schemas/WindowsHostComponentPortModel'
          type: "array"
        portRangeEnd:
          description: "End port used for data transfer."
          type: "integer"
        portRangeStart:
          description: "Start port used for data transfer."
          type: "integer"
        serverThisSide:
          description: "If *true*, the server is run on this side."
          type: "boolean"
      type: "object"
    WindowsHostSpec:
      allOf:
        - $ref: '#/components/schemas/BaseManagedServerSpec'
        - properties:
            networkSettings:
              $ref: '#/components/schemas/WindowsHostPortsModel'
          type: "object"
    WindowsLocalRepositorySettingsModel:
      description: "Repository settings."
      properties:
        advancedSettings:
          $ref: '#/components/schemas/RepositoryAdvancedSettingsModel'
        enableReadWriteLimit:
          description: "If *true*, reading and writing speed is limited."
          type: "boolean"
        enableTaskLimit:
          description: "If *true*, the maximum number of concurrent tasks is limited."
          type: "boolean"
        maxTaskCount:
          description: "Maximum number of concurrent tasks."
          type: "integer"
        path:
          description: "Path to the folder where backup files are stored."
          type: "string"
        readWriteRate:
          description: "Maximum rate that restricts the total speed of reading and writing data to the backup repository disk."
          type: "integer"
      type: "object"
    WindowsLocalStorageImportSpec:
      properties:
        description:
          description: "Description of the backup repository."
          type: "string"
        hostName:
          description: "ID of the server that is used as a backup repository."
          type: "string"
        mountServer:
          $ref: '#/components/schemas/MountServerSettingsImportSpec'
        name:
          description: "Name of the backup repository."
          type: "string"
        repository:
          $ref: '#/components/schemas/WindowsLocalRepositorySettingsModel'
        tag:
          description: "Tag that identifies the backup repository."
          type: "string"
        type:
          $ref: '#/components/schemas/ERepositoryType'
      required:
        - description
        - hostName
        - kind
        - mountServer
        - name
        - repository
        - tag
        - type
      type: "object"
    WindowsLocalStorageModel:
      allOf:
        - $ref: '#/components/schemas/BaseRepositoryModel'
        - properties:
            hostId:
              description: "ID of the server that is used as a backup repository."
              format: "uuid"
              type: "string"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            repository:
              $ref: '#/components/schemas/WindowsLocalRepositorySettingsModel'
          required:
            - hostId
            - mountServer
            - repository
          type: "object"
      description: "Microsoft Windows-based repository."
    WindowsLocalStorageSpec:
      allOf:
        - $ref: '#/components/schemas/BaseRepositorySpec'
        - properties:
            hostId:
              description: "ID of the server that is used as a backup repository."
              format: "uuid"
              type: "string"
            mountServer:
              $ref: '#/components/schemas/MountServerSettingsModel'
            repository:
              $ref: '#/components/schemas/WindowsLocalRepositorySettingsModel'
          required:
            - hostId
            - mountServer
            - repository
          type: "object"
      description: "Microsoft Windows-based repository."
  securitySchemes:
    Bearer:
      description: "Access token specified in the following format&#58; `Bearer <access token>`."
      in: "header"
      name: "Authorization"
      type: "apiKey"
info:
  description: "This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<br>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<br> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas."
  title: "Veeam Backup & Replication REST API"
  version: "1.1-rev0"
  x-veeam-prev-version: "1.0-rev2"
openapi: "3.0.1"
paths:
  /api/oauth2/authorization_code:
    post:
      description: "The HTTP POST request to the `/api/oauth2/authorization_code` path allows you to get an authorization code that is used to obtain an access token. For more information on authorization process, see [Requesting Authorization](https://helpcenter.veeam.com/docs/backup/vbr_rest/requesting_authorization.html?ver=120)."
      operationId: "CreateAuthorizationCode"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              example:
                code: AAEAAPcbxUSe0PNKAN+ilV5d4M5Fkv9ONjwRa4hfZYoemxIDA/IHbrjldYbfu1MemydXxGR4KYe5woGq09k+URepuiwUVsg3WbXC179ECOARXmfMH9dFI5H4aiXTotwPvuXLAC2AU4nFSUI2Kr2jlg4Vm8hTEPisaEiOolaVPA5CTzSEribGVaPYwvzyEIn7qy+lLnvGN2dm46W6Q0QJ2dpw1SCI2DZRCRIz+L8Nq804hNwDQJk9TCPJ61ztwF4FM+wO2ToNvMkL6aVay7STpeTRlkFf5i5dAm2qC0a1fcDdkkxt2lwv47t52I2tyZafpdLXs1eb+y7ZnuYQGbDI3epq5GAIAAAAK1kt2wvg2Qg=
              schema:
                $ref: '#/components/schemas/AuthorizationCodeModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Authorization Code"
      tags:
        - Login
  /api/oauth2/logout:
    post:
      description: "The HTTP POST request to the `/api/oauth2/logout` path allows you to perform the logout operation. After you log out, your access and refresh tokens are expired."
      operationId: "Logout"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Log Out"
      tags:
        - Login
  /api/oauth2/token:
    post:
      description: "The HTTP POST request to the `/api/oauth2/token` path allows you to get an access token and a refresh token."
      operationId: "CreateToken"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenLoginSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                access_token: eyJhbGciOiJSUzUxMiIsImtpZCI6IjRFOTE2QjIwMTkzMENEOUFFNDRDMjAwMTlGODdGMkE0RUYyMjczMDMiLCJ0eXAiOiJKV1QifQ.eyJ1bmlxdWVfbmFtZSI6InNoZWlsYS5kLmNvcnkiLCJuYmYiOjE2NDMwMzA2NTgsImV4cCI6MTY0MzAzMTU1OCwiaWF0IjoxNjQzMDMwNjU4LCJhdWQiOiJhY2Nlc3MifQ.PYyLnd-AGcQDiMN6RibL_3D-IzngzGqM0Du0huiEbswyqB9JATF3PJvPPKQn1H27xYEiznDyhAnbs9qZNNXlK0E7yRZbifUat16C1XDCvKFXAkije_44xakcUf5aUeU5YVRyjHa-hTRTkwISj9lBCNf_WdpttkK2stgyRCafrj057ATgUyru6o5gZhTYIS4cioAXmhvLvB7Qrn4X080DHH0-KqYeSQwnQASi1HDuogfkEmxyu8380fbGJiyK4eKGLJ2hmq5DsMmL0BSSzIvUiifLPS5_Ei4-9EOFOv3RlLmk6eQNefaLrkRSsV7QSgGZDLc98zIBlD2yrUccx2cj9A
                expires_in: 900
                refresh_token: eyJhbGciOiJSUzUxMiIsImtpZCI6IjRFOTE2QjIwMTkzMENEOUFFNDRDMjAwMTlGODdGMkE0RUYyMjczMDMiLCJ0eXAiOiJKV1QifQ.eyJ1bmlxdWVfbmFtZSI6InNoZWlsYS5kLmNvcnkiLCJ0b2tlbl9pZCI6IjEwNTA4YWUyLTk0YzctNGRkNi04YzEyLWZjNGY1NDQ1MzM0YSIsInNob3J0X3Rlcm1fZXhwaXJhdGlvbiI6IkZhbHNlIiwibmJmIjoxNjQzMDMwNjU5LCJleHAiOjE2NDQyNDAyNTksImlhdCI6MTY0MzAzMDY1OSwiYXVkIjoicmVmcmVzaCJ9.RXx9xPlpoUuRwO7sTkBTXntpc3vixXc2kgfCPfRcpePdzOGbLqn64c1hCHTGgXPKgZ4ogEY58N2D3xUPd6spAdfbOkF_XwjEEDpxf03rl7LYMo-OXQ0PxVtUCJK3_o6Dfah0YV6IYu5yctvd-_1MKaac7vV5Zl87qhlF8w4e7LT0QPD_Vhp2JUoD3dSTvYw9WvNDqaRotYfaWj05yTB3PArVwSiPDg1oZXSLxROmDDtKf5FFqSgOdp4LxJmD6sYlv_2FQqG-tNwPqRyzKIaqiDDQXBR9MVmFHBl9iUcYOqvX9ZlCa7oPP_txjopks-NcpdyPkSH74hvoeOs3hujW8w
                .expires: "2022-04-24T14:39:18+01:00"
                token_type: bearer
                .issued: "2022-04-24T14:24:18+01:00"
              schema:
                $ref: '#/components/schemas/TokenModel'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security: []
      summary: "Get Access Token"
      tags:
        - Login
  /api/v1/agents/recoveryTokens:
    get:
      description: "The HTTP GET request to the `/api/v1/agents/recoveryTokens` path allows you to get an array of all recovery tokens."
      operationId: "GetAllComputerRecoveryTokens"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of recovery tokens to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ComputerRecoveryTokenFilters'
        - description: "Maximum number of recovery tokens to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ComputerRecoveryTokenFilters'
        - description: "Sorts recovery tokens by one of the parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EComputerRecoveryTokenFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/ComputerRecoveryTokenFilters'
        - description: "Sorts recovery tokens in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/ComputerRecoveryTokenFilters'
        - description: "Filters recovery tokens by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ComputerRecoveryTokenFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerRecoveryTokenResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Recovery Tokens"
      tags:
        - Agents
      x-veeam-authorize:
        claims:
          - ViewComputerRecoveryTokens
    post:
      description: "The HTTP POST request to the `/api/v1/agents/recoveryTokens` path allows you to create a new recovery token."
      operationId: "CreateComputerRecoveryToken"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputerRecoveryTokenSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerRecoveryTokenModel'
          description: "Recovery token has been created."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Create Recovery Token"
      tags:
        - Agents
      x-veeam-authorize:
        claims:
          - CreateComputerRecoveryToken
  /api/v1/agents/recoveryTokens/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/agents/recoveryTokens/{id}` path allows you to delete a recovery token that has the specified `id`."
      operationId: "DeleteComputerRecoveryToken"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the recovery token."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Token has been deleted."
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Delete Recovery Token"
      tags:
        - Agents
      x-veeam-authorize:
        claims:
          - DeleteComputerRecoveryToken
    get:
      description: "The HTTP GET request to the `/api/v1/agents/recoveryTokens/{id}` path allows you to get a recovery token that has the specified `id`."
      operationId: "GetComputerRecoveryToken"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the recovery token."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerRecoveryTokenModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Recovery Token"
      tags:
        - Agents
      x-veeam-authorize:
        claims:
          - ViewComputerRecoveryTokens
    put:
      description: "The HTTP PUT request to the `/api/v1/agents/recoveryTokens/{id}` path allows you to edit settings of a recovery token that has the specified `id`."
      operationId: "UpdateComputerRecoveryToken"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the recovery token."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputerRecoveryTokenModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerRecoveryTokenModel'
          description: "Recovery token has been updated."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Recovery Token"
      tags:
        - Agents
      x-veeam-authorize:
        claims:
          - UpdateComputerRecoveryToken
  /api/v1/automation/cloudcredentials/export:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/cloudcredentials/export` path allows you to export cloud credentials from Veeam Backup & Replication."
      operationId: "ExportCloudCredentials"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsImportSpecCollection'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Export Cloud Credentials"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ExportCredentials
  /api/v1/automation/cloudcredentials/import:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/cloudcredentials/import` path allows you to import cloud credentials to Veeam Backup & Replication."
      operationId: "ImportCloudCredentials"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the cloud credentials. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Import Cloud Credentials"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ImportCredentials
  /api/v1/automation/credentials/export:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/credentials/export` path allows you to export credentials from Veeam Backup & Replication."
      operationId: "ExportCredentials"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsImportSpecCollection'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Export Credentials"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ExportCredentials
  /api/v1/automation/credentials/import:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/credentials/import` path allows you to import credentials to Veeam Backup & Replication."
      operationId: "ImportCredentials"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the credentials. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Import Credentials"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ImportCredentials
  /api/v1/automation/encryptionPasswords/export:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/encryptionPasswords/export` path allows you to export encryption passwords from Veeam Backup & Replication."
      operationId: "ExportEncryptionPasswords"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptionPasswordExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionPasswordImportSpecCollection'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Export Encryption Passwords"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ExportEncryptionPasswords
  /api/v1/automation/encryptionPasswords/import:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/encryptionPasswords/import` path allows you to import encryption passwords to Veeam Backup & Replication."
      operationId: "ImportEncryptionPasswords"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptionPasswordImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the passwords. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Import Encryption Passwords"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ImportEncryptionPasswords
  /api/v1/automation/jobs/export:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/jobs/export` path allows you to export jobs from Veeam Backup & Replication."
      operationId: "ExportJobs"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobImportSpecCollection'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Export Jobs"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ExportJobs
  /api/v1/automation/jobs/import:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/jobs/import` path allows you to import jobs to Veeam Backup & Replication."
      operationId: "ImportJobs"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the jobs. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Import Jobs"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ImportJobs
  /api/v1/automation/managedServers/export:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/managedServers/export` path allows you to export managed servers from Veeam Backup & Replication."
      operationId: "ExportManagedServers"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageServerExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageServerImportSpecCollection'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Export Servers"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ExportManagedServers
  /api/v1/automation/managedServers/import:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/managedServers/import` path allows you to import managed servers to Veeam Backup & Replication."
      operationId: "ImportManagedServers"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageServerImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the servers. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Import Servers"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ImportManagedServers
  /api/v1/automation/proxies/export:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/proxies/export` path allows you to export backup proxies from Veeam Backup & Replication."
      operationId: "ExportProxies"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyImportSpecCollection'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Export Proxies"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ExportProxies
  /api/v1/automation/proxies/import:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/proxies/import` path allows you to import backup proxies to Veeam Backup & Replication."
      operationId: "ImportProxies"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxyImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the proxies. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Import Proxies"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ImportProxies
  /api/v1/automation/repositories/export:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/repositories/export` path allows you to export backup repositories from Veeam Backup & Replication."
      operationId: "ExportRepositories"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryExportSpec'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryImportSpecCollection'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Export Repositories"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ExportRepositories
  /api/v1/automation/repositories/import:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/repositories/import` path allows you to import backup repositories to Veeam Backup & Replication."
      operationId: "ImportRepositories"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryImportSpecCollection'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Automation session has been created to import the repositories. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Import Repositories"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ImportRepositories
  /api/v1/automation/sessions:
    get:
      description: "The HTTP GET request to the `/api/v1/automation/sessions` path allows you to get an array of all automation sessions performed on the backup server."
      operationId: "GetAllAutomationSessions"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of sessions to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Maximum number of sessions to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Sorts sessions by one of the session parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/ESessionsFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Sorts sessions in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Filters sessions by the `nameFilter` pattern. The pattern can match any session parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Returns sessions that are created after the specified date and time."
          in: "query"
          name: "createdAfterFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Returns sessions that are created before the specified date and time."
          in: "query"
          name: "createdBeforeFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Returns sessions that are finished after the specified date and time."
          in: "query"
          name: "endedAfterFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Returns sessions that are finished before the specified date and time."
          in: "query"
          name: "endedBeforeFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Filters sessions by session type."
          in: "query"
          name: "typeFilter"
          schema:
            $ref: '#/components/schemas/ESessionType'
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Filters sessions by session state."
          in: "query"
          name: "stateFilter"
          schema:
            $ref: '#/components/schemas/ESessionState'
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Filters sessions by session result."
          in: "query"
          name: "resultFilter"
          schema:
            $ref: '#/components/schemas/ESessionResult'
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Filters sessions by job ID."
          in: "query"
          name: "jobIdFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Automation Sessions"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ViewSessions
  /api/v1/automation/sessions/{id}:
    get:
      description: "The HTTP GET request to the `/api/v1/automation/sessions/{id}` path allows you to get an automation session that has the specified `id`."
      operationId: "GetAutomationSession"
      parameters:
        - description: "ID of the session."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Automation Session"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ViewSessions
  /api/v1/automation/sessions/{id}/logs:
    get:
      description: "The HTTP GET request to the `/api/v1/automation/sessions/{id}/logs` path allows you to get an array of log records of an automation session that has the specified `id`."
      operationId: "GetAutomationSessionLogs"
      parameters:
        - description: "ID of the session."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionLogResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Automation Session Logs"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - ViewSessions
  /api/v1/automation/sessions/{id}/stop:
    post:
      description: "The HTTP POST request to the `/api/v1/automation/sessions/{id}/stop` path allows you to stop an automation session that has the specified `id`."
      operationId: "StopAutomationSession"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the session."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Stop Automation Session"
      tags:
        - Automation
      x-veeam-authorize:
        claims:
          - StopSessions
  /api/v1/backupInfrastructure/managedServers:
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/managedServers` path allows you to get an array of all servers that are added to the backup infrastructure."
      operationId: "GetAllManagedServers"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of servers to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ManagedServersFilters'
        - description: "Maximum number of servers to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ManagedServersFilters'
        - description: "Sorts servers by one of the server parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EManagedServersFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/ManagedServersFilters'
        - description: "Sorts servers in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/ManagedServersFilters'
        - description: "Filters servers by the `nameFilter` pattern. The pattern can match any server parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ManagedServersFilters'
        - description: "Filters servers by server type."
          in: "query"
          name: "typeFilter"
          schema:
            $ref: '#/components/schemas/EManagedServerType'
          x-veeam-spec:
            $ref: '#/components/schemas/ManagedServersFilters'
        - description: "Filters servers by the type of VMware vSphere server."
          in: "query"
          name: "viTypeFilter"
          schema:
            $ref: '#/components/schemas/EViHostType'
          x-veeam-spec:
            $ref: '#/components/schemas/ManagedServersFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - credentialsId: b860489e-490d-4e43-b20a-a91c4e7d2e76
                    description: Created by TECH\sheila.d.cory
                    id: 535b5414-788d-4720-a53a-ecc830d2589b
                    name: 172.17.53.67
                    sshSettings:
                      managementPort: 6162
                      portRangeEnd: 3300
                      portRangeStart: 2500
                      serverThisSide: false
                      sshTimeOutMs: 20000
                    type: LinuxHost
                  - credentialsId: fa4769b5-6722-4968-838b-866c29bd14d4
                    description: Created by TECH\sheila.d.cory
                    id: ee50f2fb-034f-41cd-8dc8-904aeae2d0d8
                    name: enterprise04.tech.local
                    networkSettings:
                      components:
                        - componentName: DeployerSvc
                          port: 6160
                        - componentName: Transport
                          port: 6162
                        - componentName: Nfs
                          port: 6161
                        - componentName: RestoreProxy
                          port: 6170
                        - componentName: WanAccelerator
                          port: 6164
                        - componentName: Tape
                          port: 6166
                        - componentName: CloudGate
                          port: 6168
                        - componentName: AgentConfigureService
                          port: 9380
                        - componentName: FileSystemVssIntegration
                          port: 6210
                        - componentName: VssHwSnapshotProvider
                          port: 6211
                      portRangeEnd: 3300
                      portRangeStart: 2500
                      serverThisSide: false
                    type: WindowsHost
                  - credentialsId: fa4769b5-6722-4968-838b-866c29bd14d4
                    description: Created by TECH\administrator
                    id: de28dc43-b8ee-4e17-8e63-3d38b6604033
                    name: vcenter01.tech.local
                    port: 443
                    type: ViHost
                    viHostType: VC
                pagination:
                  count: 3
                  limit: 200
                  skip: 0
                  total: 3
              schema:
                $ref: '#/components/schemas/ManagedServersResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Servers"
      tags:
        - Managed Servers
      x-veeam-authorize:
        claims:
          - ViewManagedServers
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/managedServers` path allows you to add a server to the backup infrastructure."
      operationId: "CreateManagedServer"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            example:
              credentialsId: d7af15f3-8808-454e-ba79-2c2267acb05d
              description: Backup Repository
              networkSettings:
                serverThisSide: true
                components:
                  - componentName: DeployerSvc
                    port: 6160
                  - componentName: Transport
                    port: 6162
                  - componentName: Nfs
                    port: 6161
                  - componentName: RestoreProxy
                    port: 6170
                  - componentName: WanAccelerator
                    port: 6164
                  - componentName: Tape
                    port: 6166
                  - componentName: CloudGate
                    port: 6168
                  - componentName: AgentConfigureService
                    port: 9380
                  - componentName: FileSystemVssIntegration
                    port: 6210
                  - componentName: VssHwSnapshotProvider
                    port: 6211
                portRangeEnd: 3313
                portRangeStart: 2517
              type: WindowsHost
              name: enterprise01.tech.local
            schema:
              $ref: '#/components/schemas/ManagedServerSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                state: Working
                usn: 0
                activityId: 59f85a1e-2016-4d08-aea5-2676a03d548c
                name: Infrastructure Item Saving
                creationTime: "2022-01-28T19:48:43.117+01:00"
                progressPercent: 0
                sessionType: Infrastructure
                id: 59f85a1e-2016-4d08-aea5-2676a03d548c
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to add the server. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Add Server"
      tags:
        - Managed Servers
      x-veeam-authorize:
        claims:
          - CreateManagedServers
  /api/v1/backupInfrastructure/managedServers/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/backupInfrastructure/managedServers/{id}` path allows you to remove a managed server that has the specified `id` from the backup infrastructure."
      operationId: "DeleteManagedServer"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the managed server."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "201":
          content:
            application/json:
              example:
                state: Working
                activityId: fc5683a4-8c25-4f8e-97cc-0a40745a5729
                name: Infrastructure Item Deletion
                usn: 0
                progressPercent: 0
                creationTime: "2022-01-28T20:21:08.81+01:00"
                id: af1a6027-3845-487e-9a16-6849f4775a1e
                sessionType: InfrastructureItemDeletion
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "InfrastructureItemDeletion session has been created to remove the server. To check the progress, track the session `state`."
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Remove Server"
      tags:
        - Managed Servers
      x-veeam-authorize:
        claims:
          - DeleteManagedServers
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/managedServers/{id}` path allows you to get a managed server that has the specified `id`."
      operationId: "GetManagedServer"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the managed server."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              example:
                networkSettings:
                  components:
                    - componentName: DeployerSvc
                      port: 6160
                    - componentName: Transport
                      port: 6162
                    - componentName: Nfs
                      port: 6161
                    - componentName: RestoreProxy
                      port: 6170
                    - componentName: WanAccelerator
                      port: 6164
                    - componentName: Tape
                      port: 6166
                    - componentName: CloudGate
                      port: 6168
                    - componentName: AgentConfigureService
                      port: 9380
                    - componentName: FileSystemVssIntegration
                      port: 6210
                    - componentName: VssHwSnapshotProvider
                      port: 6211
                  portRangeEnd: 3300
                  portRangeStart: 2500
                  serverThisSide: false
                description: Backup repository
                type: WindowsHost
                credentialsId: 97d00492-92b7-4929-9e11-68eaa63b88e3
                name: enterprise05.tech.local
                id: fc5683a4-8c25-4f8e-97cc-0a40745a5729
              schema:
                $ref: '#/components/schemas/ManagedServerModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Server"
      tags:
        - Managed Servers
      x-veeam-authorize:
        claims:
          - ViewManagedServers
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/managedServers/{id}` path allows you to edit a managed server that has the specified `id`."
      operationId: "UpdateManagedServer"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the managed server."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            example:
              credentialsId: 76571109-fe6e-4638-ad37-2f1f30e3e9f1
              description: Backup repository
              id: 71988b5d-e338-4c62-81e5-05ea944d233e
              name: linuxsrv01.tech.local
              sshSettings:
                portRangeEnd: 3300
                portRangeStart: 2500
                serverThisSide: false
                sshTimeOutMs: 20000
                managementPort: 6162
              type: LinuxHost
            schema:
              $ref: '#/components/schemas/ManagedServerModel'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                sessionType: Infrastructure
                usn: 0
                activityId: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                state: Working
                creationTime: "2022-01-28T20:18:47.563+01:00"
                name: Infrastructure Item Saving
                id: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                progressPercent: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to edit the server. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Server"
      tags:
        - Managed Servers
      x-veeam-authorize:
        claims:
          - UpdateManagedServers
  /api/v1/backupInfrastructure/managedServers/{id}/updateSingleUseCredentials:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/managedServers/{id}/updateSingleUseCredentials` path allows you to change from persistent to single-use credentials used to access a Linux server that has the specified `id`. Single-use type of credentials is required if you want to use the Linux server as a hardened repository."
      operationId: "UpdateSingleUseCredentials"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the managed server."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinuxCredentialsSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                creationTime: "2022-01-28T20:18:47.563+01:00"
                progressPercent: 0
                state: Working
                name: Infrastructure Item Saving
                activityId: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                id: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                sessionType: Infrastructure
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to edit the server. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Change to Single-Use Credentials"
      tags:
        - Managed Servers
      x-veeam-authorize:
        claims:
          - UpdateManagedServers
  /api/v1/backupInfrastructure/proxies:
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/proxies` path allows you to get an array of all backup proxies that are added to the backup infrastructure."
      operationId: "GetAllProxies"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of proxies to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ProxiesFilters'
        - description: "Maximum number of proxies to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ProxiesFilters'
        - description: "Sorts proxies by one of the proxy parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EProxiesFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/ProxiesFilters'
        - description: "Sorts proxies in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/ProxiesFilters'
        - description: "Filters proxies by the `nameFilter` pattern. The pattern can match any proxy parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ProxiesFilters'
        - description: "Filters proxies by proxy type."
          in: "query"
          name: "typeFilter"
          schema:
            $ref: '#/components/schemas/EProxyType'
          x-veeam-spec:
            $ref: '#/components/schemas/ProxiesFilters'
        - description: "Filters proxies by ID of the backup server."
          in: "query"
          name: "hostIdFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ProxiesFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - description: Created by TECH\sheila.d.cory
                    id: 0be53088-d516-4734-a956-a8093a568876
                    name: 172.17.53.67
                    server:
                      connectedDatastores:
                        autoSelect: true
                        datastores: []
                      failoverToNetwork: true
                      hostId: 535b5414-788d-4720-a53a-ecc830d2589b
                      hostToProxyEncryption: false
                      maxTaskCount: 2
                      transportMode: virtualAppliance
                    type: ViProxy
                  - description: Created by Veeam Backup & Replication
                    id: 18b661c1-d9dc-4233-90a0-7e7b10dc2d09
                    name: VMware Backup Proxy
                    server:
                      connectedDatastores:
                        autoSelect: true
                        datastores: []
                      failoverToNetwork: true
                      hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                      hostToProxyEncryption: false
                      maxTaskCount: 2
                      transportMode: auto
                    type: ViProxy
                pagination:
                  count: 2
                  limit: 200
                  skip: 0
                  total: 2
              schema:
                $ref: '#/components/schemas/ProxiesResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Proxies"
      tags:
        - Proxies
      x-veeam-authorize:
        claims:
          - ViewProxies
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/proxies` path allows you to add a proxy to the backup infrastructure."
      operationId: "CreateProxy"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            example:
              type: ViProxy
              name: proxy01.tech.local
              server:
                connectedDatastores:
                  autoSelect: false
                  datastores:
                    - datastore:
                        hostName: vcenter01.tech.local
                        name: esx04-ds1
                        objectId: datastore-78098
                        type: Datastore
                      vmCount: 98
                    - datastore:
                        hostName: vcenter01.tech.local
                        name: esx04-ds2
                        objectId: datastore-94394
                        type: Datastore
                      vmCount: 93
                failoverToNetwork: true
                hostId: 080b9a63-56f3-49e2-9b06-56fc252de34c
                hostToProxyEncryption: false
                maxTaskCount: 2
                transportMode: auto
              description: Created by TECH\sheila.d.cory
            schema:
              $ref: '#/components/schemas/ProxySpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                name: Infrastructure Item Saving
                creationTime: "2022-01-28T19:48:43.117+01:00"
                progressPercent: 0
                activityId: 59f85a1e-2016-4d08-aea5-2676a03d548c
                id: 59f85a1e-2016-4d08-aea5-2676a03d548c
                sessionType: Infrastructure
                state: Working
                usn: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to add the proxy. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Add Proxy"
      tags:
        - Proxies
      x-veeam-authorize:
        claims:
          - CreateProxies
  /api/v1/backupInfrastructure/proxies/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/backupInfrastructure/proxies/{id}` path allows you to remove a backup proxy that has the specified `id` from the backup infrastructure."
      operationId: "DeleteProxy"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup proxy."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "204":
          $ref: '#/components/responses/Deleted'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Remove Proxy"
      tags:
        - Proxies
      x-veeam-authorize:
        claims:
          - DeleteProxies
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/proxies/{id}` path allows you to get a backup proxy that has the specified `id`."
      operationId: "GetProxy"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup proxy."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              example:
                type: ViProxy
                id: 18b661c1-d9dc-4233-90a0-7e7b10dc2d09
                description: Created by Veeam Backup & Replication
                server:
                  connectedDatastores:
                    autoSelect: true
                    datastores: []
                  failoverToNetwork: true
                  hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                  hostToProxyEncryption: false
                  maxTaskCount: 2
                  transportMode: auto
                name: VMware Backup Proxy
              schema:
                $ref: '#/components/schemas/ProxyModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Proxy"
      tags:
        - Proxies
      x-veeam-authorize:
        claims:
          - ViewProxies
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/proxies/{id}` path allows you to edit a backup proxy that has the specified `id`."
      operationId: "UpdateProxy"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup proxy."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            example:
              trafficRules:
                rules:
                  - encryption: true
                    name: Internet
                    throttling: false
                    timePeriod: Anytime
              type: ViProxy
              id: 18b661c1-d9dc-4233-90a0-7e7b10dc2d09
              name: VMware Backup Proxy
              server:
                connectedDatastores:
                  autoSelect: true
                  datastores: []
                failoverToNetwork: false
                hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                hostToProxyEncryption: false
                maxTaskCount: 2
                transportMode: network
              description: Created by Veeam Backup & Replication
            schema:
              $ref: '#/components/schemas/ProxyModel'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                usn: 0
                progressPercent: 0
                state: Working
                id: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                creationTime: "2022-01-28T20:18:47.563+01:00"
                sessionType: Infrastructure
                activityId: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                name: Infrastructure Item Saving
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to edit the proxy. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Proxy"
      tags:
        - Proxies
      x-veeam-authorize:
        claims:
          - UpdateProxies
  /api/v1/backupInfrastructure/repositories:
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/repositories` path allows you to get an array of all backup repositories that are added to the backup infrastructure."
      operationId: "GetAllRepositories"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of repositories to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoriesFilters'
        - description: "Maximum number of repositories to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoriesFilters'
        - description: "Sorts repositories by one of the repository parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/ERepositoryFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoriesFilters'
        - description: "Sorts repositories in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoriesFilters'
        - description: "Filters repositories by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoriesFilters'
        - description: "Filters repositories by repository type."
          in: "query"
          name: "typeFilter"
          schema:
            $ref: '#/components/schemas/ERepositoryType'
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoriesFilters'
        - description: "Filters repositories by ID of the backup server."
          in: "query"
          name: "hostIdFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoriesFilters'
        - description: "Filters repositories by path to the folder where backup files are stored."
          in: "query"
          name: "pathFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoriesFilters'
        - description: "Filters repositories by VM Backup API parameters converted to the base64 string. To obtain the string, call the `GetApiProductInfoString` method of VM Backup API."
          in: "query"
          name: "vmbApiFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoriesFilters'
        - description: "Filters repositories by ID of a platform that you use to communicate with VM Backup API."
          in: "query"
          name: "vmbApiPlatform"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoriesFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - description: Created by TECH\sheila.d.cory
                    hostId: e22b8842-c454-4036-abd5-f468c3248aaf
                    id: d4b5e196-f3ad-474c-99bc-dfef051dae07
                    mountServer:
                      mountServerId: e22b8842-c454-4036-abd5-f468c3248aaf
                      vPowerNFSEnabled: true
                      vPowerNFSPortSettings:
                        mountPort: 1063
                        vPowerNFSPort: 2049
                      writeCacheFolder: C:\ProgramData\Veeam\Backup\IRCache\
                    name: Backup Repository 1
                    repository:
                      advancedSettings:
                        alignDataBlocks: true
                        decompressBeforeStoring: false
                        perVmBackup: false
                        rotatedDrives: false
                      maxTaskCount: 4
                      path: C:\Backup Repository
                      readWriteRate: 0
                    tag: D4B5E196F3AD474C99BCDFEF051DAE07
                    type: WinLocal
                  - description: Created by Veeam Backup
                    hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                    id: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                    mountServer:
                      mountServerId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                      vPowerNFSEnabled: true
                      vPowerNFSPortSettings:
                        mountPort: 1063
                        vPowerNFSPort: 2049
                      writeCacheFolder: C:\ProgramData\Veeam\Backup\IRCache\
                    name: Default Backup Repository
                    repository:
                      advancedSettings:
                        alignDataBlocks: true
                        decompressBeforeStoring: false
                        perVmBackup: false
                        rotatedDrives: false
                      maxTaskCount: 4
                      path: C:\Backup
                      readWriteRate: 0
                    tag: 88788F9ED8F54EB4BC4F9B3F5403BCEC
                    type: WinLocal
                pagination:
                  limit: 200
                  skip: 0
                  total: 2
                  count: 2
              schema:
                $ref: '#/components/schemas/RepositoriesResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Repositories"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - ViewRepositories
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/repositories` path allows you to add a repository to the backup infrastructure."
      operationId: "CreateRepository"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - in: "query"
          name: "overwriteOwner"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoryBehaviorFilters'
      requestBody:
        content:
          application/json:
            example:
              type: WinLocal
              description: Created by TECH\sheila.d.cory
              hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
              name: Main Backup Repository
              repository:
                advancedSettings:
                  rotatedDrives: false
                  alignDataBlocks: false
                  decompressBeforeStoring: false
                  perVmBackup: false
                maxTaskCount: 8
                path: D:\Backups
                readWriteRate: 0
                useFastCloningOnXFSVolumes: false
              tag: big-repository
              kind: Das
              mountServer:
                writeCacheFolder: D:\ProgramData\Veeam\Backup\
                mountServerId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                vPowerNFSEnabled: true
                vPowerNFSPortSettings:
                  mountPort: 1058
                  vPowerNFSPort: 1058
            schema:
              $ref: '#/components/schemas/RepositorySpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                creationTime: "2022-01-28T20:18:47.563+01:00"
                name: Infrastructure Item Saving
                state: Working
                activityId: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                usn: 0
                sessionType: Infrastructure
                id: e81a72de-9b0a-4f4a-a451-0d0ece4c54b2
                progressPercent: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to add the repository. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Add Repository"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - CreateRepositories
  /api/v1/backupInfrastructure/repositories/states:
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/repositories/states` path allows you to get an array of all repository states. The states include repository location and brief statistics, such as repository capacity, free and used space."
      operationId: "GetAllRepositoriesStates"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of repository states to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoryStatesFilters'
        - description: "Maximum number of repository states to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoryStatesFilters'
        - description: "Sorts repository states by one of the state parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/ERepositoryStatesFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoryStatesFilters'
        - description: "Sorts repository states in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoryStatesFilters'
        - description: "Filters repository states by repository ID."
          in: "query"
          name: "idFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoryStatesFilters'
        - description: "Filters repository states by the `nameFilter` pattern. The pattern can match any repository state parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoryStatesFilters'
        - description: "Filters repository states by repository type."
          in: "query"
          name: "typeFilter"
          schema:
            $ref: '#/components/schemas/ERepositoryType'
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoryStatesFilters'
        - description: "Filters repository states by repository capacity."
          in: "query"
          name: "capacityFilter"
          schema:
            format: "double"
            type: "number"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoryStatesFilters'
        - description: "Filters repository states by repository free space."
          in: "query"
          name: "freeSpaceFilter"
          schema:
            format: "double"
            type: "number"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoryStatesFilters'
        - description: "Filters repository states by repository used space."
          in: "query"
          name: "usedSpaceFilter"
          schema:
            format: "double"
            type: "number"
          x-veeam-spec:
            $ref: '#/components/schemas/RepositoryStatesFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - capacityGB: 299.4
                    description: Created by TECH\sheila.d.cory
                    freeGB: 217.8
                    hostId: e22b8842-c454-4036-abd5-f468c3248aaf
                    hostName: enterprise03.tech.local
                    id: d4b5e196-f3ad-474c-99bc-dfef051dae07
                    name: Backup Repository 1
                    path: C:\Backup Repository
                    type: WinLocal
                    usedSpaceGB: 173.4
                  - capacityGB: 99.4
                    description: Created by Veeam Backup
                    freeGB: 16.4
                    hostId: 6745a759-2205-4cd2-b172-8ec8f7e60ef8
                    hostName: enterprise06.tech.local
                    id: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                    name: Default Backup Repository
                    path: C:\Backup
                    type: WinLocal
                    usedSpaceGB: 30.4
                pagination:
                  limit: 200
                  skip: 0
                  total: 2
                  count: 2
              schema:
                $ref: '#/components/schemas/RepositoryStatesResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Repository States"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - ViewRepositories
  /api/v1/backupInfrastructure/repositories/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/backupInfrastructure/repositories/{id}` path allows you to remove a backup repository that has the specified `id` from the backup infrastructure."
      operationId: "DeleteRepository"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
        - description: "If *true*, Veeam Backup & Replication will remove backup files."
          in: "query"
          name: "deleteBackups"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/DeleteRepositoryFilters'
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Repository has been removed."
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Remove Repository"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - DeleteRepositories
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/repositories/{id}` path allows you to get a backup repository that has the specified `id`."
      operationId: "GetRepository"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              example:
                repository:
                  advancedSettings:
                    alignDataBlocks: true
                    decompressBeforeStoring: false
                    perVmBackup: false
                    rotatedDrives: false
                  maxTaskCount: 4
                  path: C:\Backup Repository
                  readWriteRate: 0
                name: Backup Repository 1
                type: WinLocal
                hostId: e22b8842-c454-4036-abd5-f468c3248aaf
                id: d4b5e196-f3ad-474c-99bc-dfef051dae07
                tag: D4B5E196F3AD474C99BCDFEF051DAE07
                mountServer:
                  writeCacheFolder: C:\ProgramData\Veeam\Backup\IRCache\
                  mountServerId: e22b8842-c454-4036-abd5-f468c3248aaf
                  vPowerNFSEnabled: true
                  vPowerNFSPortSettings:
                    mountPort: 1063
                    vPowerNFSPort: 2049
                description: Created by TECH\sheila.d.cory
              schema:
                $ref: '#/components/schemas/RepositoryModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Repository"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - ViewRepositories
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/repositories/{id}` path allows you to edit a backup repository that has the specified `id`."
      operationId: "UpdateRepository"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryModel'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to edit the repository. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Repository"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - UpdateRepositories
  /api/v1/backupInfrastructure/repositories/{id}/accessPermissions:
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/repositories/{id}/accessPermissions` path allows you to get access permissions of a repository that has the specified `id`."
      operationId: "GetRepositoryAccessPermissions"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Repository Access Permissions"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - ViewRepositoryAccessPermissions
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/repositories/{id}/accessPermissions` path allows you to edit access permissions of a repository that has the specified `id`."
      operationId: "UpdateRepositoryAccessPermissions"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Repository Access Permissions"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - UpdateRepositoryAccessPermissions
  /api/v1/backupInfrastructure/scaleOutRepositories:
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/scaleOutRepositories` path allows you to get an array of all scale-out backup repositories that are added to the backup infrastructure."
      operationId: "GetAllScaleOutRepositories"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of repositories to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ScaleOutRepositoriesFilters'
        - description: "Maximum number of repositories to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ScaleOutRepositoriesFilters'
        - description: "Sorts repositories by one of the repository parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EScaleOutRepositoryFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/ScaleOutRepositoriesFilters'
        - description: "Sorts repositories in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/ScaleOutRepositoriesFilters'
        - description: "Filters repositories by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ScaleOutRepositoriesFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaleOutRepositoriesResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Scale-Out Backup Repositories"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - ViewScaleOutRepositories
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories` path allows you to add a scale-out backup repository to the backup infrastructure."
      operationId: "CreateScaleOutRepository"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutRepositorySpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to add the repository. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Add Scale-Out Backup Repository"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - CreateScaleOutRepositories
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}` path allows you to remove a scale-out backup repository that has the specified `id`."
      operationId: "DeleteScaleOutRepository"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the scale-out backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
        - description: "If *true*, Veeam Backup & Replication will remove backup files."
          in: "query"
          name: "deleteBackups"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/DeleteRepositoryFilters'
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Scale-out backup repository has been removed."
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Remove Scale-Out Backup Repository"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - DeleteScaleOutRepositories
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}` path allows you to get a scale-out backup repository that has the specified `id`."
      operationId: "GetScaleOutRepository"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the scale-out backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScaleOutRepositoryModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Scale-Out Backup Repository"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - ViewScaleOutRepositories
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}` path allows you to edit a scale-out backup repository that has the specified `id`."
      operationId: "UpdateScaleOutRepository"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the scale-out backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutRepositoryModel'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Infrastructure session has been created to edit the scale-out backup repository. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Scale-Out Backup Repository"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - UpdateScaleOutRepositories
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/accessPermissions:
    get:
      description: "The HTTP GET request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/accessPermissions` path allows you to get access permissions of a scale-out backup repository that has the specified `id`."
      operationId: "GetScaleOutRepositoryAccessPermissions"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the scale-out backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Scale-Out Backup Repository Access Permissions"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - ViewRepositoryAccessPermissions
    put:
      description: "The HTTP PUT request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/accessPermissions` path allows you to edit access permissions of a scale-out backup repository that has the specified `id`."
      operationId: "UpdateScaleOutRepositoryAccessPermissions"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the scale-out backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryAccessPermissionsModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Scale-Out Backup Repository Access Permissions"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - UpdateRepositoryAccessPermissions
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableMaintenanceMode:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableMaintenanceMode` path allows you to disable the Maintenance mode for specified extents of a scale-out backup repository that has the specified `id`."
      operationId: "DisableScaleOutExtentMaintenanceMode"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the scale-out backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutExtentMaintenanceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "RepositoryMaintenance session has been created."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Disable Maintenance Mode"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - DisableRepositoryMaintenanceMode
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableSealedMode:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableSealedMode` path allows you to disable the Sealed mode for specified extents of a scale-out backup repository that has the specified `id`."
      operationId: "DisableScaleOutExtentSealedMode"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the scale-out backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutExtentMaintenanceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "RepositoryMaintenance session has been created."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Disable Sealed Mode"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - DisableRepositorySealedMode
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableMaintenanceMode:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableMaintenanceMode` path allows you to enable the Maintenance mode for specified extents of a scale-out backup repository that has the specified `id`."
      operationId: "EnableScaleOutExtentMaintenanceMode"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the scale-out backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutExtentMaintenanceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "RepositoryMaintenance session has been created."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Enable Maintenance Mode"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - EnableRepositoryMaintenanceMode
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableSealedMode:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableSealedMode` path allows you to enable the Sealed mode for specified extents of a scale-out backup repository that has the specified `id`."
      operationId: "EnableScaleOutExtentSealedMode"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the scale-out backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutExtentMaintenanceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "RepositoryMaintenance session has been created."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Enable Sealed Mode"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - EnableRepositorySealedMode
  /api/v1/backupInfrastructure/scaleOutRepositories/{id}/evacuateBackups:
    post:
      description: "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/evacuateBackups` path allows you to evacuate backups from specified performance extents of a scale-out backup repository that has the specified `id`.<br>Before you evacuate backups from performance extents, you must put them into the Maintenance mode."
      operationId: "EvacuateBackupsFromScaleOutExtent"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the scale-out backup repository."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleOutExtentMaintenanceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "RepositoryEvacuate session has been created."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Evacuate Backups from Performance Extent"
      tags:
        - Repositories
      x-veeam-authorize:
        claims:
          - EvacuateExtentBackups
  /api/v1/backupObjects:
    get:
      description: "The HTTP GET request to the `/api/v1/backupObjects` path allows you to get an array of virtual infrastructure objects (VMs and VM containers) that are included in backups created by the backup server."
      operationId: "GetAllBackupObjects"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of backup objects to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupObjectsFilters'
        - description: "Maximum number of backup objects to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupObjectsFilters'
        - description: "Sorts backup objects by one of the backup object parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EBackupObjectsFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/BackupObjectsFilters'
        - description: "Sorts backup objects in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupObjectsFilters'
        - description: "Filters backup objects by the `nameFilter` pattern. The pattern can match any backup object parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupObjectsFilters'
        - description: "Filters backup objects by platform ID."
          in: "query"
          name: "platformNameFilter"
          schema:
            $ref: '#/components/schemas/EPlatformType'
          x-veeam-spec:
            $ref: '#/components/schemas/BackupObjectsFilters'
        - description: "Filters backup objects by platform ID."
          in: "query"
          name: "platformIdFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupObjectsFilters'
        - description: "Filters backup objects by object type."
          in: "query"
          name: "typeFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupObjectsFilters'
        - description: "Filters backup objects by the type of VMware vSphere server."
          in: "query"
          name: "viTypeFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupObjectsFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - id: 47335ff1-a4f0-41ae-91f6-21a129fe4500
                    name: null
                    platformId: c8098b32-9700-459b-b27c-4dceaf4ea932
                    platformName: CustomPlatform
                    restorePointsCount: 11
                    type: Directory
                  - id: 2a192b21-4d32-4b94-829e-231e8f0c0355
                    name: DLDC
                    objectId: "503"
                    path: 172.17.42.92\DLDC
                    platformId: 00000000-0000-0000-0000-000000000000
                    platformName: VMware
                    restorePointsCount: 3
                    type: VM
                    viType: VirtualMachine
                pagination:
                  skip: 0
                  total: 2
                  count: 2
                  limit: 200
              schema:
                $ref: '#/components/schemas/BackupObjectsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Backup Objects"
      tags:
        - Backup Objects
      x-veeam-authorize:
        claims:
          - ViewBackupObjects
  /api/v1/backupObjects/{id}:
    get:
      description: "The HTTP GET request to the `/api/v1/backupObjects/{id}` path allows you to get a backup object that has the specified `id`."
      operationId: "GetBackupObject"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup object."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              example:
                id: fcea73fa-aa48-45e1-89e4-6e33411e8de2
                objectId: vm-69191
                platformId: 00000000-0000-0000-0000-000000000000
                viType: VirtualMachine
                path: vcenter01.tech.local\Atlanta\esx04.tech.local\Enterprise\winsrv88
                platformName: VmWare
                type: VM
                name: winsrv88
                restorePointsCount: 13
              schema:
                $ref: '#/components/schemas/BackupObjectModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Backup Object"
      tags:
        - Backup Objects
      x-veeam-authorize:
        claims:
          - ViewBackupObjects
  /api/v1/backupObjects/{id}/restorePoints:
    get:
      description: "The HTTP GET request to the `/api/v1/backupObjects/{id}/restorePoints` path allows you to get an array of restore points of a backup object that has the specified `id`."
      operationId: "GetBackupObjectRestorePoints"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup object."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - allowedOperations: []
                    backupId: 3c3d7ebd-3b06-4a99-899c-fa7d5320582a
                    creationTime: "2022-02-02T22:01:18.163+01:00"
                    id: cb9b2475-46d9-40ae-8d27-0f2f1dfa97cd
                    name: winsrv88
                    platformId: 00000000-0000-0000-0000-000000000000
                    platformName: VmWare
                  - allowedOperations: []
                    backupId: 3c3d7ebd-3b06-4a99-899c-fa7d5320582a
                    creationTime: "2022-02-01T22:00:39.997+01:00"
                    id: a97c72ed-adaf-4b27-a31e-c1ff5af9ba8f
                    name: winsrv88
                    platformId: 00000000-0000-0000-0000-000000000000
                    platformName: VmWare
                pagination:
                  count: 2
                  limit: 2
                  skip: 0
                  total: 2
              schema:
                $ref: '#/components/schemas/ObjectRestorePointsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Restore Points"
      tags:
        - Backup Objects
      x-veeam-authorize:
        claims:
          - ViewRestorePoints
  /api/v1/backups:
    get:
      description: "The HTTP GET request to the `/api/v1/backups` path allows you to get an array of all backups that are created on or imported to the backup server."
      operationId: "GetAllBackups"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of backups to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupsFilters'
        - description: "Maximum number of backups to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupsFilters'
        - description: "Sorts backups by one of the backup parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EBackupsFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/BackupsFilters'
        - description: "Sorts backups in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupsFilters'
        - description: "Filters backups by the `nameFilter` pattern. The pattern can match any backup parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupsFilters'
        - description: "Returns backups that are created after the specified date and time."
          in: "query"
          name: "createdAfterFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupsFilters'
        - description: "Returns backups that are created before the specified date and time."
          in: "query"
          name: "createdBeforeFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupsFilters'
        - description: "Filters backups by ID of the backup object platform."
          in: "query"
          name: "platformIdFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupsFilters'
        - description: "Filters backups by ID of the parent job."
          in: "query"
          name: "jobIdFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupsFilters'
        - description: "Filters backups by retention policy tag."
          in: "query"
          name: "policyTagFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/BackupsFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - creationTime: "2022-02-12T04:24:16.2+03:00"
                    id: f3b0fbc5-01cf-4464-976a-4881e6eda067
                    jobId: 53b87378-7958-477d-8def-fbe6740d4b6f
                    name: Oracle Backup
                    platformId: 00000000-0000-0000-0000-000000000000
                    platformName: VMware
                    policyTag: ""
                    repositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                  - creationTime: "2019-11-13T16:34:21+03:00"
                    id: b2f9f40f-7944-498f-baff-175e18558829
                    jobId: 00000000-0000-0000-0000-000000000000
                    name: Oracle Backup
                    platformId: c8098b32-9700-459b-b27c-4dceaf4ea932
                    platformName: CustomPlatform
                    policyTag: ""
                    repositoryId: 49607f55-4cc4-4ea5-a2c9-e750318d0f34
                pagination:
                  count: 2
                  limit: 200
                  skip: 0
                  total: 2
              schema:
                $ref: '#/components/schemas/BackupsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Backups"
      tags:
        - Backups
      x-veeam-authorize:
        claims:
          - ViewBackups
  /api/v1/backups/{id}:
    get:
      description: "The HTTP GET request to the `/api/v1/backups/{id}` path allows you to get a backup that has the specified `id`."
      operationId: "GetBackup"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              example:
                policyTag: ""
                platformId: 00000000-0000-0000-0000-000000000000
                name: AD Backup
                repositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                id: 9d4c348d-284a-480d-9340-6454998fa227
                platformName: VMware
                creationTime: "2021-02-12T04:24:32.087+03:00"
                jobId: 301450bc-34cd-4d2c-bfc3-8d269bb471be
              schema:
                $ref: '#/components/schemas/BackupModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Backup"
      tags:
        - Backups
      x-veeam-authorize:
        claims:
          - ViewBackups
  /api/v1/backups/{id}/objects:
    get:
      description: "The HTTP GET request to the `/api/v1/backups/{id}/objects` path allows you to get an array of virtual infrastructure objects (VMs and VM containers) that are included in a backup that has the specified ID."
      operationId: "GetBackupObjects"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the backup."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - id: 2a192b21-4d32-4b94-829e-231e8f0c0355
                    name: DLDC
                    objectId: "503"
                    path: 172.17.42.92\DLDC
                    platformId: 00000000-0000-0000-0000-000000000000
                    platformName: VMware
                    restorePointsCount: 3
                    type: VM
                    viType: VirtualMachine
                pagination:
                  total: 1
                  count: 1
                  limit: 1
                  skip: 0
              schema:
                $ref: '#/components/schemas/BackupObjectsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Backup Objects"
      tags:
        - Backups
      x-veeam-authorize:
        claims:
          - ViewBackupObjects
  /api/v1/cloudBrowser:
    post:
      description: "The HTTP POST request to the `/api/v1/cloudBrowser` path allows you to browse cloud resources (compute or storage) available for the specified storage account."
      operationId: "BrowseCloudEntity"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudBrowserSpec'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudBrowserModel'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Cloud Hierarchy"
      tags:
        - Cloud Browser
      x-veeam-authorize:
        claims:
          - ViewCloudHierarchy
  /api/v1/cloudBrowser/newFolder:
    post:
      description: "The HTTP POST request to the `/api/v1/cloudBrowser/newFolder` path allows you to create a new folder in the cloud infrastructure.<br><div class=\"note\"><strong>NOTE</strong><br>The REST API does not create new containers, you can create a folder in an existing container only.</div>"
      operationId: "CreateNewCloudFolder"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudBrowserNewFolderSpec'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Cloud folder has been created."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "New Folder"
      tags:
        - Cloud Browser
      x-veeam-authorize:
        claims:
          - CreateCloudStorageFolder
  /api/v1/cloudCredentials:
    get:
      description: "The HTTP GET request to the `/api/v1/cloudCredentials` path allows you to get an array of credentials records used to connect to cloud services."
      operationId: "GetAllCloudCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of cloud credentials records to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/CloudCredentialsFilters'
        - description: "Maximum number of cloud credentials records to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/CloudCredentialsFilters'
        - description: "Sorts cloud credentials by one of the cloud credentials parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/ECloudCredentialsFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/CloudCredentialsFilters'
        - description: "Sorts cloud credentials in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/CloudCredentialsFilters'
        - description: "Filters cloud credentials by the `nameFilter` pattern. The pattern can match any cloud credentials parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/CloudCredentialsFilters'
        - in: "query"
          name: "typeFilter"
          schema:
            $ref: '#/components/schemas/ECloudCredentialsType'
          x-veeam-spec:
            $ref: '#/components/schemas/CloudCredentialsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Cloud Credentials"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - ViewCloudCredentials
    post:
      description: "The HTTP POST request to the `/api/v1/cloudCredentials` path allows you to add a credentials record used to connect to cloud services."
      operationId: "CreateCloudCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsModel'
          description: "Cloud credentials record has been created."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Add Cloud Credentials Record"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - CreateCloudCredentials
  /api/v1/cloudCredentials/appRegistration:
    post:
      description: "The HTTP POST request to the `/api/v1/cloudCredentials/appRegistration` path allows you to get a single-use verification code required to register a new Azure Active Directory application."
      operationId: "RequestAppRegistrationByDeviceCode"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudDeviceCodeSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudDeviceCodeModel'
          description: "Verification code has been received."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Verification Code"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - CreateCloudCredentials
  /api/v1/cloudCredentials/appRegistration/{verificationCode}:
    post:
      description: "The HTTP POST request to the `/api/v1/cloudCredentials/appRegistration/{verificationCode}` path allows you to register a new Azure Active Directory application using the specified `verificationCode`."
      operationId: "FinishAppRegistrationByDeviceCode"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Verification code. To obtain the code, use the [Get Verification Code](#tag/Credentials/operation/RequestAppRegistrationByDeviceCode) request."
          in: "path"
          name: "verificationCode"
          required: true
          schema:
            type: "string"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudNativeApplicationModel'
          description: "Azure Active Directory application has been registered."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Register Azure AD Application"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - CreateCloudCredentials
  /api/v1/cloudCredentials/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/cloudCredentials/{id}` path allows you to remove a cloud credentials record that has the specified `id`."
      operationId: "DeleteCloudCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the cloud credentials record."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Cloud credentials record has been removed."
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Remove Cloud Credentials Record"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - DeleteCloudCredentials
    get:
      description: "The HTTP GET request to the `/api/v1/cloudCredentials/{id}` path allows you to get a cloud credentials record that has the specified `id`."
      operationId: "GetCloudCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the cloud credentials record."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Cloud Credentials Record"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - ViewCloudCredentials
    put:
      description: "The HTTP PUT request to the `/api/v1/cloudCredentials/{id}` path allows you to edit a cloud credentials record that has the specified `id`."
      operationId: "UpdateCloudCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the cloud credentials record."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsModel'
          description: "Cloud credentials record has been updated."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Cloud Credentials Record"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - UpdateCloudCredentials
  /api/v1/cloudCredentials/{id}/changeCertificate:
    post:
      description: "The HTTP POST request to the `/api/v1/cloudCredentials/{id}/changeCertificate` path allows you to change a certificate used for authentication in your Azure Active Directory application associated with an Azure compute account that has the specified `id`."
      operationId: "ChangeCloudCertificate"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the Azure compute account."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateUploadSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsModel'
          description: "Certificate has been changed."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Change Certificate"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - ChangeCloudCertificate
  /api/v1/cloudCredentials/{id}/changeSecretKey:
    post:
      description: "The HTTP POST request to the `/api/v1/cloudCredentials/{id}/changeSecretKey` path allows you to change a secret key of a cloud credentials record that has the specified `id`."
      operationId: "ChangeCloudCredsSecretKey"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the cloud credentials record."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudCredentialsPasswordSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudCredentialsModel'
          description: "Secret key has been changed."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Change Secret Key"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - ChangeCloudSecretKey
  /api/v1/cloudCredentials/{id}/helperAppliances:
    get:
      description: "The HTTP GET request to the `/api/v1/cloudCredentials/{id}/helperAppliances` path allows you to get an array of Lunux-based helper appliances of a Microsoft Azure compute account that has the specified `id`."
      operationId: "GetAllCredsHelperAppliances"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the Microsoft Azure compute account."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudHelperApplianceResult'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Helper Appliances"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - ViewCredentials
    post:
      description: "The HTTP POST request to the `/api/v1/cloudCredentials/{id}/helperAppliances` path allows you to create a new Lunux-based helper appliance or edit settings of an existing one for a Microsoft Azure compute account that has the specified `id`."
      operationId: "CreateCloudCredsHelperAppliance"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the Microsoft Azure compute account."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudHelperApplianceSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "AzureApplianceDeploy session has been created. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Add or Edit Helper Appliance"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - CreateCloudCredentials
  /api/v1/cloudCredentials/{id}/helperAppliances/{applianceId}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/cloudCredentials/{id}/helperAppliances/{applianceId}` path allows you to remove a Lunux-based helper appliance with the `applianceId` of a Microsoft Azure compute account that has the specified `id`."
      operationId: "DeleteCloudCredsHelperAppliance"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the Microsoft Azure compute account."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
        - description: "ID of the helper appliance."
          in: "path"
          name: "applianceId"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Helper appliance has been removed."
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Remove Helper Appliance"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - DeleteCloudCredentials
    get:
      description: "The HTTP GET request to the `/api/v1/cloudCredentials/{id}/helperAppliances/{applianceId}` path allows you to get a Lunux-based helper appliance with the `applianceId` of a Microsoft Azure compute account that has the specified `id`."
      operationId: "GetCloudCredsHelperAppliance"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the Microsoft Azure compute account."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
        - description: "ID of the helper appliance."
          in: "path"
          name: "applianceId"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudHelperApplianceModel'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Helper Appliance"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - UpdateCloudCredentials
  /api/v1/configBackup:
    get:
      description: "The HTTP GET request to the `/api/v1/configBackup` path allows you to get configuration backup of the backup server."
      operationId: "GetConfigBackupOptions"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              example:
                notifications:
                  SMTPSettings:
                    notifyOnError: true
                    notifyOnSuccess: true
                    notifyOnWarning: true
                    recipients: []
                    settingsType: Custom
                    subject: '[%JobResult%] %JobName% (%Time%)'
                    isEnabled: false
                  SNMPEnabled: true
                isEnabled: true
                lastSuccessfulBackup:
                  lastSuccessfulTime: "2022-01-21T10:00:35.033+01:00"
                  sessionId: a8f1b5ba-a6dc-416d-9b17-95e92c0d7e76
                backupRepositoryId: d4b5e196-f3ad-474c-99bc-dfef051dae07
                restorePointsToKeep: 10
                encryption:
                  isEnabled: true
                  passwordId: ebf6c20f-7126-4186-a1b8-24e6c541161c
                schedule:
                  monthly:
                    dayNumberInMonth: Fourth
                    dayOfMonth: 1
                    dayOfWeek: saturday
                    isEnabled: false
                    localTime: 10:00 PM
                    months:
                      - January
                      - February
                      - March
                      - April
                      - May
                      - June
                      - July
                      - August
                      - September
                      - October
                      - November
                      - December
                  daily:
                    dailyKind: Everyday
                    days:
                      - monday
                      - tuesday
                      - wednesday
                      - thursday
                      - friday
                      - saturday
                      - sunday
                    isEnabled: true
                    localTime: 10:00 AM
                  isEnabled: true
              schema:
                $ref: '#/components/schemas/ConfigBackupModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Configuration Backup"
      tags:
        - Configuration Backup
      x-veeam-authorize:
        claims:
          - ViewConfigBackupOptions
    put:
      description: "The HTTP PUT request to the `/api/v1/configBackup` path allows you to edit configuration backup of the backup server."
      operationId: "UpdateConfigBackupOptions"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            example:
              isEnabled: true
              lastSuccessfulBackup:
                lastSuccessfulTime: "2022-01-21T10:00:35.033+01:00"
                sessionId: a8f1b5ba-a6dc-416d-9b17-95e92c0d7e76
              schedule:
                daily:
                  days:
                    - monday
                    - tuesday
                    - wednesday
                    - thursday
                    - friday
                    - saturday
                    - sunday
                  isEnabled: true
                  localTime: 10:00 AM
                  dailyKind: Everyday
                isEnabled: true
                monthly:
                  dayOfMonth: 1
                  dayOfWeek: saturday
                  isEnabled: false
                  localTime: 10:00 PM
                  months:
                    - January
                    - February
                    - March
                    - April
                    - May
                    - June
                    - July
                    - August
                    - September
                    - October
                    - November
                    - December
                  dayNumberInMonth: Fourth
              backupRepositoryId: d4b5e196-f3ad-474c-99bc-dfef051dae07
              encryption:
                isEnabled: false
                passwordId: ebf6c20f-7126-4186-a1b8-24e6c541161c
              notifications:
                SMTPSettings:
                  settingsType: Custom
                  subject: '[%JobResult%] %JobName% (%Time%)'
                  isEnabled: false
                  notifyOnError: true
                  notifyOnSuccess: true
                  notifyOnWarning: true
                  recipients: []
                SNMPEnabled: true
              restorePointsToKeep: 10
            schema:
              $ref: '#/components/schemas/ConfigBackupModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                restorePointsToKeep: 10
                notifications:
                  SMTPSettings:
                    isEnabled: false
                    notifyOnError: true
                    notifyOnSuccess: true
                    notifyOnWarning: true
                    recipients: []
                    settingsType: Custom
                    subject: '[%JobResult%] %JobName% (%Time%)'
                  SNMPEnabled: true
                isEnabled: true
                lastSuccessfulBackup:
                  lastSuccessfulTime: "2022-01-21T10:00:35.033+01:00"
                  sessionId: a8f1b5ba-a6dc-416d-9b17-95e92c0d7e76
                backupRepositoryId: d4b5e196-f3ad-474c-99bc-dfef051dae07
                encryption:
                  isEnabled: false
                  passwordId: ebf6c20f-7126-4186-a1b8-24e6c541161c
                schedule:
                  monthly:
                    dayOfWeek: saturday
                    isEnabled: false
                    localTime: 10:00 PM
                    months:
                      - January
                      - February
                      - March
                      - April
                      - May
                      - June
                      - July
                      - August
                      - September
                      - October
                      - November
                      - December
                    dayNumberInMonth: Fourth
                    dayOfMonth: 1
                  daily:
                    dailyKind: Everyday
                    days:
                      - monday
                      - tuesday
                      - wednesday
                      - thursday
                      - friday
                      - saturday
                      - sunday
                    isEnabled: true
                    localTime: 10:00 AM
                  isEnabled: true
              schema:
                $ref: '#/components/schemas/ConfigBackupModel'
          description: "Configuration backup settings have been updated."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Configuration Backup"
      tags:
        - Configuration Backup
      x-veeam-authorize:
        claims:
          - UpdateConfigBackupOptions
  /api/v1/configBackup/backup:
    post:
      description: "The HTTP POST request to the `/api/v1/configBackup` path allows you to start configuration backup."
      operationId: "StartConfigBackup"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              example:
                usn: 0
                creationTime: "2022-01-26T17:13:29.097+01:00"
                sessionType: ConfigurationBackup
                state: Starting
                activityId: 99d1bf3d-e2e0-4bec-b2b3-820c0b87d212
                name: Backup Configuration Job
                id: d20f79d1-962d-4cb1-809b-0364c5b90696
                progressPercent: 0
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Configuration backup has been started."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Start Configuration Backup"
      tags:
        - Configuration Backup
      x-veeam-authorize:
        claims:
          - StartConfigBackup
  /api/v1/connectionCertificate:
    post:
      description: "The HTTP POST request to the `/api/v1/connectionCertificate` path allows you to get a TLS certificate or SSH fingerprint of the specified host."
      operationId: "GetConnectionCertificate"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            example:
              credentialsId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              port: 443
              type: ViHost
              serverName: vcenter01.tech.local
            schema:
              $ref: '#/components/schemas/HostConnectionSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                certificate:
                  validFrom: "2015-08-21T18:28:05+02:00"
                  issuedBy: CA
                  issuedTo: vcenter01.tech.local
                  keyAlgorithm: RSA-PKCS1-KeyEx
                  keySize: "2048"
                  serialNumber: 00CE2401CE350B143C
                  subject: C=US, CN=vcenter01.tech.local
                  thumbprint: 1FFB549DC6C6CFF4DA8923F3E640F88925D11704
                  validBy: "2025-08-15T18:27:45+02:00"
              schema:
                $ref: '#/components/schemas/ConnectionCertificateModel'
          description: "OK"
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Request TLS Certificate or SSH Fingerprint"
      tags:
        - Connection
      x-veeam-authorize:
        claims:
          - CheckCertificate
  /api/v1/credentials:
    get:
      description: "The HTTP GET request to the `/api/v1/credentials` path allows you to get an array of credentials records that are added to the backup server."
      operationId: "GetAllCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of credentials records to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/CredentialsFilters'
        - description: "Maximum number of credentials records to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/CredentialsFilters'
        - description: "Sorts credentials by one of the credentials parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/ECredentialsFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/CredentialsFilters'
        - description: "Sorts credentials in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/CredentialsFilters'
        - description: "Filters credentials by the `nameFilter` pattern. The pattern can match any credentials parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/CredentialsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Credentials"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - ViewCredentials
    post:
      description: "The HTTP POST request to the `/api/v1/credentials` path allows you to add a credentials record."
      operationId: "CreateCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: "Account has been added."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Add Credentials Record"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - CreateCredentials
  /api/v1/credentials/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/credentials/{id}` path allows you to remove a credentials record that has the specified `id`."
      operationId: "DeleteCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the credentials record."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Credentials record has been removed."
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Remove Credentials Record"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - DeleteCredentials
    get:
      description: "The HTTP GET request to the `/api/v1/credentials/{id}` path allows you to get a credentials record that has the specified `id`."
      operationId: "GetCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the credentials record."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Credentials Record"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - ViewCredentials
    put:
      description: "The HTTP PUT request to the `/api/v1/credentials/{id}` path allows you to edit a credentials record that has the specified `id`."
      operationId: "UpdateCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the credentials record."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsModel'
          description: "Credentials record has been updated."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Credentials Record"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - UpdateCredentials
  /api/v1/credentials/{id}/changepassword:
    post:
      description: "The HTTP POST request to the `/api/v1/credentials/{id}/changepassword` path allows you to change a password of the credentials record that has the specified `id`."
      operationId: "ChangePasswordForCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the credentials record."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsPasswordChangeSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Password has been changed."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Change Password"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - ChangeAccountPassword
  /api/v1/credentials/{id}/changeprivatekey:
    post:
      description: "The HTTP POST request to the `/api/v1/credentials/{id}/changeprivatekey` path allows you to change a Linux private key of the credentials record that has the specified `id`."
      operationId: "ChangePrivateKeyForCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the credentials record."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateKeyChangeSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Private key has been changed."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Change Linux Private Key"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - ChangeLinuxPrivateKey
  /api/v1/credentials/{id}/changerootpassword:
    post:
      description: "The HTTP POST request to the `/api/v1/credentials/{id}/changerootpassword` path allows you to change a Linux root password of the credentials record that has the specified `id`."
      operationId: "ChangeRootPasswordForCreds"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the credentials record."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsPasswordChangeSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Root password has been changed."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Change Linux Root Password"
      tags:
        - Credentials
      x-veeam-authorize:
        claims:
          - ChangeLinuxRootPassword
  /api/v1/encryptionPasswords:
    get:
      description: "The HTTP GET request to the `/api/v1/encryptionPasswords` path allows you to get an array of all passwords that are used for data encryption."
      operationId: "GetAllEncryptionPasswords"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of passwords to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/EncryptionPasswordsFilters'
        - description: "Maximum number of passwords to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/EncryptionPasswordsFilters'
        - description: "Sorts passwords by one of the password parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EEncryptionPasswordsFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/EncryptionPasswordsFilters'
        - description: "Sorts passwords in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/EncryptionPasswordsFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - hint: Standard Password
                    id: 6ebbe3cc-8147-47b6-b77a-01eeb7965522
                    modificationTime: "2021-10-19T12:37:58.27+03:00"
                    tag: internal
                  - hint: Created by TECH\Administrator
                    id: 3261d360-1db7-4291-b1ed-360ef5b77175
                    modificationTime: "2022-02-11T11:34:28.677+03:00"
                    tag: external
                pagination:
                  count: 2
                  limit: 200
                  skip: 0
                  total: 2
              schema:
                $ref: '#/components/schemas/EncryptionPasswordsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Encryption Passwords"
      tags:
        - Encryption
      x-veeam-authorize:
        claims:
          - ViewEncryptionPasswords
    post:
      description: "The HTTP POST request to the `/api/v1/encryptionPasswords` path allows you to add an encryption password."
      operationId: "CreateEncryptionPassword"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptionPasswordSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                hint: Pet name
                password: passsw3wrsdf2d44
                tag: vcenter01
              schema:
                $ref: '#/components/schemas/EncryptionPasswordModel'
          description: "Password has been added."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Add Encryption Password"
      tags:
        - Encryption
      x-veeam-authorize:
        claims:
          - CreateEncryptionPasswords
  /api/v1/encryptionPasswords/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/encryptionPasswords/{id}` path allows you to remove an encryption password that has the specified `id`."
      operationId: "DeleteEncryptionPassword"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the encryption password."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Password has been removed."
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Remove Encryption Password"
      tags:
        - Encryption
      x-veeam-authorize:
        claims:
          - DeleteEncryptionPasswords
    get:
      description: "The HTTP GET request to the `/api/v1/encryptionPasswords/{id}` path allows you to get an encryption password that has the specified `id`."
      operationId: "GetEncryptionPassword"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the encryption password."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              example:
                hint: Standard Password
                id: 6ebbe3cc-8147-47b6-b77a-01eeb7965522
                modificationTime: "2022-10-19T12:37:58.27+03:00"
                tag: internal
              schema:
                $ref: '#/components/schemas/EncryptionPasswordModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Encryption Password"
      tags:
        - Encryption
      x-veeam-authorize:
        claims:
          - ViewEncryptionPasswords
    put:
      description: "The HTTP PUT request to the `/api/v1/encryptionPasswords/{id}` path allows you to edit an encryption password that has the specified `id`."
      operationId: "UpdateEncryptionPassword"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the encryption password."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            example:
              hint: Poem
              id: 6ebbe3cc-8147-47b6-b77a-01eeb7965522
              modificationTime: "2022-10-19T12:37:58.27+03:00"
              tag: internal
            schema:
              $ref: '#/components/schemas/EncryptionPasswordModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionPasswordModel'
          description: "Password has been updated."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Encryption Password"
      tags:
        - Encryption
      x-veeam-authorize:
        claims:
          - UpdateEncryptionPasswords
  /api/v1/generalOptions:
    get:
      description: "The HTTP GET request to the `/api/v1/generalOptions` path allows you to get notification settings of Veeam Backup & Replication."
      operationId: "GetGeneralOptions"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              example:
                emailSettings:
                  notifyOnFailure: true
                  notifyOnSuccess: true
                  notifyOnWarning: true
                  smtpServerName: ""
                  subject: '[%JobResult%] %JobName% (%ObjectCount% objects) %Issues%'
                  isEnabled: false
                  from: ""
                  notifyOnLastRetry: true
                  sendDailyReportsAt: "2019-01-01T22:00:00+01:00"
                  to: ""
                  advancedSmtpOptions:
                    SSLEnabled: false
                    authRequred: false
                    port: 25
                    timeoutMs: 100000
                notifications:
                  datastoreSpaceThreshold: 10
                  datastoreSpaceThresholdEnabled: true
                  notifyOnSupportExpiration: true
                  notifyOnUpdates: true
                  skipVMSpaceThreshold: 5
                  skipVMSpaceThresholdEnabled: true
                  storageSpaceThreshold: 10
                  storageSpaceThresholdEnabled: true
              schema:
                $ref: '#/components/schemas/GeneralOptionsModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Notification Settings"
      tags:
        - General Options
      x-veeam-authorize:
        claims:
          - ViewGeneralOptions
    put:
      description: "The HTTP PUT request to the `/api/v1/generalOptions` path allows you to edit notification settings of Veeam Backup & Replication."
      operationId: "UpdateGeneralOptions"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            example:
              emailSettings:
                notifyOnWarning: true
                to: ""
                advancedSmtpOptions:
                  timeoutMs: 100000
                  SSLEnabled: true
                  authRequred: true
                  credentialsId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  port: 2425
                notifyOnFailure: true
                notifyOnLastRetry: true
                notifyOnSuccess: true
                subject: '[%JobResult%] %JobName% (%ObjectCount% objects) %Issues%'
                from: ""
                isEnabled: true
                sendDailyReportsAt: 2022-01-01T22:00:00
                smtpServerName: ""
              notifications:
                storageSpaceThresholdEnabled: true
                datastoreSpaceThreshold: 13
                datastoreSpaceThresholdEnabled: true
                notifyOnSupportExpiration: true
                notifyOnUpdates: true
                skipVMSpaceTreshold: 5
                skipVMSpaceTresholdEnabled: true
                storageSpaceThreshold: 15
            schema:
              $ref: '#/components/schemas/GeneralOptionsModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralOptionsModel'
          description: "Notification settings have been updated."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Notification Settings"
      tags:
        - General Options
      x-veeam-authorize:
        claims:
          - UpdateGeneralOptions
  /api/v1/inventory/vmware/hosts:
    get:
      description: "The HTTP GET request to the `/api/v1/inventory/vmware/hosts` path allows you to get an array of all VMware vSphere servers added to the backup infrastructure."
      operationId: "GetAllInventoryVmwareHosts"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of VMware vSphere servers to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ViRootFilters'
        - description: "Maximum number of VMware vSphere servers to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ViRootFilters'
        - description: "Sorts VMware vSphere servers by one of the VMware vSphere server parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EViRootFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/ViRootFilters'
        - description: "Sorts VMware vSphere servers in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/ViRootFilters'
        - description: "Filters VMware vSphere servers by the `nameFilter` pattern. The pattern can match any VMware vSphere server parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ViRootFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - inventoryObject:
                      hostName: vcenter01.tech01.local
                      name: vcenter01.tech01.local
                      objectId: d766a026-a7a7-4d6e-add0-9599a291394f
                      type: vCenterServer
                    size: N/A
                  - inventoryObject:
                      hostName: vcenter02.tech02.local
                      name: vcenter02.tech02.local
                      objectId: bd49ae5e-d5ec-4013-8ffa-c91beadce052
                      type: vCenterServer
                    size: N/A
                pagination:
                  limit: 200
                  skip: 0
                  total: 2
                  count: 2
              schema:
                $ref: '#/components/schemas/ViRootsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All VMware vSphere Servers"
      tags:
        - Inventory Browser
      x-veeam-authorize:
        claims:
          - ViewViHierarchy
  /api/v1/inventory/vmware/hosts/{name}:
    get:
      description: "The HTTP GET request to the `/api/v1/inventory/vmware/hosts/{name}` path allows you to get an array of virtual infrastructure objects of the VMware vSphere server that has the specified `name`."
      operationId: "GetVmwareHostObject"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Name of the VMware vSphere server."
          in: "path"
          name: "name"
          required: true
          schema:
            type: "string"
        - description: "Number of objects to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/VCenterInventoryFilters'
        - description: "Maximum number of objects to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/VCenterInventoryFilters'
        - description: "Sorts objects by one of the object parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EvCentersInventoryFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/VCenterInventoryFilters'
        - description: "Sorts objects in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/VCenterInventoryFilters'
        - description: "Filters objects by object ID."
          in: "query"
          name: "objectIdFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/VCenterInventoryFilters'
        - description: "Filters objects by hierarchy type."
          in: "query"
          name: "hierarchyTypeFilter"
          schema:
            $ref: '#/components/schemas/EHierarchyType'
          x-veeam-spec:
            $ref: '#/components/schemas/VCenterInventoryFilters'
        - description: "Filters objects by the `nameFilter` pattern. The pattern can match any object parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/VCenterInventoryFilters'
        - description: "Filters objects by virtual infrastructure type."
          in: "query"
          name: "typeFilter"
          schema:
            $ref: '#/components/schemas/EVmwareInventoryType'
          x-veeam-spec:
            $ref: '#/components/schemas/VCenterInventoryFilters'
        - description: "Filters objects by name of the parent container."
          in: "query"
          name: "parentContainerNameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/VCenterInventoryFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - inventoryObject:
                      hostName: vcenter01.tech.local
                      name: Prague
                      objectId: datacenter-42371
                      type: Datacenter
                    size: N/A
                  - inventoryObject:
                      hostName: vcenter01.tech.local
                      name: Templates
                      objectId: group-h42373
                      type: Folder
                    size: N/A
                  - inventoryObject:
                      hostName: vcenter01.tech.local
                      name: esx03.tech.local
                      objectId: host-42428
                      type: Host
                    size: N/A
                  - inventoryObject:
                      hostName: vcenter01.tech.local
                      name: Services
                      objectId: resgroup-65867
                      type: ResourcePool
                    size: N/A
                  - inventoryObject:
                      hostName: vcenter01.tech.local
                      name: winsrv01
                      objectId: vm-62230
                      type: VirtualMachine
                    size: 220 GB
                pagination:
                  count: 5
                  limit: 200
                  skip: 0
                  total: 5
              schema:
                $ref: '#/components/schemas/VCenterInventoryResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get VMware vSphere Server Objects"
      tags:
        - Inventory Browser
      x-veeam-authorize:
        claims:
          - ViewViHierarchy
  /api/v1/jobs:
    get:
      description: "The HTTP GET request to the `/api/v1/jobs` path allows you to get an array of all jobs coordinated by the backup server."
      operationId: "GetAllJobs"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of jobs to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/JobsFilters'
        - description: "Maximum number of jobs to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/JobsFilters'
        - description: "Sorts jobs by one of the job parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EJobFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/JobsFilters'
        - description: "Sorts jobs in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/JobsFilters'
        - description: "Filters jobs by the `nameFilter` pattern. The pattern can match any job parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/JobsFilters'
        - description: "Filters jobs by job type."
          in: "query"
          name: "typeFilter"
          schema:
            $ref: '#/components/schemas/EJobType'
          x-veeam-spec:
            $ref: '#/components/schemas/JobsFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - description: Created by ENTERPRISE01\Administrator
                    guestProcessing:
                      appAwareProcessing:
                        appSettings: []
                        isEnabled: false
                      guestCredentials:
                        credentialsPerMachine: []
                        credsId: 4fbeb05c-c158-4510-84f3-6744554fb350
                        credsType: Standard
                      guestFSIndexing:
                        indexingSettings:
                          - LinuxIndexing:
                              guestFSIndexingMode: indexAllExcept
                              indexingList:
                                - /cdrom
                                - /dev
                                - /media
                                - /mnt
                                - /proc
                                - /tmp
                                - /lost+found
                            WindowsIndexing:
                              guestFSIndexingMode: indexAllExcept
                              indexingList:
                                - '%windir%'
                                - '%ProgramFiles%'
                                - '%ProgramFiles(x86)%'
                                - '%ProgramW6432%'
                                - '%TEMP%'
                            vmObject:
                              hostName: vcenter01.tech.local
                              name: filesrv02
                              objectId: vm-45006
                              type: VirtualMachine
                        isEnabled: true
                      guestInteractionProxies:
                        autoSelection: true
                        proxyIds: []
                    id: ef1f0227-80e1-40f8-b2a2-5119172d2c36
                    isDisabled: false
                    isHighPriority: false
                    name: Backup Job 2
                    schedule:
                      afterThisJob:
                        isEnabled: false
                        jobName: null
                      backupWindow:
                        backupWindow:
                          days:
                            - day: sunday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: monday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: tuesday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: wednesday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: thursday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: friday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: saturday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        isEnabled: false
                      continuously:
                        backupWindow:
                          days:
                            - day: sunday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: monday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: tuesday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: wednesday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: thursday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: friday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: saturday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        isEnabled: false
                      daily:
                        dailyKind: Everyday
                        days:
                          - sunday
                          - monday
                          - tuesday
                          - wednesday
                          - thursday
                          - friday
                          - saturday
                        isEnabled: true
                        localTime: 10:00 PM
                      monthly:
                        dayNumberInMonth: Fourth
                        dayOfMonth: 1
                        dayOfWeek: saturday
                        isEnabled: false
                        localTime: 10:00 PM
                        months:
                          - January
                          - February
                          - March
                          - April
                          - May
                          - June
                          - July
                          - August
                          - September
                          - October
                          - November
                          - December
                      periodically:
                        backupWindow:
                          days:
                            - day: sunday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: monday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: tuesday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: wednesday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: thursday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: friday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                            - day: saturday
                              hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        frequency: 1
                        isEnabled: false
                        periodicallyKind: Hours
                        startTimeWithinAnHour: 0
                      retry:
                        awaitMinutes: 10
                        isEnabled: true
                        retryCount: 3
                      runAutomatically: true
                    storage:
                      advancedSettings:
                        activeFulls:
                          isEnabled: false
                          monthly:
                            dayNumberInMonth: First
                            dayOfMonths: 1
                            dayOfWeek: monday
                            isEnabled: false
                            months:
                              - January
                              - February
                              - March
                              - April
                              - May
                              - June
                              - July
                              - August
                              - September
                              - October
                              - November
                              - December
                          weekly:
                            days:
                              - saturday
                            isEnabled: true
                        backupHealth:
                          isEnabled: false
                          monthly:
                            dayNumberInMonth: Last
                            dayOfMonths: 1
                            dayOfWeek: friday
                            isEnabled: true
                            months:
                              - January
                              - February
                              - March
                              - April
                              - May
                              - June
                              - July
                              - August
                              - September
                              - October
                              - November
                              - December
                          weekly:
                            days:
                              - friday
                            isEnabled: false
                        backupModeType: Incremental
                        fullBackupMaintenance:
                          RemoveData:
                            afterDays: 14
                            isEnabled: false
                          defragmentAndCompact:
                            isEnabled: false
                            monthly:
                              dayNumberInMonth: Last
                              dayOfMonths: 1
                              dayOfWeek: saturday
                              isEnabled: true
                              months:
                                - January
                                - February
                                - March
                                - April
                                - May
                                - June
                                - July
                                - August
                                - September
                                - October
                                - November
                                - December
                            weekly:
                              days:
                                - saturday
                              isEnabled: false
                        notifications:
                          emailNotifications:
                            customNotificationSettings: null
                            isEnabled: false
                            notificationType: null
                            recipients: []
                          sendSNMPNotifications: false
                          vmAttribute:
                            appendToExisitingValue: true
                            isEnabled: false
                            notes: Notes
                        scripts:
                          dayOfWeek:
                            - saturday
                          periodicityType: BackupSessions
                          postCommand:
                            command: ""
                            isEnabled: false
                          preCommand:
                            command: ""
                            isEnabled: false
                          runScriptEvery: 1
                        storageData:
                          compressionLevel: Optimal
                          enableInlineDataDedup: true
                          encryption:
                            encryptionPasswordIdOrNull: 00000000-0000-0000-0000-000000000000
                            encryptionPasswordTag: null
                            isEnabled: false
                          excludeDeletedFileBlocks: true
                          excludeSwapFileBlocks: true
                          storageOptimization: LocalTarget
                        storageIntegration:
                          failoverToStandardBackup: false
                          isEnabled: true
                          limitProcessedVm: false
                          limitProcessedVmCount: 10
                        synthenticFulls:
                          days:
                            - saturday
                          isEnabled: true
                        vSphere:
                          changedBlockTracking:
                            enableCBTautomatically: true
                            isEnabled: true
                            resetCBTonActiveFull: true
                          enableVMWareToolsQuiescence: false
                      backupProxies:
                        autoSelection: true
                        proxyIds: []
                      backupRepositoryId: 88101045-8755-4117-9221-bca81fbfabc4
                      gfsPolicy:
                        isEnabled: false
                        monthly:
                          desiredTime: First
                          isEnabled: false
                          keepForNumberOfMonths: 1
                        weekly:
                          desiredTime: sunday
                          isEnabled: false
                          keepForNumberOfWeeks: 1
                        yearly:
                          desiredTime: January
                          isEnabled: false
                          keepForNumberOfYears: 1
                      retentionPolicy:
                        quantity: 7
                        type: Days
                    type: Backup
                    virtualMachines:
                      excludes:
                        disks:
                          - disks: []
                            disksToProcess: AllDisks
                            removeFromVMConfiguration: true
                            vmObject:
                              hostName: vcenter01.tech.local
                              name: filesrv02
                              objectId: vm-45006
                              type: VirtualMachine
                        templates:
                          excludeFromIncremental: true
                          isEnabled: true
                        vms: []
                      includes:
                        - inventoryObject:
                            hostName: vcenter01.tech.local
                            name: filesrv02
                            objectId: vm-45006
                            type: VirtualMachine
                          size: 43.5 GB
                pagination:
                  count: 1
                  limit: 1
                  skip: 0
                  total: 3
              schema:
                $ref: '#/components/schemas/JobsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Jobs"
      tags:
        - Jobs
      x-veeam-authorize:
        claims:
          - ViewJobs
    post:
      description: "The HTTP POST request to the `/api/v1/jobs` path allows you to create a new job that has the specified parameters."
      operationId: "CreateJob"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            example:
              guestProcessing:
                appAwareProcessing:
                  appSettings:
                    - exclusions:
                        exclusionPolicy: disabled
                        itemsList: []
                      oracle:
                        archiveLogs: deleteExpiredGBs
                        backupLogs: true
                        backupMinsCount: 23
                        credentialsId: a1b84070-9767-4f47-99cd-e25f57cd65dc
                        deleteGBsCount: 10240
                        deleteHoursCount: null
                        keepDaysCount: 15
                        logShippingServers:
                          autoSelection: true
                          shippingServerIds: []
                        retainLogBackups: untilBackupDeleted
                        useGuestCredentials: false
                      scripts:
                        linuxScripts: null
                        scriptProcessingMode: disableExec
                        windowsScripts: null
                      sql:
                        backupMinsCount: 15
                        keepDaysCount: null
                        logShippingServers:
                          autoSelection: true
                          shippingServerIds: []
                        logsProcessing: backup
                        retainLogBackups: untilBackupDeleted
                      transactionLogs: process
                      vmObject:
                        name: ResourcePool01
                        objectId: resgroup-32774
                        type: ResourcePool
                        vcName: vcenter01.tech.local
                      vss: requireSuccess
                  isEnabled: true
                guestCredentials:
                  credentialsPerMachine:
                    - linuxCredsId: 00000000-0000-0000-0000-000000000000
                      vmObject:
                        name: ResourcePool01
                        objectId: resgroup-32774
                        type: ResourcePool
                        vcName: vcenter01.tech.local
                      windowsCredsId: a1b84070-9767-4f47-99cd-e25f57cd65dc
                  linuxCredsId: 00000000-0000-0000-0000-000000000000
                  windowsCredsId: a1b84070-9767-4f47-99cd-e25f57cd65dc
                guestFSIndexing:
                  indexingSettings:
                    - LinuxIndexing:
                        guestFSIndexingMode: indexAllExcept
                        indexingList:
                          - /cdrom
                          - /dev
                          - /media
                          - /mnt
                          - /proc
                          - /tmp
                          - /lost+found
                      WindowsIndexing:
                        guestFSIndexingMode: indexAllExcept
                        indexingList:
                          - '%windir%'
                          - '%ProgramFiles%'
                          - '%ProgramFiles(x86)%'
                          - '%ProgramW6432%'
                          - '%TEMP%'
                      vmObject:
                        name: ResourcePool01
                        objectId: resgroup-32774
                        type: ResourcePool
                        vcName: vcenter01.tech.local
                  isEnabled: true
                guestInteractionProxies:
                  autoSelection: true
                  proxyIds: []
              isHighPriority: false
              schedule:
                backupWindow:
                  isEnabled: false
                  WindowSetting:
                    days:
                      - day: monday
                        hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                      - day: tuesday
                        hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                      - day: wednesday
                        hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                      - day: thursday
                        hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                      - day: friday
                        hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                      - day: saturday
                        hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                      - day: sunday
                        hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                daily:
                  dailyKind: Everyday
                  days:
                    - sunday
                    - monday
                    - tuesday
                    - wednesday
                    - thursday
                    - friday
                    - saturday
                  isEnabled: true
                  localTime: 10:00 PM
                isEnabled: true
                monthly:
                  localTime: 10:00 PM
                  months:
                    - January
                    - February
                    - March
                    - April
                    - May
                    - June
                    - July
                    - August
                    - September
                    - October
                    - November
                    - December
                  dayNumberInMonth: Fourth
                  dayOfMonth: 1
                  dayOfWeek: saturday
                  isEnabled: false
                periodically:
                  continuously:
                    BackupWindow:
                      days:
                        - day: monday
                          hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                        - day: tuesday
                          hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                        - day: wednesday
                          hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                        - day: thursday
                          hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                        - day: friday
                          hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                        - day: saturday
                          hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                        - day: sunday
                          hours: 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                  frequency: 0
                  isEnabled: false
                  periodicallyKind: Hours
                retry:
                  awaitMinutes: 10
                  isEnabled: true
                  retryCount: 3
              description: Created by ENTERPRISE01\Administrator
              virtualMachines:
                includes:
                  - name: ResourcePool01
                    objectId: resgroup-32774
                    type: ResourcePool
                    vcName: vcenter01.tech.local
                excludes:
                  disks:
                    - disks:
                        - SCSI 0:0 (2000)
                        - IDE 0:0 (3000)
                      disksToProcess: SelectedDisks
                      vmObject:
                        name: ResourcePool01
                        objectId: resgroup-32774
                        type: ResourcePool
                        vcName: vcenter01.tech.local
                  templates:
                    excludeFromIncremental: false
                    isEnabled: true
                  vms:
                    - name: srv01
                      objectId: vm-34739
                      type: VirtualMachine
                      vcName: vcenter01.tech.local
                    - name: srv02
                      objectId: vm-32843
                      type: VirtualMachine
                      vcName: vcenter01.tech.local
              type: Backup
              name: Backup Job 3
              storage:
                backupProxies:
                  autoSelection: true
                  proxyIds: []
                backupRepositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                gfsPolicy:
                  isEnabled: false
                  monthly:
                    keepForNumberOfMonths: 1
                    desiredTime: First
                    isEnabled: false
                  weekly:
                    desiredTime: sunday
                    isEnabled: false
                    keepForNumberOfWeeks: 1
                  yearly:
                    isEnabled: false
                    keepForNumberOfYears: 1
                    desiredTime: January
                retentionPolicy:
                  quantity: 7
                  type: RestorePoints
                advancedSettings:
                  backupHealth:
                    isEnabled: true
                    monthly:
                      dayNumberInMonth: First
                      dayOfMonths: 1
                      dayOfWeek: monday
                      isEnabled: true
                      months:
                        - January
                        - February
                        - March
                        - April
                        - May
                        - June
                        - July
                        - August
                        - September
                        - October
                        - November
                        - December
                    weekly:
                      days:
                        - friday
                      isEnabled: false
                  notifications:
                    emailNotifications:
                      isEnabled: false
                      recipients: []
                    sendSNMPNotifications: true
                    vmAttribute:
                      appendToExisitingValue: true
                      isEnabled: false
                      notes: Notes
                  scripts:
                    postCommand:
                      runScriptEvery: 1
                      command: ""
                      dayOfWeek:
                        - saturday
                      isEnabled: false
                      periodicityType: BackupSessions
                    preCommand:
                      command: ""
                      dayOfWeek:
                        - saturday
                      isEnabled: false
                      periodicityType: BackupSessions
                      runScriptEvery: 1
                  storageData:
                    compressionLevel: Optimal
                    enableInlineDataDedup: true
                    encryption:
                      isEnabled: false
                      passwordId: 00000000-0000-0000-0000-000000000000
                    excludeDeletedFileBlocks: true
                    excludeSwapFileBlocks: true
                    storageOptimization: LocalTarget
                  storageIntegration:
                    failoverToStandardBackup: true
                    isEnabled: true
                    limitProcessedVm: true
                    limitProcessedVmCount: 13
                  activeFulls:
                    isEnabled: true
                    monthly:
                      dayNumberInMonth: First
                      dayOfMonths: 1
                      dayOfWeek: monday
                      isEnabled: false
                      months:
                        - January
                        - February
                        - March
                        - April
                        - May
                        - June
                        - July
                        - August
                        - September
                        - October
                        - November
                        - December
                    weekly:
                      days:
                        - saturday
                      isEnabled: true
                  backupModeType: Incremental
                  fullBackupMaintenance:
                    RemoveData:
                      afterDays: 14
                      isEnabled: false
                    defragmentAndCompact:
                      isEnabled: false
                      monthly:
                        dayNumberInMonth: Last
                        dayOfMonths: 1
                        dayOfWeek: saturday
                        isEnabled: true
                        months:
                          - January
                          - February
                          - March
                          - April
                          - May
                          - June
                          - July
                          - August
                          - September
                          - October
                          - November
                          - December
                      weekly:
                        days:
                          - saturday
                        isEnabled: false
                  synthenticFulls:
                    isEnabled: true
                    days:
                      - saturday
                  vSphere:
                    changedBlockTracking:
                      enableCBTautomatically: true
                      isEnabled: true
                      resetCBTonActiveFull: true
                    enableVMWareToolsQuiescence: false
            schema:
              $ref: '#/components/schemas/JobSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobModel'
          description: "Job has been created."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Create Job"
      tags:
        - Jobs
      x-veeam-authorize:
        claims:
          - CreateJobs
  /api/v1/jobs/states:
    get:
      description: "The HTTP GET request to the `/api/v1/jobs/states` path allows you to get an array of all job states. The states include brief job information that you can also find under the **Jobs** node in the Veeam Backup & Replication console."
      operationId: "GetAllJobsStates"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of job states to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Maximum number of job states to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Sorts job states by one of the state parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EJobStatesFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Sorts job states in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Filters job states by job ID."
          in: "query"
          name: "idFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Filters job states by the `nameFilter` pattern. The pattern can match any state parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Filters job states by job type."
          in: "query"
          name: "typeFilter"
          schema:
            $ref: '#/components/schemas/EJobType'
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Filters job states by status with which jobs must finish."
          in: "query"
          name: "lastResultFilter"
          schema:
            $ref: '#/components/schemas/ESessionResult'
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Filters job states by current status of the job."
          in: "query"
          name: "statusFilter"
          schema:
            $ref: '#/components/schemas/EJobStatus'
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Filters job states by workloads that jobs must process."
          in: "query"
          name: "workloadFilter"
          schema:
            $ref: '#/components/schemas/EJobWorkload'
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Returns job states for jobs that have run after the specified date and time."
          in: "query"
          name: "lastRunAfterFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Returns job states for jobs that have not run after the specified date and time."
          in: "query"
          name: "lastRunBeforeFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "If *true*, Returns job states for jobs with high priority."
          in: "query"
          name: "isHighPriorityJobFilter"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Filters job states by repository ID."
          in: "query"
          name: "repositoryIdFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
        - description: "Filters job states by number of objects processed by the job."
          in: "query"
          name: "objectsCountFilter"
          schema:
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/JobStatesFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - description: Created by GAMMA\Administrator
                    id: 301450bc-34cd-4d2c-bfc3-8d269bb471be
                    lastResult: None
                    lastRun: "2022-02-04T21:40:34.473+03:00"
                    name: AD Backup
                    nextRun: null
                    objectsCount: 1
                    repositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                    repositoryName: Default Backup Repository
                    sessionId: dc98d2df-e845-46c4-bba1-57c3d020bf36
                    status: running
                    type: Backup
                    workload: vm
                  - description: Created by GAMMA\Administrator
                    id: 53b87378-7958-477d-8def-fbe6740d4b6f
                    lastResult: Warning
                    lastRun: "2021-02-20T06:53:17.747+03:00"
                    name: Exchange Backup
                    nextRun: null
                    objectsCount: 1
                    repositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                    repositoryName: Default Backup Repository
                    sessionId: 4c5f14a6-b883-4b83-891a-d520809e4284
                    status: inactive
                    type: Backup
                    workload: vm
                  - description: Created by GAMMA\Administrator
                    id: 75fc491a-d158-4380-a433-ebc42a28e4df
                    lastResult: None
                    lastRun: "2022-02-04T21:40:24.96+03:00"
                    name: Oracle Backup
                    nextRun: "2022-02-05T16:00:00+03:00"
                    objectsCount: 1
                    repositoryId: 49607f55-4cc4-4ea5-a2c9-e750318d0f34
                    repositoryName: Storage 3
                    sessionId: 433d8b8b-bcb7-4ce3-986e-7bf2a3731d01
                    status: running
                    type: Backup
                    workload: application
                pagination:
                  count: 3
                  limit: 200
                  skip: 0
                  total: 3
              schema:
                $ref: '#/components/schemas/JobStatesResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Job States"
      tags:
        - Jobs
      x-veeam-authorize:
        claims:
          - ViewJobs
  /api/v1/jobs/{id}:
    delete:
      description: "The HTTP DELETE request to the `/api/v1/jobs/{id}` path allows you to delete a job that has the specified `id`."
      operationId: "DeleteJob"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the job."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "204":
          $ref: '#/components/responses/Deleted'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Delete Job"
      tags:
        - Jobs
      x-veeam-authorize:
        claims:
          - DeleteJobs
    get:
      description: "The HTTP GET request to the `/api/v1/jobs/{id}` path allows you to get a job that has the specified `id`."
      operationId: "GetJob"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the job."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              example:
                isDisabled: false
                schedule:
                  daily:
                    isEnabled: true
                    localTime: 4:00 PM
                    dailyKind: Everyday
                    days:
                      - sunday
                      - monday
                      - tuesday
                      - wednesday
                      - thursday
                      - friday
                      - saturday
                  monthly:
                    dayOfMonth: 1
                    dayOfWeek: saturday
                    isEnabled: false
                    localTime: 9:00 AM
                    months:
                      - January
                      - February
                      - March
                      - April
                      - May
                      - June
                      - July
                      - August
                      - September
                      - October
                      - November
                      - December
                    dayNumberInMonth: Fourth
                  periodically:
                    backupWindow:
                      days:
                        - day: sunday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: monday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: tuesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: wednesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: thursday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: friday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: saturday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                    frequency: 1
                    isEnabled: false
                    periodicallyKind: Hours
                    startTimeWithinAnHour: 0
                  retry:
                    awaitMinutes: 10
                    isEnabled: true
                    retryCount: 3
                  runAutomatically: true
                  afterThisJob:
                    isEnabled: false
                  backupWindow:
                    backupWindow:
                      days:
                        - day: sunday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: monday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: tuesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: wednesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: thursday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: friday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: saturday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                    isEnabled: false
                  continuously:
                    backupWindow:
                      days:
                        - day: sunday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: monday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: tuesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: wednesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: thursday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: friday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: saturday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                    isEnabled: false
                name: Oracle Backup
                description: Created by GAMMA\Administrator
                id: 75fc491a-d158-4380-a433-ebc42a28e4df
                virtualMachines:
                  excludes:
                    vms: []
                    disks:
                      - disks: []
                        disksToProcess: AllDisks
                        removeFromVMConfiguration: true
                        vmObject:
                          hostName: 172.17.52.34
                          name: srv45
                          objectId: vm-61281
                          type: VirtualMachine
                    templates:
                      excludeFromIncremental: true
                      isEnabled: true
                  includes:
                    - inventoryObject:
                        hostName: 172.17.52.34
                        name: srv45
                        objectId: vm-61281
                        type: VirtualMachine
                      size: 152.5 GB
                storage:
                  backupRepositoryId: 49607f55-4cc4-4ea5-a2c9-e750318d0f34
                  gfsPolicy:
                    monthly:
                      desiredTime: First
                      isEnabled: false
                      keepForNumberOfMonths: 1
                    weekly:
                      desiredTime: sunday
                      isEnabled: false
                      keepForNumberOfWeeks: 1
                    yearly:
                      keepForNumberOfYears: 1
                      desiredTime: January
                      isEnabled: false
                    isEnabled: false
                  retentionPolicy:
                    quantity: 7
                    type: RestorePoints
                  advancedSettings:
                    notifications:
                      emailNotifications:
                        isEnabled: false
                        recipients: []
                      sendSNMPNotifications: false
                      vmAttribute:
                        notes: Notes
                        appendToExisitingValue: true
                        isEnabled: false
                    scripts:
                      postCommand:
                        command: ""
                        isEnabled: false
                      preCommand:
                        command: ""
                        isEnabled: false
                      runScriptEvery: 1
                      dayOfWeek:
                        - saturday
                      periodicityType: BackupSessions
                    storageData:
                      compressionLevel: Optimal
                      enableInlineDataDedup: true
                      encryption:
                        encryptionPasswordIdOrNull: 00000000-0000-0000-0000-000000000000
                        isEnabled: false
                      excludeDeletedFileBlocks: true
                      excludeSwapFileBlocks: true
                      storageOptimization: LocalTarget
                    storageIntegration:
                      failoverToStandardBackup: false
                      isEnabled: true
                      limitProcessedVm: false
                      limitProcessedVmCount: 10
                    vSphere:
                      changedBlockTracking:
                        enableCBTautomatically: true
                        isEnabled: true
                        resetCBTonActiveFull: true
                      enableVMWareToolsQuiescence: false
                    backupModeType: Incremental
                    fullBackupMaintenance:
                      RemoveData:
                        afterDays: 14
                        isEnabled: false
                      defragmentAndCompact:
                        isEnabled: false
                        monthly:
                          dayNumberInMonth: Last
                          dayOfMonths: 1
                          dayOfWeek: saturday
                          isEnabled: true
                          months:
                            - January
                            - February
                            - March
                            - April
                            - May
                            - June
                            - July
                            - August
                            - September
                            - October
                            - November
                            - December
                        weekly:
                          days:
                            - saturday
                          isEnabled: false
                    synthenticFulls:
                      days:
                        - saturday
                      isEnabled: false
                    activeFulls:
                      isEnabled: false
                      monthly:
                        isEnabled: false
                        months:
                          - January
                          - February
                          - March
                          - April
                          - May
                          - June
                          - July
                          - August
                          - September
                          - October
                          - November
                          - December
                        dayNumberInMonth: First
                        dayOfMonths: 1
                        dayOfWeek: monday
                      weekly:
                        days:
                          - saturday
                        isEnabled: true
                    backupHealth:
                      monthly:
                        dayOfWeek: friday
                        isEnabled: true
                        months:
                          - January
                          - February
                          - March
                          - April
                          - May
                          - June
                          - July
                          - August
                          - September
                          - October
                          - November
                          - December
                        dayNumberInMonth: Last
                        dayOfMonths: 1
                      weekly:
                        days:
                          - friday
                        isEnabled: false
                      isEnabled: false
                  backupProxies:
                    autoSelection: true
                    proxyIds: []
                guestProcessing:
                  guestInteractionProxies:
                    autoSelection: true
                    proxyIds: []
                  appAwareProcessing:
                    appSettings:
                      - exclusions:
                          exclusionPolicy: disabled
                          itemsList: []
                        oracle:
                          archiveLogs: preserve
                          backupLogs: true
                          backupMinsCount: 15
                          credentialsId: null
                          deleteGBsCount: null
                          deleteHoursCount: null
                          keepDaysCount: 15
                          logShippingServers:
                            autoSelection: true
                            shippingServerIds: []
                          retainLogBackups: untilBackupDeleted
                          useGuestCredentials: true
                        scripts:
                          linuxScripts: null
                          scriptProcessingMode: disableExec
                          windowsScripts: null
                        sql:
                          backupMinsCount: null
                          keepDaysCount: null
                          logShippingServers: null
                          logsProcessing: truncate
                          retainLogBackups: null
                        transactionLogs: process
                        usePersistentGuestAgent: false
                        vmObject:
                          hostName: 172.17.52.34
                          name: srv45
                          objectId: vm-61281
                          type: VirtualMachine
                        vss: requireSuccess
                    isEnabled: true
                  guestCredentials:
                    credentialsPerMachine: []
                    credsId: 6454c893-d5c6-4de8-be38-d984ea30dae4
                    credsType: Standard
                  guestFSIndexing:
                    indexingSettings: []
                    isEnabled: false
                isHighPriority: false
                type: Backup
              schema:
                $ref: '#/components/schemas/JobModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Job"
      tags:
        - Jobs
      x-veeam-authorize:
        claims:
          - ViewJobs
    put:
      description: "The HTTP PUT request to the `/api/v1/jobs/{id}` path allows you to edit a job that has the specified `id`."
      operationId: "UpdateJob"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the job."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            example:
              id: 53b87378-7958-477d-8def-fbe6740d4b6f
              name: Exchange Backup
              guestProcessing:
                appAwareProcessing:
                  appSettings:
                    - exclusions:
                        exclusionPolicy: disabled
                        itemsList: []
                      oracle:
                        archiveLogs: preserve
                        backupLogs: false
                        backupMinsCount: null
                        credentialsId: null
                        deleteGBsCount: null
                        deleteHoursCount: null
                        keepDaysCount: null
                        logShippingServers: null
                        retainLogBackups: null
                        useGuestCredentials: true
                      scripts:
                        linuxScripts: null
                        scriptProcessingMode: disableExec
                        windowsScripts: null
                      sql:
                        backupMinsCount: null
                        keepDaysCount: null
                        logShippingServers: null
                        logsProcessing: truncate
                        retainLogBackups: null
                      transactionLogs: process
                      usePersistentGuestAgent: false
                      vmObject:
                        hostName: 172.17.42.92
                        name: DLExch
                        objectId: "516"
                        type: VirtualMachine
                      vss: requireSuccess
                  isEnabled: true
                guestCredentials:
                  credentialsPerMachine: []
                  credsId: d38995da-75ec-4ada-ac31-2138d7a0351f
                  credsType: Standard
                guestFSIndexing:
                  isEnabled: false
                  indexingSettings: []
                guestInteractionProxies:
                  autoSelection: true
                  proxyIds: []
              schedule:
                daily:
                  dailyKind: Everyday
                  days:
                    - sunday
                    - monday
                    - tuesday
                    - wednesday
                    - thursday
                    - friday
                    - saturday
                  isEnabled: true
                  localTime: 10:00 PM
                monthly:
                  isEnabled: false
                  localTime: 10:00 PM
                  months:
                    - January
                    - February
                    - March
                    - April
                    - May
                    - June
                    - July
                    - August
                    - September
                    - October
                    - November
                    - December
                  dayNumberInMonth: Fourth
                  dayOfMonth: 1
                  dayOfWeek: saturday
                periodically:
                  backupWindow:
                    days:
                      - day: sunday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: monday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: tuesday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: wednesday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: thursday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: friday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: saturday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                  frequency: 1
                  isEnabled: false
                  periodicallyKind: Hours
                  startTimeWithinAnHour: 0
                retry:
                  isEnabled: true
                  retryCount: 3
                  awaitMinutes: 10
                runAutomatically: false
                afterThisJob:
                  isEnabled: false
                backupWindow:
                  backupWindow:
                    days:
                      - day: sunday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: monday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: tuesday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: wednesday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: thursday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: friday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: saturday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                  isEnabled: false
                continuously:
                  backupWindow:
                    days:
                      - day: sunday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: monday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: tuesday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: wednesday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: thursday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: friday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: saturday
                        hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                  isEnabled: false
              isDisabled: false
              storage:
                gfsPolicy:
                  isEnabled: false
                  monthly:
                    desiredTime: First
                    isEnabled: false
                    keepForNumberOfMonths: 1
                  weekly:
                    desiredTime: sunday
                    isEnabled: false
                    keepForNumberOfWeeks: 1
                  yearly:
                    desiredTime: January
                    isEnabled: false
                    keepForNumberOfYears: 1
                retentionPolicy:
                  quantity: 3
                  type: RestorePoints
                advancedSettings:
                  backupHealth:
                    weekly:
                      days:
                        - friday
                      isEnabled: false
                    isEnabled: false
                    monthly:
                      dayNumberInMonth: Last
                      dayOfMonths: 1
                      dayOfWeek: friday
                      isEnabled: true
                      months:
                        - January
                        - February
                        - March
                        - April
                        - May
                        - June
                        - July
                        - August
                        - September
                        - October
                        - November
                        - December
                  backupModeType: Incremental
                  fullBackupMaintenance:
                    RemoveData:
                      afterDays: 14
                      isEnabled: false
                    defragmentAndCompact:
                      isEnabled: false
                      monthly:
                        dayOfMonths: 1
                        dayOfWeek: saturday
                        isEnabled: true
                        months:
                          - January
                          - February
                          - March
                          - April
                          - May
                          - June
                          - July
                          - August
                          - September
                          - October
                          - November
                          - December
                        dayNumberInMonth: Last
                      weekly:
                        isEnabled: false
                        days:
                          - saturday
                  scripts:
                    periodicityType: BackupSessions
                    postCommand:
                      isEnabled: false
                      command: ""
                    preCommand:
                      command: ""
                      isEnabled: false
                    runScriptEvery: 1
                    dayOfWeek:
                      - saturday
                  synthenticFulls:
                    days:
                      - saturday
                    isEnabled: false
                  activeFulls:
                    isEnabled: false
                    monthly:
                      dayNumberInMonth: First
                      dayOfMonths: 1
                      dayOfWeek: monday
                      isEnabled: false
                      months:
                        - January
                        - February
                        - March
                        - April
                        - May
                        - June
                        - July
                        - August
                        - September
                        - October
                        - November
                        - December
                    weekly:
                      days:
                        - saturday
                      isEnabled: true
                  storageData:
                    excludeDeletedFileBlocks: true
                    excludeSwapFileBlocks: true
                    storageOptimization: LocalTarget
                    compressionLevel: Optimal
                    enableInlineDataDedup: true
                    encryption:
                      isEnabled: false
                      encryptionPasswordIdOrNull: 00000000-0000-0000-0000-000000000000
                  storageIntegration:
                    limitProcessedVmCount: 10
                    failoverToStandardBackup: false
                    isEnabled: true
                    limitProcessedVm: false
                  vSphere:
                    changedBlockTracking:
                      resetCBTonActiveFull: true
                      enableCBTautomatically: true
                      isEnabled: true
                    enableVMWareToolsQuiescence: false
                  notifications:
                    emailNotifications:
                      isEnabled: false
                      recipients: []
                    sendSNMPNotifications: false
                    vmAttribute:
                      appendToExisitingValue: true
                      isEnabled: false
                      notes: Notes
                backupProxies:
                  autoSelection: true
                  proxyIds: []
                backupRepositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
              description: Created by GAMMA\Administrator
              isHighPriority: true
              type: Backup
              virtualMachines:
                excludes:
                  disks:
                    - disks: []
                      disksToProcess: AllDisks
                      removeFromVMConfiguration: true
                      vmObject:
                        hostName: 172.17.42.92
                        name: DLExch
                        objectId: "516"
                        type: VirtualMachine
                  templates:
                    excludeFromIncremental: true
                    isEnabled: true
                  vms: []
                includes:
                  - inventoryObject:
                      hostName: 172.17.42.92
                      name: DLExch
                      objectId: "516"
                      type: VirtualMachine
                    size: 170 GB
            schema:
              $ref: '#/components/schemas/JobModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                isDisabled: false
                id: 53b87378-7958-477d-8def-fbe6740d4b6f
                guestProcessing:
                  guestCredentials:
                    credentialsPerMachine: []
                    credsId: d38995da-75ec-4ada-ac31-2138d7a0351f
                    credsType: Standard
                  guestFSIndexing:
                    indexingSettings: []
                    isEnabled: false
                  guestInteractionProxies:
                    autoSelection: true
                    proxyIds: []
                  appAwareProcessing:
                    appSettings:
                      - exclusions:
                          exclusionPolicy: disabled
                          itemsList: []
                        oracle:
                          archiveLogs: preserve
                          backupLogs: false
                          backupMinsCount: null
                          credentialsId: null
                          deleteGBsCount: null
                          deleteHoursCount: null
                          keepDaysCount: null
                          logShippingServers: null
                          retainLogBackups: null
                          useGuestCredentials: true
                        scripts:
                          linuxScripts: null
                          scriptProcessingMode: disableExec
                          windowsScripts: null
                        sql:
                          backupMinsCount: null
                          keepDaysCount: null
                          logShippingServers: null
                          logsProcessing: truncate
                          retainLogBackups: null
                        transactionLogs: process
                        usePersistentGuestAgent: false
                        vmObject:
                          hostName: 172.17.42.92
                          name: DLExch
                          objectId: "516"
                          type: VirtualMachine
                        vss: requireSuccess
                    isEnabled: true
                schedule:
                  backupWindow:
                    backupWindow:
                      days:
                        - day: sunday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: monday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: tuesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: wednesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: thursday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: friday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: saturday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                    isEnabled: false
                  continuously:
                    backupWindow:
                      days:
                        - day: sunday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: monday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: tuesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: wednesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: thursday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: friday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: saturday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                    isEnabled: false
                  daily:
                    dailyKind: Everyday
                    days:
                      - sunday
                      - monday
                      - tuesday
                      - wednesday
                      - thursday
                      - friday
                      - saturday
                    isEnabled: true
                    localTime: 10:00 PM
                  monthly:
                    dayNumberInMonth: Fourth
                    dayOfMonth: 1
                    dayOfWeek: saturday
                    isEnabled: false
                    localTime: 10:00 PM
                    months:
                      - January
                      - February
                      - March
                      - April
                      - May
                      - June
                      - July
                      - August
                      - September
                      - October
                      - November
                      - December
                  periodically:
                    periodicallyKind: Hours
                    startTimeWithinAnHour: 0
                    backupWindow:
                      days:
                        - day: sunday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: monday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: tuesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: wednesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: thursday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: friday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: saturday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                    frequency: 1
                    isEnabled: false
                  retry:
                    awaitMinutes: 10
                    isEnabled: true
                    retryCount: 3
                  runAutomatically: false
                  afterThisJob:
                    isEnabled: false
                name: Exchange Backup
                virtualMachines:
                  excludes:
                    disks:
                      - disks: []
                        disksToProcess: AllDisks
                        removeFromVMConfiguration: true
                        vmObject:
                          hostName: 172.17.42.92
                          name: DLExch
                          objectId: "516"
                          type: VirtualMachine
                    templates:
                      excludeFromIncremental: true
                      isEnabled: true
                    vms: []
                  includes:
                    - inventoryObject:
                        hostName: 172.17.42.92
                        name: DLExch
                        objectId: "516"
                        type: VirtualMachine
                      size: 178.1 GB
                description: Created by GAMMA\Administrator
                isHighPriority: true
                type: Backup
                storage:
                  advancedSettings:
                    backupModeType: Incremental
                    fullBackupMaintenance:
                      RemoveData:
                        afterDays: 14
                        isEnabled: false
                      defragmentAndCompact:
                        isEnabled: false
                        monthly:
                          dayOfMonths: 1
                          dayOfWeek: saturday
                          isEnabled: true
                          months:
                            - January
                            - February
                            - March
                            - April
                            - May
                            - June
                            - July
                            - August
                            - September
                            - October
                            - November
                            - December
                          dayNumberInMonth: Last
                        weekly:
                          days:
                            - saturday
                          isEnabled: false
                    notifications:
                      emailNotifications:
                        recipients: []
                        isEnabled: false
                      sendSNMPNotifications: false
                      vmAttribute:
                        appendToExisitingValue: true
                        isEnabled: false
                        notes: Notes
                    scripts:
                      dayOfWeek:
                        - saturday
                      periodicityType: BackupSessions
                      postCommand:
                        command: ""
                        isEnabled: false
                      preCommand:
                        isEnabled: false
                        command: ""
                      runScriptEvery: 1
                    storageIntegration:
                      limitProcessedVmCount: 10
                      failoverToStandardBackup: false
                      isEnabled: true
                      limitProcessedVm: false
                    vSphere:
                      enableVMWareToolsQuiescence: false
                      changedBlockTracking:
                        enableCBTautomatically: true
                        isEnabled: true
                        resetCBTonActiveFull: true
                    backupHealth:
                      weekly:
                        days:
                          - friday
                        isEnabled: false
                      isEnabled: false
                      monthly:
                        dayNumberInMonth: Last
                        dayOfMonths: 1
                        dayOfWeek: friday
                        isEnabled: true
                        months:
                          - January
                          - February
                          - March
                          - April
                          - May
                          - June
                          - July
                          - August
                          - September
                          - October
                          - November
                          - December
                    storageData:
                      compressionLevel: Optimal
                      enableInlineDataDedup: true
                      encryption:
                        encryptionPasswordIdOrNull: 00000000-0000-0000-0000-000000000000
                        isEnabled: false
                      excludeDeletedFileBlocks: true
                      excludeSwapFileBlocks: true
                      storageOptimization: LocalTarget
                    synthenticFulls:
                      days:
                        - saturday
                      isEnabled: false
                    activeFulls:
                      isEnabled: false
                      monthly:
                        isEnabled: false
                        months:
                          - January
                          - February
                          - March
                          - April
                          - May
                          - June
                          - July
                          - August
                          - September
                          - October
                          - November
                          - December
                        dayNumberInMonth: First
                        dayOfMonths: 1
                        dayOfWeek: monday
                      weekly:
                        days:
                          - saturday
                        isEnabled: true
                  backupProxies:
                    autoSelection: true
                    proxyIds: []
                  backupRepositoryId: 88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec
                  gfsPolicy:
                    isEnabled: false
                    monthly:
                      keepForNumberOfMonths: 1
                      desiredTime: First
                      isEnabled: false
                    weekly:
                      desiredTime: sunday
                      isEnabled: false
                      keepForNumberOfWeeks: 1
                    yearly:
                      desiredTime: January
                      isEnabled: false
                      keepForNumberOfYears: 1
                  retentionPolicy:
                    quantity: 3
                    type: RestorePoints
              schema:
                $ref: '#/components/schemas/JobModel'
          description: "Job has been updated."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Job"
      tags:
        - Jobs
      x-veeam-authorize:
        claims:
          - UpdateJobs
  /api/v1/jobs/{id}/disable:
    post:
      description: "The HTTP POST request to the `/api/v1/jobs/{id}/disable` path allows you to disable a job that has the specified `id`."
      operationId: "DisableJob"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the job."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Job has been disabled."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Disable Job"
      tags:
        - Jobs
      x-veeam-authorize:
        claims:
          - DisableJobs
  /api/v1/jobs/{id}/enable:
    post:
      description: "The HTTP POST request to the `/api/v1/jobs/{id}/enable` path allows you to enable a job that has the specified `id`."
      operationId: "EnableJob"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the job."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "Job has been enabled."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Enable Job"
      tags:
        - Jobs
      x-veeam-authorize:
        claims:
          - EnableJobs
  /api/v1/jobs/{id}/start:
    post:
      description: "The HTTP POST request to the `/api/v1/jobs/{id}/start` path allows you to start a job that has the specified `id`."
      operationId: "StartJob"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the job."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            example:
              performActiveFull: false
              startChainedJobs: false
            schema:
              $ref: '#/components/schemas/JobStartSpec'
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                sessionType: Job
                state: Starting
                usn: 0
                progressPercent: 0
                activityId: 75fc491a-d158-4380-a433-ebc42a28e4df
                id: b1380736-18a9-4fac-adfe-20abc570e8de
                creationTime: "2022-02-04T20:46:49.067+03:00"
                name: Oracle Backup
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Job session has been started."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Start Job"
      tags:
        - Jobs
      x-veeam-authorize:
        claims:
          - StartJobs
  /api/v1/jobs/{id}/stop:
    post:
      description: "The HTTP POST request to the `/api/v1/jobs/{id}/stop` path allows you to stop a job that has the specified `id`."
      operationId: "StopJob"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the job."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            example:
              gracefullStop: true
            schema:
              $ref: '#/components/schemas/JobStopSpec'
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                progressPercent: 0
                activityId: 75fc491a-d158-4380-a433-ebc42a28e4df
                sessionType: Job
                state: Working
                usn: 0
                id: 3b5a044b-f38d-4ae8-85d1-38872095a537
                name: Oracle Backup
                creationTime: "2022-02-04T20:52:06.387+03:00"
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Job session has been stopped."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Stop Job"
      tags:
        - Jobs
      x-veeam-authorize:
        claims:
          - StopJobs
  /api/v1/objectRestorePoints:
    get:
      description: "The HTTP GET request to the `/api/v1/objectRestorePoints` path allows you to get an array of all restore points created on the backup server."
      operationId: "GetAllObjectRestorePoints"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of restore points to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ObjectRestorePointsFilters'
        - description: "Maximum number of restore points to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ObjectRestorePointsFilters'
        - description: "Sorts restore points by one of the restore point parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EObjectRestorePointsFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/ObjectRestorePointsFilters'
        - description: "Sorts restore points in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/ObjectRestorePointsFilters'
        - description: "Returns restore points that are created after the specified date and time."
          in: "query"
          name: "createdAfterFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ObjectRestorePointsFilters'
        - description: "Returns restore points that are created before the specified date and time."
          in: "query"
          name: "createdBeforeFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ObjectRestorePointsFilters'
        - description: "Filters restore points by the `nameFilter` pattern. The pattern can match any restore point parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ObjectRestorePointsFilters'
        - description: "Filters restore points by name of the backup object platform."
          in: "query"
          name: "platformNameFilter"
          schema:
            $ref: '#/components/schemas/EPlatformType'
          x-veeam-spec:
            $ref: '#/components/schemas/ObjectRestorePointsFilters'
        - description: "Filters restore points by ID of the backup object platform."
          in: "query"
          name: "platformIdFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ObjectRestorePointsFilters'
        - description: "Filters restore points by backup ID."
          in: "query"
          name: "backupIdFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ObjectRestorePointsFilters'
        - description: "Filters restore points by backup object ID."
          in: "query"
          name: "backupObjectIdFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ObjectRestorePointsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectRestorePointsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Restore Points"
      tags:
        - Object Restore Points
      x-veeam-authorize:
        claims:
          - ViewRestorePoints
  /api/v1/objectRestorePoints/{id}:
    get:
      description: "The HTTP GET request to the `/api/v1/objectRestorePoints/{id}` path allows you to get a restore point that has the specified `id`."
      operationId: "GetObjectRestorePoint"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the restore point."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectRestorePointModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Restore Point"
      tags:
        - Object Restore Points
      x-veeam-authorize:
        claims:
          - ViewRestorePoints
  /api/v1/objectRestorePoints/{id}/disks:
    get:
      description: "The HTTP GET request to the `/api/v1/objectRestorePoints/{id}/disks` path allows you to get an array of disks from a restore point that has the specified `id`."
      operationId: "GetObjectRestorePointDisks"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "ID of the restore point."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectRestorePointDisksResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Restore Point Disks"
      tags:
        - Object Restore Points
      x-veeam-authorize:
        claims:
          - ViewRestorePointDisks
  /api/v1/restore/instantRecovery/vmware/fcd:
    get:
      description: "The HTTP GET request to the `/api/v1/restore/instantRecovery/vmware/fcd` path allows you to get an array of FCD mounts."
      operationId: "GetAllVmwareFcdInstantRecoveryMountModels"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of mounts to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsFilters'
        - description: "Maximum number of mounts to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsFilters'
        - description: "Sorts mounts by one of the mount parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EVmwareFcdInstantRecoveryMountsFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsFilters'
        - description: "Sorts mounts in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsFilters'
        - description: "Filters mounts by mount state."
          in: "query"
          name: "stateFilter"
          schema:
            $ref: '#/components/schemas/EInstantRecoveryMountState'
          x-veeam-spec:
            $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareFcdInstantRecoveryMountsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All FCD Mounts"
      tags:
        - Restore
      x-veeam-authorize:
        claims:
          - ViewIRMountedDisks
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/fcd/` path allows you to start Instant FCD Recovery from the restore point to the destination cluster.<br>Specify the destination cluster in the `destinationCluster` parameter of the request body as a model of the VMware vSphere object. For details on how to get the cluster model, see [Get VMware vSphere Server Objects](#tag/Inventory-Browser/operation/GetVmwareHostObject)."
      operationId: "InstantRecoveryVmwareFcdMountWithSession"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareFcdInstantRecoverySpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Instant FCD Recovery has been started. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Start Instant FCD Recovery"
      tags:
        - Restore
      x-veeam-authorize:
        claims:
          - StartFCDInstantRecovery
  /api/v1/restore/instantRecovery/vmware/fcd/{mountId}:
    get:
      description: "The HTTP GET request to the `/api/v1/restore/instantRecovery/vmware/fcd/{mountId}` path allows you to get information about the mounted vPower NFS datastore, such as restore session ID, mount state, instant FCD recovery settings and disks that will be recovered."
      operationId: "GetVmwareFcdInstantRecoveryMountModel"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Mount ID."
          in: "path"
          name: "mountId"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareFcdInstantRecoveryMount'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get FCD Mount"
      tags:
        - Restore
      x-veeam-authorize:
        claims:
          - ViewIRMountedDisks
  /api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount:
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/fcd/{mountId}/dismount` path allows you to stop publishing the recovered FCDs and remove the disks from the datastore."
      operationId: "InstantRecoveryVmwareFcdDismountWithSession"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Mount ID."
          in: "path"
          name: "mountId"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Disks has been unmounted. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Stop FCD Publishing"
      tags:
        - Restore
      x-veeam-authorize:
        claims:
          - DismountIRDisks
  /api/v1/restore/instantRecovery/vmware/fcd/{mountId}/migrate:
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/fcd/{mountId}/migrate` path allows you to start migration of FCDs from the specified mount.<br>In the request body specify FCD migration configuration:<ul> <li>Disks for migration</li> <li>Target datastore</li> <li>Storage policy that will be applied to the migrated disks</li></ul> For details on how to get models of the datastore and storage policy, see [Get VMware vSphere Server Objects](#tag/Inventory-Browser/operation/GetVmwareHostObject)."
      operationId: "InstantRecoveryVmwareFcdMigrateWithSession"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Mount ID."
          in: "path"
          name: "mountId"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareFcdQuickMigrationSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "FCD Migration has been started. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Start FCD Migration"
      tags:
        - Restore
      x-veeam-authorize:
        claims:
          - MigrateIRMountedDisks
  /api/v1/restore/instantRecovery/vmware/vm:
    get:
      description: "The HTTP GET request to the `/api/v1/restore/instantRecovery/vmware/vm` path allows you to get an array of VM mounts."
      operationId: "GetAllInstantViVMRecoveryMounts"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of mounts to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/InstantViVMRecoveryMountsFilters'
        - description: "Maximum number of mounts to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/InstantViVMRecoveryMountsFilters'
        - description: "Sorts mounts by one of the mount parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EInstantViVMRecoveryMountsFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/InstantViVMRecoveryMountsFilters'
        - description: "Sorts mounts in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/InstantViVMRecoveryMountsFilters'
        - description: "Filters mounts by mount state."
          in: "query"
          name: "stateFilter"
          schema:
            $ref: '#/components/schemas/EInstantRecoveryMountState'
          x-veeam-spec:
            $ref: '#/components/schemas/InstantViVMRecoveryMountsFilters'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantViVMRecoveryMountsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All VM Mounts"
      tags:
        - Restore
      x-veeam-authorize:
        claims:
          - ViewIRMountedVMs
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/vm/` path allows you to start Instant Recovery of a VMware vSphere VM to VMware vSphere. You can recover a VM from the specified restore point to the original location with initial VM settings, or to any location but with different settings."
      operationId: "InstantViVMRecoveryMount"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantViVMRecoverySpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Instant Recovery to VMware vSphere has been started."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Start Instant Recovery"
      tags:
        - Restore
      x-veeam-authorize:
        claims:
          - StartViVMInstantRecovery
  /api/v1/restore/instantRecovery/vmware/vm/{mountId}:
    get:
      description: "The HTTP GET request to the `/api/v1/restore/instantRecovery/vmware/vm/{mountId}` path allows you to get a VM mount that has the specified `mountID`."
      operationId: "GetInstantViVMRecoveryMount"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Mount ID."
          in: "path"
          name: "mountId"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantViVMRecoveryMount'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get VM Mount"
      tags:
        - Restore
      x-veeam-authorize:
        claims:
          - ViewIRMountedVMs
  /api/v1/restore/instantRecovery/vmware/vm/{mountId}/migrate:
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/vm/{mountId}/migrate` path allows you to start VM migration from the specified mount."
      operationId: "InstantViVMRecoveryMigrate"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Mount ID."
          in: "path"
          name: "mountId"
          required: true
          schema:
            format: "uuid"
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViVMQuickMigrationSpec'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "VM Migration has been started. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Start VM Migration"
      tags:
        - Restore
      x-veeam-authorize:
        claims:
          - MigrateIRMountedVMs
  /api/v1/restore/instantRecovery/vmware/vm/{mountId}/unmount:
    post:
      description: "The HTTP POST request to the `/api/v1/restore/instantRecovery/vmware/vm/{mountId}/unmount` path allows you to stop publishing the recovered VM and remove it from the destination host."
      operationId: "InstantViVMRecoveryUnmount"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Mount ID."
          in: "path"
          name: "mountId"
          required: true
          schema:
            format: "uuid"
            type: "string"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "VM has been unpublished."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Stop VM Publishing"
      tags:
        - Restore
      x-veeam-authorize:
        claims:
          - DismountIRVMs
  /api/v1/restore/vmRestore/vmware/:
    post:
      description: "The HTTP POST request to the `/api/v1/restore/vmRestore/vmware/` path allows you to perform entire VM restore of a VMware vSphere VM to VMware vSphere. You can restore a VM from the specified restore point to the original location with initial VM settings, or to any location but with different settings."
      operationId: "EntireVmRestoreVmware"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntireViVMRestoreSpec'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "Restore session has been created. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Start Entire VM Restore"
      tags:
        - Restore
      x-veeam-authorize:
        claims:
          - StartEntireVmRestore
  /api/v1/serverCertificate:
    get:
      description: "The HTTP GET request to the `/api/v1/serverCertificate` path allows you to get a certificate of the backup server."
      operationId: "GetServerCertificate"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              example:
                keyAlgorithm: RSA-PKCS1-KeyEx
                serialNumber: 65FFC0E36A66B2BA40EF93AF47C2EF7D
                thumbprint: 4E916B201930CD9AE44C20019F87F2A4EF227303
                subject: CN=Veeam Backup Server Certificate
                validBy: "2031-03-17T19:53:54+01:00"
                issuedBy: Veeam Backup Server Certificate
                keySize: "2048"
                validFrom: "2021-03-17T19:53:54+01:00"
                issuedTo: Veeam Backup Server Certificate
              schema:
                $ref: '#/components/schemas/CertificateModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security: []
      summary: "Get Backup Server Certificate"
      tags:
        - Service
  /api/v1/serverInfo:
    get:
      description: "The HTTP GET request to the `/api/v1/serverInfo` path allows you to get Veeam Backup & Replication installation ID, backup server name (or IP address), build number and cumulative patches installed on the backup server."
      operationId: "GetServerInfo"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfoModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Backup Server Information"
      tags:
        - Service
  /api/v1/serverTime:
    get:
      description: "The HTTP GET request to the `/api/v1/serverTime` path allows you to get current date and time on the backup server."
      operationId: "GetServerTime"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              example:
                serverTime: "2022-01-25T18:31:50.7300443+01:00"
                timeZone: (UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague
              schema:
                $ref: '#/components/schemas/ServerTimeModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security: []
      summary: "Get Backup Server Time"
      tags:
        - Service
  /api/v1/services:
    get:
      description: "The HTTP GET request to the `/api/v1/services` path allows you to get associated services for integration with Veeam Backup & Replication."
      operationId: "GetAllServices"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of services to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ServicesFilters'
        - description: "Maximum number of services to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/ServicesFilters'
        - description: "Sorts services by one of the service parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/EServicesFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/ServicesFilters'
        - description: "Sorts services in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/ServicesFilters'
        - description: "Filters services by the `nameFilter` pattern. The pattern can match any service parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/ServicesFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - name: External Infrastructure DB Provider
                    port: 6172
                  - name: VM Backup API
                    port: 10006
                pagination:
                  skip: 0
                  total: 2
                  count: 2
                  limit: 200
              schema:
                $ref: '#/components/schemas/ServicesResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Associated Services"
      tags:
        - Services
      x-veeam-authorize:
        claims:
          - ViewServices
  /api/v1/sessions:
    get:
      description: "The HTTP GET request to the `/api/v1/sessions` path allows you to get an array of sessions performed on the backup server."
      operationId: "GetAllSessions"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
        - description: "Number of sessions to skip."
          in: "query"
          name: "skip"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Maximum number of sessions to return."
          in: "query"
          name: "limit"
          schema:
            format: "int32"
            type: "integer"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Sorts sessions by one of the session parameters."
          in: "query"
          name: "orderColumn"
          schema:
            $ref: '#/components/schemas/ESessionsFiltersOrderColumn'
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Sorts sessions in the ascending order by the `orderColumn` parameter."
          in: "query"
          name: "orderAsc"
          schema:
            type: "boolean"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Filters sessions by the `nameFilter` pattern. The pattern can match any session parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          in: "query"
          name: "nameFilter"
          schema:
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Returns sessions that are created after the specified date and time."
          in: "query"
          name: "createdAfterFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Returns sessions that are created before the specified date and time."
          in: "query"
          name: "createdBeforeFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Returns sessions that are finished after the specified date and time."
          in: "query"
          name: "endedAfterFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Returns sessions that are finished before the specified date and time."
          in: "query"
          name: "endedBeforeFilter"
          schema:
            format: "date-time"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Filters sessions by session type."
          in: "query"
          name: "typeFilter"
          schema:
            $ref: '#/components/schemas/ESessionType'
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Filters sessions by session state."
          in: "query"
          name: "stateFilter"
          schema:
            $ref: '#/components/schemas/ESessionState'
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Filters sessions by session result."
          in: "query"
          name: "resultFilter"
          schema:
            $ref: '#/components/schemas/ESessionResult'
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
        - description: "Filters sessions by job ID."
          in: "query"
          name: "jobIdFilter"
          schema:
            format: "uuid"
            type: "string"
          x-veeam-spec:
            $ref: '#/components/schemas/SessionsFilters'
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  - activityId: c05dfa57-f59a-4e90-8065-b7f5d3276406
                    creationTime: "2021-12-04T06:13:34.983+01:00"
                    endTime: "2021-12-04T06:15:00.617+01:00"
                    id: c924ee2f-1197-4b37-8de3-009c1977f347
                    name: Backup Job 1
                    parentSessionId: null
                    progressPercent: 100
                    resourceId: c7478158-7c99-4bab-93b1-c3efdd1062fa
                    resourceReference: /api/v1/backups/c7478158-7c99-4bab-93b1-c3efdd1062fa
                    result:
                      isCanceled: false
                      message: Creating synthetic full backup (22% done)
                      result: Failed
                    sessionType: Job
                    state: Stopped
                    usn: 0
                pagination:
                  total: 307
                  count: 1
                  limit: 1
                  skip: 0
              schema:
                $ref: '#/components/schemas/SessionsResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get All Sessions"
      tags:
        - Sessions
      x-veeam-authorize:
        claims:
          - ViewSessions
  /api/v1/sessions/{id}:
    get:
      description: "The HTTP GET request to the `/api/v1/sessions/{id}` path allows you to get a session that has the specified `id`."
      operationId: "GetSession"
      parameters:
        - description: "ID of the session."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              example:
                creationTime: "2021-11-08T10:00:12.56+01:00"
                sessionType: ConfigurationBackup
                id: f848e90c-7f37-4ff5-9d55-04e33f8a4de3
                result:
                  isCanceled: false
                  message: Success
                  result: Success
                state: Stopped
                endTime: "2021-11-08T10:00:34.017+01:00"
                name: Backup Configuration Job
                usn: 0
                activityId: 99d1bf3d-e2e0-4bec-b2b3-820c0b87d212
                progressPercent: 100
              schema:
                $ref: '#/components/schemas/SessionModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Session"
      tags:
        - Sessions
      x-veeam-authorize:
        claims:
          - ViewSessions
  /api/v1/sessions/{id}/logs:
    get:
      description: "The HTTP GET request to the `/api/v1/sessions/{id}/logs` path allows you to get an array of log records of a session that has the specified `id`."
      operationId: "GetSessionLogs"
      parameters:
        - description: "ID of the session."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              example:
                records:
                  - description: ""
                    id: 11
                    startTime: "2021-11-05T06:03:15.866256+01:00"
                    status: Warning
                    title: 'Job finished with warning at 11/5/2021 6:03:15 AM '
                    updateTime: "2021-11-05T06:03:15.866256+01:00"
                  - description: ""
                    id: 10
                    startTime: "2021-11-05T06:03:15.756877+01:00"
                    status: Succeeded
                    title: 'Primary bottleneck: Source'
                    updateTime: "2021-11-05T06:03:15.756877+01:00"
                  - description: ""
                    id: 9
                    startTime: "2021-11-05T06:03:15.647498+01:00"
                    status: Succeeded
                    title: 'Load: Source 86% > Proxy 54% > Network 56% > Target 42%'
                    updateTime: "2021-11-05T06:03:15.647498+01:00"
                  - description: ""
                    id: 7
                    startTime: "2021-11-05T06:00:24.096249+01:00"
                    status: Succeeded
                    title: Processing ubuntu88
                    updateTime: "2021-11-05T06:03:08.2098022+01:00"
                  - description: ""
                    id: 5
                    startTime: "2021-11-05T06:00:18.9711163+01:00"
                    status: Succeeded
                    title: Processing winsrv100
                    updateTime: "2021-11-05T06:02:18.5413692+01:00"
                  - description: ""
                    id: 6
                    startTime: "2021-11-05T06:00:24.0650043+01:00"
                    status: Succeeded
                    title: Processing dbserver01
                    updateTime: "2021-11-05T06:01:02.6441456+01:00"
                  - description: ""
                    id: 8
                    startTime: "2021-11-05T06:00:59.2378014+01:00"
                    status: Succeeded
                    title: All VMs have been queued for processing
                    updateTime: "2021-11-05T06:00:59.2378014+01:00"
                  - description: ""
                    id: 4
                    startTime: "2021-11-05T06:00:12.0178073+01:00"
                    status: Succeeded
                    title: Changed block tracking is enabled
                    updateTime: "2021-11-05T06:00:12.0178073+01:00"
                  - description: ""
                    id: 3
                    startTime: "2021-11-05T06:00:12.0021761+01:00"
                    status: Succeeded
                    title: 'VM size: 86 GB (48 GB used)'
                    updateTime: "2021-11-05T06:00:12.0021761+01:00"
                  - description: ""
                    id: 2
                    startTime: "2021-11-05T06:00:07.9864525+01:00"
                    status: Succeeded
                    title: Building list of machines to process
                    updateTime: "2021-11-05T06:00:10.377142+01:00"
                  - description: ""
                    id: 1
                    startTime: "2021-11-05T06:00:07.7051998+01:00"
                    status: Succeeded
                    title: Job started at 11/5/2021 6:00:02 AM
                    updateTime: "2021-11-05T06:00:07.7051998+01:00"
                totalRecords: 11
              schema:
                $ref: '#/components/schemas/SessionLogResult'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Session Logs"
      tags:
        - Sessions
      x-veeam-authorize:
        claims:
          - ViewSessions
  /api/v1/sessions/{id}/stop:
    post:
      description: "The HTTP POST request to the `/api/v1/sessions/{id}/stop` path allows you to stop a session that has the specified `id`."
      operationId: "StopSession"
      parameters:
        - description: "ID of the session."
          in: "path"
          name: "id"
          required: true
          schema:
            format: "uuid"
            type: "string"
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptySuccessResponse'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Stop Session"
      tags:
        - Sessions
      x-veeam-authorize:
        claims:
          - StopSessions
  /api/v1/trafficRules:
    get:
      description: "The HTTP GET request to the `/api/v1/trafficRules` path allows you to get network traffic rules that control traffic transferred between backup infrastructure components."
      operationId: "GetAllTrafficRules"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      responses:
        "200":
          content:
            application/json:
              example:
                uploadStreamsCount: 5
                trafficRules:
                  - encryptionEnabled: true
                    id: 622b0112-a972-49c2-9987-24a57ddc930a
                    name: Internet
                    sourceIPEnd: ""
                    sourceIPStart: Any
                    targetIPEnd: ""
                    targetIPStart: Internet
                    throttlingEnabled: false
                    throttlingUnit: MbitPerSpec
                    throttlingValue: 1
                    throttlingWindowEnabled: false
                    throttlingWindowOptions:
                      days:
                        - day: sunday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: monday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: tuesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: wednesday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: thursday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: friday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: saturday
                          hours: 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                preferredNetworks:
                  networks: []
                  isEnabled: false
                useMultipleStreamsPerJob: true
              schema:
                $ref: '#/components/schemas/GlobalNetworkTrafficRulesModel'
          description: "OK"
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Get Traffic Rules"
      tags:
        - Traffic Rules
      x-veeam-authorize:
        claims:
          - ViewTrafficRules
    put:
      description: "The HTTP PUT request to the `/api/v1/trafficRules` path allows you to edit network traffic rules that are configured on the backup server."
      operationId: "UpdateTrafficRules"
      parameters:
        - $ref: '#/components/parameters/apiVersionParam'
      requestBody:
        content:
          application/json:
            example:
              preferredNetworks:
                isEnabled: true
                networks:
                  - cidrNotation: "8"
                    ipAddress: 124.0.0.0
                    subnetMask: 255.0.0.0
                  - cidrNotation: "8"
                    ipAddress: 123.0.0.0
                    subnetMask: 255.0.0.0
              useMultipleStreamsPerJob: true
              trafficRules:
                - encryptionEnabled: true
                  id: 622b0112-a972-49c2-9987-24a57ddc930a
                  name: Internet
                  sourceIPEnd: ""
                  sourceIPStart: Any
                  targetIPEnd: ""
                  targetIPStart: Internet
                  throttlingEnabled: false
                  throttlingUnit: MbitPerSpec
                  throttlingValue: 2
                  throttlingWindowEnabled: true
                  throttlingWindowOptions:
                    days:
                      - day: sunday
                        hours: 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: monday
                        hours: 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: tuesday
                        hours: 1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: wednesday
                        hours: 1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: thursday
                        hours: 1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: friday
                        hours: 1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                      - day: saturday
                        hours: 1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
              uploadStreamsCount: 5
            schema:
              $ref: '#/components/schemas/GlobalNetworkTrafficRulesModel'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                preferredNetworks:
                  isEnabled: true
                  networks:
                    - cidrNotation: "8"
                      ipAddress: 124.0.0.0
                      subnetMask: 255.0.0.0
                    - cidrNotation: "8"
                      ipAddress: 123.0.0.0
                      subnetMask: 255.0.0.0
                trafficRules:
                  - encryptionEnabled: true
                    id: 622b0112-a972-49c2-9987-24a57ddc930a
                    name: Internet
                    sourceIPEnd: ""
                    sourceIPStart: Any
                    targetIPEnd: ""
                    targetIPStart: Internet
                    throttlingEnabled: false
                    throttlingUnit: MbitPerSpec
                    throttlingValue: 2
                    throttlingWindowEnabled: true
                    throttlingWindowOptions:
                      days:
                        - day: sunday
                          hours: 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: monday
                          hours: 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: tuesday
                          hours: 1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: wednesday
                          hours: 1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: thursday
                          hours: 1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: friday
                          hours: 1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                        - day: saturday
                          hours: 1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
                uploadStreamsCount: 5
                useMultipleStreamsPerJob: true
              schema:
                $ref: '#/components/schemas/GlobalNetworkTrafficRulesModel'
          description: "Infrastructure session has been created to edit the traffic rules. To check the progress, track the session `state`."
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "500":
          $ref: '#/components/responses/InternalServerError'
      summary: "Edit Traffic Rules"
      tags:
        - Traffic Rules
      x-veeam-authorize:
        claims:
          - UpdateTrafficRules
security:
  - Bearer: []
servers:
  - url: "/"
tags:
  - description: "The authorization process involves obtaining an access token and a refresh token.<br>For details on the authorization process and security settings, see [Authorization and Security](https://helpcenter.veeam.com/docs/backup/vbr_rest/authorization_security.html?ver=120).<SecurityDefinitions />"
    name: "Login"
  - description: "The Service section defines paths and operations for retrieving information about the backup server where the REST API service is running."
    name: "Service"
  - description: "The Services section defines a path and operation for retrieving information about associated backend services. You may need to connect to these services for integration with Veeam Backup & Replication."
    name: "Services"
  - description: "The Credentials section defines paths and operations for managing credentials records that are added to the backup server."
    name: "Credentials"
  - description: "The Encryption section defines paths and operations for managing passwords that are used for data encryption."
    name: "Encryption"
  - description: "The Connection section defines a path and operation for retrieving a TLS certificate or SSH fingerprint used to establish a secure connection between the backup server and the specified server."
    name: "Connection"
  - description: "The Cloud Browser section defines paths and operations for retrieving information about cloud resources (compute or storage). Cloud browser helps you map a cloud folder with an object storage repository."
    name: "Cloud Browser"
  - description: "The Inventory Browser section defines paths and operations for retrieving VMware vSphere servers and their virtual infrastructure objects (data centers, clusters, hosts, resource pools, VMs).<br> <div class=\"note\"><strong>NOTE</strong><br>In the current version, you can browse VMware vSphere objects only.</div>"
    name: "Inventory Browser"
  - description: "The Traffic Rules section defines paths and operations for retrieving and editing information about network traffic rules that are configured on the backup server."
    name: "Traffic Rules"
  - description: "The General Options section defines paths and operations for retrieving and editing general settings of Veeam Backup & Replication.<br> <div class=\"note\"><strong>NOTE</strong><br>In the current version of the REST API, you can configure notification settings only.</div>"
    name: "General Options"
  - description: "The Configuration Backup section defines paths and operations for managing backup of the configuration database that Veeam Backup & Replication uses."
    name: "Configuration Backup"
  - description: "The Managed Servers section defines paths and operations for managing servers.<br> <div class=\"note\"><strong>NOTE</strong><br>In the current version, the REST API supports the following server types&#58; *VMware vSphere*, *Linux* and *Windows*.</div>"
    name: "Managed Servers"
  - description: "The Repositories section defines paths and operations for managing backup repositories.<br> <div class=\"note\"><strong>NOTE</strong><br>In the current version, the REST API supports the following storage types&#58; direct attached storages (Microsoft Windows and Linux servers), network attached storages (SMB and NFS shares) and object storages. For details on how to add an object storage repository, see [Adding Object Storage Repository](https://helpcenter.veeam.com/docs/backup/vbr_rest/object_storage.html?ver=120).</div>"
    name: "Repositories"
  - description: "The Proxies section defines paths and operations for managing backup proxies.<br><div class=\"note\"><strong>NOTE</strong><br>In the current version, the REST API supports VMware backup proxies only.</div>"
    name: "Proxies"
  - description: "The Jobs section defines paths and operations for managing jobs that are coordinated by the backup server.<br> <div class=\"note\"><strong>NOTE</strong><br>In the current version, the REST API supports only jobs of the *Backup* type that include only VMware vSphere objects of the following types&#58; *VirtualMachine*, *vCenterServer*, *Datacenter*, *Cluster*, *Host*, *ResourcePool*, *Folder*, *Template*, *Tag*, *Datastore* and *DatastoreCluster*. Objects with tags combination (or *Multitag*) are not supported.</div>"
    name: "Jobs"
  - description: "The Backups section defines paths and operations for managing backups that are created on or imported to the backup server."
    name: "Backups"
  - description: "The Backup Objects section defines paths and operations for managing backup objects — virtual infrastructure objects (VMs and VM containers) that are included in backups created by the backup server."
    name: "Backup Objects"
  - description: "The Object Restore Points section defines paths and operations for retrieving restore points created on the backup server and backed up disks from the restore points."
    name: "Object Restore Points"
  - description: "The Restore section defines paths and operations for performing restore.<br> <div class=\"note\"><strong>NOTE</strong><br>In the current version, the REST API supports the following recovery operations:<ul> <li>Instant Recovery of a VMware vSphere VM to VMware vSphere</li> <li>Entire VM restore of a VMware vSphere VM to VMware vSphere</li> <li>Restore of disks that will be registered as First Class Disks (FCD) — a type of virtual disks that can be managed independent of any VM.</li></ul></div>"
    name: "Restore"
  - description: "The Sessions section defines paths and operations for managing sessions (except [automation sessions](#tag/Automation/operation/GetAllAutomationSessions)) performed on the backup server."
    name: "Sessions"
  - description: "The Agents section defines paths and operations for managing recovery tokens used for bare metal recovery."
    name: "Agents"
  - description: "The Automation section defines paths and operations for granular import and export of objects available in the REST API. It can be useful, for example, if you set up the backup infrastructure using JSON specification or migrate the infrastructure to another backup server. For details, see [Mass Deployment](https://helpcenter.veeam.com/docs/backup/vbr_rest/automation.html?ver=120)."
    name: "Automation"
