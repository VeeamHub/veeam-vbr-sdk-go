// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EDayOfWeek e day of week
//
// swagger:model EDayOfWeek
type EDayOfWeek string

func NewEDayOfWeek(value EDayOfWeek) *EDayOfWeek {
	v := value
	return &v
}

const (

	// EDayOfWeekMonday captures enum value "monday"
	EDayOfWeekMonday EDayOfWeek = "monday"

	// EDayOfWeekTuesday captures enum value "tuesday"
	EDayOfWeekTuesday EDayOfWeek = "tuesday"

	// EDayOfWeekWednesday captures enum value "wednesday"
	EDayOfWeekWednesday EDayOfWeek = "wednesday"

	// EDayOfWeekThursday captures enum value "thursday"
	EDayOfWeekThursday EDayOfWeek = "thursday"

	// EDayOfWeekFriday captures enum value "friday"
	EDayOfWeekFriday EDayOfWeek = "friday"

	// EDayOfWeekSaturday captures enum value "saturday"
	EDayOfWeekSaturday EDayOfWeek = "saturday"

	// EDayOfWeekSunday captures enum value "sunday"
	EDayOfWeekSunday EDayOfWeek = "sunday"
)

// for schema
var eDayOfWeekEnum []interface{}

func init() {
	var res []EDayOfWeek
	if err := json.Unmarshal([]byte(`["monday","tuesday","wednesday","thursday","friday","saturday","sunday"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eDayOfWeekEnum = append(eDayOfWeekEnum, v)
	}
}

func (m EDayOfWeek) validateEDayOfWeekEnum(path, location string, value EDayOfWeek) error {
	if err := validate.EnumCase(path, location, value, eDayOfWeekEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e day of week
func (m EDayOfWeek) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEDayOfWeekEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e day of week based on context it is used
func (m EDayOfWeek) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
