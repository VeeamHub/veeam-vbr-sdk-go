// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ERetentionPolicyType Type of the retention policy.
//
// swagger:model ERetentionPolicyType
type ERetentionPolicyType string

func NewERetentionPolicyType(value ERetentionPolicyType) *ERetentionPolicyType {
	v := value
	return &v
}

const (

	// ERetentionPolicyTypeRestorePoints captures enum value "RestorePoints"
	ERetentionPolicyTypeRestorePoints ERetentionPolicyType = "RestorePoints"

	// ERetentionPolicyTypeDays captures enum value "Days"
	ERetentionPolicyTypeDays ERetentionPolicyType = "Days"
)

// for schema
var eRetentionPolicyTypeEnum []interface{}

func init() {
	var res []ERetentionPolicyType
	if err := json.Unmarshal([]byte(`["RestorePoints","Days"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eRetentionPolicyTypeEnum = append(eRetentionPolicyTypeEnum, v)
	}
}

func (m ERetentionPolicyType) validateERetentionPolicyTypeEnum(path, location string, value ERetentionPolicyType) error {
	if err := validate.EnumCase(path, location, value, eRetentionPolicyTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e retention policy type
func (m ERetentionPolicyType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateERetentionPolicyTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e retention policy type based on context it is used
func (m ERetentionPolicyType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
