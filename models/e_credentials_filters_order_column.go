// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ECredentialsFiltersOrderColumn e credentials filters order column
//
// swagger:model ECredentialsFiltersOrderColumn
type ECredentialsFiltersOrderColumn string

func NewECredentialsFiltersOrderColumn(value ECredentialsFiltersOrderColumn) *ECredentialsFiltersOrderColumn {
	v := value
	return &v
}

const (

	// ECredentialsFiltersOrderColumnUsername captures enum value "Username"
	ECredentialsFiltersOrderColumnUsername ECredentialsFiltersOrderColumn = "Username"

	// ECredentialsFiltersOrderColumnDescription captures enum value "Description"
	ECredentialsFiltersOrderColumnDescription ECredentialsFiltersOrderColumn = "Description"
)

// for schema
var eCredentialsFiltersOrderColumnEnum []interface{}

func init() {
	var res []ECredentialsFiltersOrderColumn
	if err := json.Unmarshal([]byte(`["Username","Description"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eCredentialsFiltersOrderColumnEnum = append(eCredentialsFiltersOrderColumnEnum, v)
	}
}

func (m ECredentialsFiltersOrderColumn) validateECredentialsFiltersOrderColumnEnum(path, location string, value ECredentialsFiltersOrderColumn) error {
	if err := validate.EnumCase(path, location, value, eCredentialsFiltersOrderColumnEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e credentials filters order column
func (m ECredentialsFiltersOrderColumn) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateECredentialsFiltersOrderColumnEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e credentials filters order column based on context it is used
func (m ECredentialsFiltersOrderColumn) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
