// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GuestInteractionProxiesSettingsImportModel Guest interaction proxy used to deploy the runtime process on the VM guest OS.
//
// swagger:model GuestInteractionProxiesSettingsImportModel
type GuestInteractionProxiesSettingsImportModel struct {

	// If *true*, Veeam Backup & Replication automatically selects the guest interaction proxy.
	// Required: true
	AutomaticSelection bool `json:"automaticSelection"`

	// Array of proxies specified explicitly. The array must contain Microsoft Windows servers added to the backup infrastructure only.
	// Unique: true
	Proxies []string `json:"proxies"`
}

// Validate validates this guest interaction proxies settings import model
func (m *GuestInteractionProxiesSettingsImportModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAutomaticSelection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProxies(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GuestInteractionProxiesSettingsImportModel) validateAutomaticSelection(formats strfmt.Registry) error {

	if err := validate.Required("automaticSelection", "body", bool(m.AutomaticSelection)); err != nil {
		return err
	}

	return nil
}

func (m *GuestInteractionProxiesSettingsImportModel) validateProxies(formats strfmt.Registry) error {
	if swag.IsZero(m.Proxies) { // not required
		return nil
	}

	if err := validate.UniqueItems("proxies", "body", m.Proxies); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this guest interaction proxies settings import model based on context it is used
func (m *GuestInteractionProxiesSettingsImportModel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GuestInteractionProxiesSettingsImportModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GuestInteractionProxiesSettingsImportModel) UnmarshalBinary(b []byte) error {
	var res GuestInteractionProxiesSettingsImportModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
