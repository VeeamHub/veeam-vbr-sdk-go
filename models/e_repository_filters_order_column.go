// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ERepositoryFiltersOrderColumn e repository filters order column
//
// swagger:model ERepositoryFiltersOrderColumn
type ERepositoryFiltersOrderColumn string

func NewERepositoryFiltersOrderColumn(value ERepositoryFiltersOrderColumn) *ERepositoryFiltersOrderColumn {
	v := value
	return &v
}

const (

	// ERepositoryFiltersOrderColumnName captures enum value "Name"
	ERepositoryFiltersOrderColumnName ERepositoryFiltersOrderColumn = "Name"

	// ERepositoryFiltersOrderColumnDescription captures enum value "Description"
	ERepositoryFiltersOrderColumnDescription ERepositoryFiltersOrderColumn = "Description"

	// ERepositoryFiltersOrderColumnType captures enum value "Type"
	ERepositoryFiltersOrderColumnType ERepositoryFiltersOrderColumn = "Type"

	// ERepositoryFiltersOrderColumnHost captures enum value "Host"
	ERepositoryFiltersOrderColumnHost ERepositoryFiltersOrderColumn = "Host"

	// ERepositoryFiltersOrderColumnPath captures enum value "Path"
	ERepositoryFiltersOrderColumnPath ERepositoryFiltersOrderColumn = "Path"
)

// for schema
var eRepositoryFiltersOrderColumnEnum []interface{}

func init() {
	var res []ERepositoryFiltersOrderColumn
	if err := json.Unmarshal([]byte(`["Name","Description","Type","Host","Path"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eRepositoryFiltersOrderColumnEnum = append(eRepositoryFiltersOrderColumnEnum, v)
	}
}

func (m ERepositoryFiltersOrderColumn) validateERepositoryFiltersOrderColumnEnum(path, location string, value ERepositoryFiltersOrderColumn) error {
	if err := validate.EnumCase(path, location, value, eRepositoryFiltersOrderColumnEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e repository filters order column
func (m ERepositoryFiltersOrderColumn) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateERepositoryFiltersOrderColumnEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e repository filters order column based on context it is used
func (m ERepositoryFiltersOrderColumn) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
