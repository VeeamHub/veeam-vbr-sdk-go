// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EGuestOSType Type of the guest OS.
//
// swagger:model EGuestOSType
type EGuestOSType string

func NewEGuestOSType(value EGuestOSType) *EGuestOSType {
	v := value
	return &v
}

const (

	// EGuestOSTypeWindows captures enum value "Windows"
	EGuestOSTypeWindows EGuestOSType = "Windows"

	// EGuestOSTypeLinux captures enum value "Linux"
	EGuestOSTypeLinux EGuestOSType = "Linux"
)

// for schema
var eGuestOSTypeEnum []interface{}

func init() {
	var res []EGuestOSType
	if err := json.Unmarshal([]byte(`["Windows","Linux"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eGuestOSTypeEnum = append(eGuestOSTypeEnum, v)
	}
}

func (m EGuestOSType) validateEGuestOSTypeEnum(path, location string, value EGuestOSType) error {
	if err := validate.EnumCase(path, location, value, eGuestOSTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e guest o s type
func (m EGuestOSType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEGuestOSTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e guest o s type based on context it is used
func (m EGuestOSType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
