// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GeneralOptionsNotificationsModel general options notifications model
//
// swagger:model GeneralOptionsNotificationsModel
type GeneralOptionsNotificationsModel struct {

	// Space threshold of production datastore, in percent.
	// Required: true
	DatastoreSpaceThreshold *int32 `json:"datastoreSpaceThreshold"`

	// If *true*, notifications about critical amount of free space in production datastore are enabled.
	// Required: true
	DatastoreSpaceThresholdEnabled *bool `json:"datastoreSpaceThresholdEnabled"`

	// If *true*, notifications about support contract expiration are enabled.
	// Required: true
	NotifyOnSupportExpiration *bool `json:"notifyOnSupportExpiration"`

	// If *true*, notifications about updates are enabled.
	// Required: true
	NotifyOnUpdates *bool `json:"notifyOnUpdates"`

	// Space threshold of production datastore, in percent.
	// Required: true
	SkipVMSpaceThreshold *int32 `json:"skipVMSpaceThreshold"`

	// If *true* and the `skipVMSpaceThreshold` threshold is reached, Veeam Backup & Replication terminates backup and replication jobs working with production datastores before VM snapshots are taken.
	// Required: true
	SkipVMSpaceThresholdEnabled *bool `json:"skipVMSpaceThresholdEnabled"`

	// Space threshold of backup storage, in percent.
	// Required: true
	StorageSpaceThreshold *int32 `json:"storageSpaceThreshold"`

	// If *true*, notifications about critical amount of free space in backup storage are enabled.
	// Required: true
	StorageSpaceThresholdEnabled *bool `json:"storageSpaceThresholdEnabled"`
}

// Validate validates this general options notifications model
func (m *GeneralOptionsNotificationsModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDatastoreSpaceThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDatastoreSpaceThresholdEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNotifyOnSupportExpiration(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNotifyOnUpdates(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSkipVMSpaceThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSkipVMSpaceThresholdEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStorageSpaceThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStorageSpaceThresholdEnabled(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GeneralOptionsNotificationsModel) validateDatastoreSpaceThreshold(formats strfmt.Registry) error {

	if err := validate.Required("datastoreSpaceThreshold", "body", m.DatastoreSpaceThreshold); err != nil {
		return err
	}

	return nil
}

func (m *GeneralOptionsNotificationsModel) validateDatastoreSpaceThresholdEnabled(formats strfmt.Registry) error {

	if err := validate.Required("datastoreSpaceThresholdEnabled", "body", m.DatastoreSpaceThresholdEnabled); err != nil {
		return err
	}

	return nil
}

func (m *GeneralOptionsNotificationsModel) validateNotifyOnSupportExpiration(formats strfmt.Registry) error {

	if err := validate.Required("notifyOnSupportExpiration", "body", m.NotifyOnSupportExpiration); err != nil {
		return err
	}

	return nil
}

func (m *GeneralOptionsNotificationsModel) validateNotifyOnUpdates(formats strfmt.Registry) error {

	if err := validate.Required("notifyOnUpdates", "body", m.NotifyOnUpdates); err != nil {
		return err
	}

	return nil
}

func (m *GeneralOptionsNotificationsModel) validateSkipVMSpaceThreshold(formats strfmt.Registry) error {

	if err := validate.Required("skipVMSpaceThreshold", "body", m.SkipVMSpaceThreshold); err != nil {
		return err
	}

	return nil
}

func (m *GeneralOptionsNotificationsModel) validateSkipVMSpaceThresholdEnabled(formats strfmt.Registry) error {

	if err := validate.Required("skipVMSpaceThresholdEnabled", "body", m.SkipVMSpaceThresholdEnabled); err != nil {
		return err
	}

	return nil
}

func (m *GeneralOptionsNotificationsModel) validateStorageSpaceThreshold(formats strfmt.Registry) error {

	if err := validate.Required("storageSpaceThreshold", "body", m.StorageSpaceThreshold); err != nil {
		return err
	}

	return nil
}

func (m *GeneralOptionsNotificationsModel) validateStorageSpaceThresholdEnabled(formats strfmt.Registry) error {

	if err := validate.Required("storageSpaceThresholdEnabled", "body", m.StorageSpaceThresholdEnabled); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this general options notifications model based on context it is used
func (m *GeneralOptionsNotificationsModel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GeneralOptionsNotificationsModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GeneralOptionsNotificationsModel) UnmarshalBinary(b []byte) error {
	var res GeneralOptionsNotificationsModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
