// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CredentialsLinuxSettingsImportModel credentials linux settings import model
//
// swagger:model CredentialsLinuxSettingsImportModel
type CredentialsLinuxSettingsImportModel struct {

	// SSH port used to connect to a Linux server.
	SSHPort int64 `json:"SSHPort,omitempty"`

	// If *true*, the account is automatically added to the sudoers file.
	AddToSudoers bool `json:"addToSudoers,omitempty"`

	// If *true*, the permissions of the account are automatically elevated to the root user.
	AutoElevated bool `json:"autoElevated,omitempty"`

	// Passphrase that protects the private key.
	Passphrase string `json:"passphrase,omitempty"`

	// Private key.
	PrivateKey string `json:"privateKey,omitempty"`

	// Password for the root account.
	RootPassword string `json:"rootPassword,omitempty"`

	// If *true*, the `su` command is used for Linux distributions where the `sudo` command is not available.
	UseSu bool `json:"useSu,omitempty"`
}

// Validate validates this credentials linux settings import model
func (m *CredentialsLinuxSettingsImportModel) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this credentials linux settings import model based on context it is used
func (m *CredentialsLinuxSettingsImportModel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CredentialsLinuxSettingsImportModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CredentialsLinuxSettingsImportModel) UnmarshalBinary(b []byte) error {
	var res CredentialsLinuxSettingsImportModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
