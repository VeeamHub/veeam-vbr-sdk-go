// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EViHostType Type of the VMware vSphere server.
//
// swagger:model EViHostType
type EViHostType string

func NewEViHostType(value EViHostType) *EViHostType {
	v := value
	return &v
}

const (

	// EViHostTypeESX captures enum value "ESX"
	EViHostTypeESX EViHostType = "ESX"

	// EViHostTypeESXi captures enum value "ESXi"
	EViHostTypeESXi EViHostType = "ESXi"

	// EViHostTypeVC captures enum value "VC"
	EViHostTypeVC EViHostType = "VC"
)

// for schema
var eViHostTypeEnum []interface{}

func init() {
	var res []EViHostType
	if err := json.Unmarshal([]byte(`["ESX","ESXi","VC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eViHostTypeEnum = append(eViHostTypeEnum, v)
	}
}

func (m EViHostType) validateEViHostTypeEnum(path, location string, value EViHostType) error {
	if err := validate.EnumCase(path, location, value, eViHostTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e vi host type
func (m EViHostType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEViHostTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e vi host type based on context it is used
func (m EViHostType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
