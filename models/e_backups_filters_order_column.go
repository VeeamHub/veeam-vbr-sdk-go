// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EBackupsFiltersOrderColumn e backups filters order column
//
// swagger:model EBackupsFiltersOrderColumn
type EBackupsFiltersOrderColumn string

func NewEBackupsFiltersOrderColumn(value EBackupsFiltersOrderColumn) *EBackupsFiltersOrderColumn {
	v := value
	return &v
}

const (

	// EBackupsFiltersOrderColumnName captures enum value "Name"
	EBackupsFiltersOrderColumnName EBackupsFiltersOrderColumn = "Name"

	// EBackupsFiltersOrderColumnCreationTime captures enum value "CreationTime"
	EBackupsFiltersOrderColumnCreationTime EBackupsFiltersOrderColumn = "CreationTime"

	// EBackupsFiltersOrderColumnPlatformID captures enum value "PlatformId"
	EBackupsFiltersOrderColumnPlatformID EBackupsFiltersOrderColumn = "PlatformId"

	// EBackupsFiltersOrderColumnJobID captures enum value "JobId"
	EBackupsFiltersOrderColumnJobID EBackupsFiltersOrderColumn = "JobId"

	// EBackupsFiltersOrderColumnPolicyTag captures enum value "PolicyTag"
	EBackupsFiltersOrderColumnPolicyTag EBackupsFiltersOrderColumn = "PolicyTag"
)

// for schema
var eBackupsFiltersOrderColumnEnum []interface{}

func init() {
	var res []EBackupsFiltersOrderColumn
	if err := json.Unmarshal([]byte(`["Name","CreationTime","PlatformId","JobId","PolicyTag"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eBackupsFiltersOrderColumnEnum = append(eBackupsFiltersOrderColumnEnum, v)
	}
}

func (m EBackupsFiltersOrderColumn) validateEBackupsFiltersOrderColumnEnum(path, location string, value EBackupsFiltersOrderColumn) error {
	if err := validate.EnumCase(path, location, value, eBackupsFiltersOrderColumnEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e backups filters order column
func (m EBackupsFiltersOrderColumn) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEBackupsFiltersOrderColumnEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e backups filters order column based on context it is used
func (m EBackupsFiltersOrderColumn) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
