// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ESessionResult Result of the session.
//
// swagger:model ESessionResult
type ESessionResult string

func NewESessionResult(value ESessionResult) *ESessionResult {
	v := value
	return &v
}

const (

	// ESessionResultNone captures enum value "None"
	ESessionResultNone ESessionResult = "None"

	// ESessionResultSuccess captures enum value "Success"
	ESessionResultSuccess ESessionResult = "Success"

	// ESessionResultWarning captures enum value "Warning"
	ESessionResultWarning ESessionResult = "Warning"

	// ESessionResultFailed captures enum value "Failed"
	ESessionResultFailed ESessionResult = "Failed"
)

// for schema
var eSessionResultEnum []interface{}

func init() {
	var res []ESessionResult
	if err := json.Unmarshal([]byte(`["None","Success","Warning","Failed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eSessionResultEnum = append(eSessionResultEnum, v)
	}
}

func (m ESessionResult) validateESessionResultEnum(path, location string, value ESessionResult) error {
	if err := validate.EnumCase(path, location, value, eSessionResultEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e session result
func (m ESessionResult) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateESessionResultEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e session result based on context it is used
func (m ESessionResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
