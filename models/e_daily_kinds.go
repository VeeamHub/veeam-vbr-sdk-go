// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EDailyKinds Kind of daily scheduling scheme.
//
// swagger:model EDailyKinds
type EDailyKinds string

func NewEDailyKinds(value EDailyKinds) *EDailyKinds {
	v := value
	return &v
}

const (

	// EDailyKindsEveryday captures enum value "Everyday"
	EDailyKindsEveryday EDailyKinds = "Everyday"

	// EDailyKindsWeekDays captures enum value "WeekDays"
	EDailyKindsWeekDays EDailyKinds = "WeekDays"

	// EDailyKindsSelectedDays captures enum value "SelectedDays"
	EDailyKindsSelectedDays EDailyKinds = "SelectedDays"
)

// for schema
var eDailyKindsEnum []interface{}

func init() {
	var res []EDailyKinds
	if err := json.Unmarshal([]byte(`["Everyday","WeekDays","SelectedDays"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eDailyKindsEnum = append(eDailyKindsEnum, v)
	}
}

func (m EDailyKinds) validateEDailyKindsEnum(path, location string, value EDailyKinds) error {
	if err := validate.EnumCase(path, location, value, eDailyKindsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e daily kinds
func (m EDailyKinds) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEDailyKindsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e daily kinds based on context it is used
func (m EDailyKinds) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
