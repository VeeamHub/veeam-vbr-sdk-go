// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EServicesFiltersOrderColumn e services filters order column
//
// swagger:model EServicesFiltersOrderColumn
type EServicesFiltersOrderColumn string

func NewEServicesFiltersOrderColumn(value EServicesFiltersOrderColumn) *EServicesFiltersOrderColumn {
	v := value
	return &v
}

const (

	// EServicesFiltersOrderColumnName captures enum value "Name"
	EServicesFiltersOrderColumnName EServicesFiltersOrderColumn = "Name"

	// EServicesFiltersOrderColumnPort captures enum value "Port"
	EServicesFiltersOrderColumnPort EServicesFiltersOrderColumn = "Port"
)

// for schema
var eServicesFiltersOrderColumnEnum []interface{}

func init() {
	var res []EServicesFiltersOrderColumn
	if err := json.Unmarshal([]byte(`["Name","Port"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eServicesFiltersOrderColumnEnum = append(eServicesFiltersOrderColumnEnum, v)
	}
}

func (m EServicesFiltersOrderColumn) validateEServicesFiltersOrderColumnEnum(path, location string, value EServicesFiltersOrderColumn) error {
	if err := validate.EnumCase(path, location, value, eServicesFiltersOrderColumnEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e services filters order column
func (m EServicesFiltersOrderColumn) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEServicesFiltersOrderColumnEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e services filters order column based on context it is used
func (m EServicesFiltersOrderColumn) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
