// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ERepositoryStatesFiltersOrderColumn Orders repositories by the specified column.
//
// swagger:model ERepositoryStatesFiltersOrderColumn
type ERepositoryStatesFiltersOrderColumn string

func NewERepositoryStatesFiltersOrderColumn(value ERepositoryStatesFiltersOrderColumn) *ERepositoryStatesFiltersOrderColumn {
	v := value
	return &v
}

const (

	// ERepositoryStatesFiltersOrderColumnName captures enum value "Name"
	ERepositoryStatesFiltersOrderColumnName ERepositoryStatesFiltersOrderColumn = "Name"

	// ERepositoryStatesFiltersOrderColumnType captures enum value "Type"
	ERepositoryStatesFiltersOrderColumnType ERepositoryStatesFiltersOrderColumn = "Type"

	// ERepositoryStatesFiltersOrderColumnHost captures enum value "Host"
	ERepositoryStatesFiltersOrderColumnHost ERepositoryStatesFiltersOrderColumn = "Host"

	// ERepositoryStatesFiltersOrderColumnPath captures enum value "Path"
	ERepositoryStatesFiltersOrderColumnPath ERepositoryStatesFiltersOrderColumn = "Path"

	// ERepositoryStatesFiltersOrderColumnCapacityGB captures enum value "CapacityGB"
	ERepositoryStatesFiltersOrderColumnCapacityGB ERepositoryStatesFiltersOrderColumn = "CapacityGB"

	// ERepositoryStatesFiltersOrderColumnFreeGB captures enum value "FreeGB"
	ERepositoryStatesFiltersOrderColumnFreeGB ERepositoryStatesFiltersOrderColumn = "FreeGB"

	// ERepositoryStatesFiltersOrderColumnUsedSpaceGB captures enum value "UsedSpaceGB"
	ERepositoryStatesFiltersOrderColumnUsedSpaceGB ERepositoryStatesFiltersOrderColumn = "UsedSpaceGB"

	// ERepositoryStatesFiltersOrderColumnDescription captures enum value "Description"
	ERepositoryStatesFiltersOrderColumnDescription ERepositoryStatesFiltersOrderColumn = "Description"
)

// for schema
var eRepositoryStatesFiltersOrderColumnEnum []interface{}

func init() {
	var res []ERepositoryStatesFiltersOrderColumn
	if err := json.Unmarshal([]byte(`["Name","Type","Host","Path","CapacityGB","FreeGB","UsedSpaceGB","Description"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eRepositoryStatesFiltersOrderColumnEnum = append(eRepositoryStatesFiltersOrderColumnEnum, v)
	}
}

func (m ERepositoryStatesFiltersOrderColumn) validateERepositoryStatesFiltersOrderColumnEnum(path, location string, value ERepositoryStatesFiltersOrderColumn) error {
	if err := validate.EnumCase(path, location, value, eRepositoryStatesFiltersOrderColumnEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e repository states filters order column
func (m ERepositoryStatesFiltersOrderColumn) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateERepositoryStatesFiltersOrderColumnEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e repository states filters order column based on context it is used
func (m ERepositoryStatesFiltersOrderColumn) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
