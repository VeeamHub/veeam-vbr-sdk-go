// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EViRootFiltersOrderColumn Sorts VMware vSphere servers by one of the VMware vSphere server parameters.
//
// swagger:model EViRootFiltersOrderColumn
type EViRootFiltersOrderColumn string

func NewEViRootFiltersOrderColumn(value EViRootFiltersOrderColumn) *EViRootFiltersOrderColumn {
	v := value
	return &v
}

const (

	// EViRootFiltersOrderColumnName captures enum value "Name"
	EViRootFiltersOrderColumnName EViRootFiltersOrderColumn = "Name"

	// EViRootFiltersOrderColumnType captures enum value "Type"
	EViRootFiltersOrderColumnType EViRootFiltersOrderColumn = "Type"
)

// for schema
var eViRootFiltersOrderColumnEnum []interface{}

func init() {
	var res []EViRootFiltersOrderColumn
	if err := json.Unmarshal([]byte(`["Name","Type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eViRootFiltersOrderColumnEnum = append(eViRootFiltersOrderColumnEnum, v)
	}
}

func (m EViRootFiltersOrderColumn) validateEViRootFiltersOrderColumnEnum(path, location string, value EViRootFiltersOrderColumn) error {
	if err := validate.EnumCase(path, location, value, eViRootFiltersOrderColumnEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e vi root filters order column
func (m EViRootFiltersOrderColumn) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEViRootFiltersOrderColumnEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e vi root filters order column based on context it is used
func (m EViRootFiltersOrderColumn) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
