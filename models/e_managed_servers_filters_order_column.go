// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EManagedServersFiltersOrderColumn e managed servers filters order column
//
// swagger:model EManagedServersFiltersOrderColumn
type EManagedServersFiltersOrderColumn string

func NewEManagedServersFiltersOrderColumn(value EManagedServersFiltersOrderColumn) *EManagedServersFiltersOrderColumn {
	v := value
	return &v
}

const (

	// EManagedServersFiltersOrderColumnName captures enum value "Name"
	EManagedServersFiltersOrderColumnName EManagedServersFiltersOrderColumn = "Name"

	// EManagedServersFiltersOrderColumnType captures enum value "Type"
	EManagedServersFiltersOrderColumnType EManagedServersFiltersOrderColumn = "Type"

	// EManagedServersFiltersOrderColumnDescription captures enum value "Description"
	EManagedServersFiltersOrderColumnDescription EManagedServersFiltersOrderColumn = "Description"
)

// for schema
var eManagedServersFiltersOrderColumnEnum []interface{}

func init() {
	var res []EManagedServersFiltersOrderColumn
	if err := json.Unmarshal([]byte(`["Name","Type","Description"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eManagedServersFiltersOrderColumnEnum = append(eManagedServersFiltersOrderColumnEnum, v)
	}
}

func (m EManagedServersFiltersOrderColumn) validateEManagedServersFiltersOrderColumnEnum(path, location string, value EManagedServersFiltersOrderColumn) error {
	if err := validate.EnumCase(path, location, value, eManagedServersFiltersOrderColumnEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e managed servers filters order column
func (m EManagedServersFiltersOrderColumn) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEManagedServersFiltersOrderColumnEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e managed servers filters order column based on context it is used
func (m EManagedServersFiltersOrderColumn) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
