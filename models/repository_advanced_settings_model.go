// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RepositoryAdvancedSettingsModel Advanced settings for the backup repository.
//
// swagger:model RepositoryAdvancedSettingsModel
type RepositoryAdvancedSettingsModel struct {

	// If *true*, Veeam Backup & Replication aligns VM data saved to a backup file at a 4 KB block boundary.
	AlignDataBlocks bool `json:"alignDataBlocks,omitempty"`

	// If *true*, Veeam Backup & Replication decompresses backup data blocks before storing to improve deduplication ratios.
	DecompressBeforeStoring bool `json:"decompressBeforeStoring,omitempty"`

	// If *true*, Veeam Backup & Replication creates a separate backup file for every VM in the job.
	PerVMBackup bool `json:"perVmBackup,omitempty"`

	// If *true*, the repository drive is rotated.
	RotatedDrives bool `json:"rotatedDrives,omitempty"`
}

// Validate validates this repository advanced settings model
func (m *RepositoryAdvancedSettingsModel) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this repository advanced settings model based on context it is used
func (m *RepositoryAdvancedSettingsModel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RepositoryAdvancedSettingsModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RepositoryAdvancedSettingsModel) UnmarshalBinary(b []byte) error {
	var res RepositoryAdvancedSettingsModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
