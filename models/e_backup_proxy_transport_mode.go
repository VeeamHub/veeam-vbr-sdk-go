// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EBackupProxyTransportMode Transport mode of the backup proxy.
//
// swagger:model EBackupProxyTransportMode
type EBackupProxyTransportMode string

func NewEBackupProxyTransportMode(value EBackupProxyTransportMode) *EBackupProxyTransportMode {
	v := value
	return &v
}

const (

	// EBackupProxyTransportModeAuto captures enum value "auto"
	EBackupProxyTransportModeAuto EBackupProxyTransportMode = "auto"

	// EBackupProxyTransportModeDirectAccess captures enum value "directAccess"
	EBackupProxyTransportModeDirectAccess EBackupProxyTransportMode = "directAccess"

	// EBackupProxyTransportModeVirtualAppliance captures enum value "virtualAppliance"
	EBackupProxyTransportModeVirtualAppliance EBackupProxyTransportMode = "virtualAppliance"

	// EBackupProxyTransportModeNetwork captures enum value "network"
	EBackupProxyTransportModeNetwork EBackupProxyTransportMode = "network"
)

// for schema
var eBackupProxyTransportModeEnum []interface{}

func init() {
	var res []EBackupProxyTransportMode
	if err := json.Unmarshal([]byte(`["auto","directAccess","virtualAppliance","network"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eBackupProxyTransportModeEnum = append(eBackupProxyTransportModeEnum, v)
	}
}

func (m EBackupProxyTransportMode) validateEBackupProxyTransportModeEnum(path, location string, value EBackupProxyTransportMode) error {
	if err := validate.EnumCase(path, location, value, eBackupProxyTransportModeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e backup proxy transport mode
func (m EBackupProxyTransportMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEBackupProxyTransportModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e backup proxy transport mode based on context it is used
func (m EBackupProxyTransportMode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
