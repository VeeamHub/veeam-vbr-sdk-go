// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EJobWorkload Workload which the job must process.
//
// swagger:model EJobWorkload
type EJobWorkload string

func NewEJobWorkload(value EJobWorkload) *EJobWorkload {
	v := value
	return &v
}

const (

	// EJobWorkloadApplication captures enum value "application"
	EJobWorkloadApplication EJobWorkload = "application"

	// EJobWorkloadCloudVM captures enum value "cloudVm"
	EJobWorkloadCloudVM EJobWorkload = "cloudVm"

	// EJobWorkloadFile captures enum value "file"
	EJobWorkloadFile EJobWorkload = "file"

	// EJobWorkloadServer captures enum value "server"
	EJobWorkloadServer EJobWorkload = "server"

	// EJobWorkloadWorkstation captures enum value "workstation"
	EJobWorkloadWorkstation EJobWorkload = "workstation"

	// EJobWorkloadVM captures enum value "vm"
	EJobWorkloadVM EJobWorkload = "vm"
)

// for schema
var eJobWorkloadEnum []interface{}

func init() {
	var res []EJobWorkload
	if err := json.Unmarshal([]byte(`["application","cloudVm","file","server","workstation","vm"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eJobWorkloadEnum = append(eJobWorkloadEnum, v)
	}
}

func (m EJobWorkload) validateEJobWorkloadEnum(path, location string, value EJobWorkload) error {
	if err := validate.EnumCase(path, location, value, eJobWorkloadEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e job workload
func (m EJobWorkload) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEJobWorkloadEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e job workload based on context it is used
func (m EJobWorkload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
