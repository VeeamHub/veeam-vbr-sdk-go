// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VmwareFcdInstantRecoveryDiskInfo vmware fcd instant recovery disk info
//
// swagger:model VmwareFcdInstantRecoveryDiskInfo
type VmwareFcdInstantRecoveryDiskInfo struct {

	// Name of the VMDK file that is stored in the datastore.
	// Required: true
	MountedDiskName *string `json:"mountedDiskName"`

	// Disk name displayed in the backup.
	// Required: true
	NameInBackup *string `json:"nameInBackup"`

	// FCD ID.
	// Required: true
	ObjectID *string `json:"objectId"`

	// Name under which the disk is registered as an FCD in the vCenter Managed Object Browser.
	// Required: true
	RegisteredFcdName *string `json:"registeredFcdName"`
}

// Validate validates this vmware fcd instant recovery disk info
func (m *VmwareFcdInstantRecoveryDiskInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMountedDiskName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNameInBackup(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObjectID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegisteredFcdName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VmwareFcdInstantRecoveryDiskInfo) validateMountedDiskName(formats strfmt.Registry) error {

	if err := validate.Required("mountedDiskName", "body", m.MountedDiskName); err != nil {
		return err
	}

	return nil
}

func (m *VmwareFcdInstantRecoveryDiskInfo) validateNameInBackup(formats strfmt.Registry) error {

	if err := validate.Required("nameInBackup", "body", m.NameInBackup); err != nil {
		return err
	}

	return nil
}

func (m *VmwareFcdInstantRecoveryDiskInfo) validateObjectID(formats strfmt.Registry) error {

	if err := validate.Required("objectId", "body", m.ObjectID); err != nil {
		return err
	}

	return nil
}

func (m *VmwareFcdInstantRecoveryDiskInfo) validateRegisteredFcdName(formats strfmt.Registry) error {

	if err := validate.Required("registeredFcdName", "body", m.RegisteredFcdName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this vmware fcd instant recovery disk info based on context it is used
func (m *VmwareFcdInstantRecoveryDiskInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VmwareFcdInstantRecoveryDiskInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VmwareFcdInstantRecoveryDiskInfo) UnmarshalBinary(b []byte) error {
	var res VmwareFcdInstantRecoveryDiskInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
