// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// EBackupProxyImportType e backup proxy import type
//
// swagger:model EBackupProxyImportType
type EBackupProxyImportType string

func NewEBackupProxyImportType(value EBackupProxyImportType) *EBackupProxyImportType {
	v := value
	return &v
}

const (

	// EBackupProxyImportTypeVmware captures enum value "vmware"
	EBackupProxyImportTypeVmware EBackupProxyImportType = "vmware"
)

// for schema
var eBackupProxyImportTypeEnum []interface{}

func init() {
	var res []EBackupProxyImportType
	if err := json.Unmarshal([]byte(`["vmware"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eBackupProxyImportTypeEnum = append(eBackupProxyImportTypeEnum, v)
	}
}

func (m EBackupProxyImportType) validateEBackupProxyImportTypeEnum(path, location string, value EBackupProxyImportType) error {
	if err := validate.EnumCase(path, location, value, eBackupProxyImportTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this e backup proxy import type
func (m EBackupProxyImportType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEBackupProxyImportTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this e backup proxy import type based on context it is used
func (m EBackupProxyImportType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
