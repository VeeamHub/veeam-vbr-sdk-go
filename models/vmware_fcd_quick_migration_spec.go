// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VmwareFcdQuickMigrationSpec vmware fcd quick migration spec
//
// swagger:model VmwareFcdQuickMigrationSpec
type VmwareFcdQuickMigrationSpec struct {

	// Array of disks that will be migrated to the `targetDatastore` associated with the `storagePolicy`.
	MountedDiskNames []string `json:"mountedDiskNames"`

	// Storage policy that will be applied to the migrated disks. For details on how to get a storage policy model, see [Get VMware vSphere Server Objects](#operation/GetVmwareHostObject).
	StoragePolicy struct {
		VmwareObjectModel
	} `json:"storagePolicy,omitempty"`

	// Target datastore. For details on how to get a datastore model, see [Get VMware vSphere Server Objects](#operation/GetVmwareHostObject).
	// Required: true
	TargetDatastore struct {
		VmwareObjectModel
	} `json:"targetDatastore"`
}

// Validate validates this vmware fcd quick migration spec
func (m *VmwareFcdQuickMigrationSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStoragePolicy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTargetDatastore(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VmwareFcdQuickMigrationSpec) validateStoragePolicy(formats strfmt.Registry) error {
	if swag.IsZero(m.StoragePolicy) { // not required
		return nil
	}

	return nil
}

func (m *VmwareFcdQuickMigrationSpec) validateTargetDatastore(formats strfmt.Registry) error {

	return nil
}

// ContextValidate validate this vmware fcd quick migration spec based on the context it is used
func (m *VmwareFcdQuickMigrationSpec) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateStoragePolicy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTargetDatastore(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VmwareFcdQuickMigrationSpec) contextValidateStoragePolicy(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *VmwareFcdQuickMigrationSpec) contextValidateTargetDatastore(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *VmwareFcdQuickMigrationSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VmwareFcdQuickMigrationSpec) UnmarshalBinary(b []byte) error {
	var res VmwareFcdQuickMigrationSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
