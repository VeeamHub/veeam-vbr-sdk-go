// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LinuxHostSSHSettingsModel SSH settings.
//
// swagger:model LinuxHostSSHSettingsModel
type LinuxHostSSHSettingsModel struct {

	// Port used as a control channel from the Veeam Backup & Replication console to the Linux server.
	ManagementPort int64 `json:"managementPort,omitempty"`

	// End port used for data transfer.
	PortRangeEnd int64 `json:"portRangeEnd,omitempty"`

	// Start port used for data transfer.
	PortRangeStart int64 `json:"portRangeStart,omitempty"`

	// If *true*, the server is run on this side.
	ServerThisSide bool `json:"serverThisSide,omitempty"`

	// SSH timeout, in ms. If a task targeted at the server is inactive after the timeout, the task is terminated.
	SSHTimeOutMs int64 `json:"sshTimeOutMs,omitempty"`
}

// Validate validates this linux host SSH settings model
func (m *LinuxHostSSHSettingsModel) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this linux host SSH settings model based on context it is used
func (m *LinuxHostSSHSettingsModel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LinuxHostSSHSettingsModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LinuxHostSSHSettingsModel) UnmarshalBinary(b []byte) error {
	var res LinuxHostSSHSettingsModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
